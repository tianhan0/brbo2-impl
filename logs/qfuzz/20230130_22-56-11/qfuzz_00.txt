2023-01-30 23:59:45,342 INFO     Arguments:
2023-01-30 23:59:45,343 INFO     timeout	60
2023-01-30 23:59:45,343 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-30 23:59:45,343 INFO     samples	0
2023-01-30 23:59:45,343 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-30 23:59:45,343 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-30 23:59:45,343 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-30 23:59:45,343 INFO     dry	False
2023-01-30 23:59:45,343 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/qfuzz_00.txt
2023-01-30 23:59:45,343 INFO     mode	qfuzz
2023-01-30 23:59:45,343 INFO     version	master
2023-01-30 23:59:45,343 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
2023-01-30 23:59:45,343 INFO     min_int	4
2023-01-30 23:59:45,343 INFO     max_int	50
2023-01-30 23:59:45,343 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-30 23:59:45,347 INFO     Done. Execution time: 0.004106760025024414 seconds
2023-01-30 23:59:45,348 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "e47286ad848a5763e523c9212f87dd8703e519a1"`
2023-01-30 23:59:45,352 INFO     Done. Execution time: 0.003983974456787109 seconds
2023-01-30 23:59:45,352 INFO     Build a new version: "e47286ad848a5763e523c9212f87dd8703e519a1"
2023-01-30 23:59:45,352 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-30 23:59:55,874 INFO     Done. Execution time: 10.521541118621826 seconds
2023-01-30 23:59:55,874 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 9 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 4 s, completed Jan 30, 2023 11:59:55 PM

2023-01-30 23:59:55,883 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-30 23:59:55,883 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:01:01,765 INFO     Done. Execution time: 65.88213610649109 seconds
2023-01-31 00:01:01,766 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz7750262318400285664/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7750262318400285664/bin -o /tmp/qfuzz7750262318400285664/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7750262318400285664/bin
Found file /tmp/qfuzz7750262318400285664/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz7750262318400285664/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7750262318400285664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7750262318400285664/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7750262318400285664/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7750262318400285664/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 125529 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 49.00; [95.00,195.00,255.00,455.00,504.00,655.00,735.00]
2; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 60.00; [264.00,415.00,535.00,595.00,755.00,875.00]
3; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 6; 9.00; [295.00,355.00,364.00,515.00,695.00,795.00]
9; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 7; 40.00; [95.00,135.00,195.00,255.00,455.00,504.00,655.00]
10; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 6; 20.00; [15.00,95.00,115.00,555.00,704.00,775.00]
11; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 7; 60.00; [175.00,295.00,415.00,504.00,715.00,775.00,955.00]
19; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 7; 80.00; [195.00,335.00,415.00,504.00,595.00,715.00,855.00]
23; /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 5; 60.00; [95.00,155.00,475.00,735.00,924.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 36, 4, 7, 23, 23, 23, 49, 23, 23, 23, 23, 23, 23, 23, 5, 9, 18, 6, 24, 23, 43, 23, 23, 34, 44, 19, 7, 23, 23, 23, 23, 23, 11, 4, 23, 23, 13, 4, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 35, 16, 20, 29, 42, 26, 29, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 47, 14, 35, 38, 8, 20, 29, 42, 26, 27, 26, 41, 33, 15, 24, 39, 30, 32, 11, 33, 35, 23, 14, 35, 38, 8, 20, 29, 42, 26, 27, 26, 24, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 38, 4, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 6, 4, 22, 32, 12, 13, 12, 15, 12, 38, 34, 40, 14, 46, 6, 4, 9, 36, 29, 12, 42, 18, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 17, 25, 14, 39, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 20, 29, 37, 26, 29, 43, 15, 12, 45, 35, 46, 9, 43, 7, 20, 8, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7750262318400285664/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_000101_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,36,4,7,23,23,23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,35,16,20,29,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,47,14,35,38,8,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,38,4,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,6,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,17,25,14,39,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,20,29,37,26,29,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:01:01,766 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 00:01:01,766 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 00:01:12,267 INFO     Done. Execution time: 10.500135898590088 seconds
2023-01-31 00:01:12,267 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_000101_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_000101_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,36,4,7,23,23,23])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,35,16,20,29,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,47,14,35,38,8,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,38,4,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,6,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,17,25,14,39,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,20,29,37,26,29,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [45,36,4,7,23,23,23]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,35,16,20,29,42]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,47,14,35,38,8,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [34,38,4,27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,6,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17,17,25,14,39,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,20,29,37,26,29,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [45,36,4,7,23,23,23]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [45,36,4,7,23,23,23]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [45,36,4,7,23,23,23]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [45,36,4,7,23,23,23]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [45,36,4,7,23,23,23]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [45,36,4,7,23,23,23]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     45  |  0  |  [45,36,4,7,23,23,23]  |
    25  |                     R = R + chunk;  |     45  |   45  |     45  |  0  |  [45,36,4,7,23,23,23]  |
    29  |                         i = i + 1;  |         |   45  |     45  |  1  |  [45,36,4,7,23,23,23]  |
    30  |              resetPlaceHolder_1();  |         |   45  |     45  |  1  |  [45,36,4,7,23,23,23]  |
    36  |        chunk = arrayRead(text, i);  |         |   45  |     36  |  1  |  [45,36,4,7,23,23,23]  |
    39  |                     R = R + chunk;  |     36  |   81  |     36  |  1  |  [45,36,4,7,23,23,23]  |
    43  |                         i = i + 1;  |         |   81  |     36  |  2  |  [45,36,4,7,23,23,23]  |
    44  |              resetPlaceHolder_1();  |         |   81  |     36  |  2  |  [45,36,4,7,23,23,23]  |
    50  |        chunk = arrayRead(text, i);  |         |   81  |      4  |  2  |  [45,36,4,7,23,23,23]  |
    53  |                     R = R + chunk;  |      4  |   85  |      4  |  2  |  [45,36,4,7,23,23,23]  |
    57  |                         i = i + 1;  |         |   85  |      4  |  3  |  [45,36,4,7,23,23,23]  |
    58  |              resetPlaceHolder_1();  |         |   85  |      4  |  3  |  [45,36,4,7,23,23,23]  |
    64  |        chunk = arrayRead(text, i);  |         |   85  |      7  |  3  |  [45,36,4,7,23,23,23]  |
    67  |                     R = R + chunk;  |      7  |   92  |      7  |  3  |  [45,36,4,7,23,23,23]  |
    71  |                         i = i + 1;  |         |   92  |      7  |  4  |  [45,36,4,7,23,23,23]  |
    72  |              resetPlaceHolder_1();  |         |   92  |      7  |  4  |  [45,36,4,7,23,23,23]  |
    78  |        chunk = arrayRead(text, i);  |         |   92  |     23  |  4  |  [45,36,4,7,23,23,23]  |
    81  |                     R = R + chunk;  |     23  |  115  |     23  |  4  |  [45,36,4,7,23,23,23]  |
    85  |                         i = i + 1;  |         |  115  |     23  |  5  |  [45,36,4,7,23,23,23]  |
    86  |              resetPlaceHolder_1();  |         |  115  |     23  |  5  |  [45,36,4,7,23,23,23]  |
    92  |        chunk = arrayRead(text, i);  |         |  115  |     23  |  5  |  [45,36,4,7,23,23,23]  |
    95  |                     R = R + chunk;  |     23  |  138  |     23  |  5  |  [45,36,4,7,23,23,23]  |
    99  |                         i = i + 1;  |         |  138  |     23  |  6  |  [45,36,4,7,23,23,23]  |
   100  |              resetPlaceHolder_1();  |         |  138  |     23  |  6  |  [45,36,4,7,23,23,23]  |
   106  |        chunk = arrayRead(text, i);  |         |  138  |     23  |  6  |  [45,36,4,7,23,23,23]  |
   109  |                     R = R + chunk;  |     23  |  161  |     23  |  6  |  [45,36,4,7,23,23,23]  |
   113  |                         i = i + 1;  |         |  161  |     23  |  7  |  [45,36,4,7,23,23,23]  |
   114  |              resetPlaceHolder_1();  |         |  161  |     23  |  7  |  [45,36,4,7,23,23,23]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {81}; {95}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(5), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {109}; {81}; {95} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     45  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     36  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |      4  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |      7  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     23  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     23  |                         1  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     23  |                         2  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [25, 53, 39, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [25, 53, 39, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [25, 53, 39, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {109}; {81}; {95}
GroupID(1): {25,39,53,67}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     45  |                            |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    39  |         R = R + chunk;  |     36  |                            |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |                            |
    53  |         R = R + chunk;  |      4  |                            |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |         R = R + chunk;  |      7  |                            |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |     23  |                         0  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |                            |
    95  |         R = R + chunk;  |     23  |                         1  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |                            |
   109  |         R = R + chunk;  |     23  |                         2  |                            |
   114  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(86, 100)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 4) || (i == 4))
  {
    // reset R0
  }
  else
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
}
use R chunk -> if ((i < 3) || (i == 3))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 00:01:12,267 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:01:28,353 INFO     Done. Execution time: 16.085277318954468 seconds
2023-01-31 00:01:28,353 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 true (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 text)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    5)  (define-fun D1 () Int    0)  (define-fun text () Int    4)  (define-fun D0p () Int    1)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `14.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0001-transparentAmortize-60s-mostPrecise/stac-raw-0131-0001-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.078s
user	0m43.659s
sys	0m3.947s

2023-01-31 00:01:28,353 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 00:01:28,353 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:02:34,857 INFO     Done. Execution time: 66.50386142730713 seconds
2023-01-31 00:02:34,857 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2079902969688337812/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2079902969688337812/bin -o /tmp/qfuzz2079902969688337812/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2079902969688337812/bin
Found file /tmp/qfuzz2079902969688337812/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2079902969688337812/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2079902969688337812/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2079902969688337812/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2079902969688337812/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2079902969688337812/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 138971 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 3.00; [95.00,195.00,252.00,255.00,455.00,498.00,506.00,655.00,735.00]
2; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 9; 8.00; [95.00,252.00,335.00,455.00,498.00,506.00,655.00,775.00,835.00]
3; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 9; 3.00; [495.00,498.00,506.00,532.00,535.00,675.00,715.00,775.00,995.00]
5; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 9; 8.00; [135.00,192.00,415.00,455.00,498.00,506.00,595.00,935.00,975.00]
13; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 9; 3.00; [95.00,195.00,335.00,455.00,498.00,506.00,672.00,675.00,815.00]
24; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 9; 3.00; [95.00,195.00,252.00,255.00,498.00,506.00,655.00,735.00,775.00]
29; /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 9; 3.00; [175.00,195.00,252.00,255.00,455.00,498.00,506.00,735.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 8, 22, 50, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 38, 32, 12, 13, 12, 15, 12, 48, 15, 40, 4, 26, 26, 26, 26, 26, 26, 26, 26, 26, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 16, 4, 22, 40, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 5, 33, 8, 46, 10, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 48, 22, 46, 20, 29, 6, 32, 9, 19, 29, 29, 27, 12, 20, 45, 6, 32, 9, 33, 29, 12, 36, 49, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 49, 33, 35, 38, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 41, 38, 4, 22, 16, 32, 13, 12, 15, 12, 48, 11, 13, 47, 12, 46, 6, 4, 4, 17, 4, 10, 26, 15, 26, 24, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2079902969688337812/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_000234_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,8,22,50,12], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,38,32,12], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,16,4,22,40,33], 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,48,22,46,20,29,6], 2, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,41,38,4,22,16,32], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:02:34,858 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 00:02:34,858 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 00:02:50,555 INFO     Done. Execution time: 15.696807622909546 seconds
2023-01-31 00:02:50,555 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_000234_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_000234_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,8,22,50,12], 2, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,38,32,12], 2, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,16,4,22,40,33], 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,48,22,46,20,29,6], 2, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,41,38,4,22,16,32], 2, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,8,22,50,12]
templateds: 2
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,38,32,12]
templateds: 2
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,16,4,22,40,33]
templateds: 2
separator: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,48,22,46,20,29,6]
templateds: 2
separator: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,41,38,4,22,16,32]
templateds: 2
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
templateds: 2
separator: 12
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         12  |           2  |  [24,9,36,8,22,50,12]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     24  |  0  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    46  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    50  |                         j = j + 1;  |         |   24  |     24  |  0  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    51  |              resetPlaceHolder_2();  |         |   24  |     24  |  0  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    57  |        chunk = arrayRead(text, j);  |         |   24  |      9  |  0  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    60  |                     R = R + chunk;  |      9  |   33  |      9  |  0  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    64  |                         j = j + 1;  |         |   33  |      9  |  0  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    65  |              resetPlaceHolder_2();  |         |   33  |      9  |  0  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    71  |        chunk = arrayRead(text, j);  |         |   33  |     36  |  0  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    74  |                     R = R + chunk;  |     36  |   69  |     36  |  0  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    78  |                         j = j + 1;  |         |   69  |     36  |  0  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    79  |              resetPlaceHolder_2();  |         |   69  |     36  |  0  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    85  |        chunk = arrayRead(text, j);  |         |   69  |      8  |  0  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    88  |                     R = R + chunk;  |      8  |   77  |      8  |  0  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    92  |                         j = j + 1;  |         |   77  |      8  |  0  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    93  |              resetPlaceHolder_2();  |         |   77  |      8  |  0  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
    99  |        chunk = arrayRead(text, j);  |         |   77  |     22  |  0  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   102  |                     R = R + chunk;  |     22  |   99  |     22  |  0  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   106  |                         j = j + 1;  |         |   99  |     22  |  0  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   107  |              resetPlaceHolder_2();  |         |   99  |     22  |  0  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   113  |        chunk = arrayRead(text, j);  |         |   99  |     50  |  0  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   116  |                     R = R + chunk;  |     50  |  149  |     50  |  0  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   120  |                         j = j + 1;  |         |  149  |     50  |  0  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   121  |              resetPlaceHolder_2();  |         |  149  |     50  |  0  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   127  |        chunk = arrayRead(text, j);  |         |  149  |     12  |  0  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   130  |                     R = R + chunk;  |     12  |  161  |     12  |  0  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   134  |                         j = j + 1;  |         |  161  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   135  |              resetPlaceHolder_2();  |         |  161  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   141  |                 R = R + separator;  |     12  |  173  |     12  |  0  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   145  |                         i = i + 1;  |         |  173  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   146  |              resetPlaceHolder_1();  |         |  173  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   151  |                         int j = 0;  |         |  173  |     12  |  1  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   157  |        chunk = arrayRead(text, j);  |         |  173  |     24  |  1  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   160  |                     R = R + chunk;  |     24  |  197  |     24  |  1  |  0  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   164  |                         j = j + 1;  |         |  197  |     24  |  1  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   165  |              resetPlaceHolder_2();  |         |  197  |     24  |  1  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   171  |        chunk = arrayRead(text, j);  |         |  197  |      9  |  1  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   174  |                     R = R + chunk;  |      9  |  206  |      9  |  1  |  1  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   178  |                         j = j + 1;  |         |  206  |      9  |  1  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   179  |              resetPlaceHolder_2();  |         |  206  |      9  |  1  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   185  |        chunk = arrayRead(text, j);  |         |  206  |     36  |  1  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   188  |                     R = R + chunk;  |     36  |  242  |     36  |  1  |  2  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   192  |                         j = j + 1;  |         |  242  |     36  |  1  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   193  |              resetPlaceHolder_2();  |         |  242  |     36  |  1  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   199  |        chunk = arrayRead(text, j);  |         |  242  |      8  |  1  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   202  |                     R = R + chunk;  |      8  |  250  |      8  |  1  |  3  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   206  |                         j = j + 1;  |         |  250  |      8  |  1  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   207  |              resetPlaceHolder_2();  |         |  250  |      8  |  1  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   213  |        chunk = arrayRead(text, j);  |         |  250  |     22  |  1  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   216  |                     R = R + chunk;  |     22  |  272  |     22  |  1  |  4  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   220  |                         j = j + 1;  |         |  272  |     22  |  1  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   221  |              resetPlaceHolder_2();  |         |  272  |     22  |  1  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   227  |        chunk = arrayRead(text, j);  |         |  272  |     50  |  1  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   230  |                     R = R + chunk;  |     50  |  322  |     50  |  1  |  5  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   234  |                         j = j + 1;  |         |  322  |     50  |  1  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   235  |              resetPlaceHolder_2();  |         |  322  |     50  |  1  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   241  |        chunk = arrayRead(text, j);  |         |  322  |     12  |  1  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   244  |                     R = R + chunk;  |     12  |  334  |     12  |  1  |  6  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   248  |                         j = j + 1;  |         |  334  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   249  |              resetPlaceHolder_2();  |         |  334  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   255  |                 R = R + separator;  |     12  |  346  |     12  |  1  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   259  |                         i = i + 1;  |         |  346  |     12  |  2  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
   260  |              resetPlaceHolder_1();  |         |  346  |     12  |  2  |  7  |         12  |           2  |  [24,9,36,8,22,50,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {141}; {244}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {130}; {141}; {244}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      9  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     36  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      8  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     22  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     50  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     12  |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     12  |                         1  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     24  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      9  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     36  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |      8  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     22  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     50  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     12  |                         2  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     12  |                         3  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 12 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 230]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 14 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {216,230}; {74,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {216,230}; {74,188} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      9  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     36  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      8  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     22  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     50  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     12  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     12  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     24  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      9  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     36  |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |      8  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     22  |                         1  |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     50  |                         1  |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     12  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     12  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(0, 1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174}; {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,202}; {46,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 8 trace node indices: [88, 202, 174, 46, 116, 60, 102, 160]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 16 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,174,202}; {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 3), Set(0, 1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,174,202}; {46,60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 8 trace node indices: [88, 202, 174, 46, 116, 60, 102, 160]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 8 trace node indices: [88, 202, 174, 46, 116, 60, 102, 160]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 16 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 8 trace node indices: [88, 202, 174, 46, 116, 60, 102, 160]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,88,102,116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 8 trace node indices: [88, 202, 174, 46, 116, 60, 102, 160]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,88,102,116,160,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,160,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,160,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {130}; {141}; {244}; {255}
GroupID(1): {216,230}; {74,188}
GroupID(2): {46,60,88,102,116,160,174,202}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                         0  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      8  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                         0  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      8  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |     22  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     50  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [131, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                         0  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      8  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                         0  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      8  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |     22  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     50  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [245, 254])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      9  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     36  |                            |                         0  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      8  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |     22  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     12  |                         0  |                            |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     12  |                         1  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     24  |                            |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      9  |                            |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     36  |                            |                         0  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |      8  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |     22  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     50  |                            |                         1  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     12  |                         2  |                            |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     12  |                         3  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(193)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 5) || (j == 5))
{
  if ((j < 1) || (j == 1))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      R1 = R1 + chunk;
    }
    else
    {
      if ((i < 0) || (i == 0))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 3) || (j == 3))
        {
          R2 = R2 + chunk;
        }
        else
        {
          R1 = R1 + chunk;
        }
      }
    }
  }
}
else
{
  R0 = R0 + chunk;
}
resetPlaceHolder_2(); -> {
  // reset R2
  if ((i < 0) || (i == 0))
  {
    // reset R1
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      // reset R1
    }
    else
    {
      if ((j < 3) || (j == 3))
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        // reset R1
      }
    }
  }
  // reset R0
}
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 00:02:50,556 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:03:52,889 INFO     Done. Execution time: 62.3338189125061 seconds
2023-01-31 00:03:52,890 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((j < 1) || (j == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D1 = D1 + chunk;
            }
            else
            {
              if ((i < 0) || (i == 0))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
            }
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((j < 1) || (j == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D1 = D1 + chunk;
            }
            else
            {
              if ((i < 0) || (i == 0))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
            }
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((i < 0) || (i == 0))
        {

        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8735940615439025504.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8451049878731829623.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7982448226880426668.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7521190010552405575.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5392934243094564334.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8985979317958823328.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3934607926845094664.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9029902928090706875.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5818098604141169924.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    5)  (define-fun D2 () Int    6)  (define-fun D1 () Int    6)  (define-fun C2 () Int    7)  (define-fun C1 () Int    15)  (define-fun templateds () Int    13)  (define-fun text () Int    5)  (define-fun separator () Int    16)  (define-fun D0p () Int    0)  (define-fun D2p () Int    8)  (define-fun D1p () Int    15)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0002-transparentAmortize-60s-mostPrecise/stac-raw-0131-0002-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.327s
user	4m1.581s
sys	0m2.505s

2023-01-31 00:03:52,890 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 00:03:52,890 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:04:58,654 INFO     Done. Execution time: 65.76403951644897 seconds
2023-01-31 00:04:58,654 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz3803696933351606025/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3803696933351606025/bin -o /tmp/qfuzz3803696933351606025/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3803696933351606025/bin
Found file /tmp/qfuzz3803696933351606025/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz3803696933351606025/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3803696933351606025/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3803696933351606025/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3803696933351606025/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3803696933351606025/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 121363 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 3.00; [95.00,195.00,252.00,255.00,308.00,455.00,498.00,506.00,655.00,735.00]
2; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta; 10; 8.00; [95.00,195.00,252.00,268.00,455.00,498.00,506.00,655.00,735.00,775.00]
4; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 10; 8.00; [135.00,192.00,215.00,235.00,495.00,668.00,695.00,778.00,786.00,795.00]
5; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 10; 3.00; [95.00,195.00,252.00,255.00,308.00,498.00,506.00,595.00,655.00,735.00]
7; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 9; 8.00; [95.00,195.00,272.00,388.00,455.00,498.00,506.00,635.00,655.00]
25; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 10; 3.00; [95.00,115.00,195.00,252.00,255.00,308.00,498.00,506.00,655.00,735.00]
44; /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 10; 3.00; [95.00,192.00,195.00,255.00,308.00,358.00,366.00,455.00,655.00,735.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 9, 36, 4, 22, 32, 12, 13, 9, 15, 17, 5, 25, 40, 12, 26, 6, 45, 9, 9, 29, 25, 34, 38, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 5, 32, 12, 39, 12, 15, 12, 48, 34, 40, 12, 46, 45, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 31, 4, 22, 32, 32, 12, 13, 19, 15, 12, 48, 34, 40, 25, 38, 8, 20, 29, 42, 26, 26, 24, 32, 38, 8, 20, 29, 42, 26, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 29, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 6, 45, 9, 33, 29, 12, 34, 44, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 34, 11, 39, 6, 24, 10, 27, 9, 33, 35, 49, 15, 25, 7, 47, 14, 30, 30, 30, 25, 30, 30, 30, 30, 30, 30, 30, 33, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 38, 13, 12, 13, 40, 48, 34, 40, 12, 27, 6, 45, 42, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3803696933351606025/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_000458_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,9,36,4,22,32,12], 2, 9, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,5,32,12], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,31,4,22,32,32], 2, 13, 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,29,32,12], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,34,11,39,6,24,10], 2, 9, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,38], 2, 12, 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:04:58,655 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 00:04:58,655 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 00:05:15,382 INFO     Done. Execution time: 16.726823568344116 seconds
2023-01-31 00:05:15,382 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_000458_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_000458_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,9,36,4,22,32,12], 2, 9, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,5,32,12], 2, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,31,4,22,32,32], 2, 13, 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,29,32,12], 2, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,34,11,39,6,24,10], 2, 9, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,38], 2, 12, 13)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17,9,36,4,22,32,12]
ts: 2
sep: 9
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,5,32,12]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,31,4,22,32,32]
ts: 2
sep: 13
rep: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,29,32,12]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [38,34,11,39,6,24,10]
ts: 2
sep: 9
rep: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,38]
ts: 2
sep: 12
rep: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
ts: 2
sep: 12
rep: 15
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |          text          |  ts  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |     |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    45  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |     17  |  0  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    54  |                     R = R + chunk;  |     17  |   17  |     17  |  0  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    57  |                       R = R + rep;  |     15  |   32  |     17  |  0  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    61  |                         j = j + 1;  |         |   32  |     17  |  0  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   32  |     17  |  0  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   32  |      9  |  0  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    71  |                     R = R + chunk;  |      9  |   41  |      9  |  0  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    74  |                       R = R + rep;  |     15  |   56  |      9  |  0  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    78  |                         j = j + 1;  |         |   56  |      9  |  0  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   56  |      9  |  0  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   56  |     36  |  0  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    88  |                     R = R + chunk;  |     36  |   92  |     36  |  0  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    91  |                       R = R + rep;  |     15  |  107  |     36  |  0  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    95  |                         j = j + 1;  |         |  107  |     36  |  0  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
    96  |              resetPlaceHolder_2();  |         |  107  |     36  |  0  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |  107  |      4  |  0  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   105  |                     R = R + chunk;  |      4  |  111  |      4  |  0  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   108  |                       R = R + rep;  |     15  |  126  |      4  |  0  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   112  |                         j = j + 1;  |         |  126  |      4  |  0  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   113  |              resetPlaceHolder_2();  |         |  126  |      4  |  0  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |  126  |     22  |  0  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   122  |                     R = R + chunk;  |     22  |  148  |     22  |  0  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   125  |                       R = R + rep;  |     15  |  163  |     22  |  0  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   129  |                         j = j + 1;  |         |  163  |     22  |  0  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   130  |              resetPlaceHolder_2();  |         |  163  |     22  |  0  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |  163  |     32  |  0  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   139  |                     R = R + chunk;  |     32  |  195  |     32  |  0  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   142  |                       R = R + rep;  |     15  |  210  |     32  |  0  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   146  |                         j = j + 1;  |         |  210  |     32  |  0  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   147  |              resetPlaceHolder_2();  |         |  210  |     32  |  0  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |  210  |     12  |  0  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   156  |                     R = R + chunk;  |     12  |  222  |     12  |  0  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   159  |                       R = R + rep;  |     15  |  237  |     12  |  0  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   163  |                         j = j + 1;  |         |  237  |     12  |  0  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   164  |              resetPlaceHolder_2();  |         |  237  |     12  |  0  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   170  |                       R = R + sep;  |      9  |  246  |     12  |  0  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   174  |                         i = i + 1;  |         |  246  |     12  |  1  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   175  |              resetPlaceHolder_1();  |         |  246  |     12  |  1  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   180  |                         int j = 0;  |         |  246  |     12  |  1  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |  246  |     17  |  1  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   189  |                     R = R + chunk;  |     17  |  263  |     17  |  1  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   192  |                       R = R + rep;  |     15  |  278  |     17  |  1  |  0  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   196  |                         j = j + 1;  |         |  278  |     17  |  1  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  278  |     17  |  1  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  278  |      9  |  1  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   206  |                     R = R + chunk;  |      9  |  287  |      9  |  1  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   209  |                       R = R + rep;  |     15  |  302  |      9  |  1  |  1  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   213  |                         j = j + 1;  |         |  302  |      9  |  1  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  302  |      9  |  1  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  302  |     36  |  1  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   223  |                     R = R + chunk;  |     36  |  338  |     36  |  1  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   226  |                       R = R + rep;  |     15  |  353  |     36  |  1  |  2  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   230  |                         j = j + 1;  |         |  353  |     36  |  1  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  353  |     36  |  1  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  353  |      4  |  1  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   240  |                     R = R + chunk;  |      4  |  357  |      4  |  1  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   243  |                       R = R + rep;  |     15  |  372  |      4  |  1  |  3  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   247  |                         j = j + 1;  |         |  372  |      4  |  1  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  372  |      4  |  1  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  372  |     22  |  1  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   257  |                     R = R + chunk;  |     22  |  394  |     22  |  1  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   260  |                       R = R + rep;  |     15  |  409  |     22  |  1  |  4  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   264  |                         j = j + 1;  |         |  409  |     22  |  1  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  409  |     22  |  1  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  409  |     32  |  1  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   274  |                     R = R + chunk;  |     32  |  441  |     32  |  1  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   277  |                       R = R + rep;  |     15  |  456  |     32  |  1  |  5  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   281  |                         j = j + 1;  |         |  456  |     32  |  1  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  456  |     32  |  1  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  456  |     12  |  1  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   291  |                     R = R + chunk;  |     12  |  468  |     12  |  1  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   294  |                       R = R + rep;  |     15  |  483  |     12  |  1  |  6  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   298  |                         j = j + 1;  |         |  483  |     12  |  1  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  483  |     12  |  1  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   305  |                       R = R + sep;  |      9  |  492  |     12  |  1  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   309  |                         i = i + 1;  |         |  492  |     12  |  2  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  492  |     12  |  2  |  7  |   15  |    9  |  [17,9,36,4,22,32,12]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 8 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                            |
    57  |           R = R + rep;  |     15  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      9  |                            |
    74  |           R = R + rep;  |     15  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     36  |                            |
    91  |           R = R + rep;  |     15  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      4  |                            |
   108  |           R = R + rep;  |     15  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     22  |                            |
   125  |           R = R + rep;  |     15  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     32  |                            |
   142  |           R = R + rep;  |     15  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     12  |                            |
   159  |           R = R + rep;  |     15  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      9  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     17  |                            |
   192  |           R = R + rep;  |     15  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      9  |                            |
   209  |           R = R + rep;  |     15  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     36  |                            |
   226  |           R = R + rep;  |     15  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      4  |                            |
   243  |           R = R + rep;  |     15  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     22  |                            |
   260  |           R = R + rep;  |     15  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     32  |                            |
   277  |           R = R + rep;  |     15  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     12  |                            |
   294  |           R = R + rep;  |     15  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      9  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {305}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {206}; {305}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {206}; {305}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                            |
    57  |           R = R + rep;  |     15  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      9  |                         0  |
    74  |           R = R + rep;  |     15  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     36  |                            |
    91  |           R = R + rep;  |     15  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      4  |                            |
   108  |           R = R + rep;  |     15  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     22  |                            |
   125  |           R = R + rep;  |     15  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     32  |                            |
   142  |           R = R + rep;  |     15  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     12  |                            |
   159  |           R = R + rep;  |     15  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      9  |                         1  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     17  |                            |
   192  |           R = R + rep;  |     15  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      9  |                         2  |
   209  |           R = R + rep;  |     15  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     36  |                            |
   226  |           R = R + rep;  |     15  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      4  |                            |
   243  |           R = R + rep;  |     15  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     22  |                            |
   260  |           R = R + rep;  |     15  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     32  |                            |
   277  |           R = R + rep;  |     15  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     12  |                            |
   294  |           R = R + rep;  |     15  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      9  |                         3  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 12 trace node indices: [88, 257, 189, 156, 105, 291, 54, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 15 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 6), Set(3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,240}; {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,240}; {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,139}; {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,139}; {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {257,291}; {54,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122,156}; {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {257,291}; {54,189} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                         0  |
    57  |           R = R + rep;  |     15  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      9  |                            |
    74  |           R = R + rep;  |     15  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     36  |                            |
    91  |           R = R + rep;  |     15  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |      4  |                            |
   108  |           R = R + rep;  |     15  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     22  |                            |
   125  |           R = R + rep;  |     15  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     32  |                            |
   142  |           R = R + rep;  |     15  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     12  |                            |
   159  |           R = R + rep;  |     15  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      9  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     17  |                         0  |
   192  |           R = R + rep;  |     15  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |      9  |                            |
   209  |           R = R + rep;  |     15  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     36  |                            |
   226  |           R = R + rep;  |     15  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |      4  |                            |
   243  |           R = R + rep;  |     15  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     22  |                         1  |
   260  |           R = R + rep;  |     15  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     32  |                            |
   277  |           R = R + rep;  |     15  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     12  |                         1  |
   294  |           R = R + rep;  |     15  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      9  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,274}; {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,274}; {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 8 trace node indices: [88, 156, 105, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 16 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,240,274}; {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 3, 5), Set(2, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,240,274}; {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 8 trace node indices: [88, 156, 105, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,122,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,122,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,122,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,122,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,122,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,122,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 8 trace node indices: [88, 156, 105, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 16 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {122,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,105,122,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,105,122,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,122,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,122,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,122,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,139,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,122,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,122,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 8 trace node indices: [88, 156, 105, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,122,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,122,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,122,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,122,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,122,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,139,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 8 trace node indices: [88, 156, 105, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,139,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,156,223,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,122,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,105,122,139,156,223,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,122,139,156,223,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(1): {170}; {206}; {305}; {71}
GroupID(2): {257,291}; {54,189}
GroupID(3): {88,105,122,139,156,223,240,274}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
    57  |           R = R + rep;  |     15  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |      9  |                            |                         0  |                            |                            |
    74  |           R = R + rep;  |     15  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     15  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   108  |           R = R + rep;  |     15  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     22  |                            |                            |                            |                         0  |
   125  |           R = R + rep;  |     15  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     15  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     15  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      9  |                            |                         1  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
   192  |           R = R + rep;  |     15  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |      9  |                            |                         2  |                            |                            |
   209  |           R = R + rep;  |     15  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
   226  |           R = R + rep;  |     15  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     15  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     22  |                            |                            |                         1  |                            |
   260  |           R = R + rep;  |     15  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     15  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     15  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      9  |                            |                         3  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_2();
GroupID(3): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [72, 169])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
    57  |           R = R + rep;  |     15  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |      9  |                            |                         0  |                            |                            |
    74  |           R = R + rep;  |     15  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     15  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   108  |           R = R + rep;  |     15  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     22  |                            |                            |                            |                         0  |
   125  |           R = R + rep;  |     15  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     15  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     15  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      9  |                            |                         1  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
   192  |           R = R + rep;  |     15  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |      9  |                            |                         2  |                            |                            |
   209  |           R = R + rep;  |     15  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
   226  |           R = R + rep;  |     15  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     15  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     22  |                            |                            |                         1  |                            |
   260  |           R = R + rep;  |     15  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     15  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     15  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      9  |                            |                         3  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 2 and 3 segment (index range: [207, 304])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
    57  |           R = R + rep;  |     15  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |      9  |                            |                         0  |                            |                            |
    74  |           R = R + rep;  |     15  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     15  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   108  |           R = R + rep;  |     15  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     22  |                            |                            |                            |                         0  |
   125  |           R = R + rep;  |     15  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     15  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     12  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     15  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      9  |                            |                         1  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
   192  |           R = R + rep;  |     15  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |      9  |                            |                         2  |                            |                            |
   209  |           R = R + rep;  |     15  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     36  |                            |                            |                            |                         0  |
   226  |           R = R + rep;  |     15  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     15  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     22  |                            |                            |                         1  |                            |
   260  |           R = R + rep;  |     15  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     32  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     15  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     12  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     15  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      9  |                            |                         3  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(1): Set(175)
GroupID(2): Set(197)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 1) || (j == 1))
{
  if ((j < 0) || (j == 0))
  {
    R2 = R2 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  if ((i < 0) || (i == 0))
  {
    R3 = R3 + chunk;
  }
  else
  {
    if ((j < 3) || (j == 3))
    {
      R3 = R3 + chunk;
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 5) || (j == 5))
        {
          R3 = R3 + chunk;
        }
        else
        {
          R2 = R2 + chunk;
        }
      }
    }
  }
}
resetPlaceHolder_2(); -> {
  // reset R3
  if ((j < 1) || (j == 1))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R2
    }
    else
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
  }
  else
  {
    // reset R2
  }
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R rep -> R0 = R0 + rep;
use R sep -> R1 = R1 + sep;
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 00:05:15,383 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:06:18,240 INFO     Done. Execution time: 62.85661315917969 seconds
2023-01-31 00:06:18,240 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          if ((j < 0) || (j == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            D3 = D3 + chunk;
          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          if ((j < 0) || (j == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            D3 = D3 + chunk;
          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4211145781358863597.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2005464893291709313.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3126780144207077553.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7602373791735582045.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8539291883906294795.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1519493750357049308.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8348803389640880004.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6411134124521704267.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5482761690617752324.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3077795406158280107.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3447297018123592985.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1449655387287109798.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D2 0))
     (or true (= D3 0))
     (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 7))  (define-fun D3 () Int    (- 8))  (define-fun D2 () Int    (- 5))  (define-fun D1 () Int    (- 6))  (define-fun C2 () Int    9)  (define-fun C1 () Int    15)  (define-fun C3 () Int    14)  (define-fun rep () Int    13)  (define-fun sep () Int    1)  (define-fun text () Int    7)  (define-fun ts () Int    1)  (define-fun D0p () Int    4)  (define-fun D3p () Int    7)  (define-fun D2p () Int    9)  (define-fun D1p () Int    11)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `60.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0005-transparentAmortize-60s-mostPrecise/stac-raw-0131-0005-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.849s
user	4m2.352s
sys	0m3.233s

2023-01-31 00:06:18,241 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 00:06:18,241 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:07:23,980 INFO     Done. Execution time: 65.73904132843018 seconds
2023-01-31 00:07:23,980 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz7936187443061869818/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7936187443061869818/bin -o /tmp/qfuzz7936187443061869818/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7936187443061869818/bin
Found file /tmp/qfuzz7936187443061869818/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz7936187443061869818/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7936187443061869818/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7936187443061869818/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7936187443061869818/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7936187443061869818/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 130716 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 50.00; [95.00,195.00,255.00,455.00,505.00,655.00,735.00]
2; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 6; 10.00; [95.00,105.00,195.00,795.00,835.00,975.00]
3; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 7; 10.00; [95.00,195.00,395.00,455.00,725.00,735.00,815.00]
4; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 7; 20.00; [95.00,195.00,255.00,275.00,505.00,655.00,735.00]
5; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 7; 60.00; [135.00,195.00,295.00,475.00,685.00,775.00,995.00]
8; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 5; 30.00; [215.00,245.00,375.00,635.00,735.00]
12; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 20.00; [95.00,195.00,255.00,435.00,455.00,505.00,735.00]
21; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 7; 80.00; [95.00,255.00,445.00,655.00,735.00,835.00,915.00]
33; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta; 7; 100.00; [95.00,195.00,345.00,455.00,655.00,775.00,915.00]
40; /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2; 7; 40.00; [95.00,155.00,195.00,255.00,455.00,505.00,655.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 7, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 30, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 45, 9, 4, 22, 38, 32, 12, 15, 12, 27, 41, 41, 41, 41, 41, 35, 10, 50, 34, 29, 38, 28, 17, 26, 38, 42, 4, 4, 27, 12, 22, 10, 41, 41, 40, 45, 35, 10, 30, 17, 7, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 41, 36, 4, 45, 32, 12, 13, 12, 15, 4, 34, 34, 40, 50, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 21, 12, 13, 12, 15, 12, 48, 27, 26, 17, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 31, 31, 31, 18, 10, 36, 19, 31, 31, 31, 31, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 9, 23, 14, 6, 38, 49, 34, 41, 33, 36, 5, 39, 30, 32, 11, 33, 9, 23, 14, 21, 45, 8, 20, 29, 42, 26, 27, 26, 50, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 4, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 9, 36, 4, 22, 19, 40, 13, 12, 15, 12, 48, 34, 40, 13, 46, 6, 45, 28, 11, 29, 12, 34, 43, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 39, 9, 41, 48, 8, 4, 19, 32, 8, 13, 36, 45)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7936187443061869818/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_000723_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,7,4,22,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,45,9,4,22,38,32], 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,41,36,4,45,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,21,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,31,31,31,18,10,36], 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,9,23,14,6,38,49], 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,32,12,13], 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,9,36,4,22,19,40], 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,39,9,41,48], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:07:23,980 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 00:07:23,980 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 00:07:35,471 INFO     Done. Execution time: 11.490325450897217 seconds
2023-01-31 00:07:35,471 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_000723_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_000723_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,7,4,22,32,12], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,45,9,4,22,38,32], 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,41,36,4,45,32,12], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,21,12], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,31,31,31,18,10,36], 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,9,23,14,6,38,49], 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,32,12,13], 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,9,36,4,22,19,40], 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,39,9,41,48], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,4,4,39,9,41,48]
choice: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,7,4,22,32,12]
choice: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [16,45,9,4,22,38,32]
choice: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [21,41,36,4,45,32,12]
choice: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,21,12]
choice: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [11,31,31,31,18,10,36]
choice: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [33,9,23,14,6,38,49]
choice: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,32,12,13]
choice: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [35,9,36,4,22,19,40]
choice: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
choice: 13
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |         text         |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       8  |         |     |  [4,4,4,39,9,41,48]  |
    10  |                      // int R = 0;  |         |    0  |       8  |         |     |  [4,4,4,39,9,41,48]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       8  |         |     |  [4,4,4,39,9,41,48]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       8  |         |     |  [4,4,4,39,9,41,48]  |
    14  |                     int chunk = 0;  |         |    0  |       8  |      0  |     |  [4,4,4,39,9,41,48]  |
    25  |                         int j = 0;  |         |    0  |       8  |      0  |  0  |  [4,4,4,39,9,41,48]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       8  |      4  |  0  |  [4,4,4,39,9,41,48]  |
    34  |                     R = R + chunk;  |      4  |    4  |       8  |      4  |  0  |  [4,4,4,39,9,41,48]  |
    38  |                         j = j + 1;  |         |    4  |       8  |      4  |  1  |  [4,4,4,39,9,41,48]  |
    39  |              resetPlaceHolder_2();  |         |    4  |       8  |      4  |  1  |  [4,4,4,39,9,41,48]  |
    45  |        chunk = arrayRead(text, j);  |         |    4  |       8  |      4  |  1  |  [4,4,4,39,9,41,48]  |
    48  |                     R = R + chunk;  |      4  |    8  |       8  |      4  |  1  |  [4,4,4,39,9,41,48]  |
    52  |                         j = j + 1;  |         |    8  |       8  |      4  |  2  |  [4,4,4,39,9,41,48]  |
    53  |              resetPlaceHolder_2();  |         |    8  |       8  |      4  |  2  |  [4,4,4,39,9,41,48]  |
    59  |        chunk = arrayRead(text, j);  |         |    8  |       8  |      4  |  2  |  [4,4,4,39,9,41,48]  |
    62  |                     R = R + chunk;  |      4  |   12  |       8  |      4  |  2  |  [4,4,4,39,9,41,48]  |
    66  |                         j = j + 1;  |         |   12  |       8  |      4  |  3  |  [4,4,4,39,9,41,48]  |
    67  |              resetPlaceHolder_2();  |         |   12  |       8  |      4  |  3  |  [4,4,4,39,9,41,48]  |
    73  |        chunk = arrayRead(text, j);  |         |   12  |       8  |     39  |  3  |  [4,4,4,39,9,41,48]  |
    76  |                     R = R + chunk;  |     39  |   51  |       8  |     39  |  3  |  [4,4,4,39,9,41,48]  |
    80  |                         j = j + 1;  |         |   51  |       8  |     39  |  4  |  [4,4,4,39,9,41,48]  |
    81  |              resetPlaceHolder_2();  |         |   51  |       8  |     39  |  4  |  [4,4,4,39,9,41,48]  |
    87  |        chunk = arrayRead(text, j);  |         |   51  |       8  |      9  |  4  |  [4,4,4,39,9,41,48]  |
    90  |                     R = R + chunk;  |      9  |   60  |       8  |      9  |  4  |  [4,4,4,39,9,41,48]  |
    94  |                         j = j + 1;  |         |   60  |       8  |      9  |  5  |  [4,4,4,39,9,41,48]  |
    95  |              resetPlaceHolder_2();  |         |   60  |       8  |      9  |  5  |  [4,4,4,39,9,41,48]  |
   101  |        chunk = arrayRead(text, j);  |         |   60  |       8  |     41  |  5  |  [4,4,4,39,9,41,48]  |
   104  |                     R = R + chunk;  |     41  |  101  |       8  |     41  |  5  |  [4,4,4,39,9,41,48]  |
   108  |                         j = j + 1;  |         |  101  |       8  |     41  |  6  |  [4,4,4,39,9,41,48]  |
   109  |              resetPlaceHolder_2();  |         |  101  |       8  |     41  |  6  |  [4,4,4,39,9,41,48]  |
   115  |        chunk = arrayRead(text, j);  |         |  101  |       8  |     48  |  6  |  [4,4,4,39,9,41,48]  |
   118  |                     R = R + chunk;  |     48  |  149  |       8  |     48  |  6  |  [4,4,4,39,9,41,48]  |
   122  |                         j = j + 1;  |         |  149  |       8  |     48  |  7  |  [4,4,4,39,9,41,48]  |
   123  |              resetPlaceHolder_2();  |         |  149  |       8  |     48  |  7  |  [4,4,4,39,9,41,48]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {62}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {34}; {48}; {62}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {34}; {48}; {62} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |      4  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |      4  |                         1  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |      4  |                         2  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     39  |                            |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |      9  |                            |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     41  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     48  |                            |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [118, 76, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [118, 76, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [118, 76, 104, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}; {48}; {62}
GroupID(1): {76,90,104,118}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |      4  |                         0  |                            |
    39  |  resetPlaceHolder_2();  |         |                            |                            |
    48  |         R = R + chunk;  |      4  |                         1  |                            |
    53  |  resetPlaceHolder_2();  |         |                            |                            |
    62  |         R = R + chunk;  |      4  |                         2  |                            |
    67  |  resetPlaceHolder_2();  |         |                            |                            |
    76  |         R = R + chunk;  |     39  |                            |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |                            |
    90  |         R = R + chunk;  |      9  |                            |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |         R = R + chunk;  |     41  |                            |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |         R = R + chunk;  |     48  |                            |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39, 53)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |         text          |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      13  |         |     |  [24,9,7,4,22,32,12]  |
    10  |                      // int R = 0;  |         |    0  |      13  |         |     |  [24,9,7,4,22,32,12]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      13  |         |     |  [24,9,7,4,22,32,12]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      13  |         |     |  [24,9,7,4,22,32,12]  |
    14  |                     int chunk = 0;  |         |    0  |      13  |      0  |     |  [24,9,7,4,22,32,12]  |
    25  |                         int i = 0;  |         |    0  |      13  |      0  |  0  |  [24,9,7,4,22,32,12]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      13  |     24  |  0  |  [24,9,7,4,22,32,12]  |
    34  |                     R = R + chunk;  |     24  |   24  |      13  |     24  |  0  |  [24,9,7,4,22,32,12]  |
    38  |                         i = i + 1;  |         |   24  |      13  |     24  |  1  |  [24,9,7,4,22,32,12]  |
    39  |              resetPlaceHolder_1();  |         |   24  |      13  |     24  |  1  |  [24,9,7,4,22,32,12]  |
    45  |        chunk = arrayRead(text, i);  |         |   24  |      13  |      9  |  1  |  [24,9,7,4,22,32,12]  |
    48  |                     R = R + chunk;  |      9  |   33  |      13  |      9  |  1  |  [24,9,7,4,22,32,12]  |
    52  |                         i = i + 1;  |         |   33  |      13  |      9  |  2  |  [24,9,7,4,22,32,12]  |
    53  |              resetPlaceHolder_1();  |         |   33  |      13  |      9  |  2  |  [24,9,7,4,22,32,12]  |
    59  |        chunk = arrayRead(text, i);  |         |   33  |      13  |      7  |  2  |  [24,9,7,4,22,32,12]  |
    62  |                     R = R + chunk;  |      7  |   40  |      13  |      7  |  2  |  [24,9,7,4,22,32,12]  |
    66  |                         i = i + 1;  |         |   40  |      13  |      7  |  3  |  [24,9,7,4,22,32,12]  |
    67  |              resetPlaceHolder_1();  |         |   40  |      13  |      7  |  3  |  [24,9,7,4,22,32,12]  |
    73  |        chunk = arrayRead(text, i);  |         |   40  |      13  |      4  |  3  |  [24,9,7,4,22,32,12]  |
    76  |                     R = R + chunk;  |      4  |   44  |      13  |      4  |  3  |  [24,9,7,4,22,32,12]  |
    80  |                         i = i + 1;  |         |   44  |      13  |      4  |  4  |  [24,9,7,4,22,32,12]  |
    81  |              resetPlaceHolder_1();  |         |   44  |      13  |      4  |  4  |  [24,9,7,4,22,32,12]  |
    87  |        chunk = arrayRead(text, i);  |         |   44  |      13  |     22  |  4  |  [24,9,7,4,22,32,12]  |
    90  |                     R = R + chunk;  |     22  |   66  |      13  |     22  |  4  |  [24,9,7,4,22,32,12]  |
    94  |                         i = i + 1;  |         |   66  |      13  |     22  |  5  |  [24,9,7,4,22,32,12]  |
    95  |              resetPlaceHolder_1();  |         |   66  |      13  |     22  |  5  |  [24,9,7,4,22,32,12]  |
   101  |        chunk = arrayRead(text, i);  |         |   66  |      13  |     32  |  5  |  [24,9,7,4,22,32,12]  |
   104  |                     R = R + chunk;  |     32  |   98  |      13  |     32  |  5  |  [24,9,7,4,22,32,12]  |
   108  |                         i = i + 1;  |         |   98  |      13  |     32  |  6  |  [24,9,7,4,22,32,12]  |
   109  |              resetPlaceHolder_1();  |         |   98  |      13  |     32  |  6  |  [24,9,7,4,22,32,12]  |
   115  |        chunk = arrayRead(text, i);  |         |   98  |      13  |     12  |  6  |  [24,9,7,4,22,32,12]  |
   118  |                     R = R + chunk;  |     12  |  110  |      13  |     12  |  6  |  [24,9,7,4,22,32,12]  |
   122  |                         i = i + 1;  |         |  110  |      13  |     12  |  7  |  [24,9,7,4,22,32,12]  |
   123  |              resetPlaceHolder_1();  |         |  110  |      13  |     12  |  7  |  [24,9,7,4,22,32,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {48,62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {48,62}; {76,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {48,62}; {76,118} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     24  |                            |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |      9  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |      7  |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |      4  |                         1  |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |     22  |                            |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     32  |                            |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     12  |                         1  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [34, 104, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {48,62}; {76,118}
GroupID(1): {34,90,104}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |     24  |                            |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |         R = R + chunk;  |      9  |                         0  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |         R = R + chunk;  |      7  |                         0  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |      4  |                         1  |                            |
    81  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |     22  |                            |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |                            |
   104  |         R = R + chunk;  |     32  |                            |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |                            |
   118  |         R = R + chunk;  |     12  |                         1  |                            |
   123  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 2) || (j == 2))
{
  R0 = R0 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_2(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 3) || (i == 3))
  {
    if ((i < 2) || (i == 2))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R0 = R0 + chunk;
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R0 = R0 + chunk;
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 00:07:35,472 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:09:00,460 INFO     Done. Execution time: 84.98874974250793 seconds
2023-01-31 00:09:00,461 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 3) || (i == 3))
        {
          if ((i < 2) || (i == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
        else
        {

        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 3) || (i == 3))
        {
          if ((i < 2) || (i == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
        else
        {

        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    6)  (define-fun D0 () Int    1)  (define-fun text () Int    5)  (define-fun D0p () Int    2)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `83.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0007-transparentAmortize-60s-mostPrecise/stac-raw-0131-0007-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m24.981s
user	3m26.708s
sys	0m2.902s

2023-01-31 00:09:00,461 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 00:09:00,461 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:10:06,650 INFO     Done. Execution time: 66.1886854171753 seconds
2023-01-31 00:10:06,650 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz672236719686516233/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz672236719686516233/bin -o /tmp/qfuzz672236719686516233/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz672236719686516233/bin
Found file /tmp/qfuzz672236719686516233/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz672236719686516233/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz672236719686516233/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz672236719686516233/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz672236719686516233/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz672236719686516233/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz672236719686516233/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz672236719686516233/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 121249 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 47.00; [95.00,195.00,255.00,455.00,502.00,655.00,735.00]
2; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 6; 7.00; [95.00,102.00,215.00,475.00,495.00,615.00]
3; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 7; 60.00; [95.00,195.00,255.00,502.00,655.00,735.00,995.00]
5; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 7.00; [255.00,315.00,322.00,755.00]
12; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 100.00; [15.00,335.00,655.00,755.00,1022.00]
17; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 7; 40.00; [195.00,495.00,615.00,682.00,755.00,795.00,855.00]
23; /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta; 7; 80.00; [15.00,255.00,355.00,495.00,595.00,675.00,942.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 29, 33, 24, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 9, 42, 37, 24, 39, 30, 32, 37, 15, 27, 25, 7, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 32, 37, 32, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 15, 12, 37, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 49, 32, 12, 13, 42, 15, 12, 48, 34, 40, 12, 46, 6, 45, 32, 25, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 24, 30, 10, 23, 4, 4, 4, 15, 4, 4, 31, 23, 5, 35, 17, 4, 33, 14, 33, 5, 26, 23, 8, 26, 4, 12, 45, 9, 35, 15, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz672236719686516233/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_001006_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,29,33,24,17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,9,42,37,24,39,30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,32,37,32,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,15,12,37,15,15,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,49,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,24,30,10,23,4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:10:06,650 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 00:10:06,651 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 00:10:16,168 INFO     Done. Execution time: 9.517228364944458 seconds
2023-01-31 00:10:16,168 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_001006_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_001006_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,29,33,24,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,9,42,37,24,39,30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,32,37,32,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,15,12,37,15,15,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,49,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,24,30,10,23,4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [46,29,33,24,17]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [33,9,42,37,24,39,30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [50,32,37,32,16]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [15,15,12,37,15,15,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,49,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,24,30,10,23,4,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 88):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text        |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [46,29,33,24,17]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [46,29,33,24,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [46,29,33,24,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [46,29,33,24,17]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [46,29,33,24,17]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [46,29,33,24,17]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [46,29,33,24,17]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     46  |  0  |    0  |  [46,29,33,24,17]  |
    24  |                     R = R + chunk;  |     46  |   46  |     46  |  0  |    0  |  [46,29,33,24,17]  |
    28  |                         i = i + 1;  |         |   46  |     46  |  1  |    0  |  [46,29,33,24,17]  |
    34  |        chunk = arrayRead(text, i);  |         |   46  |     29  |  1  |    0  |  [46,29,33,24,17]  |
    37  |                     R = R + chunk;  |     29  |   75  |     29  |  1  |    0  |  [46,29,33,24,17]  |
    41  |                         i = i + 1;  |         |   75  |     29  |  2  |    0  |  [46,29,33,24,17]  |
    42  |              resetPlaceHolder_1();  |         |   75  |     29  |  2  |    0  |  [46,29,33,24,17]  |
    48  |        chunk = arrayRead(text, i);  |         |   75  |     33  |  2  |    0  |  [46,29,33,24,17]  |
    51  |                     R = R + chunk;  |     33  |  108  |     33  |  2  |    0  |  [46,29,33,24,17]  |
    55  |                         i = i + 1;  |         |  108  |     33  |  3  |    0  |  [46,29,33,24,17]  |
    56  |              resetPlaceHolder_1();  |         |  108  |     33  |  3  |    0  |  [46,29,33,24,17]  |
    62  |        chunk = arrayRead(text, i);  |         |  108  |     24  |  3  |    0  |  [46,29,33,24,17]  |
    65  |                     R = R + chunk;  |     24  |  132  |     24  |  3  |    0  |  [46,29,33,24,17]  |
    69  |                         i = i + 1;  |         |  132  |     24  |  4  |    0  |  [46,29,33,24,17]  |
    70  |              resetPlaceHolder_1();  |         |  132  |     24  |  4  |    0  |  [46,29,33,24,17]  |
    76  |        chunk = arrayRead(text, i);  |         |  132  |     17  |  4  |    0  |  [46,29,33,24,17]  |
    79  |                     R = R + chunk;  |     17  |  149  |     17  |  4  |    0  |  [46,29,33,24,17]  |
    83  |                         i = i + 1;  |         |  149  |     17  |  5  |    0  |  [46,29,33,24,17]  |
    84  |              resetPlaceHolder_1();  |         |  149  |     17  |  5  |    0  |  [46,29,33,24,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 5 trace node indices: [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [24, 37, 65, 51, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     46  |                         0  |
    37  |         R = R + chunk;  |     29  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     33  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     24  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     17  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 00:10:16,168 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:10:24,228 INFO     Done. Execution time: 8.05945110321045 seconds
2023-01-31 00:10:24,228 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0010-transparentAmortize-60s-mostPrecise/stac-raw-0131-0010-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.053s
user	0m17.494s
sys	0m2.368s

2023-01-31 00:10:24,228 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 00:10:24,229 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:11:30,087 INFO     Done. Execution time: 65.85800957679749 seconds
2023-01-31 00:11:30,087 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz247998107605088912/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz247998107605088912/bin -o /tmp/qfuzz247998107605088912/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz247998107605088912/bin
Found file /tmp/qfuzz247998107605088912/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz247998107605088912/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz247998107605088912/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz247998107605088912/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz247998107605088912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz247998107605088912/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz247998107605088912/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz247998107605088912/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 109480 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 49.00; [28.00,95.00,195.00,255.00,455.00,504.00,655.00,735.00]
2; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 8; 40.00; [28.00,155.00,195.00,255.00,455.00,504.00,615.00,655.00]
3; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 3; 13.00; [15.00,28.00,204.00]
6; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 8; 20.00; [28.00,195.00,215.00,455.00,504.00,595.00,655.00,735.00]
7; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 3; 13.00; [15.00,28.00,824.00]
10; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 8; 60.00; [28.00,95.00,184.00,455.00,515.00,575.00,655.00,735.00]
11; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 8; 49.00; [28.00,195.00,255.00,315.00,455.00,504.00,655.00,735.00]
16; /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 8; 67.00; [28.00,95.00,195.00,355.00,504.00,735.00,855.00,935.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 42, 46, 17, 9, 36, 4, 42, 46, 12, 13, 12, 22, 32, 48, 34, 40, 12, 46, 34, 7, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 15, 22, 32, 12, 13, 12, 17, 12, 48, 34, 40, 12, 46, 6, 45, 15, 33, 29, 46, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 28, 36, 4, 22, 32, 25, 35, 13, 7, 5, 15, 12, 5, 37, 10, 11, 33, 35, 9, 29, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 10, 22, 32, 29, 4, 12, 15, 12, 48, 34, 40, 25, 47, 34, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 7, 30, 22, 32, 12, 13, 7, 39, 26, 27, 26, 24, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz247998107605088912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_001129_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,42,46,17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,15,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,28,36,4,22,32,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,10,22,32,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,7,30,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:11:30,087 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 00:11:30,088 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 00:11:42,650 INFO     Done. Execution time: 12.562084913253784 seconds
2023-01-31 00:11:42,650 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_001129_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_001129_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,42,46,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,15,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,28,36,4,22,32,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,10,22,32,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,7,30,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,42,46,17]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,15,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [8,28,36,4,22,32,25]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,10,22,32,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,7,30,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [40]  |
    10  |     return;  |         |  0  |  [40]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [24,9,36,4,42,46,17]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [24,9,36,4,42,46,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [24,9,36,4,42,46,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [24,9,36,4,42,46,17]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [24,9,36,4,42,46,17]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [24,9,36,4,42,46,17]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     24  |  0  |  [24,9,36,4,42,46,17]  |
    25  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  [24,9,36,4,42,46,17]  |
    28  |                         R = R + 1;  |      1  |   25  |     24  |  0  |  [24,9,36,4,42,46,17]  |
    32  |                         i = i + 1;  |         |   25  |     24  |  1  |  [24,9,36,4,42,46,17]  |
    33  |              resetPlaceHolder_1();  |         |   25  |     24  |  1  |  [24,9,36,4,42,46,17]  |
    39  |        chunk = arrayRead(text, i);  |         |   25  |      9  |  1  |  [24,9,36,4,42,46,17]  |
    42  |                     R = R + chunk;  |      9  |   34  |      9  |  1  |  [24,9,36,4,42,46,17]  |
    45  |                         R = R + 1;  |      1  |   35  |      9  |  1  |  [24,9,36,4,42,46,17]  |
    49  |                         i = i + 1;  |         |   35  |      9  |  2  |  [24,9,36,4,42,46,17]  |
    50  |              resetPlaceHolder_1();  |         |   35  |      9  |  2  |  [24,9,36,4,42,46,17]  |
    56  |        chunk = arrayRead(text, i);  |         |   35  |     36  |  2  |  [24,9,36,4,42,46,17]  |
    59  |                     R = R + chunk;  |     36  |   71  |     36  |  2  |  [24,9,36,4,42,46,17]  |
    62  |                         R = R + 1;  |      1  |   72  |     36  |  2  |  [24,9,36,4,42,46,17]  |
    66  |                         i = i + 1;  |         |   72  |     36  |  3  |  [24,9,36,4,42,46,17]  |
    67  |              resetPlaceHolder_1();  |         |   72  |     36  |  3  |  [24,9,36,4,42,46,17]  |
    73  |        chunk = arrayRead(text, i);  |         |   72  |      4  |  3  |  [24,9,36,4,42,46,17]  |
    76  |                     R = R + chunk;  |      4  |   76  |      4  |  3  |  [24,9,36,4,42,46,17]  |
    79  |                         R = R + 1;  |      1  |   77  |      4  |  3  |  [24,9,36,4,42,46,17]  |
    83  |                         i = i + 1;  |         |   77  |      4  |  4  |  [24,9,36,4,42,46,17]  |
    84  |              resetPlaceHolder_1();  |         |   77  |      4  |  4  |  [24,9,36,4,42,46,17]  |
    90  |        chunk = arrayRead(text, i);  |         |   77  |     42  |  4  |  [24,9,36,4,42,46,17]  |
    93  |                     R = R + chunk;  |     42  |  119  |     42  |  4  |  [24,9,36,4,42,46,17]  |
    96  |                         R = R + 1;  |      1  |  120  |     42  |  4  |  [24,9,36,4,42,46,17]  |
   100  |                         i = i + 1;  |         |  120  |     42  |  5  |  [24,9,36,4,42,46,17]  |
   101  |              resetPlaceHolder_1();  |         |  120  |     42  |  5  |  [24,9,36,4,42,46,17]  |
   107  |        chunk = arrayRead(text, i);  |         |  120  |     46  |  5  |  [24,9,36,4,42,46,17]  |
   110  |                     R = R + chunk;  |     46  |  166  |     46  |  5  |  [24,9,36,4,42,46,17]  |
   113  |                         R = R + 1;  |      1  |  167  |     46  |  5  |  [24,9,36,4,42,46,17]  |
   117  |                         i = i + 1;  |         |  167  |     46  |  6  |  [24,9,36,4,42,46,17]  |
   118  |              resetPlaceHolder_1();  |         |  167  |     46  |  6  |  [24,9,36,4,42,46,17]  |
   124  |        chunk = arrayRead(text, i);  |         |  167  |     17  |  6  |  [24,9,36,4,42,46,17]  |
   127  |                     R = R + chunk;  |     17  |  184  |     17  |  6  |  [24,9,36,4,42,46,17]  |
   130  |                         R = R + 1;  |      1  |  185  |     17  |  6  |  [24,9,36,4,42,46,17]  |
   134  |                         i = i + 1;  |         |  185  |     17  |  7  |  [24,9,36,4,42,46,17]  |
   135  |              resetPlaceHolder_1();  |         |  185  |     17  |  7  |  [24,9,36,4,42,46,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |      9  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     36  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |      4  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     42  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     46  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     17  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,110,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,76,110,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,76,93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25,42,59,76,93,110,127}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                            |                         0  |
    28  |             R = R + 1;  |      1  |                         0  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |
    42  |         R = R + chunk;  |      9  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |
    59  |         R = R + chunk;  |     36  |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |      4  |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     42  |                            |                         0  |
    96  |             R = R + 1;  |      1  |                         4  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |
   110  |         R = R + chunk;  |     46  |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
   127  |         R = R + chunk;  |     17  |                            |                         0  |
   130  |             R = R + 1;  |      1  |                         6  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 00:11:42,650 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:11:55,485 INFO     Done. Execution time: 12.834408044815063 seconds
2023-01-31 00:11:55,485 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `11.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0011-transparentAmortize-60s-mostPrecise/stac-raw-0131-0011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.827s
user	0m35.073s
sys	0m4.468s

2023-01-31 00:11:55,485 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 00:11:55,485 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:13:01,484 INFO     Done. Execution time: 65.99840807914734 seconds
2023-01-31 00:13:01,484 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz4530551969888862281/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4530551969888862281/bin -o /tmp/qfuzz4530551969888862281/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4530551969888862281/bin
Found file /tmp/qfuzz4530551969888862281/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz4530551969888862281/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4530551969888862281/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4530551969888862281/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4530551969888862281/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4530551969888862281/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 118956 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 49.00; [95.00,195.00,255.00,455.00,504.00,655.00,735.00]
2; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 89.00; [15.00,104.00]
3; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 120.00; [15.00,135.00,624.00]
7; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 4; 111.00; [255.00,475.00,744.00,855.00]
11; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 7; 60.00; [95.00,195.00,255.00,655.00,735.00,844.00,1015.00]
21; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 5; 100.00; [15.00,115.00,255.00,444.00,955.00]
27; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 6; 80.00; [195.00,295.00,415.00,655.00,735.00,1024.00]
34; /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 7; 89.00; [195.00,295.00,415.00,504.00,655.00,895.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 50, 20, 14, 32, 44, 13, 12, 47, 12, 48, 34, 40, 12, 46, 6, 45, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 32, 33, 29, 12, 34, 18, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 9, 36, 14, 14, 32, 20, 11, 35, 40, 14, 35, 38, 42, 20, 4, 39, 23, 27, 19, 44, 19, 12, 48, 11, 48, 8, 13, 6, 45, 20, 47, 29, 12, 18, 17, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 5, 47, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 9, 36, 4, 50, 32, 12, 13, 12, 24, 9, 36, 4, 50, 32, 12, 33, 31, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 12, 42, 42, 42, 42, 23, 10, 42, 42, 42, 42, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4530551969888862281/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_001301_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,50,20,14,32,44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,9,36,14,14,32,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,5,47,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,9,36,4,50,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,12,42,42,42,42,23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:13:01,484 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 00:13:01,484 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 00:13:12,862 INFO     Done. Execution time: 11.377108812332153 seconds
2023-01-31 00:13:12,862 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_001301_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_001301_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,50,20,14,32,44])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,5,47,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,9,36,4,50,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,9,36,14,14,32,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,12,42,42,42,42,23])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [30]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,50,20,14,32,44]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [50,9,36,14,14,32,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [21,5,47,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [41,9,36,4,50,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [36,12,42,42,42,42,23]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [30]  |
    10  |     return;  |         |  0  |  [30]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [24,9,50,20,14,32,44]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [24,9,50,20,14,32,44]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [24,9,50,20,14,32,44]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [24,9,50,20,14,32,44]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [24,9,50,20,14,32,44]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [24,9,50,20,14,32,44]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     24  |  0  |  [24,9,50,20,14,32,44]  |
    25  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  [24,9,50,20,14,32,44]  |
    29  |                         i = i + 1;  |         |   24  |     24  |  1  |  [24,9,50,20,14,32,44]  |
    30  |              resetPlaceHolder_1();  |         |   24  |     24  |  1  |  [24,9,50,20,14,32,44]  |
    36  |        chunk = arrayRead(text, i);  |         |   24  |      9  |  1  |  [24,9,50,20,14,32,44]  |
    39  |                     R = R + chunk;  |      9  |   33  |      9  |  1  |  [24,9,50,20,14,32,44]  |
    43  |                         i = i + 1;  |         |   33  |      9  |  2  |  [24,9,50,20,14,32,44]  |
    44  |              resetPlaceHolder_1();  |         |   33  |      9  |  2  |  [24,9,50,20,14,32,44]  |
    50  |        chunk = arrayRead(text, i);  |         |   33  |     50  |  2  |  [24,9,50,20,14,32,44]  |
    53  |                     R = R + chunk;  |     50  |   83  |     50  |  2  |  [24,9,50,20,14,32,44]  |
    57  |                         i = i + 1;  |         |   83  |     50  |  3  |  [24,9,50,20,14,32,44]  |
    58  |              resetPlaceHolder_1();  |         |   83  |     50  |  3  |  [24,9,50,20,14,32,44]  |
    64  |        chunk = arrayRead(text, i);  |         |   83  |     20  |  3  |  [24,9,50,20,14,32,44]  |
    67  |                     R = R + chunk;  |     20  |  103  |     20  |  3  |  [24,9,50,20,14,32,44]  |
    71  |                         i = i + 1;  |         |  103  |     20  |  4  |  [24,9,50,20,14,32,44]  |
    72  |              resetPlaceHolder_1();  |         |  103  |     20  |  4  |  [24,9,50,20,14,32,44]  |
    78  |        chunk = arrayRead(text, i);  |         |  103  |     14  |  4  |  [24,9,50,20,14,32,44]  |
    81  |                     R = R + chunk;  |     14  |  117  |     14  |  4  |  [24,9,50,20,14,32,44]  |
    85  |                         i = i + 1;  |         |  117  |     14  |  5  |  [24,9,50,20,14,32,44]  |
    86  |              resetPlaceHolder_1();  |         |  117  |     14  |  5  |  [24,9,50,20,14,32,44]  |
    92  |        chunk = arrayRead(text, i);  |         |  117  |     32  |  5  |  [24,9,50,20,14,32,44]  |
    95  |                     R = R + chunk;  |     32  |  149  |     32  |  5  |  [24,9,50,20,14,32,44]  |
    99  |                         i = i + 1;  |         |  149  |     32  |  6  |  [24,9,50,20,14,32,44]  |
   100  |              resetPlaceHolder_1();  |         |  149  |     32  |  6  |  [24,9,50,20,14,32,44]  |
   106  |        chunk = arrayRead(text, i);  |         |  149  |     44  |  6  |  [24,9,50,20,14,32,44]  |
   109  |                     R = R + chunk;  |     44  |  193  |     44  |  6  |  [24,9,50,20,14,32,44]  |
   113  |                         i = i + 1;  |         |  193  |     44  |  7  |  [24,9,50,20,14,32,44]  |
   114  |              resetPlaceHolder_1();  |         |  193  |     44  |  7  |  [24,9,50,20,14,32,44]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {53,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,39,67,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {39,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,81,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,39,67,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     24  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |      9  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     50  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     20  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     14  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     32  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     44  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 00:13:12,862 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:13:20,108 INFO     Done. Execution time: 7.246018886566162 seconds
2023-01-31 00:13:20,109 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0013-transparentAmortize-60s-mostPrecise/stac-raw-0131-0013-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.239s
user	0m15.152s
sys	0m2.155s

2023-01-31 00:13:20,109 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 00:13:20,109 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:14:26,095 INFO     Done. Execution time: 65.98571681976318 seconds
2023-01-31 00:14:26,095 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz116257122343063420/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz116257122343063420/bin -o /tmp/qfuzz116257122343063420/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz116257122343063420/bin
Found file /tmp/qfuzz116257122343063420/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz116257122343063420/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz116257122343063420/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz116257122343063420/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz116257122343063420/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz116257122343063420/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz116257122343063420/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz116257122343063420/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 112534 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,491.00]
2; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,91.00]
3; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 5.00; [29.00,34.00,491.00]
12; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,911.00]
39; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:128; 3; 5.00; [29.00,34.00,851.00]
49; /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:32; 3; 5.00; [29.00,34.00,831.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:32
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:128
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 40, 37, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 44, 4, 45, 28, 45, 45, 45, 45, 45, 45, 48, 34, 40, 12, 46, 6, 45, 50, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 16, 7, 7, 29, 4, 39, 46, 26, 17, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz116257122343063420/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_001425_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 42, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 45, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:14:26,095 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 00:14:26,096 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 00:14:32,653 INFO     Done. Execution time: 6.557448148727417 seconds
2023-01-31 00:14:32,653 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_001425_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_001425_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(42, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(45, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 41
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 42
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 45
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 24
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 4
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 24
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   41  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   41  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   41  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   41  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   41  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   41  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   41  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   41  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       42  |  1  |   41  |      2  |
    41  |                       R = R + sep;  |     41  |  42  |       42  |  1  |   41  |      2  |
    45  |             builder = builder + 1;  |         |  42  |       43  |  1  |   41  |      2  |
    48  |                         R = R + 1;  |      1  |  43  |       43  |  1  |   41  |      2  |
    52  |                         i = i + 1;  |         |  43  |       43  |  2  |   41  |      2  |
    53  |              resetPlaceHolder_1();  |         |  43  |       43  |  2  |   41  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     41  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 00:14:32,654 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:14:47,327 INFO     Done. Execution time: 14.67278265953064 seconds
2023-01-31 00:14:47,327 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0014-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.665s
user	0m37.256s
sys	0m5.669s

2023-01-31 00:14:47,327 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 00:14:47,327 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:15:53,064 INFO     Done. Execution time: 65.73705005645752 seconds
2023-01-31 00:15:53,064 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz6813374077852929684/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6813374077852929684/bin -o /tmp/qfuzz6813374077852929684/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6813374077852929684/bin
Found file /tmp/qfuzz6813374077852929684/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz6813374077852929684/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6813374077852929684/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6813374077852929684/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6813374077852929684/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6813374077852929684/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 130521 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6813374077852929684/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_001552_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:15:53,065 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 00:15:53,065 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 00:15:57,997 INFO     Done. Execution time: 4.931638240814209 seconds
2023-01-31 00:15:57,997 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_001552_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_001552_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 00:15:57,997 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:16:06,023 INFO     Done. Execution time: 8.025957107543945 seconds
2023-01-31 00:16:06,023 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0015-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.019s
user	0m17.014s
sys	0m2.494s

2023-01-31 00:16:06,024 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 00:16:06,024 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:17:12,024 INFO     Done. Execution time: 66.00006437301636 seconds
2023-01-31 00:17:12,024 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz5563172043250002833/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5563172043250002833/bin -o /tmp/qfuzz5563172043250002833/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5563172043250002833/bin
Found file /tmp/qfuzz5563172043250002833/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz5563172043250002833/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5563172043250002833/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5563172043250002833/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5563172043250002833/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5563172043250002833/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 131466 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
7; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
9; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
13; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
15; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
18; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
19; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
22; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
25; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
26; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
29; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
30; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
33; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
38; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
43; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
46; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
48; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
49; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
54; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
56; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:2
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 24, 9, 12, 4, 22, 36, 12, 46, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 40, 21, 23, 23, 23, 23, 23, 23, 23, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 24, 40, 37, 31, 45, 37, 37, 37, 37, 37, 11, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 11, 12, 13, 12, 15, 31, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 41, 17, 40, 22, 38, 22, 21, 25, 22, 26, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 20, 21, 15, 32, 20, 15, 36, 13, 12, 15, 12, 48, 34, 40, 4, 41, 6, 12, 34, 9, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 8, 36, 4, 16, 36, 38, 46, 12, 27, 30, 14, 31, 14, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 17, 48, 6, 4, 50, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 46, 30, 40, 13, 13, 9, 27, 5, 4, 21, 45, 33, 36, 9, 9, 35, 12, 34, 4, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 25, 44, 22, 25, 42, 12, 24, 24, 7, 15, 36, 14, 14, 14, 14, 12, 10, 34, 18, 49, 33, 26, 46, 14, 36, 14, 13, 14, 14, 12, 34, 34, 34, 34, 34, 14, 14, 6, 14, 4, 32, 34, 34, 34, 34, 34, 34, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 34, 34, 34, 31, 20, 14, 14, 14, 40, 4, 34, 36, 5, 5, 5, 5, 38, 21, 5, 34, 5, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 7, 20, 20, 20, 20, 20, 20, 20, 11, 20, 20, 31, 4, 7, 29, 37, 12, 11, 24, 50, 46, 29, 29, 16, 11, 10, 20, 13, 45, 8, 20, 50, 22, 20, 20, 20, 15, 24, 47, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 38, 38, 43, 47, 18, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 14, 22, 32, 15, 43, 11, 15, 12, 48, 34, 24, 12, 46, 6, 45, 9, 36, 9, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 25, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 30, 13, 4, 12, 13, 10, 15, 12, 48, 34, 40, 12, 44, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 8, 15, 15, 15, 15, 15, 15, 15, 15, 15, 42, 15, 26, 12, 45, 12, 15, 12, 48, 15, 46, 46, 13, 6, 4, 41, 46, 20, 8, 5, 7, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 32, 5, 39, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 44, 22, 4, 12, 13, 10, 15, 12, 48, 49, 40, 22, 46, 22, 45, 9, 33, 29, 31, 34, 31, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 10, 32, 44, 12, 48, 36, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 28, 6, 12, 48, 34, 4, 17, 46, 17, 26, 9, 13, 29, 12, 17, 26, 21, 33, 29, 12, 47, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 45, 36, 4, 22, 32, 12, 13, 12, 28, 12, 48, 35, 50, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 26, 34, 5, 38, 4, 44, 37, 12, 22, 46, 21, 19, 46, 48, 8, 47, 41, 30, 27, 17, 17, 17, 39, 17, 31, 44, 17, 17, 17, 17, 17, 31, 4, 6, 12, 37, 25, 9, 27, 31, 6, 37, 38, 37, 25, 21, 19, 45, 30, 38, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 9, 36, 4, 22, 32, 23, 48, 11, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 47, 27, 4, 22, 10, 12, 43, 12, 15, 12, 48, 34, 10, 29, 43, 42, 18, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 17, 32, 12, 20, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 19, 32, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 42, 26, 27, 26, 17, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 45, 29, 30, 14, 35, 38, 27, 20, 29, 42, 26, 42, 26, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 30, 22, 32, 12, 13, 12, 15, 30, 11, 34, 40, 12, 13, 26, 45, 9, 33, 29, 16, 34, 28, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 5, 9, 4, 4, 36, 39, 48, 4, 5, 4, 4, 29, 4, 46, 8, 4, 15, 4, 34, 20, 10, 37, 10, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5563172043250002833/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_001711_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,24,9,12,4,22,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,40,21,23,23,23,23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,24,40,37,31,45,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,11,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,41,17,40,22,38,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,20,21,15,32,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,8,36,4,16,36,38]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,17,48,6,4,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,46,30,40,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,25,44,22,25,42,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [44,7,20,20,20,20,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,38,38,43,47,18,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,14,22,32,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,25,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,30,13,4,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,8,15,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,32,5,39,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,44,22,4,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,10,32,44,12,48,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,28,6,12,48,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,45,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,26,34,5,38,4,44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,9,36,4,22,32,23]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,47,27,4,22,10,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,17,32,12,20,4,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,19,32,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,42,26,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,45,29,30,14,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,30,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,5,9,4,4,36,39]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:17:12,024 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 00:17:12,025 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 00:17:20,520 INFO     Done. Execution time: 8.4954514503479 seconds
2023-01-31 00:17:20,520 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_001711_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_001711_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,24,9,12,4,22,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 39 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,40,21,23,23,23,23])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,24,40,37,31,45,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,11,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,41,17,40,22,38,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,20,21,15,32,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,8,36,4,16,36,38])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 39 (20.51%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,17,48,6,4,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,46,30,40,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,25,44,22,25,42,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([44,7,20,20,20,20,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,38,38,43,47,18,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,14,22,32,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,25,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 39 (41.03%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,30,13,4,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,8,15,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,32,5,39,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,44,22,4,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,10,32,44,12,48,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,28,6,12,48,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,45,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,26,34,5,38,4,44])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,9,36,4,22,32,23])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,47,27,4,22,10,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,17,32,12,20,4,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,42,26,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,19,32,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,45,29,30,14,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,30,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,5,9,4,4,36,39])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 39)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 39 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,24,9,12,4,22,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [17,40,21,23,23,23,23]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8,24,40,37,31,45,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,22,11,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [39,41,17,40,22,38,22]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,20,21,15,32,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,8,36,4,16,36,38]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,17,48,6,4,50]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,46,30,40,13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [41,25,44,22,25,42,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [44,7,20,20,20,20,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [47,38,38,43,47,18,27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,14,22,32,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [9,25,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,30,13,4,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,8,15,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,32,5,39,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,44,22,4,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,10,32,44,12,48,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,28,6,12,48,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,45,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [36,26,34,5,38,4,44]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [13,9,36,4,22,32,23]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,47,27,4,22,10,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [36,17,32,12,20,4,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,19,32,19]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,42,26,27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,45,29,30,14,35]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,30,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [27,5,9,4,4,36,39]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |      []  |
    10  |     return;  |         |  0  |      []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 32 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 1594):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [24,24,9,12,4,22,36]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [24,24,9,12,4,22,36]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [24,24,9,12,4,22,36]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [24,24,9,12,4,22,36]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [24,24,9,12,4,22,36]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [24,24,9,12,4,22,36]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     24  |  0  |      |  [24,24,9,12,4,22,36]  |
    24  |                         int j = 0;  |         |    0  |     24  |  0  |   0  |  [24,24,9,12,4,22,36]  |
    30  |                         R = R + 2;  |      2  |    2  |     24  |  0  |   0  |  [24,24,9,12,4,22,36]  |
    34  |                         j = j + 1;  |         |    2  |     24  |  0  |   1  |  [24,24,9,12,4,22,36]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     24  |  0  |   1  |  [24,24,9,12,4,22,36]  |
    41  |                         R = R + 2;  |      2  |    4  |     24  |  0  |   1  |  [24,24,9,12,4,22,36]  |
    45  |                         j = j + 1;  |         |    4  |     24  |  0  |   2  |  [24,24,9,12,4,22,36]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     24  |  0  |   2  |  [24,24,9,12,4,22,36]  |
    52  |                         R = R + 2;  |      2  |    6  |     24  |  0  |   2  |  [24,24,9,12,4,22,36]  |
    56  |                         j = j + 1;  |         |    6  |     24  |  0  |   3  |  [24,24,9,12,4,22,36]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     24  |  0  |   3  |  [24,24,9,12,4,22,36]  |
    63  |                         R = R + 2;  |      2  |    8  |     24  |  0  |   3  |  [24,24,9,12,4,22,36]  |
    67  |                         j = j + 1;  |         |    8  |     24  |  0  |   4  |  [24,24,9,12,4,22,36]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     24  |  0  |   4  |  [24,24,9,12,4,22,36]  |
    74  |                         R = R + 2;  |      2  |   10  |     24  |  0  |   4  |  [24,24,9,12,4,22,36]  |
    78  |                         j = j + 1;  |         |   10  |     24  |  0  |   5  |  [24,24,9,12,4,22,36]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     24  |  0  |   5  |  [24,24,9,12,4,22,36]  |
    85  |                         R = R + 2;  |      2  |   12  |     24  |  0  |   5  |  [24,24,9,12,4,22,36]  |
    89  |                         j = j + 1;  |         |   12  |     24  |  0  |   6  |  [24,24,9,12,4,22,36]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     24  |  0  |   6  |  [24,24,9,12,4,22,36]  |
    96  |                         R = R + 2;  |      2  |   14  |     24  |  0  |   6  |  [24,24,9,12,4,22,36]  |
   100  |                         j = j + 1;  |         |   14  |     24  |  0  |   7  |  [24,24,9,12,4,22,36]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     24  |  0  |   7  |  [24,24,9,12,4,22,36]  |
   107  |                         R = R + 2;  |      2  |   16  |     24  |  0  |   7  |  [24,24,9,12,4,22,36]  |
   111  |                         j = j + 1;  |         |   16  |     24  |  0  |   8  |  [24,24,9,12,4,22,36]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     24  |  0  |   8  |  [24,24,9,12,4,22,36]  |
   118  |                         R = R + 2;  |      2  |   18  |     24  |  0  |   8  |  [24,24,9,12,4,22,36]  |
   122  |                         j = j + 1;  |         |   18  |     24  |  0  |   9  |  [24,24,9,12,4,22,36]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     24  |  0  |   9  |  [24,24,9,12,4,22,36]  |
   129  |                         R = R + 2;  |      2  |   20  |     24  |  0  |   9  |  [24,24,9,12,4,22,36]  |
   133  |                         j = j + 1;  |         |   20  |     24  |  0  |  10  |  [24,24,9,12,4,22,36]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     24  |  0  |  10  |  [24,24,9,12,4,22,36]  |
   140  |                         R = R + 2;  |      2  |   22  |     24  |  0  |  10  |  [24,24,9,12,4,22,36]  |
   144  |                         j = j + 1;  |         |   22  |     24  |  0  |  11  |  [24,24,9,12,4,22,36]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     24  |  0  |  11  |  [24,24,9,12,4,22,36]  |
   151  |                         R = R + 2;  |      2  |   24  |     24  |  0  |  11  |  [24,24,9,12,4,22,36]  |
   155  |                         j = j + 1;  |         |   24  |     24  |  0  |  12  |  [24,24,9,12,4,22,36]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     24  |  0  |  12  |  [24,24,9,12,4,22,36]  |
   162  |                         R = R + 2;  |      2  |   26  |     24  |  0  |  12  |  [24,24,9,12,4,22,36]  |
   166  |                         j = j + 1;  |         |   26  |     24  |  0  |  13  |  [24,24,9,12,4,22,36]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     24  |  0  |  13  |  [24,24,9,12,4,22,36]  |
   173  |                         R = R + 2;  |      2  |   28  |     24  |  0  |  13  |  [24,24,9,12,4,22,36]  |
   177  |                         j = j + 1;  |         |   28  |     24  |  0  |  14  |  [24,24,9,12,4,22,36]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     24  |  0  |  14  |  [24,24,9,12,4,22,36]  |
   184  |                         R = R + 2;  |      2  |   30  |     24  |  0  |  14  |  [24,24,9,12,4,22,36]  |
   188  |                         j = j + 1;  |         |   30  |     24  |  0  |  15  |  [24,24,9,12,4,22,36]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     24  |  0  |  15  |  [24,24,9,12,4,22,36]  |
   195  |                         R = R + 2;  |      2  |   32  |     24  |  0  |  15  |  [24,24,9,12,4,22,36]  |
   199  |                         j = j + 1;  |         |   32  |     24  |  0  |  16  |  [24,24,9,12,4,22,36]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     24  |  0  |  16  |  [24,24,9,12,4,22,36]  |
   206  |                         R = R + 2;  |      2  |   34  |     24  |  0  |  16  |  [24,24,9,12,4,22,36]  |
   210  |                         j = j + 1;  |         |   34  |     24  |  0  |  17  |  [24,24,9,12,4,22,36]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     24  |  0  |  17  |  [24,24,9,12,4,22,36]  |
   217  |                         R = R + 2;  |      2  |   36  |     24  |  0  |  17  |  [24,24,9,12,4,22,36]  |
   221  |                         j = j + 1;  |         |   36  |     24  |  0  |  18  |  [24,24,9,12,4,22,36]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     24  |  0  |  18  |  [24,24,9,12,4,22,36]  |
   228  |                         R = R + 2;  |      2  |   38  |     24  |  0  |  18  |  [24,24,9,12,4,22,36]  |
   232  |                         j = j + 1;  |         |   38  |     24  |  0  |  19  |  [24,24,9,12,4,22,36]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     24  |  0  |  19  |  [24,24,9,12,4,22,36]  |
   239  |                         R = R + 2;  |      2  |   40  |     24  |  0  |  19  |  [24,24,9,12,4,22,36]  |
   243  |                         j = j + 1;  |         |   40  |     24  |  0  |  20  |  [24,24,9,12,4,22,36]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     24  |  0  |  20  |  [24,24,9,12,4,22,36]  |
   250  |                         R = R + 2;  |      2  |   42  |     24  |  0  |  20  |  [24,24,9,12,4,22,36]  |
   254  |                         j = j + 1;  |         |   42  |     24  |  0  |  21  |  [24,24,9,12,4,22,36]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     24  |  0  |  21  |  [24,24,9,12,4,22,36]  |
   261  |                         R = R + 2;  |      2  |   44  |     24  |  0  |  21  |  [24,24,9,12,4,22,36]  |
   265  |                         j = j + 1;  |         |   44  |     24  |  0  |  22  |  [24,24,9,12,4,22,36]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     24  |  0  |  22  |  [24,24,9,12,4,22,36]  |
   272  |                         R = R + 2;  |      2  |   46  |     24  |  0  |  22  |  [24,24,9,12,4,22,36]  |
   276  |                         j = j + 1;  |         |   46  |     24  |  0  |  23  |  [24,24,9,12,4,22,36]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     24  |  0  |  23  |  [24,24,9,12,4,22,36]  |
   283  |                         R = R + 2;  |      2  |   48  |     24  |  0  |  23  |  [24,24,9,12,4,22,36]  |
   287  |                         j = j + 1;  |         |   48  |     24  |  0  |  24  |  [24,24,9,12,4,22,36]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     24  |  0  |  24  |  [24,24,9,12,4,22,36]  |
   294  |                         R = R + 1;  |      1  |   49  |     24  |  0  |  24  |  [24,24,9,12,4,22,36]  |
   298  |                         i = i + 1;  |         |   49  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   299  |              resetPlaceHolder_1();  |         |   49  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   305  |      entry = arrayRead(sorted, i);  |         |   49  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   307  |                         int j = 0;  |         |   49  |     24  |  1  |   0  |  [24,24,9,12,4,22,36]  |
   313  |                         R = R + 2;  |      2  |   51  |     24  |  1  |   0  |  [24,24,9,12,4,22,36]  |
   317  |                         j = j + 1;  |         |   51  |     24  |  1  |   1  |  [24,24,9,12,4,22,36]  |
   318  |              resetPlaceHolder_2();  |         |   51  |     24  |  1  |   1  |  [24,24,9,12,4,22,36]  |
   324  |                         R = R + 2;  |      2  |   53  |     24  |  1  |   1  |  [24,24,9,12,4,22,36]  |
   328  |                         j = j + 1;  |         |   53  |     24  |  1  |   2  |  [24,24,9,12,4,22,36]  |
   329  |              resetPlaceHolder_2();  |         |   53  |     24  |  1  |   2  |  [24,24,9,12,4,22,36]  |
   335  |                         R = R + 2;  |      2  |   55  |     24  |  1  |   2  |  [24,24,9,12,4,22,36]  |
   339  |                         j = j + 1;  |         |   55  |     24  |  1  |   3  |  [24,24,9,12,4,22,36]  |
   340  |              resetPlaceHolder_2();  |         |   55  |     24  |  1  |   3  |  [24,24,9,12,4,22,36]  |
   346  |                         R = R + 2;  |      2  |   57  |     24  |  1  |   3  |  [24,24,9,12,4,22,36]  |
   350  |                         j = j + 1;  |         |   57  |     24  |  1  |   4  |  [24,24,9,12,4,22,36]  |
   351  |              resetPlaceHolder_2();  |         |   57  |     24  |  1  |   4  |  [24,24,9,12,4,22,36]  |
   357  |                         R = R + 2;  |      2  |   59  |     24  |  1  |   4  |  [24,24,9,12,4,22,36]  |
   361  |                         j = j + 1;  |         |   59  |     24  |  1  |   5  |  [24,24,9,12,4,22,36]  |
   362  |              resetPlaceHolder_2();  |         |   59  |     24  |  1  |   5  |  [24,24,9,12,4,22,36]  |
   368  |                         R = R + 2;  |      2  |   61  |     24  |  1  |   5  |  [24,24,9,12,4,22,36]  |
   372  |                         j = j + 1;  |         |   61  |     24  |  1  |   6  |  [24,24,9,12,4,22,36]  |
   373  |              resetPlaceHolder_2();  |         |   61  |     24  |  1  |   6  |  [24,24,9,12,4,22,36]  |
   379  |                         R = R + 2;  |      2  |   63  |     24  |  1  |   6  |  [24,24,9,12,4,22,36]  |
   383  |                         j = j + 1;  |         |   63  |     24  |  1  |   7  |  [24,24,9,12,4,22,36]  |
   384  |              resetPlaceHolder_2();  |         |   63  |     24  |  1  |   7  |  [24,24,9,12,4,22,36]  |
   390  |                         R = R + 2;  |      2  |   65  |     24  |  1  |   7  |  [24,24,9,12,4,22,36]  |
   394  |                         j = j + 1;  |         |   65  |     24  |  1  |   8  |  [24,24,9,12,4,22,36]  |
   395  |              resetPlaceHolder_2();  |         |   65  |     24  |  1  |   8  |  [24,24,9,12,4,22,36]  |
   401  |                         R = R + 2;  |      2  |   67  |     24  |  1  |   8  |  [24,24,9,12,4,22,36]  |
   405  |                         j = j + 1;  |         |   67  |     24  |  1  |   9  |  [24,24,9,12,4,22,36]  |
   406  |              resetPlaceHolder_2();  |         |   67  |     24  |  1  |   9  |  [24,24,9,12,4,22,36]  |
   412  |                         R = R + 2;  |      2  |   69  |     24  |  1  |   9  |  [24,24,9,12,4,22,36]  |
   416  |                         j = j + 1;  |         |   69  |     24  |  1  |  10  |  [24,24,9,12,4,22,36]  |
   417  |              resetPlaceHolder_2();  |         |   69  |     24  |  1  |  10  |  [24,24,9,12,4,22,36]  |
   423  |                         R = R + 2;  |      2  |   71  |     24  |  1  |  10  |  [24,24,9,12,4,22,36]  |
   427  |                         j = j + 1;  |         |   71  |     24  |  1  |  11  |  [24,24,9,12,4,22,36]  |
   428  |              resetPlaceHolder_2();  |         |   71  |     24  |  1  |  11  |  [24,24,9,12,4,22,36]  |
   434  |                         R = R + 2;  |      2  |   73  |     24  |  1  |  11  |  [24,24,9,12,4,22,36]  |
   438  |                         j = j + 1;  |         |   73  |     24  |  1  |  12  |  [24,24,9,12,4,22,36]  |
   439  |              resetPlaceHolder_2();  |         |   73  |     24  |  1  |  12  |  [24,24,9,12,4,22,36]  |
   445  |                         R = R + 2;  |      2  |   75  |     24  |  1  |  12  |  [24,24,9,12,4,22,36]  |
   449  |                         j = j + 1;  |         |   75  |     24  |  1  |  13  |  [24,24,9,12,4,22,36]  |
   450  |              resetPlaceHolder_2();  |         |   75  |     24  |  1  |  13  |  [24,24,9,12,4,22,36]  |
   456  |                         R = R + 2;  |      2  |   77  |     24  |  1  |  13  |  [24,24,9,12,4,22,36]  |
   460  |                         j = j + 1;  |         |   77  |     24  |  1  |  14  |  [24,24,9,12,4,22,36]  |
   461  |              resetPlaceHolder_2();  |         |   77  |     24  |  1  |  14  |  [24,24,9,12,4,22,36]  |
   467  |                         R = R + 2;  |      2  |   79  |     24  |  1  |  14  |  [24,24,9,12,4,22,36]  |
   471  |                         j = j + 1;  |         |   79  |     24  |  1  |  15  |  [24,24,9,12,4,22,36]  |
   472  |              resetPlaceHolder_2();  |         |   79  |     24  |  1  |  15  |  [24,24,9,12,4,22,36]  |
   478  |                         R = R + 2;  |      2  |   81  |     24  |  1  |  15  |  [24,24,9,12,4,22,36]  |
   482  |                         j = j + 1;  |         |   81  |     24  |  1  |  16  |  [24,24,9,12,4,22,36]  |
   483  |              resetPlaceHolder_2();  |         |   81  |     24  |  1  |  16  |  [24,24,9,12,4,22,36]  |
   489  |                         R = R + 2;  |      2  |   83  |     24  |  1  |  16  |  [24,24,9,12,4,22,36]  |
   493  |                         j = j + 1;  |         |   83  |     24  |  1  |  17  |  [24,24,9,12,4,22,36]  |
   494  |              resetPlaceHolder_2();  |         |   83  |     24  |  1  |  17  |  [24,24,9,12,4,22,36]  |
   500  |                         R = R + 2;  |      2  |   85  |     24  |  1  |  17  |  [24,24,9,12,4,22,36]  |
   504  |                         j = j + 1;  |         |   85  |     24  |  1  |  18  |  [24,24,9,12,4,22,36]  |
   505  |              resetPlaceHolder_2();  |         |   85  |     24  |  1  |  18  |  [24,24,9,12,4,22,36]  |
   511  |                         R = R + 2;  |      2  |   87  |     24  |  1  |  18  |  [24,24,9,12,4,22,36]  |
   515  |                         j = j + 1;  |         |   87  |     24  |  1  |  19  |  [24,24,9,12,4,22,36]  |
   516  |              resetPlaceHolder_2();  |         |   87  |     24  |  1  |  19  |  [24,24,9,12,4,22,36]  |
   522  |                         R = R + 2;  |      2  |   89  |     24  |  1  |  19  |  [24,24,9,12,4,22,36]  |
   526  |                         j = j + 1;  |         |   89  |     24  |  1  |  20  |  [24,24,9,12,4,22,36]  |
   527  |              resetPlaceHolder_2();  |         |   89  |     24  |  1  |  20  |  [24,24,9,12,4,22,36]  |
   533  |                         R = R + 2;  |      2  |   91  |     24  |  1  |  20  |  [24,24,9,12,4,22,36]  |
   537  |                         j = j + 1;  |         |   91  |     24  |  1  |  21  |  [24,24,9,12,4,22,36]  |
   538  |              resetPlaceHolder_2();  |         |   91  |     24  |  1  |  21  |  [24,24,9,12,4,22,36]  |
   544  |                         R = R + 2;  |      2  |   93  |     24  |  1  |  21  |  [24,24,9,12,4,22,36]  |
   548  |                         j = j + 1;  |         |   93  |     24  |  1  |  22  |  [24,24,9,12,4,22,36]  |
   549  |              resetPlaceHolder_2();  |         |   93  |     24  |  1  |  22  |  [24,24,9,12,4,22,36]  |
   555  |                         R = R + 2;  |      2  |   95  |     24  |  1  |  22  |  [24,24,9,12,4,22,36]  |
   559  |                         j = j + 1;  |         |   95  |     24  |  1  |  23  |  [24,24,9,12,4,22,36]  |
   560  |              resetPlaceHolder_2();  |         |   95  |     24  |  1  |  23  |  [24,24,9,12,4,22,36]  |
   566  |                         R = R + 2;  |      2  |   97  |     24  |  1  |  23  |  [24,24,9,12,4,22,36]  |
   570  |                         j = j + 1;  |         |   97  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   571  |              resetPlaceHolder_2();  |         |   97  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   577  |                         R = R + 1;  |      1  |   98  |     24  |  1  |  24  |  [24,24,9,12,4,22,36]  |
   581  |                         i = i + 1;  |         |   98  |     24  |  2  |  24  |  [24,24,9,12,4,22,36]  |
   582  |              resetPlaceHolder_1();  |         |   98  |     24  |  2  |  24  |  [24,24,9,12,4,22,36]  |
   588  |      entry = arrayRead(sorted, i);  |         |   98  |      9  |  2  |  24  |  [24,24,9,12,4,22,36]  |
   590  |                         int j = 0;  |         |   98  |      9  |  2  |   0  |  [24,24,9,12,4,22,36]  |
   596  |                         R = R + 2;  |      2  |  100  |      9  |  2  |   0  |  [24,24,9,12,4,22,36]  |
   600  |                         j = j + 1;  |         |  100  |      9  |  2  |   1  |  [24,24,9,12,4,22,36]  |
   601  |              resetPlaceHolder_2();  |         |  100  |      9  |  2  |   1  |  [24,24,9,12,4,22,36]  |
   607  |                         R = R + 2;  |      2  |  102  |      9  |  2  |   1  |  [24,24,9,12,4,22,36]  |
   611  |                         j = j + 1;  |         |  102  |      9  |  2  |   2  |  [24,24,9,12,4,22,36]  |
   612  |              resetPlaceHolder_2();  |         |  102  |      9  |  2  |   2  |  [24,24,9,12,4,22,36]  |
   618  |                         R = R + 2;  |      2  |  104  |      9  |  2  |   2  |  [24,24,9,12,4,22,36]  |
   622  |                         j = j + 1;  |         |  104  |      9  |  2  |   3  |  [24,24,9,12,4,22,36]  |
   623  |              resetPlaceHolder_2();  |         |  104  |      9  |  2  |   3  |  [24,24,9,12,4,22,36]  |
   629  |                         R = R + 2;  |      2  |  106  |      9  |  2  |   3  |  [24,24,9,12,4,22,36]  |
   633  |                         j = j + 1;  |         |  106  |      9  |  2  |   4  |  [24,24,9,12,4,22,36]  |
   634  |              resetPlaceHolder_2();  |         |  106  |      9  |  2  |   4  |  [24,24,9,12,4,22,36]  |
   640  |                         R = R + 2;  |      2  |  108  |      9  |  2  |   4  |  [24,24,9,12,4,22,36]  |
   644  |                         j = j + 1;  |         |  108  |      9  |  2  |   5  |  [24,24,9,12,4,22,36]  |
   645  |              resetPlaceHolder_2();  |         |  108  |      9  |  2  |   5  |  [24,24,9,12,4,22,36]  |
   651  |                         R = R + 2;  |      2  |  110  |      9  |  2  |   5  |  [24,24,9,12,4,22,36]  |
   655  |                         j = j + 1;  |         |  110  |      9  |  2  |   6  |  [24,24,9,12,4,22,36]  |
   656  |              resetPlaceHolder_2();  |         |  110  |      9  |  2  |   6  |  [24,24,9,12,4,22,36]  |
   662  |                         R = R + 2;  |      2  |  112  |      9  |  2  |   6  |  [24,24,9,12,4,22,36]  |
   666  |                         j = j + 1;  |         |  112  |      9  |  2  |   7  |  [24,24,9,12,4,22,36]  |
   667  |              resetPlaceHolder_2();  |         |  112  |      9  |  2  |   7  |  [24,24,9,12,4,22,36]  |
   673  |                         R = R + 2;  |      2  |  114  |      9  |  2  |   7  |  [24,24,9,12,4,22,36]  |
   677  |                         j = j + 1;  |         |  114  |      9  |  2  |   8  |  [24,24,9,12,4,22,36]  |
   678  |              resetPlaceHolder_2();  |         |  114  |      9  |  2  |   8  |  [24,24,9,12,4,22,36]  |
   684  |                         R = R + 2;  |      2  |  116  |      9  |  2  |   8  |  [24,24,9,12,4,22,36]  |
   688  |                         j = j + 1;  |         |  116  |      9  |  2  |   9  |  [24,24,9,12,4,22,36]  |
   689  |              resetPlaceHolder_2();  |         |  116  |      9  |  2  |   9  |  [24,24,9,12,4,22,36]  |
   695  |                         R = R + 1;  |      1  |  117  |      9  |  2  |   9  |  [24,24,9,12,4,22,36]  |
   699  |                         i = i + 1;  |         |  117  |      9  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   700  |              resetPlaceHolder_1();  |         |  117  |      9  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   706  |      entry = arrayRead(sorted, i);  |         |  117  |     12  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   708  |                         int j = 0;  |         |  117  |     12  |  3  |   0  |  [24,24,9,12,4,22,36]  |
   714  |                         R = R + 2;  |      2  |  119  |     12  |  3  |   0  |  [24,24,9,12,4,22,36]  |
   718  |                         j = j + 1;  |         |  119  |     12  |  3  |   1  |  [24,24,9,12,4,22,36]  |
   719  |              resetPlaceHolder_2();  |         |  119  |     12  |  3  |   1  |  [24,24,9,12,4,22,36]  |
   725  |                         R = R + 2;  |      2  |  121  |     12  |  3  |   1  |  [24,24,9,12,4,22,36]  |
   729  |                         j = j + 1;  |         |  121  |     12  |  3  |   2  |  [24,24,9,12,4,22,36]  |
   730  |              resetPlaceHolder_2();  |         |  121  |     12  |  3  |   2  |  [24,24,9,12,4,22,36]  |
   736  |                         R = R + 2;  |      2  |  123  |     12  |  3  |   2  |  [24,24,9,12,4,22,36]  |
   740  |                         j = j + 1;  |         |  123  |     12  |  3  |   3  |  [24,24,9,12,4,22,36]  |
   741  |              resetPlaceHolder_2();  |         |  123  |     12  |  3  |   3  |  [24,24,9,12,4,22,36]  |
   747  |                         R = R + 2;  |      2  |  125  |     12  |  3  |   3  |  [24,24,9,12,4,22,36]  |
   751  |                         j = j + 1;  |         |  125  |     12  |  3  |   4  |  [24,24,9,12,4,22,36]  |
   752  |              resetPlaceHolder_2();  |         |  125  |     12  |  3  |   4  |  [24,24,9,12,4,22,36]  |
   758  |                         R = R + 2;  |      2  |  127  |     12  |  3  |   4  |  [24,24,9,12,4,22,36]  |
   762  |                         j = j + 1;  |         |  127  |     12  |  3  |   5  |  [24,24,9,12,4,22,36]  |
   763  |              resetPlaceHolder_2();  |         |  127  |     12  |  3  |   5  |  [24,24,9,12,4,22,36]  |
   769  |                         R = R + 2;  |      2  |  129  |     12  |  3  |   5  |  [24,24,9,12,4,22,36]  |
   773  |                         j = j + 1;  |         |  129  |     12  |  3  |   6  |  [24,24,9,12,4,22,36]  |
   774  |              resetPlaceHolder_2();  |         |  129  |     12  |  3  |   6  |  [24,24,9,12,4,22,36]  |
   780  |                         R = R + 2;  |      2  |  131  |     12  |  3  |   6  |  [24,24,9,12,4,22,36]  |
   784  |                         j = j + 1;  |         |  131  |     12  |  3  |   7  |  [24,24,9,12,4,22,36]  |
   785  |              resetPlaceHolder_2();  |         |  131  |     12  |  3  |   7  |  [24,24,9,12,4,22,36]  |
   791  |                         R = R + 2;  |      2  |  133  |     12  |  3  |   7  |  [24,24,9,12,4,22,36]  |
   795  |                         j = j + 1;  |         |  133  |     12  |  3  |   8  |  [24,24,9,12,4,22,36]  |
   796  |              resetPlaceHolder_2();  |         |  133  |     12  |  3  |   8  |  [24,24,9,12,4,22,36]  |
   802  |                         R = R + 2;  |      2  |  135  |     12  |  3  |   8  |  [24,24,9,12,4,22,36]  |
   806  |                         j = j + 1;  |         |  135  |     12  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   807  |              resetPlaceHolder_2();  |         |  135  |     12  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   813  |                         R = R + 2;  |      2  |  137  |     12  |  3  |   9  |  [24,24,9,12,4,22,36]  |
   817  |                         j = j + 1;  |         |  137  |     12  |  3  |  10  |  [24,24,9,12,4,22,36]  |
   818  |              resetPlaceHolder_2();  |         |  137  |     12  |  3  |  10  |  [24,24,9,12,4,22,36]  |
   824  |                         R = R + 2;  |      2  |  139  |     12  |  3  |  10  |  [24,24,9,12,4,22,36]  |
   828  |                         j = j + 1;  |         |  139  |     12  |  3  |  11  |  [24,24,9,12,4,22,36]  |
   829  |              resetPlaceHolder_2();  |         |  139  |     12  |  3  |  11  |  [24,24,9,12,4,22,36]  |
   835  |                         R = R + 2;  |      2  |  141  |     12  |  3  |  11  |  [24,24,9,12,4,22,36]  |
   839  |                         j = j + 1;  |         |  141  |     12  |  3  |  12  |  [24,24,9,12,4,22,36]  |
   840  |              resetPlaceHolder_2();  |         |  141  |     12  |  3  |  12  |  [24,24,9,12,4,22,36]  |
   846  |                         R = R + 1;  |      1  |  142  |     12  |  3  |  12  |  [24,24,9,12,4,22,36]  |
   850  |                         i = i + 1;  |         |  142  |     12  |  4  |  12  |  [24,24,9,12,4,22,36]  |
   851  |              resetPlaceHolder_1();  |         |  142  |     12  |  4  |  12  |  [24,24,9,12,4,22,36]  |
   857  |      entry = arrayRead(sorted, i);  |         |  142  |      4  |  4  |  12  |  [24,24,9,12,4,22,36]  |
   859  |                         int j = 0;  |         |  142  |      4  |  4  |   0  |  [24,24,9,12,4,22,36]  |
   865  |                         R = R + 2;  |      2  |  144  |      4  |  4  |   0  |  [24,24,9,12,4,22,36]  |
   869  |                         j = j + 1;  |         |  144  |      4  |  4  |   1  |  [24,24,9,12,4,22,36]  |
   870  |              resetPlaceHolder_2();  |         |  144  |      4  |  4  |   1  |  [24,24,9,12,4,22,36]  |
   876  |                         R = R + 2;  |      2  |  146  |      4  |  4  |   1  |  [24,24,9,12,4,22,36]  |
   880  |                         j = j + 1;  |         |  146  |      4  |  4  |   2  |  [24,24,9,12,4,22,36]  |
   881  |              resetPlaceHolder_2();  |         |  146  |      4  |  4  |   2  |  [24,24,9,12,4,22,36]  |
   887  |                         R = R + 2;  |      2  |  148  |      4  |  4  |   2  |  [24,24,9,12,4,22,36]  |
   891  |                         j = j + 1;  |         |  148  |      4  |  4  |   3  |  [24,24,9,12,4,22,36]  |
   892  |              resetPlaceHolder_2();  |         |  148  |      4  |  4  |   3  |  [24,24,9,12,4,22,36]  |
   898  |                         R = R + 2;  |      2  |  150  |      4  |  4  |   3  |  [24,24,9,12,4,22,36]  |
   902  |                         j = j + 1;  |         |  150  |      4  |  4  |   4  |  [24,24,9,12,4,22,36]  |
   903  |              resetPlaceHolder_2();  |         |  150  |      4  |  4  |   4  |  [24,24,9,12,4,22,36]  |
   909  |                         R = R + 1;  |      1  |  151  |      4  |  4  |   4  |  [24,24,9,12,4,22,36]  |
   913  |                         i = i + 1;  |         |  151  |      4  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   914  |              resetPlaceHolder_1();  |         |  151  |      4  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   920  |      entry = arrayRead(sorted, i);  |         |  151  |     22  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   922  |                         int j = 0;  |         |  151  |     22  |  5  |   0  |  [24,24,9,12,4,22,36]  |
   928  |                         R = R + 2;  |      2  |  153  |     22  |  5  |   0  |  [24,24,9,12,4,22,36]  |
   932  |                         j = j + 1;  |         |  153  |     22  |  5  |   1  |  [24,24,9,12,4,22,36]  |
   933  |              resetPlaceHolder_2();  |         |  153  |     22  |  5  |   1  |  [24,24,9,12,4,22,36]  |
   939  |                         R = R + 2;  |      2  |  155  |     22  |  5  |   1  |  [24,24,9,12,4,22,36]  |
   943  |                         j = j + 1;  |         |  155  |     22  |  5  |   2  |  [24,24,9,12,4,22,36]  |
   944  |              resetPlaceHolder_2();  |         |  155  |     22  |  5  |   2  |  [24,24,9,12,4,22,36]  |
   950  |                         R = R + 2;  |      2  |  157  |     22  |  5  |   2  |  [24,24,9,12,4,22,36]  |
   954  |                         j = j + 1;  |         |  157  |     22  |  5  |   3  |  [24,24,9,12,4,22,36]  |
   955  |              resetPlaceHolder_2();  |         |  157  |     22  |  5  |   3  |  [24,24,9,12,4,22,36]  |
   961  |                         R = R + 2;  |      2  |  159  |     22  |  5  |   3  |  [24,24,9,12,4,22,36]  |
   965  |                         j = j + 1;  |         |  159  |     22  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   966  |              resetPlaceHolder_2();  |         |  159  |     22  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   972  |                         R = R + 2;  |      2  |  161  |     22  |  5  |   4  |  [24,24,9,12,4,22,36]  |
   976  |                         j = j + 1;  |         |  161  |     22  |  5  |   5  |  [24,24,9,12,4,22,36]  |
   977  |              resetPlaceHolder_2();  |         |  161  |     22  |  5  |   5  |  [24,24,9,12,4,22,36]  |
   983  |                         R = R + 2;  |      2  |  163  |     22  |  5  |   5  |  [24,24,9,12,4,22,36]  |
   987  |                         j = j + 1;  |         |  163  |     22  |  5  |   6  |  [24,24,9,12,4,22,36]  |
   988  |              resetPlaceHolder_2();  |         |  163  |     22  |  5  |   6  |  [24,24,9,12,4,22,36]  |
   994  |                         R = R + 2;  |      2  |  165  |     22  |  5  |   6  |  [24,24,9,12,4,22,36]  |
   998  |                         j = j + 1;  |         |  165  |     22  |  5  |   7  |  [24,24,9,12,4,22,36]  |
   999  |              resetPlaceHolder_2();  |         |  165  |     22  |  5  |   7  |  [24,24,9,12,4,22,36]  |
  1005  |                         R = R + 2;  |      2  |  167  |     22  |  5  |   7  |  [24,24,9,12,4,22,36]  |
  1009  |                         j = j + 1;  |         |  167  |     22  |  5  |   8  |  [24,24,9,12,4,22,36]  |
  1010  |              resetPlaceHolder_2();  |         |  167  |     22  |  5  |   8  |  [24,24,9,12,4,22,36]  |
  1016  |                         R = R + 2;  |      2  |  169  |     22  |  5  |   8  |  [24,24,9,12,4,22,36]  |
  1020  |                         j = j + 1;  |         |  169  |     22  |  5  |   9  |  [24,24,9,12,4,22,36]  |
  1021  |              resetPlaceHolder_2();  |         |  169  |     22  |  5  |   9  |  [24,24,9,12,4,22,36]  |
  1027  |                         R = R + 2;  |      2  |  171  |     22  |  5  |   9  |  [24,24,9,12,4,22,36]  |
  1031  |                         j = j + 1;  |         |  171  |     22  |  5  |  10  |  [24,24,9,12,4,22,36]  |
  1032  |              resetPlaceHolder_2();  |         |  171  |     22  |  5  |  10  |  [24,24,9,12,4,22,36]  |
  1038  |                         R = R + 2;  |      2  |  173  |     22  |  5  |  10  |  [24,24,9,12,4,22,36]  |
  1042  |                         j = j + 1;  |         |  173  |     22  |  5  |  11  |  [24,24,9,12,4,22,36]  |
  1043  |              resetPlaceHolder_2();  |         |  173  |     22  |  5  |  11  |  [24,24,9,12,4,22,36]  |
  1049  |                         R = R + 2;  |      2  |  175  |     22  |  5  |  11  |  [24,24,9,12,4,22,36]  |
  1053  |                         j = j + 1;  |         |  175  |     22  |  5  |  12  |  [24,24,9,12,4,22,36]  |
  1054  |              resetPlaceHolder_2();  |         |  175  |     22  |  5  |  12  |  [24,24,9,12,4,22,36]  |
  1060  |                         R = R + 2;  |      2  |  177  |     22  |  5  |  12  |  [24,24,9,12,4,22,36]  |
  1064  |                         j = j + 1;  |         |  177  |     22  |  5  |  13  |  [24,24,9,12,4,22,36]  |
  1065  |              resetPlaceHolder_2();  |         |  177  |     22  |  5  |  13  |  [24,24,9,12,4,22,36]  |
  1071  |                         R = R + 2;  |      2  |  179  |     22  |  5  |  13  |  [24,24,9,12,4,22,36]  |
  1075  |                         j = j + 1;  |         |  179  |     22  |  5  |  14  |  [24,24,9,12,4,22,36]  |
  1076  |              resetPlaceHolder_2();  |         |  179  |     22  |  5  |  14  |  [24,24,9,12,4,22,36]  |
  1082  |                         R = R + 2;  |      2  |  181  |     22  |  5  |  14  |  [24,24,9,12,4,22,36]  |
  1086  |                         j = j + 1;  |         |  181  |     22  |  5  |  15  |  [24,24,9,12,4,22,36]  |
  1087  |              resetPlaceHolder_2();  |         |  181  |     22  |  5  |  15  |  [24,24,9,12,4,22,36]  |
  1093  |                         R = R + 2;  |      2  |  183  |     22  |  5  |  15  |  [24,24,9,12,4,22,36]  |
  1097  |                         j = j + 1;  |         |  183  |     22  |  5  |  16  |  [24,24,9,12,4,22,36]  |
  1098  |              resetPlaceHolder_2();  |         |  183  |     22  |  5  |  16  |  [24,24,9,12,4,22,36]  |
  1104  |                         R = R + 2;  |      2  |  185  |     22  |  5  |  16  |  [24,24,9,12,4,22,36]  |
  1108  |                         j = j + 1;  |         |  185  |     22  |  5  |  17  |  [24,24,9,12,4,22,36]  |
  1109  |              resetPlaceHolder_2();  |         |  185  |     22  |  5  |  17  |  [24,24,9,12,4,22,36]  |
  1115  |                         R = R + 2;  |      2  |  187  |     22  |  5  |  17  |  [24,24,9,12,4,22,36]  |
  1119  |                         j = j + 1;  |         |  187  |     22  |  5  |  18  |  [24,24,9,12,4,22,36]  |
  1120  |              resetPlaceHolder_2();  |         |  187  |     22  |  5  |  18  |  [24,24,9,12,4,22,36]  |
  1126  |                         R = R + 2;  |      2  |  189  |     22  |  5  |  18  |  [24,24,9,12,4,22,36]  |
  1130  |                         j = j + 1;  |         |  189  |     22  |  5  |  19  |  [24,24,9,12,4,22,36]  |
  1131  |              resetPlaceHolder_2();  |         |  189  |     22  |  5  |  19  |  [24,24,9,12,4,22,36]  |
  1137  |                         R = R + 2;  |      2  |  191  |     22  |  5  |  19  |  [24,24,9,12,4,22,36]  |
  1141  |                         j = j + 1;  |         |  191  |     22  |  5  |  20  |  [24,24,9,12,4,22,36]  |
  1142  |              resetPlaceHolder_2();  |         |  191  |     22  |  5  |  20  |  [24,24,9,12,4,22,36]  |
  1148  |                         R = R + 2;  |      2  |  193  |     22  |  5  |  20  |  [24,24,9,12,4,22,36]  |
  1152  |                         j = j + 1;  |         |  193  |     22  |  5  |  21  |  [24,24,9,12,4,22,36]  |
  1153  |              resetPlaceHolder_2();  |         |  193  |     22  |  5  |  21  |  [24,24,9,12,4,22,36]  |
  1159  |                         R = R + 2;  |      2  |  195  |     22  |  5  |  21  |  [24,24,9,12,4,22,36]  |
  1163  |                         j = j + 1;  |         |  195  |     22  |  5  |  22  |  [24,24,9,12,4,22,36]  |
  1164  |              resetPlaceHolder_2();  |         |  195  |     22  |  5  |  22  |  [24,24,9,12,4,22,36]  |
  1170  |                         R = R + 1;  |      1  |  196  |     22  |  5  |  22  |  [24,24,9,12,4,22,36]  |
  1174  |                         i = i + 1;  |         |  196  |     22  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1175  |              resetPlaceHolder_1();  |         |  196  |     22  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1181  |      entry = arrayRead(sorted, i);  |         |  196  |     36  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1183  |                         int j = 0;  |         |  196  |     36  |  6  |   0  |  [24,24,9,12,4,22,36]  |
  1189  |                         R = R + 2;  |      2  |  198  |     36  |  6  |   0  |  [24,24,9,12,4,22,36]  |
  1193  |                         j = j + 1;  |         |  198  |     36  |  6  |   1  |  [24,24,9,12,4,22,36]  |
  1194  |              resetPlaceHolder_2();  |         |  198  |     36  |  6  |   1  |  [24,24,9,12,4,22,36]  |
  1200  |                         R = R + 2;  |      2  |  200  |     36  |  6  |   1  |  [24,24,9,12,4,22,36]  |
  1204  |                         j = j + 1;  |         |  200  |     36  |  6  |   2  |  [24,24,9,12,4,22,36]  |
  1205  |              resetPlaceHolder_2();  |         |  200  |     36  |  6  |   2  |  [24,24,9,12,4,22,36]  |
  1211  |                         R = R + 2;  |      2  |  202  |     36  |  6  |   2  |  [24,24,9,12,4,22,36]  |
  1215  |                         j = j + 1;  |         |  202  |     36  |  6  |   3  |  [24,24,9,12,4,22,36]  |
  1216  |              resetPlaceHolder_2();  |         |  202  |     36  |  6  |   3  |  [24,24,9,12,4,22,36]  |
  1222  |                         R = R + 2;  |      2  |  204  |     36  |  6  |   3  |  [24,24,9,12,4,22,36]  |
  1226  |                         j = j + 1;  |         |  204  |     36  |  6  |   4  |  [24,24,9,12,4,22,36]  |
  1227  |              resetPlaceHolder_2();  |         |  204  |     36  |  6  |   4  |  [24,24,9,12,4,22,36]  |
  1233  |                         R = R + 2;  |      2  |  206  |     36  |  6  |   4  |  [24,24,9,12,4,22,36]  |
  1237  |                         j = j + 1;  |         |  206  |     36  |  6  |   5  |  [24,24,9,12,4,22,36]  |
  1238  |              resetPlaceHolder_2();  |         |  206  |     36  |  6  |   5  |  [24,24,9,12,4,22,36]  |
  1244  |                         R = R + 2;  |      2  |  208  |     36  |  6  |   5  |  [24,24,9,12,4,22,36]  |
  1248  |                         j = j + 1;  |         |  208  |     36  |  6  |   6  |  [24,24,9,12,4,22,36]  |
  1249  |              resetPlaceHolder_2();  |         |  208  |     36  |  6  |   6  |  [24,24,9,12,4,22,36]  |
  1255  |                         R = R + 2;  |      2  |  210  |     36  |  6  |   6  |  [24,24,9,12,4,22,36]  |
  1259  |                         j = j + 1;  |         |  210  |     36  |  6  |   7  |  [24,24,9,12,4,22,36]  |
  1260  |              resetPlaceHolder_2();  |         |  210  |     36  |  6  |   7  |  [24,24,9,12,4,22,36]  |
  1266  |                         R = R + 2;  |      2  |  212  |     36  |  6  |   7  |  [24,24,9,12,4,22,36]  |
  1270  |                         j = j + 1;  |         |  212  |     36  |  6  |   8  |  [24,24,9,12,4,22,36]  |
  1271  |              resetPlaceHolder_2();  |         |  212  |     36  |  6  |   8  |  [24,24,9,12,4,22,36]  |
  1277  |                         R = R + 2;  |      2  |  214  |     36  |  6  |   8  |  [24,24,9,12,4,22,36]  |
  1281  |                         j = j + 1;  |         |  214  |     36  |  6  |   9  |  [24,24,9,12,4,22,36]  |
  1282  |              resetPlaceHolder_2();  |         |  214  |     36  |  6  |   9  |  [24,24,9,12,4,22,36]  |
  1288  |                         R = R + 2;  |      2  |  216  |     36  |  6  |   9  |  [24,24,9,12,4,22,36]  |
  1292  |                         j = j + 1;  |         |  216  |     36  |  6  |  10  |  [24,24,9,12,4,22,36]  |
  1293  |              resetPlaceHolder_2();  |         |  216  |     36  |  6  |  10  |  [24,24,9,12,4,22,36]  |
  1299  |                         R = R + 2;  |      2  |  218  |     36  |  6  |  10  |  [24,24,9,12,4,22,36]  |
  1303  |                         j = j + 1;  |         |  218  |     36  |  6  |  11  |  [24,24,9,12,4,22,36]  |
  1304  |              resetPlaceHolder_2();  |         |  218  |     36  |  6  |  11  |  [24,24,9,12,4,22,36]  |
  1310  |                         R = R + 2;  |      2  |  220  |     36  |  6  |  11  |  [24,24,9,12,4,22,36]  |
  1314  |                         j = j + 1;  |         |  220  |     36  |  6  |  12  |  [24,24,9,12,4,22,36]  |
  1315  |              resetPlaceHolder_2();  |         |  220  |     36  |  6  |  12  |  [24,24,9,12,4,22,36]  |
  1321  |                         R = R + 2;  |      2  |  222  |     36  |  6  |  12  |  [24,24,9,12,4,22,36]  |
  1325  |                         j = j + 1;  |         |  222  |     36  |  6  |  13  |  [24,24,9,12,4,22,36]  |
  1326  |              resetPlaceHolder_2();  |         |  222  |     36  |  6  |  13  |  [24,24,9,12,4,22,36]  |
  1332  |                         R = R + 2;  |      2  |  224  |     36  |  6  |  13  |  [24,24,9,12,4,22,36]  |
  1336  |                         j = j + 1;  |         |  224  |     36  |  6  |  14  |  [24,24,9,12,4,22,36]  |
  1337  |              resetPlaceHolder_2();  |         |  224  |     36  |  6  |  14  |  [24,24,9,12,4,22,36]  |
  1343  |                         R = R + 2;  |      2  |  226  |     36  |  6  |  14  |  [24,24,9,12,4,22,36]  |
  1347  |                         j = j + 1;  |         |  226  |     36  |  6  |  15  |  [24,24,9,12,4,22,36]  |
  1348  |              resetPlaceHolder_2();  |         |  226  |     36  |  6  |  15  |  [24,24,9,12,4,22,36]  |
  1354  |                         R = R + 2;  |      2  |  228  |     36  |  6  |  15  |  [24,24,9,12,4,22,36]  |
  1358  |                         j = j + 1;  |         |  228  |     36  |  6  |  16  |  [24,24,9,12,4,22,36]  |
  1359  |              resetPlaceHolder_2();  |         |  228  |     36  |  6  |  16  |  [24,24,9,12,4,22,36]  |
  1365  |                         R = R + 2;  |      2  |  230  |     36  |  6  |  16  |  [24,24,9,12,4,22,36]  |
  1369  |                         j = j + 1;  |         |  230  |     36  |  6  |  17  |  [24,24,9,12,4,22,36]  |
  1370  |              resetPlaceHolder_2();  |         |  230  |     36  |  6  |  17  |  [24,24,9,12,4,22,36]  |
  1376  |                         R = R + 2;  |      2  |  232  |     36  |  6  |  17  |  [24,24,9,12,4,22,36]  |
  1380  |                         j = j + 1;  |         |  232  |     36  |  6  |  18  |  [24,24,9,12,4,22,36]  |
  1381  |              resetPlaceHolder_2();  |         |  232  |     36  |  6  |  18  |  [24,24,9,12,4,22,36]  |
  1387  |                         R = R + 2;  |      2  |  234  |     36  |  6  |  18  |  [24,24,9,12,4,22,36]  |
  1391  |                         j = j + 1;  |         |  234  |     36  |  6  |  19  |  [24,24,9,12,4,22,36]  |
  1392  |              resetPlaceHolder_2();  |         |  234  |     36  |  6  |  19  |  [24,24,9,12,4,22,36]  |
  1398  |                         R = R + 2;  |      2  |  236  |     36  |  6  |  19  |  [24,24,9,12,4,22,36]  |
  1402  |                         j = j + 1;  |         |  236  |     36  |  6  |  20  |  [24,24,9,12,4,22,36]  |
  1403  |              resetPlaceHolder_2();  |         |  236  |     36  |  6  |  20  |  [24,24,9,12,4,22,36]  |
  1409  |                         R = R + 2;  |      2  |  238  |     36  |  6  |  20  |  [24,24,9,12,4,22,36]  |
  1413  |                         j = j + 1;  |         |  238  |     36  |  6  |  21  |  [24,24,9,12,4,22,36]  |
  1414  |              resetPlaceHolder_2();  |         |  238  |     36  |  6  |  21  |  [24,24,9,12,4,22,36]  |
  1420  |                         R = R + 2;  |      2  |  240  |     36  |  6  |  21  |  [24,24,9,12,4,22,36]  |
  1424  |                         j = j + 1;  |         |  240  |     36  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1425  |              resetPlaceHolder_2();  |         |  240  |     36  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1431  |                         R = R + 2;  |      2  |  242  |     36  |  6  |  22  |  [24,24,9,12,4,22,36]  |
  1435  |                         j = j + 1;  |         |  242  |     36  |  6  |  23  |  [24,24,9,12,4,22,36]  |
  1436  |              resetPlaceHolder_2();  |         |  242  |     36  |  6  |  23  |  [24,24,9,12,4,22,36]  |
  1442  |                         R = R + 2;  |      2  |  244  |     36  |  6  |  23  |  [24,24,9,12,4,22,36]  |
  1446  |                         j = j + 1;  |         |  244  |     36  |  6  |  24  |  [24,24,9,12,4,22,36]  |
  1447  |              resetPlaceHolder_2();  |         |  244  |     36  |  6  |  24  |  [24,24,9,12,4,22,36]  |
  1453  |                         R = R + 2;  |      2  |  246  |     36  |  6  |  24  |  [24,24,9,12,4,22,36]  |
  1457  |                         j = j + 1;  |         |  246  |     36  |  6  |  25  |  [24,24,9,12,4,22,36]  |
  1458  |              resetPlaceHolder_2();  |         |  246  |     36  |  6  |  25  |  [24,24,9,12,4,22,36]  |
  1464  |                         R = R + 2;  |      2  |  248  |     36  |  6  |  25  |  [24,24,9,12,4,22,36]  |
  1468  |                         j = j + 1;  |         |  248  |     36  |  6  |  26  |  [24,24,9,12,4,22,36]  |
  1469  |              resetPlaceHolder_2();  |         |  248  |     36  |  6  |  26  |  [24,24,9,12,4,22,36]  |
  1475  |                         R = R + 2;  |      2  |  250  |     36  |  6  |  26  |  [24,24,9,12,4,22,36]  |
  1479  |                         j = j + 1;  |         |  250  |     36  |  6  |  27  |  [24,24,9,12,4,22,36]  |
  1480  |              resetPlaceHolder_2();  |         |  250  |     36  |  6  |  27  |  [24,24,9,12,4,22,36]  |
  1486  |                         R = R + 2;  |      2  |  252  |     36  |  6  |  27  |  [24,24,9,12,4,22,36]  |
  1490  |                         j = j + 1;  |         |  252  |     36  |  6  |  28  |  [24,24,9,12,4,22,36]  |
  1491  |              resetPlaceHolder_2();  |         |  252  |     36  |  6  |  28  |  [24,24,9,12,4,22,36]  |
  1497  |                         R = R + 2;  |      2  |  254  |     36  |  6  |  28  |  [24,24,9,12,4,22,36]  |
  1501  |                         j = j + 1;  |         |  254  |     36  |  6  |  29  |  [24,24,9,12,4,22,36]  |
  1502  |              resetPlaceHolder_2();  |         |  254  |     36  |  6  |  29  |  [24,24,9,12,4,22,36]  |
  1508  |                         R = R + 2;  |      2  |  256  |     36  |  6  |  29  |  [24,24,9,12,4,22,36]  |
  1512  |                         j = j + 1;  |         |  256  |     36  |  6  |  30  |  [24,24,9,12,4,22,36]  |
  1513  |              resetPlaceHolder_2();  |         |  256  |     36  |  6  |  30  |  [24,24,9,12,4,22,36]  |
  1519  |                         R = R + 2;  |      2  |  258  |     36  |  6  |  30  |  [24,24,9,12,4,22,36]  |
  1523  |                         j = j + 1;  |         |  258  |     36  |  6  |  31  |  [24,24,9,12,4,22,36]  |
  1524  |              resetPlaceHolder_2();  |         |  258  |     36  |  6  |  31  |  [24,24,9,12,4,22,36]  |
  1530  |                         R = R + 2;  |      2  |  260  |     36  |  6  |  31  |  [24,24,9,12,4,22,36]  |
  1534  |                         j = j + 1;  |         |  260  |     36  |  6  |  32  |  [24,24,9,12,4,22,36]  |
  1535  |              resetPlaceHolder_2();  |         |  260  |     36  |  6  |  32  |  [24,24,9,12,4,22,36]  |
  1541  |                         R = R + 2;  |      2  |  262  |     36  |  6  |  32  |  [24,24,9,12,4,22,36]  |
  1545  |                         j = j + 1;  |         |  262  |     36  |  6  |  33  |  [24,24,9,12,4,22,36]  |
  1546  |              resetPlaceHolder_2();  |         |  262  |     36  |  6  |  33  |  [24,24,9,12,4,22,36]  |
  1552  |                         R = R + 2;  |      2  |  264  |     36  |  6  |  33  |  [24,24,9,12,4,22,36]  |
  1556  |                         j = j + 1;  |         |  264  |     36  |  6  |  34  |  [24,24,9,12,4,22,36]  |
  1557  |              resetPlaceHolder_2();  |         |  264  |     36  |  6  |  34  |  [24,24,9,12,4,22,36]  |
  1563  |                         R = R + 2;  |      2  |  266  |     36  |  6  |  34  |  [24,24,9,12,4,22,36]  |
  1567  |                         j = j + 1;  |         |  266  |     36  |  6  |  35  |  [24,24,9,12,4,22,36]  |
  1568  |              resetPlaceHolder_2();  |         |  266  |     36  |  6  |  35  |  [24,24,9,12,4,22,36]  |
  1574  |                         R = R + 2;  |      2  |  268  |     36  |  6  |  35  |  [24,24,9,12,4,22,36]  |
  1578  |                         j = j + 1;  |         |  268  |     36  |  6  |  36  |  [24,24,9,12,4,22,36]  |
  1579  |              resetPlaceHolder_2();  |         |  268  |     36  |  6  |  36  |  [24,24,9,12,4,22,36]  |
  1585  |                         R = R + 1;  |      1  |  269  |     36  |  6  |  36  |  [24,24,9,12,4,22,36]  |
  1589  |                         i = i + 1;  |         |  269  |     36  |  7  |  36  |  [24,24,9,12,4,22,36]  |
  1590  |              resetPlaceHolder_1();  |         |  269  |     36  |  7  |  36  |  [24,24,9,12,4,22,36]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 138 trace node indices: [629, 846, 909, 555, 1200, 1211, 1005, 217, 994, 379, 511, 1486, 1497, 1137, 1310, 533, 500, 1233, 747, 1354, 1222, 898, 1475, 651, 52, 1409, 184, 802, 357, 1398, 1115, 228, 261, 1104, 74, 206, 85, 714, 1387, 1343, 1519, 1255, 467, 566, 1365, 522, 1159, 1027, 456, 324, 1541, 725, 1082, 489, 1016, 96, 1530, 1266, 1552, 1060, 173, 129, 41, 1563, 1170, 1071, 662, 412, 618, 824, 423, 577, 118, 445, 313, 1332, 335, 1464, 1574, 736, 434, 1376, 758, 140, 769, 983, 695, 780, 162, 1420, 1277, 939, 1049, 63, 640, 887, 673, 791, 1038, 544, 1585, 876, 250, 1321, 1126, 1189, 368, 1453, 961, 813, 1508, 390, 401, 1244, 478, 272, 684, 346, 1442, 151, 950, 835, 30, 1148, 865, 107, 239, 294, 195, 1288, 283, 928, 1093, 596, 1431, 1299, 607, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,313,324,335,346,357,368,379,390,401,412,423,434,445,456,467,478,489,500,511,522,533,544,555,566,577,596,607,618,629,640,651,662,673,684,695,714,725,736,747,758,769,780,791,802,813,824,835,846,865,876,887,898,909,928,939,950,961,972,983,994,1005,1016,1027,1038,1049,1060,1071,1082,1093,1104,1115,1126,1137,1148,1159,1170,1189,1200,1211,1222,1233,1244,1255,1266,1277,1288,1299,1310,1321,1332,1343,1354,1365,1376,1387,1398,1409,1420,1431,1442,1453,1464,1475,1486,1497,1508,1519,1530,1541,1552,1563,1574,1585}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 1;  |      1  |                         0  |
   299  |  resetPlaceHolder_1();  |         |                            |
   313  |             R = R + 2;  |      2  |                         0  |
   318  |  resetPlaceHolder_2();  |         |                            |
   324  |             R = R + 2;  |      2  |                         0  |
   329  |  resetPlaceHolder_2();  |         |                            |
   335  |             R = R + 2;  |      2  |                         0  |
   340  |  resetPlaceHolder_2();  |         |                            |
   346  |             R = R + 2;  |      2  |                         0  |
   351  |  resetPlaceHolder_2();  |         |                            |
   357  |             R = R + 2;  |      2  |                         0  |
   362  |  resetPlaceHolder_2();  |         |                            |
   368  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_2();  |         |                            |
   379  |             R = R + 2;  |      2  |                         0  |
   384  |  resetPlaceHolder_2();  |         |                            |
   390  |             R = R + 2;  |      2  |                         0  |
   395  |  resetPlaceHolder_2();  |         |                            |
   401  |             R = R + 2;  |      2  |                         0  |
   406  |  resetPlaceHolder_2();  |         |                            |
   412  |             R = R + 2;  |      2  |                         0  |
   417  |  resetPlaceHolder_2();  |         |                            |
   423  |             R = R + 2;  |      2  |                         0  |
   428  |  resetPlaceHolder_2();  |         |                            |
   434  |             R = R + 2;  |      2  |                         0  |
   439  |  resetPlaceHolder_2();  |         |                            |
   445  |             R = R + 2;  |      2  |                         0  |
   450  |  resetPlaceHolder_2();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   461  |  resetPlaceHolder_2();  |         |                            |
   467  |             R = R + 2;  |      2  |                         0  |
   472  |  resetPlaceHolder_2();  |         |                            |
   478  |             R = R + 2;  |      2  |                         0  |
   483  |  resetPlaceHolder_2();  |         |                            |
   489  |             R = R + 2;  |      2  |                         0  |
   494  |  resetPlaceHolder_2();  |         |                            |
   500  |             R = R + 2;  |      2  |                         0  |
   505  |  resetPlaceHolder_2();  |         |                            |
   511  |             R = R + 2;  |      2  |                         0  |
   516  |  resetPlaceHolder_2();  |         |                            |
   522  |             R = R + 2;  |      2  |                         0  |
   527  |  resetPlaceHolder_2();  |         |                            |
   533  |             R = R + 2;  |      2  |                         0  |
   538  |  resetPlaceHolder_2();  |         |                            |
   544  |             R = R + 2;  |      2  |                         0  |
   549  |  resetPlaceHolder_2();  |         |                            |
   555  |             R = R + 2;  |      2  |                         0  |
   560  |  resetPlaceHolder_2();  |         |                            |
   566  |             R = R + 2;  |      2  |                         0  |
   571  |  resetPlaceHolder_2();  |         |                            |
   577  |             R = R + 1;  |      1  |                         0  |
   582  |  resetPlaceHolder_1();  |         |                            |
   596  |             R = R + 2;  |      2  |                         0  |
   601  |  resetPlaceHolder_2();  |         |                            |
   607  |             R = R + 2;  |      2  |                         0  |
   612  |  resetPlaceHolder_2();  |         |                            |
   618  |             R = R + 2;  |      2  |                         0  |
   623  |  resetPlaceHolder_2();  |         |                            |
   629  |             R = R + 2;  |      2  |                         0  |
   634  |  resetPlaceHolder_2();  |         |                            |
   640  |             R = R + 2;  |      2  |                         0  |
   645  |  resetPlaceHolder_2();  |         |                            |
   651  |             R = R + 2;  |      2  |                         0  |
   656  |  resetPlaceHolder_2();  |         |                            |
   662  |             R = R + 2;  |      2  |                         0  |
   667  |  resetPlaceHolder_2();  |         |                            |
   673  |             R = R + 2;  |      2  |                         0  |
   678  |  resetPlaceHolder_2();  |         |                            |
   684  |             R = R + 2;  |      2  |                         0  |
   689  |  resetPlaceHolder_2();  |         |                            |
   695  |             R = R + 1;  |      1  |                         0  |
   700  |  resetPlaceHolder_1();  |         |                            |
   714  |             R = R + 2;  |      2  |                         0  |
   719  |  resetPlaceHolder_2();  |         |                            |
   725  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_2();  |         |                            |
   736  |             R = R + 2;  |      2  |                         0  |
   741  |  resetPlaceHolder_2();  |         |                            |
   747  |             R = R + 2;  |      2  |                         0  |
   752  |  resetPlaceHolder_2();  |         |                            |
   758  |             R = R + 2;  |      2  |                         0  |
   763  |  resetPlaceHolder_2();  |         |                            |
   769  |             R = R + 2;  |      2  |                         0  |
   774  |  resetPlaceHolder_2();  |         |                            |
   780  |             R = R + 2;  |      2  |                         0  |
   785  |  resetPlaceHolder_2();  |         |                            |
   791  |             R = R + 2;  |      2  |                         0  |
   796  |  resetPlaceHolder_2();  |         |                            |
   802  |             R = R + 2;  |      2  |                         0  |
   807  |  resetPlaceHolder_2();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   818  |  resetPlaceHolder_2();  |         |                            |
   824  |             R = R + 2;  |      2  |                         0  |
   829  |  resetPlaceHolder_2();  |         |                            |
   835  |             R = R + 2;  |      2  |                         0  |
   840  |  resetPlaceHolder_2();  |         |                            |
   846  |             R = R + 1;  |      1  |                         0  |
   851  |  resetPlaceHolder_1();  |         |                            |
   865  |             R = R + 2;  |      2  |                         0  |
   870  |  resetPlaceHolder_2();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   881  |  resetPlaceHolder_2();  |         |                            |
   887  |             R = R + 2;  |      2  |                         0  |
   892  |  resetPlaceHolder_2();  |         |                            |
   898  |             R = R + 2;  |      2  |                         0  |
   903  |  resetPlaceHolder_2();  |         |                            |
   909  |             R = R + 1;  |      1  |                         0  |
   914  |  resetPlaceHolder_1();  |         |                            |
   928  |             R = R + 2;  |      2  |                         0  |
   933  |  resetPlaceHolder_2();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   944  |  resetPlaceHolder_2();  |         |                            |
   950  |             R = R + 2;  |      2  |                         0  |
   955  |  resetPlaceHolder_2();  |         |                            |
   961  |             R = R + 2;  |      2  |                         0  |
   966  |  resetPlaceHolder_2();  |         |                            |
   972  |             R = R + 2;  |      2  |                         0  |
   977  |  resetPlaceHolder_2();  |         |                            |
   983  |             R = R + 2;  |      2  |                         0  |
   988  |  resetPlaceHolder_2();  |         |                            |
   994  |             R = R + 2;  |      2  |                         0  |
   999  |  resetPlaceHolder_2();  |         |                            |
  1005  |             R = R + 2;  |      2  |                         0  |
  1010  |  resetPlaceHolder_2();  |         |                            |
  1016  |             R = R + 2;  |      2  |                         0  |
  1021  |  resetPlaceHolder_2();  |         |                            |
  1027  |             R = R + 2;  |      2  |                         0  |
  1032  |  resetPlaceHolder_2();  |         |                            |
  1038  |             R = R + 2;  |      2  |                         0  |
  1043  |  resetPlaceHolder_2();  |         |                            |
  1049  |             R = R + 2;  |      2  |                         0  |
  1054  |  resetPlaceHolder_2();  |         |                            |
  1060  |             R = R + 2;  |      2  |                         0  |
  1065  |  resetPlaceHolder_2();  |         |                            |
  1071  |             R = R + 2;  |      2  |                         0  |
  1076  |  resetPlaceHolder_2();  |         |                            |
  1082  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_2();  |         |                            |
  1093  |             R = R + 2;  |      2  |                         0  |
  1098  |  resetPlaceHolder_2();  |         |                            |
  1104  |             R = R + 2;  |      2  |                         0  |
  1109  |  resetPlaceHolder_2();  |         |                            |
  1115  |             R = R + 2;  |      2  |                         0  |
  1120  |  resetPlaceHolder_2();  |         |                            |
  1126  |             R = R + 2;  |      2  |                         0  |
  1131  |  resetPlaceHolder_2();  |         |                            |
  1137  |             R = R + 2;  |      2  |                         0  |
  1142  |  resetPlaceHolder_2();  |         |                            |
  1148  |             R = R + 2;  |      2  |                         0  |
  1153  |  resetPlaceHolder_2();  |         |                            |
  1159  |             R = R + 2;  |      2  |                         0  |
  1164  |  resetPlaceHolder_2();  |         |                            |
  1170  |             R = R + 1;  |      1  |                         0  |
  1175  |  resetPlaceHolder_1();  |         |                            |
  1189  |             R = R + 2;  |      2  |                         0  |
  1194  |  resetPlaceHolder_2();  |         |                            |
  1200  |             R = R + 2;  |      2  |                         0  |
  1205  |  resetPlaceHolder_2();  |         |                            |
  1211  |             R = R + 2;  |      2  |                         0  |
  1216  |  resetPlaceHolder_2();  |         |                            |
  1222  |             R = R + 2;  |      2  |                         0  |
  1227  |  resetPlaceHolder_2();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1238  |  resetPlaceHolder_2();  |         |                            |
  1244  |             R = R + 2;  |      2  |                         0  |
  1249  |  resetPlaceHolder_2();  |         |                            |
  1255  |             R = R + 2;  |      2  |                         0  |
  1260  |  resetPlaceHolder_2();  |         |                            |
  1266  |             R = R + 2;  |      2  |                         0  |
  1271  |  resetPlaceHolder_2();  |         |                            |
  1277  |             R = R + 2;  |      2  |                         0  |
  1282  |  resetPlaceHolder_2();  |         |                            |
  1288  |             R = R + 2;  |      2  |                         0  |
  1293  |  resetPlaceHolder_2();  |         |                            |
  1299  |             R = R + 2;  |      2  |                         0  |
  1304  |  resetPlaceHolder_2();  |         |                            |
  1310  |             R = R + 2;  |      2  |                         0  |
  1315  |  resetPlaceHolder_2();  |         |                            |
  1321  |             R = R + 2;  |      2  |                         0  |
  1326  |  resetPlaceHolder_2();  |         |                            |
  1332  |             R = R + 2;  |      2  |                         0  |
  1337  |  resetPlaceHolder_2();  |         |                            |
  1343  |             R = R + 2;  |      2  |                         0  |
  1348  |  resetPlaceHolder_2();  |         |                            |
  1354  |             R = R + 2;  |      2  |                         0  |
  1359  |  resetPlaceHolder_2();  |         |                            |
  1365  |             R = R + 2;  |      2  |                         0  |
  1370  |  resetPlaceHolder_2();  |         |                            |
  1376  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_2();  |         |                            |
  1387  |             R = R + 2;  |      2  |                         0  |
  1392  |  resetPlaceHolder_2();  |         |                            |
  1398  |             R = R + 2;  |      2  |                         0  |
  1403  |  resetPlaceHolder_2();  |         |                            |
  1409  |             R = R + 2;  |      2  |                         0  |
  1414  |  resetPlaceHolder_2();  |         |                            |
  1420  |             R = R + 2;  |      2  |                         0  |
  1425  |  resetPlaceHolder_2();  |         |                            |
  1431  |             R = R + 2;  |      2  |                         0  |
  1436  |  resetPlaceHolder_2();  |         |                            |
  1442  |             R = R + 2;  |      2  |                         0  |
  1447  |  resetPlaceHolder_2();  |         |                            |
  1453  |             R = R + 2;  |      2  |                         0  |
  1458  |  resetPlaceHolder_2();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1469  |  resetPlaceHolder_2();  |         |                            |
  1475  |             R = R + 2;  |      2  |                         0  |
  1480  |  resetPlaceHolder_2();  |         |                            |
  1486  |             R = R + 2;  |      2  |                         0  |
  1491  |  resetPlaceHolder_2();  |         |                            |
  1497  |             R = R + 2;  |      2  |                         0  |
  1502  |  resetPlaceHolder_2();  |         |                            |
  1508  |             R = R + 2;  |      2  |                         0  |
  1513  |  resetPlaceHolder_2();  |         |                            |
  1519  |             R = R + 2;  |      2  |                         0  |
  1524  |  resetPlaceHolder_2();  |         |                            |
  1530  |             R = R + 2;  |      2  |                         0  |
  1535  |  resetPlaceHolder_2();  |         |                            |
  1541  |             R = R + 2;  |      2  |                         0  |
  1546  |  resetPlaceHolder_2();  |         |                            |
  1552  |             R = R + 2;  |      2  |                         0  |
  1557  |  resetPlaceHolder_2();  |         |                            |
  1563  |             R = R + 2;  |      2  |                         0  |
  1568  |  resetPlaceHolder_2();  |         |                            |
  1574  |             R = R + 2;  |      2  |                         0  |
  1579  |  resetPlaceHolder_2();  |         |                            |
  1585  |             R = R + 1;  |      1  |                         0  |
  1590  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 00:17:20,521 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:17:30,527 INFO     Done. Execution time: 10.00617003440857 seconds
2023-01-31 00:17:30,527 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0017-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.000s
user	0m21.744s
sys	0m2.537s

2023-01-31 00:17:30,528 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 00:17:30,528 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:17:32,327 INFO     Done. Execution time: 1.7984862327575684 seconds
2023-01-31 00:17:32,327 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 00:17:32,327 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 00:17:32,327 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 00:17:34,153 INFO     Done. Execution time: 1.8254568576812744 seconds
2023-01-31 00:17:34,153 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 00:17:34,153 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:17:35,164 INFO     Done. Execution time: 1.0110406875610352 seconds
2023-01-31 00:17:35,165 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.004s
user	0m1.667s
sys	0m0.130s

2023-01-31 00:17:35,165 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 00:17:35,165 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:18:41,138 INFO     Done. Execution time: 65.97259283065796 seconds
2023-01-31 00:18:41,138 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2242304773191135564/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2242304773191135564/bin -o /tmp/qfuzz2242304773191135564/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2242304773191135564/bin
Found file /tmp/qfuzz2242304773191135564/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2242304773191135564/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2242304773191135564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2242304773191135564/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2242304773191135564/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2242304773191135564/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 119881 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [53.00]
2; /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 27, 22, 5, 38, 9, 14, 37, 36, 4, 21, 24, 4, 13, 43, 47, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 39, 23, 18, 42, 23, 35, 9, 48, 47, 9, 15, 7, 9, 30, 26, 39, 7, 45, 12, 45, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2242304773191135564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_001840_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [27,22,5,38,9,14,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,39,23,18,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,36,4,22,32,12,13]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:18:41,138 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-31 00:18:41,138 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 00:18:46,456 INFO     Done. Execution time: 5.317371129989624 seconds
2023-01-31 00:18:46,456 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_001840_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_001840_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [27,22,5,38,9,14,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,39,23,18,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,36,4,22,32,12,13])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [4,4,4,39,23,18,42]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [27,22,5,38,9,14,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [9,36,4,22,32,12,13]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [4,4,4,39,23,18,42]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,39,23,18,42]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,39,23,18,42]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,39,23,18,42]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,39,23,18,42]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [4,4,4,39,23,18,42]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [4,4,4,39,23,18,42]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [4,4,4,39,23,18,42]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [4,4,4,39,23,18,42]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,39,23,18,42]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |       4  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,39,23,18,42]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,39,23,18,42]  |
    59  |  appendTo = appendTo + (pos - l...  |         |  0  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,39,23,18,42]  |
    64  |          R = R + (pos - lastHold);  |      1  |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,39,23,18,42]  |
    65  |                             break;  |         |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,39,23,18,42]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                              
 Index  |          Commands           |  Costs  |  SegmentIDs in GroupID(0)  |
------------------------------------------------------------------------------
    64  |  R = R + (pos - lastHold);  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex        |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [27,22,5,38,9,14,37]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [27,22,5,38,9,14,37]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [27,22,5,38,9,14,37]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [27,22,5,38,9,14,37]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [27,22,5,38,9,14,37]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [27,22,5,38,9,14,37]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [27,22,5,38,9,14,37]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [27,22,5,38,9,14,37]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [27,22,5,38,9,14,37]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [27,22,5,38,9,14,37]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      22  |  1  |         1  |        2  |    1  |      1  |  [27,22,5,38,9,14,37]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      22  |  1  |         1  |        2  |    2  |      1  |  [27,22,5,38,9,14,37]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      22  |  2  |         1  |        2  |    2  |      1  |  [27,22,5,38,9,14,37]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      22  |  2  |         1  |        2  |    2  |      1  |  [27,22,5,38,9,14,37]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (pos - lastHold) -> R0 = R0 + (pos - lastHold);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-31 00:18:46,456 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:19:01,555 INFO     Done. Execution time: 15.098984718322754 seconds
2023-01-31 00:19:01,556 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `13.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0018-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.091s
user	0m27.718s
sys	0m3.509s

2023-01-31 00:19:01,556 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 00:19:01,556 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:20:07,429 INFO     Done. Execution time: 65.87320232391357 seconds
2023-01-31 00:20:07,430 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz2424182509581238353/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2424182509581238353/bin -o /tmp/qfuzz2424182509581238353/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2424182509581238353/bin
Found file /tmp/qfuzz2424182509581238353/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz2424182509581238353/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2424182509581238353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2424182509581238353/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2424182509581238353/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2424182509581238353/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 125440 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2424182509581238353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2424182509581238353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2424182509581238353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_002007_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2, 36
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:20:07,430 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-31 00:20:07,430 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 00:20:10,208 INFO     Done. Execution time: 2.7780251502990723 seconds
2023-01-31 00:20:10,208 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_002007_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_002007_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 24
recursiveTypeIndexes: 2
d: 36
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |             24  |  36  |                     2  |
    32  |     return;  |         |  0  |             24  |  36  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-31 00:20:10,209 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:20:12,286 INFO     Done. Execution time: 2.0772287845611572 seconds
2023-01-31 00:20:12,286 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0020-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0020-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.070s
user	0m3.623s
sys	0m0.228s

2023-01-31 00:20:12,287 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 00:20:12,287 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:21:18,095 INFO     Done. Execution time: 65.80794215202332 seconds
2023-01-31 00:21:18,095 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz323697361091589571/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz323697361091589571/bin -o /tmp/qfuzz323697361091589571/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz323697361091589571/bin
Found file /tmp/qfuzz323697361091589571/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz323697361091589571/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz323697361091589571/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz323697361091589571/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz323697361091589571/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz323697361091589571/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz323697361091589571/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz323697361091589571/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 128667 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 5, 9, 4, 22, 32, 12, 13, 12, 15, 12, 48, 39, 40, 7, 46, 6, 45, 9, 33, 29, 12, 34, 35, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz323697361091589571/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_002117_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:21:18,095 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-31 00:21:18,095 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 00:21:24,124 INFO     Done. Execution time: 6.028029203414917 seconds
2023-01-31 00:21:24,124 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_002117_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_002117_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-31 00:21:24,124 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:21:31,361 INFO     Done. Execution time: 7.236662864685059 seconds
2023-01-31 00:21:31,361 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0021-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.230s
user	0m15.344s
sys	0m2.171s

2023-01-31 00:21:31,361 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 00:21:31,361 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:22:37,136 INFO     Done. Execution time: 65.7747552394867 seconds
2023-01-31 00:22:37,137 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz7436747588529261674/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7436747588529261674/bin -o /tmp/qfuzz7436747588529261674/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7436747588529261674/bin
Found file /tmp/qfuzz7436747588529261674/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz7436747588529261674/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7436747588529261674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7436747588529261674/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7436747588529261674/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7436747588529261674/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123530 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 51.00; [95.00,195.00,255.00,455.00,506.00,655.00,735.00]
2; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 131.00; [15.00,146.00]
3; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 5; 29.00; [15.00,506.00,535.00,675.00,995.00]
6; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 60.00; [95.00,195.00,255.00,386.00,455.00,655.00,735.00]
12; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 7; 20.00; [166.00,295.00,315.00,475.00,495.00,715.00,1015.00]
13; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 6; 51.00; [95.00,195.00,255.00,306.00,595.00,735.00]
27; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 7; 91.00; [95.00,195.00,415.00,506.00,655.00,875.00,1015.00]
31; /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 7; 20.00; [95.00,255.00,455.00,475.00,655.00,735.00,866.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 23, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 20, 4, 50, 32, 43, 20, 36, 20, 20, 44, 20, 20, 20, 20, 37, 20, 20, 12, 41, 41, 13, 41, 41, 20, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 9, 36, 4, 36, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 23, 14, 35, 50, 15, 24, 25, 12, 15, 12, 48, 34, 40, 12, 4, 22, 32, 15, 12, 12, 15, 12, 30, 5, 23, 11, 33, 35, 23, 34, 13, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 8, 27, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 33, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7436747588529261674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_002236_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [42,23,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,20,4,50,32,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,9,36,4,36,29,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,23,14,35,50,15,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,33,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:22:37,137 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-31 00:22:37,137 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 00:22:48,523 INFO     Done. Execution time: 11.385194540023804 seconds
2023-01-31 00:22:48,523 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_002236_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_002236_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([42,23,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,20,4,50,32,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,9,36,4,36,29,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,23,14,35,50,15,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,9,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,33,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [42,23,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,9,20,4,50,32,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [14,9,36,4,36,29,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [7,23,14,35,50,15,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [18,9,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,33,49]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  diff  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |    []  |
    10  |     return;  |         |  0  |    []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 122):
                                                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |          diff           |  i  |  lhsBuilder  |  rhsBuilder  |
-----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [42,23,36,4,22,32,12]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [42,23,36,4,22,32,12]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [42,23,36,4,22,32,12]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     42  |  [42,23,36,4,22,32,12]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     42  |   42  |     42  |  [42,23,36,4,22,32,12]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   42  |     42  |  [42,23,36,4,22,32,12]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   42  |     42  |  [42,23,36,4,22,32,12]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   42  |     23  |  [42,23,36,4,22,32,12]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     23  |   65  |     23  |  [42,23,36,4,22,32,12]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |   65  |     23  |  [42,23,36,4,22,32,12]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |   65  |     23  |  [42,23,36,4,22,32,12]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |   65  |     36  |  [42,23,36,4,22,32,12]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     36  |  101  |     36  |  [42,23,36,4,22,32,12]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  101  |     36  |  [42,23,36,4,22,32,12]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  101  |     36  |  [42,23,36,4,22,32,12]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  101  |      4  |  [42,23,36,4,22,32,12]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |      4  |  105  |      4  |  [42,23,36,4,22,32,12]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  105  |      4  |  [42,23,36,4,22,32,12]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  105  |      4  |  [42,23,36,4,22,32,12]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  105  |     22  |  [42,23,36,4,22,32,12]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     22  |  127  |     22  |  [42,23,36,4,22,32,12]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  127  |     22  |  [42,23,36,4,22,32,12]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  127  |     22  |  [42,23,36,4,22,32,12]  |  5  |           0  |           0  |
    96  |        chunk = arrayRead(diff, i);  |         |  127  |     32  |  [42,23,36,4,22,32,12]  |  5  |           0  |           0  |
    99  |                     R = R + chunk;  |     32  |  159  |     32  |  [42,23,36,4,22,32,12]  |  5  |           0  |           0  |
   103  |                         i = i + 1;  |         |  159  |     32  |  [42,23,36,4,22,32,12]  |  6  |           0  |           0  |
   104  |              resetPlaceHolder_1();  |         |  159  |     32  |  [42,23,36,4,22,32,12]  |  6  |           0  |           0  |
   110  |        chunk = arrayRead(diff, i);  |         |  159  |     12  |  [42,23,36,4,22,32,12]  |  6  |           0  |           0  |
   113  |                     R = R + chunk;  |     12  |  171  |     12  |  [42,23,36,4,22,32,12]  |  6  |           0  |           0  |
   117  |                         i = i + 1;  |         |  171  |     12  |  [42,23,36,4,22,32,12]  |  7  |           0  |           0  |
   118  |              resetPlaceHolder_1();  |         |  171  |     12  |  [42,23,36,4,22,32,12]  |  7  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {43,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,57,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {57,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,71,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,57,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {43,57,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,71,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {43,71,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,57,71,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {57,71,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,57,71,113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {43,57,71,85,99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43,57,71,85,99,113}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     42  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     23  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     36  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |      4  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     22  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     32  |                         0  |
   104  |  resetPlaceHolder_1();  |         |                            |
   113  |         R = R + chunk;  |     12  |                         0  |
   118  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-31 00:22:48,523 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:22:55,628 INFO     Done. Execution time: 7.104701995849609 seconds
2023-01-31 00:22:55,628 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0022-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.097s
user	0m15.295s
sys	0m1.997s

2023-01-31 00:22:55,628 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 00:22:55,628 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:24:01,579 INFO     Done. Execution time: 65.95040464401245 seconds
2023-01-31 00:24:01,579 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz1869810602720398168/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1869810602720398168/bin -o /tmp/qfuzz1869810602720398168/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1869810602720398168/bin
Found file /tmp/qfuzz1869810602720398168/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz1869810602720398168/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1869810602720398168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1869810602720398168/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1869810602720398168/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1869810602720398168/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 120114 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 7.00; [95.00,195.00,248.00,255.00,268.00,455.00,504.00,655.00,735.00]
2; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta; 9; 13.00; [95.00,195.00,335.00,504.00,655.00,688.00,735.00,815.00,828.00]
3; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 9; 20.00; [95.00,195.00,248.00,268.00,455.00,504.00,655.00,715.00,735.00]
4; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 8; 13.00; [255.00,268.00,415.00,435.00,455.00,504.00,655.00,728.00]
5; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 9; 20.00; [95.00,195.00,248.00,268.00,395.00,455.00,504.00,655.00,735.00]
9; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 8; 13.00; [95.00,195.00,255.00,268.00,455.00,504.00,655.00,735.00]
11; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 7.00; [728.00,735.00,744.00,935.00]
18; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 9; 27.00; [195.00,235.00,504.00,555.00,615.00,668.00,708.00,735.00,935.00]
22; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 9; 31.00; [168.00,235.00,408.00,504.00,535.00,615.00,675.00,735.00,855.00]
29; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 9; 47.00; [95.00,195.00,248.00,315.00,455.00,504.00,608.00,655.00,735.00]
54; /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 9; 7.00; [95.00,115.00,195.00,248.00,255.00,268.00,455.00,504.00,575.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 5, 4, 22, 28, 12, 13, 12, 26, 12, 13, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 15, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 42, 36, 30, 26, 11, 33, 8, 20, 4, 38, 12, 8, 20, 49, 42, 44, 45, 26, 11, 33, 8, 20, 4, 24, 48, 8, 20, 29, 42, 26, 27, 29, 12, 34, 26, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 46, 30, 27, 11, 33, 35, 35, 29, 4, 12, 45, 20, 29, 42, 26, 27, 49, 28, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 36, 36, 46, 36, 36, 36, 36, 36, 10, 36, 36, 36, 14, 4, 37, 17, 5, 36, 32, 14, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 13, 15, 12, 48, 34, 43, 33, 33, 33, 33, 30, 12, 46, 6, 45, 9, 10, 29, 12, 47, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 19, 13, 12, 43, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 21, 20, 22, 32, 12, 12, 13, 36, 15, 30, 4, 11, 25, 40, 37, 50, 35, 38, 8, 42, 20, 23, 7, 4, 37, 50, 35, 38, 8, 42, 20, 23, 26, 40, 24, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 35, 13, 12, 15, 12, 48, 34, 40, 12, 13, 4, 36, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 40, 32, 16, 34, 41, 33, 41, 24, 39, 30, 32, 46, 6, 45, 9, 36, 5, 5, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1869810602720398168/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_002401_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,5,4,22,28,12], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,42,36,30,26,11,33], 8, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,46,30,27,11], 33, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,36,36,46,36,36,36], 36, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,19], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,21,20,22,32,12,12], 13, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,35], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,40,32,16], 34, 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:24:01,579 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-31 00:24:01,580 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 00:24:12,319 INFO     Done. Execution time: 10.739017486572266 seconds
2023-01-31 00:24:12,319 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_002401_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_002401_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,5,4,22,28,12], 13, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,42,36,30,26,11,33], 8, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,46,30,27,11], 33, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,36,36,46,36,36,36], 36, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,19], 13, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,21,20,22,32,12,12], 13, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,35], 13, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,40,32,16], 34, 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,5,4,22,28,12]
years: 13
months: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,42,36,30,26,11,33]
years: 8
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,46,30,27,11]
years: 33
months: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [36,36,36,46,36,36,36]
years: 36
months: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,12]
years: 13
months: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,19]
years: 13
months: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,21,20,22,32,12,12]
years: 13
months: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,35]
years: 13
months: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,40,32,16]
years: 34
months: 41
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [24,9,36,4,22,32,12]
years: 13
months: 12
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 176):
                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |        tokens         |  years  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      12  |  [24,9,5,4,22,28,12]  |     13  |
    26  |                      // int R = 0;  |         |    0  |         |     |      12  |  [24,9,5,4,22,28,12]  |     13  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      12  |  [24,9,5,4,22,28,12]  |     13  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      12  |  [24,9,5,4,22,28,12]  |     13  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      12  |  [24,9,5,4,22,28,12]  |     13  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |     24  |  0  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    41  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    44  |                     R = R + years;  |     13  |   37  |     24  |  0  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    47  |                    R = R + months;  |     12  |   49  |     24  |  0  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    51  |                         i = i + 1;  |         |   49  |     24  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    52  |              resetPlaceHolder_1();  |         |   49  |     24  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    58  |      chunk = arrayRead(tokens, i);  |         |   49  |      9  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    61  |                     R = R + chunk;  |      9  |   58  |      9  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    64  |                     R = R + years;  |     13  |   71  |      9  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    67  |                    R = R + months;  |     12  |   83  |      9  |  1  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    71  |                         i = i + 1;  |         |   83  |      9  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    72  |              resetPlaceHolder_1();  |         |   83  |      9  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    78  |      chunk = arrayRead(tokens, i);  |         |   83  |      5  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    81  |                     R = R + chunk;  |      5  |   88  |      5  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    84  |                     R = R + years;  |     13  |  101  |      5  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    87  |                    R = R + months;  |     12  |  113  |      5  |  2  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    91  |                         i = i + 1;  |         |  113  |      5  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    92  |              resetPlaceHolder_1();  |         |  113  |      5  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
    98  |      chunk = arrayRead(tokens, i);  |         |  113  |      4  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   101  |                     R = R + chunk;  |      4  |  117  |      4  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   104  |                     R = R + years;  |     13  |  130  |      4  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   107  |                    R = R + months;  |     12  |  142  |      4  |  3  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   111  |                         i = i + 1;  |         |  142  |      4  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   112  |              resetPlaceHolder_1();  |         |  142  |      4  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   118  |      chunk = arrayRead(tokens, i);  |         |  142  |     22  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   121  |                     R = R + chunk;  |     22  |  164  |     22  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   124  |                     R = R + years;  |     13  |  177  |     22  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   127  |                    R = R + months;  |     12  |  189  |     22  |  4  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   131  |                         i = i + 1;  |         |  189  |     22  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   132  |              resetPlaceHolder_1();  |         |  189  |     22  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   138  |      chunk = arrayRead(tokens, i);  |         |  189  |     28  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   141  |                     R = R + chunk;  |     28  |  217  |     28  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   144  |                     R = R + years;  |     13  |  230  |     28  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   147  |                    R = R + months;  |     12  |  242  |     28  |  5  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   151  |                         i = i + 1;  |         |  242  |     28  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   152  |              resetPlaceHolder_1();  |         |  242  |     28  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   158  |      chunk = arrayRead(tokens, i);  |         |  242  |     12  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   161  |                     R = R + chunk;  |     12  |  254  |     12  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   164  |                     R = R + years;  |     13  |  267  |     12  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   167  |                    R = R + months;  |     12  |  279  |     12  |  6  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   171  |                         i = i + 1;  |         |  279  |     12  |  7  |      12  |  [24,9,5,4,22,28,12]  |     13  |
   172  |              resetPlaceHolder_1();  |         |  279  |     12  |  7  |      12  |  [24,9,5,4,22,28,12]  |     13  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 21 trace node indices: [101, 164, 121, 84, 147, 61, 141, 124, 41, 161, 64, 44, 144, 81, 167, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {144}; {164}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {144}; {164}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |
    44  |         R = R + years;  |     13  |                         0  |
    47  |        R = R + months;  |     12  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      9  |                            |
    64  |         R = R + years;  |     13  |                         1  |
    67  |        R = R + months;  |     12  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      5  |                            |
    84  |         R = R + years;  |     13  |                         2  |
    87  |        R = R + months;  |     12  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      4  |                            |
   104  |         R = R + years;  |     13  |                         3  |
   107  |        R = R + months;  |     12  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     22  |                            |
   124  |         R = R + years;  |     13  |                         4  |
   127  |        R = R + months;  |     12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     28  |                            |
   144  |         R = R + years;  |     13  |                         5  |
   147  |        R = R + months;  |     12  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     12  |                            |
   164  |         R = R + years;  |     13  |                         6  |
   167  |        R = R + months;  |     12  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |
    44  |         R = R + years;  |     13  |                            |
    47  |        R = R + months;  |     12  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      9  |                            |
    64  |         R = R + years;  |     13  |                            |
    67  |        R = R + months;  |     12  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      5  |                            |
    84  |         R = R + years;  |     13  |                            |
    87  |        R = R + months;  |     12  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      4  |                            |
   104  |         R = R + years;  |     13  |                            |
   107  |        R = R + months;  |     12  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     22  |                            |
   124  |         R = R + years;  |     13  |                            |
   127  |        R = R + months;  |     12  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     28  |                            |
   144  |         R = R + years;  |     13  |                            |
   147  |        R = R + months;  |     12  |                         5  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     12  |                         6  |
   164  |         R = R + years;  |     13  |                            |
   167  |        R = R + months;  |     12  |                         7  |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [101, 121, 61, 141, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,61}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81,141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {41,61}; {81,141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {41,61}; {81,141} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                         0  |
    44  |         R = R + years;  |     13  |                            |
    47  |        R = R + months;  |     12  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      9  |                         0  |
    64  |         R = R + years;  |     13  |                            |
    67  |        R = R + months;  |     12  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      5  |                         1  |
    84  |         R = R + years;  |     13  |                            |
    87  |        R = R + months;  |     12  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      4  |                            |
   104  |         R = R + years;  |     13  |                            |
   107  |        R = R + months;  |     12  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     22  |                            |
   124  |         R = R + years;  |     13  |                            |
   127  |        R = R + months;  |     12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     28  |                         1  |
   144  |         R = R + years;  |     13  |                            |
   147  |        R = R + months;  |     12  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     12  |                            |
   164  |         R = R + years;  |     13  |                            |
   167  |        R = R + months;  |     12  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {144}; {164}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {147}; {161}; {167}; {47}; {67}; {87}
GroupID(2): {41,61}; {81,141}
GroupID(3): {101,121}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
    44  |         R = R + years;  |     13  |                         0  |                            |                            |                            |
    47  |        R = R + months;  |     12  |                            |                         0  |                            |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    61  |         R = R + chunk;  |      9  |                            |                            |                         0  |                            |
    64  |         R = R + years;  |     13  |                         1  |                            |                            |                            |
    67  |        R = R + months;  |     12  |                            |                         1  |                            |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    81  |         R = R + chunk;  |      5  |                            |                            |                         1  |                            |
    84  |         R = R + years;  |     13  |                         2  |                            |                            |                            |
    87  |        R = R + months;  |     12  |                            |                         2  |                            |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   101  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   104  |         R = R + years;  |     13  |                         3  |                            |                            |                            |
   107  |        R = R + months;  |     12  |                            |                         3  |                            |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   121  |         R = R + chunk;  |     22  |                            |                            |                            |                         0  |
   124  |         R = R + years;  |     13  |                         4  |                            |                            |                            |
   127  |        R = R + months;  |     12  |                            |                         4  |                            |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   141  |         R = R + chunk;  |     28  |                            |                            |                         1  |                            |
   144  |         R = R + years;  |     13  |                         5  |                            |                            |                            |
   147  |        R = R + months;  |     12  |                            |                         5  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   161  |         R = R + chunk;  |     12  |                            |                         6  |                            |                            |
   164  |         R = R + years;  |     13  |                         6  |                            |                            |                            |
   167  |        R = R + months;  |     12  |                            |                         7  |                            |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 6 and 7 segment (index range: [162, 166])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
    44  |         R = R + years;  |     13  |                         0  |                            |                            |                            |
    47  |        R = R + months;  |     12  |                            |                         0  |                            |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    61  |         R = R + chunk;  |      9  |                            |                            |                         0  |                            |
    64  |         R = R + years;  |     13  |                         1  |                            |                            |                            |
    67  |        R = R + months;  |     12  |                            |                         1  |                            |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    81  |         R = R + chunk;  |      5  |                            |                            |                         1  |                            |
    84  |         R = R + years;  |     13  |                         2  |                            |                            |                            |
    87  |        R = R + months;  |     12  |                            |                         2  |                            |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   101  |         R = R + chunk;  |      4  |                            |                            |                            |                         0  |
   104  |         R = R + years;  |     13  |                         3  |                            |                            |                            |
   107  |        R = R + months;  |     12  |                            |                         3  |                            |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   121  |         R = R + chunk;  |     22  |                            |                            |                            |                         0  |
   124  |         R = R + years;  |     13  |                         4  |                            |                            |                            |
   127  |        R = R + months;  |     12  |                            |                         4  |                            |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   141  |         R = R + chunk;  |     28  |                            |                            |                         1  |                            |
   144  |         R = R + years;  |     13  |                         5  |                            |                            |                            |
   147  |        R = R + months;  |     12  |                            |                         5  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   161  |         R = R + chunk;  |     12  |                            |                         6  |                            |                            |
   164  |         R = R + years;  |     13  |                         6  |                            |                            |                            |
   167  |        R = R + months;  |     12  |                            |                         7  |                            |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 152, 132, 92, 112, 72)
GroupID(1): Set(52, 152, 132, 92, 112, 72)
GroupID(2): Set(72)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 2) || (i == 2))
{
  R2 = R2 + chunk;
}
else
{
  if ((i < 4) || (i == 4))
  {
    R3 = R3 + chunk;
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R3
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      // reset R2
    }
    else
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
  }
  else
  {
    // reset R2
  }
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-31 00:24:12,319 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:25:14,999 INFO     Done. Execution time: 62.67966151237488 seconds
2023-01-31 00:25:14,999 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
      }
      else
      {

      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
      }
      else
      {

      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8122018359409375381.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1247037938790606460.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-59857040897396722.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4442366832278612968.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6182607978766494984.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6830865019817858077.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3503865290756168683.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-66152074488151042.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7971864466540211779.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8658161743804677096.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4962291722298793561.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3226061794545906101.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (and (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    6)  (define-fun D0 () Int    2)  (define-fun D3 () Int    0)  (define-fun D1 () Int    7)  (define-fun C2 () Int    15)  (define-fun C1 () Int    7)  (define-fun C3 () Int    10)  (define-fun months () Int    13)  (define-fun tokens () Int    13)  (define-fun years () Int    1)  (define-fun D2p () Int    6)  (define-fun D0p () Int    2)  (define-fun D3p () Int    6)  (define-fun D1p () Int    15)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `60.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0024-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0024-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.673s
user	4m2.246s
sys	0m3.045s

2023-01-31 00:25:14,999 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 00:25:14,999 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:26:20,886 INFO     Done. Execution time: 65.88633346557617 seconds
2023-01-31 00:26:20,886 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz5653609717308396084/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5653609717308396084/bin -o /tmp/qfuzz5653609717308396084/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5653609717308396084/bin
Found file /tmp/qfuzz5653609717308396084/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz5653609717308396084/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5653609717308396084/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5653609717308396084/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5653609717308396084/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5653609717308396084/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 124824 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 9, 6, 48, 25, 25, 25, 25, 26, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 36, 33, 29, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5653609717308396084/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_002620_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:26:20,886 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-31 00:26:20,887 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 00:26:27,045 INFO     Done. Execution time: 6.157877445220947 seconds
2023-01-31 00:26:27,045 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_002620_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_002620_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-31 00:26:27,045 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:26:34,459 INFO     Done. Execution time: 7.413474798202515 seconds
2023-01-31 00:26:34,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0026-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.405s
user	0m15.920s
sys	0m2.413s

2023-01-31 00:26:34,459 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 00:26:34,459 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:27:40,382 INFO     Done. Execution time: 65.92227435112 seconds
2023-01-31 00:27:40,382 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz7735160804227207957/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7735160804227207957/bin -o /tmp/qfuzz7735160804227207957/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7735160804227207957/bin
Found file /tmp/qfuzz7735160804227207957/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz7735160804227207957/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7735160804227207957/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7735160804227207957/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7735160804227207957/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz7735160804227207957/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 128065 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 11; 1.00; [28.00,32.00,35.50,37.00,88.00,188.00,248.00,448.00,488.00,648.00,728.00]
2; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 11; 1.00; [28.00,32.00,35.50,37.00,88.00,168.00,208.00,268.00,448.00,708.00,728.00]
3; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 10; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,168.00,488.00,508.00,788.00]
5; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 10; 1.00; [28.00,32.00,35.50,37.00,88.00,148.00,248.00,448.00,488.00,648.00]
7; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 10; 1.00; [8.00,28.00,32.00,35.50,37.00,168.00,548.00,588.00,748.00,848.00]
8; /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 11; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,128.00,168.00,408.00,488.00,668.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 6, 4, 33, 24, 5, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 27, 37, 8, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 32, 7, 4, 22, 32, 12, 13, 12, 17, 12, 48, 34, 40, 12, 46, 6, 45, 9, 50, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 25, 13, 24, 24, 4, 5, 8, 42, 4, 29, 38, 13, 4, 4, 5, 38, 42, 4, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 35, 36, 4, 22, 13, 10, 42, 33, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz7735160804227207957/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_002740_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,6,4,33,24,5,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,27,37,8,42]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,32,7,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,25,13,24,24,4,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,35,36,4,22,13,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:27:40,382 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-31 00:27:40,383 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 00:27:54,343 INFO     Done. Execution time: 13.960237741470337 seconds
2023-01-31 00:27:54,343 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_002740_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_002740_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,6,4,33,24,5,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,27,37,8,42])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,32,7,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,25,13,24,24,4,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,35,36,4,22,13,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [8,6,4,33,24,5,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [29,27,37,8,42]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [24,32,7,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [39,25,13,24,24,4,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [8,35,36,4,22,13,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 255):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |     baseMessage      |  buffer  |  chunk  |  i  |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [8,6,4,33,24,5,20]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [8,6,4,33,24,5,20]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [8,6,4,33,24,5,20]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [8,6,4,33,24,5,20]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    42  |                     R = R + chunk;  |      8  |   13  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    45  |                         R = R + 1;  |      1  |   14  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    48  |                         R = R + 1;  |      1  |   15  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    51  |                         R = R + 1;  |      1  |   16  |  [8,6,4,33,24,5,20]  |       0  |      8  |  0  |
    55  |                         i = i + 1;  |         |   16  |  [8,6,4,33,24,5,20]  |       0  |      8  |  1  |
    56  |              resetPlaceHolder_1();  |         |   16  |  [8,6,4,33,24,5,20]  |       0  |      8  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   16  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    65  |                         R = R + 1;  |      1  |   17  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    68  |                         R = R + 1;  |      1  |   18  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    71  |                         R = R + 1;  |      1  |   19  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    74  |                     R = R + chunk;  |      6  |   25  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    77  |                         R = R + 1;  |      1  |   26  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    80  |                         R = R + 1;  |      1  |   27  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    83  |                         R = R + 1;  |      1  |   28  |  [8,6,4,33,24,5,20]  |       0  |      6  |  1  |
    87  |                         i = i + 1;  |         |   28  |  [8,6,4,33,24,5,20]  |       0  |      6  |  2  |
    88  |              resetPlaceHolder_1();  |         |   28  |  [8,6,4,33,24,5,20]  |       0  |      6  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |   28  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
    97  |                         R = R + 1;  |      1  |   29  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   100  |                         R = R + 1;  |      1  |   30  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   103  |                         R = R + 1;  |      1  |   31  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   106  |                     R = R + chunk;  |      4  |   35  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   109  |                         R = R + 1;  |      1  |   36  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   112  |                         R = R + 1;  |      1  |   37  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   115  |                         R = R + 1;  |      1  |   38  |  [8,6,4,33,24,5,20]  |       0  |      4  |  2  |
   119  |                         i = i + 1;  |         |   38  |  [8,6,4,33,24,5,20]  |       0  |      4  |  3  |
   120  |              resetPlaceHolder_1();  |         |   38  |  [8,6,4,33,24,5,20]  |       0  |      4  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |   38  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   129  |                         R = R + 1;  |      1  |   39  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   132  |                         R = R + 1;  |      1  |   40  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   135  |                         R = R + 1;  |      1  |   41  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   138  |                     R = R + chunk;  |     33  |   74  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   141  |                         R = R + 1;  |      1  |   75  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   144  |                         R = R + 1;  |      1  |   76  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   147  |                         R = R + 1;  |      1  |   77  |  [8,6,4,33,24,5,20]  |       0  |     33  |  3  |
   151  |                         i = i + 1;  |         |   77  |  [8,6,4,33,24,5,20]  |       0  |     33  |  4  |
   152  |              resetPlaceHolder_1();  |         |   77  |  [8,6,4,33,24,5,20]  |       0  |     33  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |   77  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   161  |                         R = R + 1;  |      1  |   78  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   164  |                         R = R + 1;  |      1  |   79  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   167  |                         R = R + 1;  |      1  |   80  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   170  |                     R = R + chunk;  |     24  |  104  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   173  |                         R = R + 1;  |      1  |  105  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   176  |                         R = R + 1;  |      1  |  106  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   179  |                         R = R + 1;  |      1  |  107  |  [8,6,4,33,24,5,20]  |       0  |     24  |  4  |
   183  |                         i = i + 1;  |         |  107  |  [8,6,4,33,24,5,20]  |       0  |     24  |  5  |
   184  |              resetPlaceHolder_1();  |         |  107  |  [8,6,4,33,24,5,20]  |       0  |     24  |  5  |
   190  |  chunk = arrayRead(baseMessage,...  |         |  107  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   193  |                         R = R + 1;  |      1  |  108  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   196  |                         R = R + 1;  |      1  |  109  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   199  |                         R = R + 1;  |      1  |  110  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   202  |                     R = R + chunk;  |      5  |  115  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   205  |                         R = R + 1;  |      1  |  116  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   208  |                         R = R + 1;  |      1  |  117  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   211  |                         R = R + 1;  |      1  |  118  |  [8,6,4,33,24,5,20]  |       0  |      5  |  5  |
   215  |                         i = i + 1;  |         |  118  |  [8,6,4,33,24,5,20]  |       0  |      5  |  6  |
   216  |              resetPlaceHolder_1();  |         |  118  |  [8,6,4,33,24,5,20]  |       0  |      5  |  6  |
   222  |  chunk = arrayRead(baseMessage,...  |         |  118  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   225  |                         R = R + 1;  |      1  |  119  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   228  |                         R = R + 1;  |      1  |  120  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   231  |                         R = R + 1;  |      1  |  121  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   234  |                     R = R + chunk;  |     20  |  141  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   237  |                         R = R + 1;  |      1  |  142  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   240  |                         R = R + 1;  |      1  |  143  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   243  |                         R = R + 1;  |      1  |  144  |  [8,6,4,33,24,5,20]  |       0  |     20  |  6  |
   247  |                         i = i + 1;  |         |  144  |  [8,6,4,33,24,5,20]  |       0  |     20  |  7  |
   248  |              resetPlaceHolder_1();  |         |  144  |  [8,6,4,33,24,5,20]  |       0  |     20  |  7  |
   254  |                         R = R + 1;  |      1  |  145  |  [8,6,4,33,24,5,20]  |       0  |     20  |  7  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 52 trace node indices: [138, 234, 170, 115, 202, 42, 196, 20, 228, 164, 179, 211, 106, 147, 132, 243, 74, 33, 65, 97, 141, 109, 225, 77, 193, 173, 129, 237, 205, 45, 161, 17, 176, 71, 144, 39, 208, 103, 240, 135, 80, 167, 112, 48, 199, 231, 36, 51, 68, 254, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {193}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {196}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {199}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {205}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {208}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {228}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {231}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |      8  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |      6  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |      4  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     33  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     24  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                        32  |
   196  |             R = R + 1;  |      1  |                        33  |
   199  |             R = R + 1;  |      1  |                        34  |
   202  |         R = R + chunk;  |      5  |                            |
   205  |             R = R + 1;  |      1  |                        35  |
   208  |             R = R + 1;  |      1  |                        36  |
   211  |             R = R + 1;  |      1  |                        37  |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                        38  |
   228  |             R = R + 1;  |      1  |                        39  |
   231  |             R = R + 1;  |      1  |                        40  |
   234  |         R = R + chunk;  |     20  |                            |
   237  |             R = R + 1;  |      1  |                        41  |
   240  |             R = R + 1;  |      1  |                        42  |
   243  |             R = R + 1;  |      1  |                        43  |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                        44  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,234}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,138,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,138,234}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,170,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,202,234}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,74,234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,170}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,138,170,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,138,202,234}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,74,138,234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,138,170}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,74,202,234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,170,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,74,138,202,234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,138,170,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [138, 234, 170, 202, 42, 106, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170,202,234}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 192])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 32 and 33 segment (index range: [194, 195])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 33 and 34 segment (index range: [197, 198])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 34 and 35 segment (index range: [200, 204])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 35 and 36 segment (index range: [206, 207])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 36 and 37 segment (index range: [209, 210])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 37 and 38 segment (index range: [212, 224])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 38 and 39 segment (index range: [226, 227])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 39 and 40 segment (index range: [229, 230])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 40 and 41 segment (index range: [232, 236])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 41 and 42 segment (index range: [238, 239])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 42 and 43 segment (index range: [241, 242])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 43 and 44 segment (index range: [244, 253])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |      8  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      6  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |      4  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     33  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     24  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |      5  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |     20  |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-31 00:27:54,345 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:28:05,955 INFO     Done. Execution time: 11.61013126373291 seconds
2023-01-31 00:28:05,955 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `9.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0027-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.603s
user	0m33.023s
sys	0m4.313s

2023-01-31 00:28:05,956 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 00:28:05,956 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:29:11,814 INFO     Done. Execution time: 65.85753345489502 seconds
2023-01-31 00:29:11,814 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz5357277360968563005/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5357277360968563005/bin -o /tmp/qfuzz5357277360968563005/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5357277360968563005/bin
Found file /tmp/qfuzz5357277360968563005/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz5357277360968563005/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5357277360968563005/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5357277360968563005/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5357277360968563005/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5357277360968563005/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 120442 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
11; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
22; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
38; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
55; /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 18, 34, 24, 50, 26, 40, 35, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 9, 36, 4, 22, 32, 12, 7, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 44, 40, 31, 38, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 8, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 9, 9, 12, 9, 9, 9, 9, 40, 9, 9, 9, 15, 34, 40, 39, 18, 34, 40, 45, 48, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 16, 16, 16, 10, 16, 16, 16, 16, 16, 12, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 37, 16, 49, 40, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 9, 36, 32, 12, 11, 5, 16, 12, 46, 6, 21, 9, 24, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 9, 36, 4, 22, 36, 29, 39, 4, 22, 12, 48, 34, 40, 12, 29, 29, 45, 43, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 24, 16, 5, 7, 23, 24, 42, 31, 45, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 11, 15, 16, 4, 24, 4, 31, 28, 9, 20, 5, 43, 24, 43, 35, 5, 11, 37, 24, 39, 4, 4, 4, 32, 4, 4, 5, 24, 39, 4, 4, 4, 32, 4, 23, 23, 5, 44, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5357277360968563005/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_002911_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 48
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 42
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:29:11,814 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-31 00:29:11,814 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 00:29:18,181 INFO     Done. Execution time: 6.367030382156372 seconds
2023-01-31 00:29:18,182 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_002911_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_002911_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(48)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(42)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(23)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 13 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 16
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 48
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 42
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 23
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 24
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 425):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         19  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         19  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         19  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         19  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         19  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         19  |          19  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         19  |          18  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         19  |          18  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         19  |          18  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         19  |          18  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         19  |          17  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         19  |          17  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         19  |          17  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         19  |          17  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         19  |          16  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         19  |          16  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         19  |          16  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         19  |          16  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         19  |          15  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         19  |          15  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         19  |          15  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         19  |          15  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         19  |          14  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         19  |          14  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         19  |          14  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         19  |          14  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         19  |          13  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         19  |          13  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         19  |          13  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         19  |          13  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         19  |          12  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         19  |          12  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         19  |          12  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         19  |          12  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         19  |          11  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         19  |          11  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         19  |          11  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         19  |          11  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         19  |          10  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         19  |          10  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         19  |          10  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         19  |          10  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         19  |           9  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         19  |           9  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         19  |           9  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         19  |           9  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         19  |           8  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         19  |           8  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         19  |           8  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         19  |           8  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         19  |           7  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         19  |           7  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         19  |           7  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         19  |           7  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         19  |           6  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         19  |           6  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         19  |           6  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         19  |           6  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         19  |           5  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         19  |           5  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         19  |           5  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         19  |           5  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         19  |           4  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         19  |           4  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         19  |           4  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         19  |           4  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         19  |           3  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         19  |           3  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         19  |           3  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         19  |           3  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         19  |           2  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         19  |           2  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         19  |           2  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         19  |           2  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         19  |           1  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         19  |           1  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         19  |           1  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         19  |           1  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         19  |           0  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         19  |           0  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         19  |           0  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         19  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 19 trace node indices: [120, 288, 372, 57, 78, 141, 225, 393, 204, 330, 267, 162, 414, 99, 351, 246, 36, 183, 309]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {57}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {57}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {57}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 247, 142, 37, 184, 289, 121, 205, 394, 226, 310, 331, 58, 373, 268, 79, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-31 00:29:18,182 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:29:25,467 INFO     Done. Execution time: 7.284575700759888 seconds
2023-01-31 00:29:25,467 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0029-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0029-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.278s
user	0m15.506s
sys	0m2.183s

2023-01-31 00:29:25,467 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 00:29:25,467 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:30:31,253 INFO     Done. Execution time: 65.78540444374084 seconds
2023-01-31 00:30:31,253 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz1571713554478193480/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1571713554478193480/bin -o /tmp/qfuzz1571713554478193480/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1571713554478193480/bin
Found file /tmp/qfuzz1571713554478193480/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz1571713554478193480/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1571713554478193480/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1571713554478193480/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1571713554478193480/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1571713554478193480/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 123365 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 16.00; [18.00,34.00]
2; /tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1571713554478193480/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_003031_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:30:31,254 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-31 00:30:31,254 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 00:30:38,285 INFO     Done. Execution time: 7.030878067016602 seconds
2023-01-31 00:30:38,285 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_003031_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_003031_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-31 00:30:38,285 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:30:46,121 INFO     Done. Execution time: 7.835666656494141 seconds
2023-01-31 00:30:46,121 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0030-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.828s
user	0m17.939s
sys	0m2.302s

2023-01-31 00:30:46,121 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 00:30:46,121 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:31:52,161 INFO     Done. Execution time: 66.03987526893616 seconds
2023-01-31 00:31:52,162 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5249228896695715995/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5249228896695715995/bin -o /tmp/qfuzz5249228896695715995/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5249228896695715995/bin
Found file /tmp/qfuzz5249228896695715995/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5249228896695715995/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5249228896695715995/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5249228896695715995/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5249228896695715995/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5249228896695715995/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 112582 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [41.00]
2; /tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5249228896695715995/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_003151_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:31:52,162 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-31 00:31:52,162 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 00:31:57,276 INFO     Done. Execution time: 5.1140406131744385 seconds
2023-01-31 00:31:57,277 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_003151_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_003151_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

2023-01-31 00:31:57,277 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:32:03,936 INFO     Done. Execution time: 6.658700942993164 seconds
2023-01-31 00:32:03,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0031-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0031-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.651s
user	0m14.495s
sys	0m2.118s

2023-01-31 00:32:03,936 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 00:32:03,936 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:33:09,943 INFO     Done. Execution time: 66.00632071495056 seconds
2023-01-31 00:33:09,943 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz4339306333526948809/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4339306333526948809/bin -o /tmp/qfuzz4339306333526948809/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4339306333526948809/bin
Found file /tmp/qfuzz4339306333526948809/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz4339306333526948809/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4339306333526948809/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4339306333526948809/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4339306333526948809/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4339306333526948809/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 112357 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 9, 36, 4, 22, 32, 12, 13, 12, 40, 46, 48, 34, 40, 12, 46, 40, 25, 48, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4339306333526948809/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_003309_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:33:09,943 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-31 00:33:09,944 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 00:33:16,097 INFO     Done. Execution time: 6.1532814502716064 seconds
2023-01-31 00:33:16,097 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_003309_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_003309_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-31 00:33:16,097 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:33:23,293 INFO     Done. Execution time: 7.195824384689331 seconds
2023-01-31 00:33:23,294 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0033-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0033-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.189s
user	0m15.181s
sys	0m2.245s

2023-01-31 00:33:23,294 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 00:33:23,294 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:34:29,486 INFO     Done. Execution time: 66.19174838066101 seconds
2023-01-31 00:34:29,486 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz2763253848822985274/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2763253848822985274/bin -o /tmp/qfuzz2763253848822985274/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2763253848822985274/bin
Found file /tmp/qfuzz2763253848822985274/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz2763253848822985274/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2763253848822985274/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2763253848822985274/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2763253848822985274/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2763253848822985274/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 127535 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2763253848822985274/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_003429_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:34:29,486 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-31 00:34:29,486 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 00:34:34,808 INFO     Done. Execution time: 5.32092547416687 seconds
2023-01-31 00:34:34,808 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_003429_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_003429_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-31 00:34:34,808 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:34:42,379 INFO     Done. Execution time: 7.571237325668335 seconds
2023-01-31 00:34:42,380 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0034-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.564s
user	0m16.590s
sys	0m2.311s

2023-01-31 00:34:42,380 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 00:34:42,380 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:35:48,193 INFO     Done. Execution time: 65.81341576576233 seconds
2023-01-31 00:35:48,194 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz6567432342338858988/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6567432342338858988/bin -o /tmp/qfuzz6567432342338858988/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6567432342338858988/bin
Found file /tmp/qfuzz6567432342338858988/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz6567432342338858988/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6567432342338858988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6567432342338858988/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6567432342338858988/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6567432342338858988/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 117567 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6567432342338858988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_003547_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:35:48,194 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-31 00:35:48,194 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 00:35:51,869 INFO     Done. Execution time: 3.6747584342956543 seconds
2023-01-31 00:35:51,869 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_003547_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_003547_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-31 00:35:51,869 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:35:53,932 INFO     Done. Execution time: 2.062286853790283 seconds
2023-01-31 00:35:53,932 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0035-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0035-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.056s
user	0m3.744s
sys	0m0.225s

2023-01-31 00:35:53,932 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 00:35:53,932 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:36:59,698 INFO     Done. Execution time: 65.76600003242493 seconds
2023-01-31 00:36:59,699 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz5436098626866712455/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5436098626866712455/bin -o /tmp/qfuzz5436098626866712455/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5436098626866712455/bin
Found file /tmp/qfuzz5436098626866712455/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz5436098626866712455/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5436098626866712455/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5436098626866712455/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5436098626866712455/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5436098626866712455/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 122956 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 8, 8, 8, 8, 8, 48, 8, 28, 6, 29, 48, 21, 13, 46, 26, 50, 18, 13, 46, 26, 29, 48, 21, 33, 46, 6, 46, 46, 46, 21, 20, 34, 29, 46, 46, 46, 46, 46, 23, 48, 22, 34, 16, 25, 19, 20, 21, 50, 42, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5436098626866712455/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_003659_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:36:59,699 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-31 00:36:59,699 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 00:37:07,203 INFO     Done. Execution time: 7.5037970542907715 seconds
2023-01-31 00:37:07,203 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_003659_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_003659_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-31 00:37:07,203 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:37:16,977 INFO     Done. Execution time: 9.773115158081055 seconds
2023-01-31 00:37:16,977 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0037-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.766s
user	0m26.553s
sys	0m4.236s

2023-01-31 00:37:16,977 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 00:37:16,977 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:38:22,986 INFO     Done. Execution time: 66.00852870941162 seconds
2023-01-31 00:38:22,986 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4992655641870443563/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4992655641870443563/bin -o /tmp/qfuzz4992655641870443563/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4992655641870443563/bin
Found file /tmp/qfuzz4992655641870443563/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4992655641870443563/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4992655641870443563/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4992655641870443563/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4992655641870443563/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4992655641870443563/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 126208 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4992655641870443563/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_003822_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:38:22,986 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-31 00:38:22,987 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 00:38:29,007 INFO     Done. Execution time: 6.019773721694946 seconds
2023-01-31 00:38:29,007 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_003822_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_003822_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-31 00:38:29,007 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:38:35,894 INFO     Done. Execution time: 6.886629343032837 seconds
2023-01-31 00:38:35,894 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0038-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0038-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.879s
user	0m14.867s
sys	0m2.125s

2023-01-31 00:38:35,894 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 00:38:35,894 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:39:41,636 INFO     Done. Execution time: 65.74147319793701 seconds
2023-01-31 00:39:41,636 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz601819789966022485/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz601819789966022485/bin -o /tmp/qfuzz601819789966022485/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz601819789966022485/bin
Found file /tmp/qfuzz601819789966022485/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz601819789966022485/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz601819789966022485/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz601819789966022485/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz601819789966022485/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz601819789966022485/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz601819789966022485/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz601819789966022485/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 122314 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [36.00]
2; /tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz601819789966022485/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_003941_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:39:41,636 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-31 00:39:41,637 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 00:39:45,530 INFO     Done. Execution time: 3.8933188915252686 seconds
2023-01-31 00:39:45,530 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_003941_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_003941_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-31 00:39:45,531 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:39:51,628 INFO     Done. Execution time: 6.097201347351074 seconds
2023-01-31 00:39:51,628 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0039-transparentAmortize-60s-mostPrecise/lang3-raw-0131-0039-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.090s
user	0m13.054s
sys	0m1.868s

2023-01-31 00:39:51,628 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 00:39:51,629 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:40:57,466 INFO     Done. Execution time: 65.83708786964417 seconds
2023-01-31 00:40:57,466 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz1184065588826201276/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1184065588826201276/bin -o /tmp/qfuzz1184065588826201276/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1184065588826201276/bin
Found file /tmp/qfuzz1184065588826201276/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz1184065588826201276/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1184065588826201276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1184065588826201276/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1184065588826201276/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz1184065588826201276/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 125958 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [49.00]
2; /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta; 2; 8.00; [35.00,43.00]
4; /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 2; 14.00; [35.00,49.00]
7; /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 26, 44, 18, 18, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 9, 29, 34, 35, 15, 8, 20, 47, 42, 26, 16, 16, 42, 37, 7, 7, 20, 5, 10, 47, 4, 22, 26, 48, 26, 22, 32, 49, 23, 23, 20, 5, 10, 47, 4, 16, 26, 48, 26, 22, 32, 49, 25, 36, 23, 23, 4, 41, 26, 22, 32, 30, 28, 29, 38, 43, 35, 23, 49, 40, 25, 7, 23, 49, 23, 48, 12, 23, 47, 8, 33, 28, 28, 23, 16, 35, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 35, 38, 20, 18, 32, 12, 13, 12, 15, 12, 48, 16, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz1184065588826201276/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_004057_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [26,44,18,18,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,29,34,35,15,8,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [35,38,20,18,32,12,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [9,36,4,22,32,12,13]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:40:57,466 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-31 00:40:57,467 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 00:41:04,016 INFO     Done. Execution time: 6.5490193367004395 seconds
2023-01-31 00:41:04,016 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_004057_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_004057_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [26,44,18,18,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [35,38,20,18,32,12,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,29,34,35,15,8,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [9,36,4,22,32,12,13])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [26,44,18,18,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [9,29,34,35,15,8,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [35,38,20,18,32,12,13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [9,36,4,22,32,12,13]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 80):
                                                                                                                           
 Index  |              Commands               |  Costs  |  R  |  choice  |      choices       |  i  |  str  |  strDigits  |
---------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [26,44,18,18,47]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [26,44,18,18,47]  |     |    2  |             |
    15  |  // mostPreciseBound(R <= str |...  |         |  0  |          |  [26,44,18,18,47]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [26,44,18,18,47]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [26,44,18,18,47]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [26,44,18,18,47]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [26,44,18,18,47]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      26  |  [26,44,18,18,47]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |      26  |  [26,44,18,18,47]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |      26  |  [26,44,18,18,47]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |      26  |  [26,44,18,18,47]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |      26  |  [26,44,18,18,47]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |      44  |  [26,44,18,18,47]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |      44  |  [26,44,18,18,47]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |      44  |  [26,44,18,18,47]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |      44  |  [26,44,18,18,47]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |      44  |  [26,44,18,18,47]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-31 00:41:04,016 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:41:25,102 INFO     Done. Execution time: 21.08603310585022 seconds
2023-01-31 00:41:25,102 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `19.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0041-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0041-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m21.079s
user	0m46.794s
sys	0m3.922s

2023-01-31 00:41:25,103 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 00:41:25,103 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:42:31,091 INFO     Done. Execution time: 65.9881820678711 seconds
2023-01-31 00:42:31,091 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz6958183210535559577/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6958183210535559577/bin -o /tmp/qfuzz6958183210535559577/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6958183210535559577/bin
Found file /tmp/qfuzz6958183210535559577/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz6958183210535559577/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6958183210535559577/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6958183210535559577/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6958183210535559577/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz6958183210535559577/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 126531 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6958183210535559577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6958183210535559577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz6958183210535559577/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_004230_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:42:31,092 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-31 00:42:31,092 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 00:42:33,861 INFO     Done. Execution time: 2.7690744400024414 seconds
2023-01-31 00:42:33,861 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_004230_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_004230_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [24,9,36,4,22,32,12]
startIndex: 13
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                             
 Index  |   Commands   |  Costs  |  R  |         array          |  endIndex  |  startIndex  |
---------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [24,9,36,4,22,32,12]  |         2  |          13  |
    48  |     return;  |         |  0  |  [24,9,36,4,22,32,12]  |         2  |          13  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-31 00:42:33,862 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:42:35,877 INFO     Done. Execution time: 2.015303373336792 seconds
2023-01-31 00:42:35,877 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0042-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0042-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.008s
user	0m3.449s
sys	0m0.217s

2023-01-31 00:42:35,877 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 00:42:35,877 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:43:41,793 INFO     Done. Execution time: 65.91561079025269 seconds
2023-01-31 00:43:41,793 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5491622809622583086/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5491622809622583086/bin -o /tmp/qfuzz5491622809622583086/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5491622809622583086/bin
Found file /tmp/qfuzz5491622809622583086/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5491622809622583086/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5491622809622583086/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5491622809622583086/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5491622809622583086/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5491622809622583086/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 107485 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m107k to 107k us (average: 107k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 50.00; [32.00,91.00,191.00,251.00,451.00,501.00,651.00,731.00]
1; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 7; 10.00; [32.00,91.00,101.00,151.00,191.00,211.00,531.00]
3; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 80.00; [32.00,211.00,291.00,551.00,731.00,861.00]
5; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 8; 59.00; [32.00,91.00,161.00,251.00,451.00,651.00,731.00,991.00]
6; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 8; 60.00; [32.00,131.00,191.00,261.00,371.00,671.00,911.00,991.00]
10; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 21.00; [11.00,32.00,681.00]
15; /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 4; 10.00; [32.00,111.00,121.00,351.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 5, 5, 5, 17, 5, 5, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 38, 24, 39, 30, 32, 11, 33, 35, 23, 14, 35, 38, 8, 12, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 18, 6, 45, 9, 33, 49, 12, 30, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 49, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 49, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 31, 12, 46, 6, 45, 9, 31, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 10, 36, 14, 27, 27, 27, 6, 15, 24, 39, 30, 32, 36, 27, 27, 27, 27, 27, 40, 27, 27, 27, 32, 10, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 26, 10, 7, 9, 30, 26, 39, 27, 45, 12, 33, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5491622809622583086/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_004341_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,5,5,5,17,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,18,6,45,9,33,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,49,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [42,10,36,14,27,27,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,26,10,7,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:43:41,794 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-31 00:43:41,794 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 00:43:50,677 INFO     Done. Execution time: 8.88285517692566 seconds
2023-01-31 00:43:50,677 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_004341_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_004341_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,5,5,5,17,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,18,6,45,9,33,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,49,36,4,22,32,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([42,10,36,14,27,27,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,26,10,7,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,5,5,5,5,17,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [12,18,6,45,9,33,49]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,49,36,4,22,32,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [42,10,36,14,27,27,27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [4,4,4,26,10,7,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                    
 Index  |   Commands   |  Costs  |  R  |  objects  |
----------------------------------------------------
     2  |  int R = 0;  |         |  0  |       []  |
    10  |     return;  |         |  0  |       []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                     
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |      objects       |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [5,5,5,5,5,17,5]  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [5,5,5,5,5,17,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [5,5,5,5,5,17,5]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |  [5,5,5,5,5,17,5]  |
    14  |                         int i = 0;  |         |   0  |         |  0  |  [5,5,5,5,5,17,5]  |
    16  |                     int chunk = 0;  |         |   0  |      0  |  0  |  [5,5,5,5,5,17,5]  |
    19  |     chunk = arrayRead(objects, i);  |         |   0  |      5  |  0  |  [5,5,5,5,5,17,5]  |
    22  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |  [5,5,5,5,5,17,5]  |
    26  |                         i = i + 1;  |         |   5  |      5  |  1  |  [5,5,5,5,5,17,5]  |
    32  |                         R = R + 1;  |      1  |   6  |      5  |  1  |  [5,5,5,5,5,17,5]  |
    35  |     chunk = arrayRead(objects, i);  |         |   6  |      5  |  1  |  [5,5,5,5,5,17,5]  |
    38  |                     R = R + chunk;  |      5  |  11  |      5  |  1  |  [5,5,5,5,5,17,5]  |
    42  |                         i = i + 1;  |         |  11  |      5  |  2  |  [5,5,5,5,5,17,5]  |
    43  |              resetPlaceHolder_1();  |         |  11  |      5  |  2  |  [5,5,5,5,5,17,5]  |
    49  |                         R = R + 1;  |      1  |  12  |      5  |  2  |  [5,5,5,5,5,17,5]  |
    52  |     chunk = arrayRead(objects, i);  |         |  12  |      5  |  2  |  [5,5,5,5,5,17,5]  |
    55  |                     R = R + chunk;  |      5  |  17  |      5  |  2  |  [5,5,5,5,5,17,5]  |
    59  |                         i = i + 1;  |         |  17  |      5  |  3  |  [5,5,5,5,5,17,5]  |
    60  |              resetPlaceHolder_1();  |         |  17  |      5  |  3  |  [5,5,5,5,5,17,5]  |
    66  |                         R = R + 1;  |      1  |  18  |      5  |  3  |  [5,5,5,5,5,17,5]  |
    69  |     chunk = arrayRead(objects, i);  |         |  18  |      5  |  3  |  [5,5,5,5,5,17,5]  |
    72  |                     R = R + chunk;  |      5  |  23  |      5  |  3  |  [5,5,5,5,5,17,5]  |
    76  |                         i = i + 1;  |         |  23  |      5  |  4  |  [5,5,5,5,5,17,5]  |
    77  |              resetPlaceHolder_1();  |         |  23  |      5  |  4  |  [5,5,5,5,5,17,5]  |
    83  |                         R = R + 1;  |      1  |  24  |      5  |  4  |  [5,5,5,5,5,17,5]  |
    86  |     chunk = arrayRead(objects, i);  |         |  24  |      5  |  4  |  [5,5,5,5,5,17,5]  |
    89  |                     R = R + chunk;  |      5  |  29  |      5  |  4  |  [5,5,5,5,5,17,5]  |
    93  |                         i = i + 1;  |         |  29  |      5  |  5  |  [5,5,5,5,5,17,5]  |
    94  |              resetPlaceHolder_1();  |         |  29  |      5  |  5  |  [5,5,5,5,5,17,5]  |
   100  |                         R = R + 1;  |      1  |  30  |      5  |  5  |  [5,5,5,5,5,17,5]  |
   103  |     chunk = arrayRead(objects, i);  |         |  30  |     17  |  5  |  [5,5,5,5,5,17,5]  |
   106  |                     R = R + chunk;  |     17  |  47  |     17  |  5  |  [5,5,5,5,5,17,5]  |
   110  |                         i = i + 1;  |         |  47  |     17  |  6  |  [5,5,5,5,5,17,5]  |
   111  |              resetPlaceHolder_1();  |         |  47  |     17  |  6  |  [5,5,5,5,5,17,5]  |
   117  |                         R = R + 1;  |      1  |  48  |     17  |  6  |  [5,5,5,5,5,17,5]  |
   120  |     chunk = arrayRead(objects, i);  |         |  48  |      5  |  6  |  [5,5,5,5,5,17,5]  |
   123  |                     R = R + chunk;  |      5  |  53  |      5  |  6  |  [5,5,5,5,5,17,5]  |
   127  |                         i = i + 1;  |         |  53  |      5  |  7  |  [5,5,5,5,5,17,5]  |
   128  |              resetPlaceHolder_1();  |         |  53  |      5  |  7  |  [5,5,5,5,5,17,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |      5  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |      5  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |      5  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |      5  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                         4  |
   106  |         R = R + chunk;  |     17  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                         5  |
   123  |         R = R + chunk;  |      5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {72}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {22}; {38}; {55}; {72}; {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(2), Set(3), Set(4), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {123}; {22}; {38}; {55}; {72}; {89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                         0  |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |      5  |                         1  |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |      5  |                         2  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |      5  |                         3  |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |      5  |                         4  |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     17  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                            |
   123  |         R = R + chunk;  |      5  |                         5  |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {123}; {22}; {38}; {55}; {72}; {89}
GroupID(2): {106}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [23, 37])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 1 and 2 segment (index range: [39, 54])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 2 and 3 segment (index range: [56, 71])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 3 and 4 segment (index range: [73, 88])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 4 and 5 segment (index range: [90, 122])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |
    38  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |
    55  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |
    72  |         R = R + chunk;  |      5  |                            |                         3  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |
    89  |         R = R + chunk;  |      5  |                            |                         4  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     17  |                            |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |
   123  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 4) || (i == 4))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 5) || (i == 5))
  {
    R2 = R2 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-31 00:43:50,678 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:45:15,012 INFO     Done. Execution time: 84.33405923843384 seconds
2023-01-31 00:45:15,012 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 objects))) (= D2p 0)))
      (a!5 (or (<= D1p (+ 0 (* 1 1 objects))) (= D1p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p 0)
       a!5
       (<= D0p (+ 0 (* 1 1)))
       a!6)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 objects))) (= D2 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 objects))) (= D1 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 objects)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    1)  (define-fun D1 () Int    6)  (define-fun D2 () Int    6)  (define-fun objects () Int    6)  (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `82.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0043-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0043-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m24.327s
user	4m45.441s
sys	0m8.232s

2023-01-31 00:45:15,012 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 00:45:15,012 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:46:20,742 INFO     Done. Execution time: 65.72980427742004 seconds
2023-01-31 00:46:20,742 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz8158142487206344519/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8158142487206344519/bin -o /tmp/qfuzz8158142487206344519/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8158142487206344519/bin
Found file /tmp/qfuzz8158142487206344519/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz8158142487206344519/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8158142487206344519/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8158142487206344519/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8158142487206344519/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8158142487206344519/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 127066 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 21.00; [91.00,191.00,251.00,272.00,451.00,501.00,651.00,731.00]
2; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 8; 20.00; [121.00,171.00,191.00,311.00,411.00,432.00,511.00,811.00]
3; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 7; 20.00; [91.00,191.50,411.00,501.00,551.00,791.00,811.00]
5; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 8; 60.00; [111.00,311.00,392.00,661.00,771.00,831.00,891.00,1011.00]
10; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 8; 50.00; [91.00,191.00,251.00,451.00,501.00,651.00,731.00,852.00]
20; /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 7; 60.00; [251.00,311.00,501.00,691.00,751.00,812.00,971.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 37, 48, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 31, 34, 8, 20, 35, 38, 8, 20, 29, 42, 26, 44, 26, 24, 29, 42, 26, 44, 42, 26, 44, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 42, 12, 15, 12, 48, 34, 40, 12, 15, 6, 45, 9, 33, 41, 6, 12, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 38, 41, 44, 5, 50, 15, 19, 39, 30, 20, 37, 24, 23, 40, 16, 46, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 27, 4, 20, 40, 39, 9, 45, 29, 6, 16, 8, 4, 4, 7, 14, 35, 36, 38, 26, 27, 36, 19, 33, 15, 24, 12, 26, 10, 41, 31, 30, 35, 23, 14, 35, 29, 42, 31, 27, 26, 32, 49, 23, 14, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 25, 9, 15, 20, 40, 8, 21, 38, 26, 38, 46, 7, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8158142487206344519/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_004620_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,37,48,15,12,48,34], 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 42
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,38,41,44,5,50,15], 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,27,4,20,40,39], 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,25,9,15,20,40,8], 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:46:20,743 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-31 00:46:20,743 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 00:46:32,258 INFO     Done. Execution time: 11.51539945602417 seconds
2023-01-31 00:46:32,259 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_004620_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_004620_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,37,48,15,12,48,34], 40)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 42)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,38,41,44,5,50,15], 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,27,4,20,40,39], 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,25,9,15,20,40,8], 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,37,48,15,12,48,34]
separator: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,12]
separator: 42
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [32,38,41,44,5,50,15]
separator: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,27,4,20,40,39]
separator: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,25,9,15,20,40,8]
separator: 21
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [24,9,36,4,22,32,12]
separator: 13
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects          |  separator  |
--------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [24,37,48,15,12,48,34]  |         40  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [24,37,48,15,12,48,34]  |         40  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [24,37,48,15,12,48,34]  |         40  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [24,37,48,15,12,48,34]  |         40  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [24,37,48,15,12,48,34]  |         40  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [24,37,48,15,12,48,34]  |         40  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     24  |  0  |  [24,37,48,15,12,48,34]  |         40  |
    22  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |  [24,37,48,15,12,48,34]  |         40  |
    26  |                         i = i + 1;  |         |   24  |     24  |  1  |  [24,37,48,15,12,48,34]  |         40  |
    32  |                 R = R + separator;  |     40  |   64  |     24  |  1  |  [24,37,48,15,12,48,34]  |         40  |
    35  |     chunk = arrayRead(objects, i);  |         |   64  |     37  |  1  |  [24,37,48,15,12,48,34]  |         40  |
    38  |                     R = R + chunk;  |     37  |  101  |     37  |  1  |  [24,37,48,15,12,48,34]  |         40  |
    42  |                         i = i + 1;  |         |  101  |     37  |  2  |  [24,37,48,15,12,48,34]  |         40  |
    43  |              resetPlaceHolder_1();  |         |  101  |     37  |  2  |  [24,37,48,15,12,48,34]  |         40  |
    49  |                 R = R + separator;  |     40  |  141  |     37  |  2  |  [24,37,48,15,12,48,34]  |         40  |
    52  |     chunk = arrayRead(objects, i);  |         |  141  |     48  |  2  |  [24,37,48,15,12,48,34]  |         40  |
    55  |                     R = R + chunk;  |     48  |  189  |     48  |  2  |  [24,37,48,15,12,48,34]  |         40  |
    59  |                         i = i + 1;  |         |  189  |     48  |  3  |  [24,37,48,15,12,48,34]  |         40  |
    60  |              resetPlaceHolder_1();  |         |  189  |     48  |  3  |  [24,37,48,15,12,48,34]  |         40  |
    66  |                 R = R + separator;  |     40  |  229  |     48  |  3  |  [24,37,48,15,12,48,34]  |         40  |
    69  |     chunk = arrayRead(objects, i);  |         |  229  |     15  |  3  |  [24,37,48,15,12,48,34]  |         40  |
    72  |                     R = R + chunk;  |     15  |  244  |     15  |  3  |  [24,37,48,15,12,48,34]  |         40  |
    76  |                         i = i + 1;  |         |  244  |     15  |  4  |  [24,37,48,15,12,48,34]  |         40  |
    77  |              resetPlaceHolder_1();  |         |  244  |     15  |  4  |  [24,37,48,15,12,48,34]  |         40  |
    83  |                 R = R + separator;  |     40  |  284  |     15  |  4  |  [24,37,48,15,12,48,34]  |         40  |
    86  |     chunk = arrayRead(objects, i);  |         |  284  |     12  |  4  |  [24,37,48,15,12,48,34]  |         40  |
    89  |                     R = R + chunk;  |     12  |  296  |     12  |  4  |  [24,37,48,15,12,48,34]  |         40  |
    93  |                         i = i + 1;  |         |  296  |     12  |  5  |  [24,37,48,15,12,48,34]  |         40  |
    94  |              resetPlaceHolder_1();  |         |  296  |     12  |  5  |  [24,37,48,15,12,48,34]  |         40  |
   100  |                 R = R + separator;  |     40  |  336  |     12  |  5  |  [24,37,48,15,12,48,34]  |         40  |
   103  |     chunk = arrayRead(objects, i);  |         |  336  |     48  |  5  |  [24,37,48,15,12,48,34]  |         40  |
   106  |                     R = R + chunk;  |     48  |  384  |     48  |  5  |  [24,37,48,15,12,48,34]  |         40  |
   110  |                         i = i + 1;  |         |  384  |     48  |  6  |  [24,37,48,15,12,48,34]  |         40  |
   111  |              resetPlaceHolder_1();  |         |  384  |     48  |  6  |  [24,37,48,15,12,48,34]  |         40  |
   117  |                 R = R + separator;  |     40  |  424  |     48  |  6  |  [24,37,48,15,12,48,34]  |         40  |
   120  |     chunk = arrayRead(objects, i);  |         |  424  |     34  |  6  |  [24,37,48,15,12,48,34]  |         40  |
   123  |                     R = R + chunk;  |     34  |  458  |     34  |  6  |  [24,37,48,15,12,48,34]  |         40  |
   127  |                         i = i + 1;  |         |  458  |     34  |  7  |  [24,37,48,15,12,48,34]  |         40  |
   128  |              resetPlaceHolder_1();  |         |  458  |     34  |  7  |  [24,37,48,15,12,48,34]  |         40  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |
    32  |     R = R + separator;  |     40  |                         0  |
    38  |         R = R + chunk;  |     37  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     40  |                         1  |
    55  |         R = R + chunk;  |     48  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     40  |                         2  |
    72  |         R = R + chunk;  |     15  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     40  |                         3  |
    89  |         R = R + chunk;  |     12  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     40  |                         4  |
   106  |         R = R + chunk;  |     48  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     40  |                         5  |
   123  |         R = R + chunk;  |     34  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {106}; {55} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |
    32  |     R = R + separator;  |     40  |                            |
    38  |         R = R + chunk;  |     37  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     40  |                            |
    55  |         R = R + chunk;  |     48  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     40  |                            |
    72  |         R = R + chunk;  |     15  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     40  |                            |
    89  |         R = R + chunk;  |     12  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     40  |                            |
   106  |         R = R + chunk;  |     48  |                         1  |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     40  |                            |
   123  |         R = R + chunk;  |     34  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [89, 38, 22, 123, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [89, 38, 22, 123, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,72,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [89, 38, 22, 123, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [89, 38, 22, 123, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {106}; {55}
GroupID(2): {22,38,72,89,123}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    32  |     R = R + separator;  |     40  |                         0  |                            |                            |
    38  |         R = R + chunk;  |     37  |                            |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    49  |     R = R + separator;  |     40  |                         1  |                            |                            |
    55  |         R = R + chunk;  |     48  |                            |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    66  |     R = R + separator;  |     40  |                         2  |                            |                            |
    72  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    83  |     R = R + separator;  |     40  |                         3  |                            |                            |
    89  |         R = R + chunk;  |     12  |                            |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   100  |     R = R + separator;  |     40  |                         4  |                            |                            |
   106  |         R = R + chunk;  |     48  |                            |                         1  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   117  |     R = R + separator;  |     40  |                         5  |                            |                            |
   123  |         R = R + chunk;  |     34  |                            |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set(60)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R2 = R2 + chunk;
}
else
{
  if ((i < 2) || (i == 2))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R2 = R2 + chunk;
    }
    else
    {
      if ((i < 5) || (i == 5))
      {
        R1 = R1 + chunk;
      }
      else
      {
        R2 = R2 + chunk;
      }
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 3) || (i == 3))
  {
    if ((i < 2) || (i == 2))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> R2 = R2 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-31 00:46:32,259 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:47:34,655 INFO     Done. Execution time: 62.39607906341553 seconds
2023-01-31 00:47:34,655 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
      }
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + (objects * separator))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 1) || (i == 1))
      {
        D2 = D2 + chunk;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((i < 5) || (i == 5))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
      }
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9189307764009482647.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7127156177567320087.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-152005643978582120.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-830516616083946942.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6670750298655323802.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8540496770070219609.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8988223078782960748.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-429154075296161087.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5827019726823764948.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       (or true (= D2p 0))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D2 0)) (or true (= D1 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    5)  (define-fun D1 () Int    4)  (define-fun D2 () Int    0)  (define-fun C2 () Int    15)  (define-fun C1 () Int    7)  (define-fun objects () Int    15)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun D1p () Int    1)  (define-fun D2p () Int    9)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `60.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0046-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0046-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.387s
user	4m2.035s
sys	0m2.453s

2023-01-31 00:47:34,656 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 00:47:34,656 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:48:40,770 INFO     Done. Execution time: 66.11347603797913 seconds
2023-01-31 00:48:40,770 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz8665539470103355601/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8665539470103355601/bin -o /tmp/qfuzz8665539470103355601/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8665539470103355601/bin
Found file /tmp/qfuzz8665539470103355601/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz8665539470103355601/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8665539470103355601/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8665539470103355601/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8665539470103355601/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8665539470103355601/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 118437 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 46.00; [248.00,458.00,504.00,738.00]
2; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 4; 50.00; [504.00,658.00,738.00,788.00]
5; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 4; 54.00; [278.00,604.00,658.00,968.00]
7; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 46.00; [458.00,504.00,688.00,1018.00]
8; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 4; 150.00; [98.00,248.00,504.00,738.00]
11; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 60.00; [128.00,664.00,878.00,938.00]
20; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 40.00; [504.00,638.00,678.00,728.00]
26; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 4; 46.00; [228.00,458.00,504.00,818.00]
31; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 4; 154.00; [98.00,308.00,504.00,658.00]
45; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 4; 170.00; [88.00,258.00,504.00,738.00]
56; /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta; 4; 180.00; [168.00,504.00,738.00,918.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 45, 14, 35, 38, 8, 20, 18, 4, 26, 27, 26, 24, 32, 21, 48, 23, 29, 12, 4, 7, 20, 21, 4, 17, 21, 21, 21, 21, 21, 21, 21, 34, 20, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 12, 12, 28, 15, 4, 9, 9, 12, 46, 10, 45, 9, 33, 29, 12, 9, 7, 9, 31, 46, 10, 45, 9, 33, 29, 12, 9, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 17, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 6, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 14, 40, 4, 22, 32, 13, 32, 11, 33, 35, 20, 13, 12, 13, 6, 37, 6, 45, 9, 33, 46, 12, 21, 7, 47, 12, 35, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 5, 31, 12, 33, 35, 23, 14, 36, 48, 34, 48, 24, 46, 42, 26, 27, 33, 37, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 15, 43, 26, 46, 32, 45, 9, 6, 4, 29, 34, 31, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 30, 4, 36, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 41, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 50, 4, 22, 32, 38, 37, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 13, 32, 12, 13, 12, 15, 31, 48, 34, 40, 12, 46, 27, 11, 20, 27, 11, 20, 29, 42, 26, 27, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 36, 36, 4, 32, 20, 29, 31, 39, 22, 26, 24, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8665539470103355601/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_004840_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,45,14,35], 38, 8, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,12,12,28], 15, 4, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,17,4,22,32,12,13], 12, 15, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,14,40,4,22,32,13], 32, 11, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,5,31,12,33,35,23], 14, 36, 48
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,15,43,26,46,32,45], 9, 6, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,30,4,36,12], 13, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,50,4,22,32,38], 37, 34, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,13,32,12,13,12,15], 31, 48, 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,36,36,4,32,20,29], 31, 39, 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12, 15
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:48:40,770 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-31 00:48:40,770 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 00:48:49,354 INFO     Done. Execution time: 8.583297729492188 seconds
2023-01-31 00:48:49,354 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_004840_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_004840_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,45,14,35], 38, 8, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,12,12,28], 15, 4, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,17,4,22,32,12,13], 12, 15, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,14,40,4,22,32,13], 32, 11, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,5,31,12,33,35,23], 14, 36, 48)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,15,43,26,46,32,45], 9, 6, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,30,4,36,12], 13, 12, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,50,4,22,32,38], 37, 34, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,36,36,4,32,20,29], 31, 39, 22)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,13,32,12,13,12,15], 31, 48, 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12, 15)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,45,14,35]
searchString: 38
replacement: 8
max: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,12,12,28]
searchString: 15
replacement: 4
max: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,17,4,22,32,12,13]
searchString: 12
replacement: 15
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,14,40,4,22,32,13]
searchString: 32
replacement: 11
max: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,5,31,12,33,35,23]
searchString: 14
replacement: 36
max: 48
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [32,15,43,26,46,32,45]
searchString: 9
replacement: 6
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,30,4,36,12]
searchString: 13
replacement: 12
max: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,50,4,22,32,38]
searchString: 37
replacement: 34
max: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,13,32,12,13,12,15]
searchString: 31
replacement: 48
max: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,36,36,4,32,20,29]
searchString: 31
replacement: 39
max: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [24,9,36,4,22,32,12]
searchString: 13
replacement: 12
max: 15
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     24  |  0  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    51  |                     R = R + chunk;  |     24  |   24  |     24  |  0  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    54  |               R = R + replacement;  |      8  |   32  |     24  |  0  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |   32  |      9  |  0  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    63  |                         i = i + 2;  |         |   32  |      9  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    64  |              resetPlaceHolder_1();  |         |   32  |      9  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    72  |        chunk = arrayRead(text, i);  |         |   32  |     36  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    75  |                     R = R + chunk;  |     36  |   68  |     36  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    78  |               R = R + replacement;  |      8  |   76  |     36  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |   76  |      4  |  2  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    87  |                         i = i + 2;  |         |   76  |      4  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    88  |              resetPlaceHolder_1();  |         |   76  |      4  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    96  |        chunk = arrayRead(text, i);  |         |   76  |     45  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
    99  |                     R = R + chunk;  |     45  |  121  |     45  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
   102  |               R = R + replacement;  |      8  |  129  |     45  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
   107  |  chunk = arrayRead(text, (i + 1...  |         |  129  |     14  |  4  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
   111  |                         i = i + 2;  |         |  129  |     14  |  6  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
   112  |              resetPlaceHolder_1();  |         |  129  |     14  |  6  |   20  |            8  |            38  |  [24,9,36,4,45,14,35]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [78, 102, 54, 99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     24  |                            |
    54  |   R = R + replacement;  |      8  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     36  |                            |
    78  |   R = R + replacement;  |      8  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     45  |                            |
   102  |   R = R + replacement;  |      8  |                         2  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [99, 75, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {54}; {78}
GroupID(1): {51,75,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     24  |                            |                         0  |
    54  |   R = R + replacement;  |      8  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     36  |                            |                         0  |
    78  |   R = R + replacement;  |      8  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     45  |                            |                         0  |
   102  |   R = R + replacement;  |      8  |                         2  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64, 88)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-31 00:48:49,354 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:50:13,039 INFO     Done. Execution time: 83.68481636047363 seconds
2023-01-31 00:50:13,039 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9037096291041466746.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `81.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0048-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0048-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m23.678s
user	3m11.934s
sys	0m18.024s

2023-01-31 00:50:13,040 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 00:50:13,040 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:51:18,715 INFO     Done. Execution time: 65.67516756057739 seconds
2023-01-31 00:51:18,715 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz8323423763587585356/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8323423763587585356/bin -o /tmp/qfuzz8323423763587585356/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8323423763587585356/bin
Found file /tmp/qfuzz8323423763587585356/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz8323423763587585356/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8323423763587585356/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8323423763587585356/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8323423763587585356/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz8323423763587585356/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 127954 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 33, 33, 33, 46, 33, 45, 15, 48, 34, 27, 18, 18, 18, 18, 18, 18, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz8323423763587585356/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_005118_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 9
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:51:18,715 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-31 00:51:18,716 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 00:51:24,733 INFO     Done. Execution time: 6.017080068588257 seconds
2023-01-31 00:51:24,733 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_005118_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_005118_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 9)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 9
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            33  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            33  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            33  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            33  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            33  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            33  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            33  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            33  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            33  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            33  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            33  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            33  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-31 00:51:24,733 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:51:44,702 INFO     Done. Execution time: 19.968499660491943 seconds
2023-01-31 00:51:44,702 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `18.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0051-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0051-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.962s
user	0m36.239s
sys	0m3.695s

2023-01-31 00:51:44,702 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 00:51:44,702 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:52:50,583 INFO     Done. Execution time: 65.87985229492188 seconds
2023-01-31 00:52:50,583 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz5111828267541225109/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5111828267541225109/bin -o /tmp/qfuzz5111828267541225109/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5111828267541225109/bin
Found file /tmp/qfuzz5111828267541225109/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz5111828267541225109/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5111828267541225109/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5111828267541225109/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5111828267541225109/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5111828267541225109/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 128445 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [510.00]
8; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 3; 39.00; [97.00,136.00,510.00]
10; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 2; 56.00; [510.00,566.00]
28; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 2; 804.00; [166.00,970.00]
39; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 1; 0.00; [110.00]
43; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 3; 54.00; [97.00,456.00,510.00]
50; /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 3; 106.00; [190.00,296.00,937.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 48, 5, 42, 24, 12, 46, 6, 4, 4, 34, 41, 39, 17, 44, 46, 47, 48, 17, 39, 29, 36, 38, 50, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 27, 27, 37, 4, 20, 4, 5, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 27, 29, 29, 18, 7, 47, 4, 41, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 49, 29, 29, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 17, 40, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9, 29, 30, 32, 10, 23, 45, 9, 33, 29, 12, 34, 5, 38, 41, 36, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 4, 38, 25, 5, 5, 5, 5, 15, 5, 5, 5, 5, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 37, 18, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 45, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 4, 12, 15, 12, 48, 4, 36, 12, 46, 6, 45, 9, 33, 29, 12, 46, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5111828267541225109/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_005250_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,48,5,42,24,12,46], 6, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,27,27,37,4,20,4], 5, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,27,29,29,18,7,47], 4, 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,17,40,5,5,5,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,4,38,25], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,45,4,4,4,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 4, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 13, 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:52:50,583 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 00:52:50,583 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 00:52:57,831 INFO     Done. Execution time: 7.247474431991577 seconds
2023-01-31 00:52:57,831 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_005250_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_005250_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,48,5,42,24,12,46], 6, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,27,27,37,4,20,4], 5, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,27,29,29,18,7,47], 4, 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,17,40,5,5,5,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,4,38,25], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,45,4,4,4,4,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 4, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 13, 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [4,27,29,29,18,7,47]
isSeparator: 4
max: 41
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,9,36,4,22,32,12]
isSeparator: 4
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,9,36,4,22,32,12]
isSeparator: 13
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [8,48,5,42,24,12,46]
isSeparator: 6
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,27,27,37,4,20,4]
isSeparator: 5
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [47,17,40,5,5,5,5]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,9,36,4,4,38,25]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [24,45,4,4,4,4,4]
isSeparator: 4
max: 4
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 195):
                                                                                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |     |            4  |                    |   41  |                   |  [4,27,29,29,18,7,47]  |
    28  |                      // int R = 0;  |         |  0  |         |     |            4  |                    |   41  |                   |  [4,27,29,29,18,7,47]  |
    29  |  // mostPreciseBound(R <= array...  |         |  0  |         |     |            4  |                    |   41  |                   |  [4,27,29,29,18,7,47]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |     |            4  |                    |   41  |                   |  [4,27,29,29,18,7,47]  |
    32  |           int numberOfStrings = 0;  |         |  0  |         |     |            4  |                    |   41  |                0  |  [4,27,29,29,18,7,47]  |
    34  |                     int chunk = 0;  |         |  0  |      0  |     |            4  |                    |   41  |                0  |  [4,27,29,29,18,7,47]  |
    36  |          int isSeparatorChunk = 0;  |         |  0  |      0  |     |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    38  |                         int i = 0;  |         |  0  |      0  |  0  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    44  |         chunk = arrayRead(str, i);  |         |  0  |      4  |  0  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    54  |                     R = R + chunk;  |      4  |  4  |      4  |  0  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    58  |                         i = i + 1;  |         |  4  |      4  |  1  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    59  |              resetPlaceHolder_1();  |         |  4  |      4  |  1  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    65  |         chunk = arrayRead(str, i);  |         |  4  |     27  |  1  |            4  |                 0  |   41  |                0  |  [4,27,29,29,18,7,47]  |
    76  |  numberOfStrings = numberOfStri...  |         |  4  |     27  |  1  |            4  |                 0  |   41  |                1  |  [4,27,29,29,18,7,47]  |
    80  |                         i = i + 1;  |         |  4  |     27  |  2  |            4  |                 0  |   41  |                1  |  [4,27,29,29,18,7,47]  |
    81  |              resetPlaceHolder_1();  |         |  4  |     27  |  2  |            4  |                 0  |   41  |                1  |  [4,27,29,29,18,7,47]  |
    87  |         chunk = arrayRead(str, i);  |         |  4  |     29  |  2  |            4  |                 0  |   41  |                1  |  [4,27,29,29,18,7,47]  |
    98  |  numberOfStrings = numberOfStri...  |         |  4  |     29  |  2  |            4  |                 0  |   41  |                2  |  [4,27,29,29,18,7,47]  |
   102  |                         i = i + 1;  |         |  4  |     29  |  3  |            4  |                 0  |   41  |                2  |  [4,27,29,29,18,7,47]  |
   103  |              resetPlaceHolder_1();  |         |  4  |     29  |  3  |            4  |                 0  |   41  |                2  |  [4,27,29,29,18,7,47]  |
   109  |         chunk = arrayRead(str, i);  |         |  4  |     29  |  3  |            4  |                 0  |   41  |                2  |  [4,27,29,29,18,7,47]  |
   120  |  numberOfStrings = numberOfStri...  |         |  4  |     29  |  3  |            4  |                 0  |   41  |                3  |  [4,27,29,29,18,7,47]  |
   124  |                         i = i + 1;  |         |  4  |     29  |  4  |            4  |                 0  |   41  |                3  |  [4,27,29,29,18,7,47]  |
   125  |              resetPlaceHolder_1();  |         |  4  |     29  |  4  |            4  |                 0  |   41  |                3  |  [4,27,29,29,18,7,47]  |
   131  |         chunk = arrayRead(str, i);  |         |  4  |     18  |  4  |            4  |                 0  |   41  |                3  |  [4,27,29,29,18,7,47]  |
   142  |  numberOfStrings = numberOfStri...  |         |  4  |     18  |  4  |            4  |                 0  |   41  |                4  |  [4,27,29,29,18,7,47]  |
   146  |                         i = i + 1;  |         |  4  |     18  |  5  |            4  |                 0  |   41  |                4  |  [4,27,29,29,18,7,47]  |
   147  |              resetPlaceHolder_1();  |         |  4  |     18  |  5  |            4  |                 0  |   41  |                4  |  [4,27,29,29,18,7,47]  |
   153  |         chunk = arrayRead(str, i);  |         |  4  |      7  |  5  |            4  |                 0  |   41  |                4  |  [4,27,29,29,18,7,47]  |
   164  |  numberOfStrings = numberOfStri...  |         |  4  |      7  |  5  |            4  |                 0  |   41  |                5  |  [4,27,29,29,18,7,47]  |
   168  |                         i = i + 1;  |         |  4  |      7  |  6  |            4  |                 0  |   41  |                5  |  [4,27,29,29,18,7,47]  |
   169  |              resetPlaceHolder_1();  |         |  4  |      7  |  6  |            4  |                 0  |   41  |                5  |  [4,27,29,29,18,7,47]  |
   175  |         chunk = arrayRead(str, i);  |         |  4  |     47  |  6  |            4  |                 0  |   41  |                5  |  [4,27,29,29,18,7,47]  |
   186  |  numberOfStrings = numberOfStri...  |         |  4  |     47  |  6  |            4  |                 0  |   41  |                6  |  [4,27,29,29,18,7,47]  |
   190  |                         i = i + 1;  |         |  4  |     47  |  7  |            4  |                 0  |   41  |                6  |  [4,27,29,29,18,7,47]  |
   191  |              resetPlaceHolder_1();  |         |  4  |     47  |  7  |            4  |                 0  |   41  |                6  |  [4,27,29,29,18,7,47]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   169  |  resetPlaceHolder_1();  |         |                            |
   191  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 187):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |            6  |                    |    4  |                   |  [8,48,5,42,24,12,46]  |
    28  |                      // int R = 0;  |         |   0  |         |     |            6  |                    |    4  |                   |  [8,48,5,42,24,12,46]  |
    29  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |            6  |                    |    4  |                   |  [8,48,5,42,24,12,46]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |            6  |                    |    4  |                   |  [8,48,5,42,24,12,46]  |
    32  |           int numberOfStrings = 0;  |         |   0  |         |     |            6  |                    |    4  |                0  |  [8,48,5,42,24,12,46]  |
    34  |                     int chunk = 0;  |         |   0  |      0  |     |            6  |                    |    4  |                0  |  [8,48,5,42,24,12,46]  |
    36  |          int isSeparatorChunk = 0;  |         |   0  |      0  |     |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    38  |                         int i = 0;  |         |   0  |      0  |  0  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    44  |         chunk = arrayRead(str, i);  |         |   0  |      8  |  0  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    54  |                     R = R + chunk;  |      8  |   8  |      8  |  0  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    58  |                         i = i + 1;  |         |   8  |      8  |  1  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    59  |              resetPlaceHolder_1();  |         |   8  |      8  |  1  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    65  |         chunk = arrayRead(str, i);  |         |   8  |     48  |  1  |            6  |                 0  |    4  |                0  |  [8,48,5,42,24,12,46]  |
    76  |  numberOfStrings = numberOfStri...  |         |   8  |     48  |  1  |            6  |                 0  |    4  |                1  |  [8,48,5,42,24,12,46]  |
    80  |                         i = i + 1;  |         |   8  |     48  |  2  |            6  |                 0  |    4  |                1  |  [8,48,5,42,24,12,46]  |
    81  |              resetPlaceHolder_1();  |         |   8  |     48  |  2  |            6  |                 0  |    4  |                1  |  [8,48,5,42,24,12,46]  |
    87  |         chunk = arrayRead(str, i);  |         |   8  |      5  |  2  |            6  |                 0  |    4  |                1  |  [8,48,5,42,24,12,46]  |
    98  |  numberOfStrings = numberOfStri...  |         |   8  |      5  |  2  |            6  |                 0  |    4  |                2  |  [8,48,5,42,24,12,46]  |
   102  |                         i = i + 1;  |         |   8  |      5  |  3  |            6  |                 0  |    4  |                2  |  [8,48,5,42,24,12,46]  |
   103  |              resetPlaceHolder_1();  |         |   8  |      5  |  3  |            6  |                 0  |    4  |                2  |  [8,48,5,42,24,12,46]  |
   109  |         chunk = arrayRead(str, i);  |         |   8  |     42  |  3  |            6  |                 0  |    4  |                2  |  [8,48,5,42,24,12,46]  |
   120  |  numberOfStrings = numberOfStri...  |         |   8  |     42  |  3  |            6  |                 0  |    4  |                3  |  [8,48,5,42,24,12,46]  |
   124  |                         i = i + 1;  |         |   8  |     42  |  4  |            6  |                 0  |    4  |                3  |  [8,48,5,42,24,12,46]  |
   125  |              resetPlaceHolder_1();  |         |   8  |     42  |  4  |            6  |                 0  |    4  |                3  |  [8,48,5,42,24,12,46]  |
   131  |         chunk = arrayRead(str, i);  |         |   8  |     24  |  4  |            6  |                 0  |    4  |                3  |  [8,48,5,42,24,12,46]  |
   142  |  numberOfStrings = numberOfStri...  |         |   8  |     24  |  4  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   146  |                         i = i + 1;  |         |   8  |     24  |  5  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   147  |              resetPlaceHolder_1();  |         |   8  |     24  |  5  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   153  |         chunk = arrayRead(str, i);  |         |   8  |     12  |  5  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   160  |                     R = R + chunk;  |     12  |  20  |     12  |  5  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   164  |                         i = i + 1;  |         |  20  |     12  |  6  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   165  |                          continue;  |         |  20  |     12  |  6  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   171  |         chunk = arrayRead(str, i);  |         |  20  |     46  |  6  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   178  |                     R = R + chunk;  |     46  |  66  |     46  |  6  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   182  |                         i = i + 1;  |         |  66  |     46  |  7  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
   183  |                          continue;  |         |  66  |     46  |  7  |            6  |                 0  |    4  |                4  |  [8,48,5,42,24,12,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [54, 160, 178]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54,160,178}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      8  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     12  |                         0  |
   178  |         R = R + chunk;  |     46  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-31 00:52:57,831 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:54:34,578 INFO     Done. Execution time: 96.74643540382385 seconds
2023-01-31 00:54:34,578 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `94.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0052-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0052-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m36.738s
user	2m33.205s
sys	0m6.852s

2023-01-31 00:54:34,578 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 00:54:34,578 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:55:40,746 INFO     Done. Execution time: 66.16725754737854 seconds
2023-01-31 00:55:40,746 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2852240010558834303/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2852240010558834303/bin -o /tmp/qfuzz2852240010558834303/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2852240010558834303/bin
Found file /tmp/qfuzz2852240010558834303/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2852240010558834303/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2852240010558834303/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2852240010558834303/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2852240010558834303/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2852240010558834303/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 122626 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 15, 7, 10, 50, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2852240010558834303/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_005540_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:55:40,746 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-31 00:55:40,746 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 00:55:44,708 INFO     Done. Execution time: 3.9614017009735107 seconds
2023-01-31 00:55:44,708 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_005540_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_005540_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-31 00:55:44,708 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:55:46,764 INFO     Done. Execution time: 2.0556843280792236 seconds
2023-01-31 00:55:46,764 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0055-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0055-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.048s
user	0m3.680s
sys	0m0.199s

2023-01-31 00:55:46,764 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 00:55:46,764 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:56:52,745 INFO     Done. Execution time: 65.98066067695618 seconds
2023-01-31 00:56:52,746 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz5308609910089811685/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5308609910089811685/bin -o /tmp/qfuzz5308609910089811685/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5308609910089811685/bin
Found file /tmp/qfuzz5308609910089811685/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz5308609910089811685/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5308609910089811685/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5308609910089811685/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5308609910089811685/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5308609910089811685/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 126453 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5308609910089811685/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5308609910089811685/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5308609910089811685/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_005652_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 9, 36, false, 22
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:56:52,746 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-31 00:56:52,746 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 00:56:55,817 INFO     Done. Execution time: 3.0712759494781494 seconds
2023-01-31 00:56:55,818 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_005652_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_005652_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 9, 36, false, 22)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
preserveAllTokens: false
choice: 22
max: 36
str: 2
separatorChars: 9
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      22  |   36  |              false  |               9  |    2  |
    32  |     return;  |         |  0  |      22  |   36  |              false  |               9  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-31 00:56:55,818 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:56:57,931 INFO     Done. Execution time: 2.1125636100769043 seconds
2023-01-31 00:56:57,931 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0056-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0056-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.104s
user	0m3.949s
sys	0m0.281s

2023-01-31 00:56:57,931 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 00:56:57,931 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:58:03,750 INFO     Done. Execution time: 65.81828117370605 seconds
2023-01-31 00:58:03,750 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz4361573864645879234/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4361573864645879234/bin -o /tmp/qfuzz4361573864645879234/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4361573864645879234/bin
Found file /tmp/qfuzz4361573864645879234/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz4361573864645879234/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4361573864645879234/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4361573864645879234/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4361573864645879234/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz4361573864645879234/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 25, exec speed = 105328 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m105k to 105k us (average: 105k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4361573864645879234/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4361573864645879234/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz4361573864645879234/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_005803_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:58:03,750 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-31 00:58:03,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 00:58:06,777 INFO     Done. Execution time: 3.0269992351531982 seconds
2023-01-31 00:58:06,777 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_005803_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_005803_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-31 00:58:06,778 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:58:08,809 INFO     Done. Execution time: 2.031158685684204 seconds
2023-01-31 00:58:08,809 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0058-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-0058-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.024s
user	0m3.646s
sys	0m0.186s

2023-01-31 00:58:08,809 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 00:58:08,809 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 00:59:14,826 INFO     Done. Execution time: 66.01682424545288 seconds
2023-01-31 00:59:14,827 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz5888356476884053330/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5888356476884053330/bin -o /tmp/qfuzz5888356476884053330/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5888356476884053330/bin
Found file /tmp/qfuzz5888356476884053330/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz5888356476884053330/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5888356476884053330/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5888356476884053330/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5888356476884053330/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz5888356476884053330/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 124979 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 44.00; [258.00,458.00,502.00,738.00]
2; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 24.00; [98.00,122.00,278.00,978.00]
3; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 4; 20.00; [458.00,502.00,718.00,738.00]
4; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 40.00; [502.00,658.00,698.00,798.00]
6; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 4; 60.00; [418.00,502.00,778.00,838.00]
7; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta; 4; 156.00; [262.00,418.00,698.00,978.00]
11; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 4; 160.00; [418.00,678.00,838.00,1002.00]
16; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 4; 220.00; [238.00,458.00,762.00,1018.00]
19; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 3; 44.00; [258.00,458.00,502.00]
49; /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta; 4; 236.00; [258.00,502.00,738.00,978.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 48, 13, 12, 15, 12, 48, 34, 40, 25, 21, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 22, 42, 22, 32, 12, 13, 12, 44, 44, 44, 44, 44, 44, 10, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 38, 50, 4, 22, 32, 11, 21, 5, 17, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 33, 20, 31, 33, 35, 41, 48, 34, 38, 12, 46, 6, 45, 15, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 7, 34, 24, 20, 33, 48, 45, 50, 25, 44, 47, 47, 46, 12, 46, 28, 42, 46, 35, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 41, 44, 38, 8, 20, 29, 23, 48, 28, 33, 29, 12, 34, 9, 30, 32, 11, 33, 40, 12, 46, 6, 45, 28, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 10, 39, 30, 32, 11, 34, 35, 23, 14, 35, 38, 34, 40, 12, 46, 6, 45, 20, 39, 39, 18, 4, 4, 42, 39, 39, 39, 39, 39, 39, 39, 39, 39, 28, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 35, 38, 8, 12, 46, 6, 45, 9, 33, 21, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 9, 13, 18, 4, 19, 48, 34, 40, 12, 46, 40, 9, 33, 29, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz5888356476884053330/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_005914_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,48,13,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,22,42,22,32,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,38,50,4,22,32,11], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,33,20,31,33,35,41], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,7,34,24,20,33,48], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,41,44,38,8,20], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,10,39,30,32,11,34], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,35], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,9,13,18,4,19,48], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,9,36,4,22,32,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 00:59:14,827 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-31 00:59:14,827 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 00:59:22,194 INFO     Done. Execution time: 7.366369009017944 seconds
2023-01-31 00:59:22,194 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_005914_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_005914_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,48,13,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,22,42,22,32,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,38,50,4,22,32,11], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,33,20,31,33,35,41], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,7,34,24,20,33,48], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,41,44,38,8,20], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,10,39,30,32,11,34], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,35], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,9,13,18,4,19,48], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,9,36,4,22,32,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,36,4,48,13,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,22,42,22,32,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [37,38,50,4,22,32,11]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [49,33,20,31,33,35,41]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [12,7,34,24,20,33,48]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,41,44,38,8,20]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,10,39,30,32,11,34]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,36,4,22,32,35]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [5,9,13,18,4,19,48]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [24,9,36,4,22,32,12]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |        template        |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [24,9,36,4,48,13,12]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [24,9,36,4,48,13,12]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [24,9,36,4,48,13,12]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [24,9,36,4,48,13,12]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [24,9,36,4,48,13,12]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [24,9,36,4,48,13,12]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [24,9,36,4,48,13,12]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     24  |  0  |          0  |  [24,9,36,4,48,13,12]  |
    32  |                     R = R + chunk;  |     24  |   24  |     2  |     24  |  0  |          0  |  [24,9,36,4,48,13,12]  |
    36  |                         i = i + 1;  |         |   24  |     2  |     24  |  1  |          0  |  [24,9,36,4,48,13,12]  |
    44  |  separator = arrayRead(template...  |         |   24  |     2  |     24  |  1  |          9  |  [24,9,36,4,48,13,12]  |
    49  |  chunk = arrayRead(template, (i...  |         |   24  |     2  |     36  |  1  |          9  |  [24,9,36,4,48,13,12]  |
    52  |                     R = R + chunk;  |     36  |   60  |     2  |     36  |  1  |          9  |  [24,9,36,4,48,13,12]  |
    56  |                         i = i + 2;  |         |   60  |     2  |     36  |  3  |          9  |  [24,9,36,4,48,13,12]  |
    57  |              resetPlaceHolder_1();  |         |   60  |     2  |     36  |  3  |          9  |  [24,9,36,4,48,13,12]  |
    65  |  separator = arrayRead(template...  |         |   60  |     2  |     36  |  3  |          4  |  [24,9,36,4,48,13,12]  |
    70  |  chunk = arrayRead(template, (i...  |         |   60  |     2  |     48  |  3  |          4  |  [24,9,36,4,48,13,12]  |
    73  |                     R = R + chunk;  |     48  |  108  |     2  |     48  |  3  |          4  |  [24,9,36,4,48,13,12]  |
    77  |                         i = i + 2;  |         |  108  |     2  |     48  |  5  |          4  |  [24,9,36,4,48,13,12]  |
    78  |              resetPlaceHolder_1();  |         |  108  |     2  |     48  |  5  |          4  |  [24,9,36,4,48,13,12]  |
    86  |  separator = arrayRead(template...  |         |  108  |     2  |     48  |  5  |         13  |  [24,9,36,4,48,13,12]  |
    91  |  chunk = arrayRead(template, (i...  |         |  108  |     2  |     12  |  5  |         13  |  [24,9,36,4,48,13,12]  |
    94  |                     R = R + chunk;  |     12  |  120  |     2  |     12  |  5  |         13  |  [24,9,36,4,48,13,12]  |
    98  |                         i = i + 2;  |         |  120  |     2  |     12  |  7  |         13  |  [24,9,36,4,48,13,12]  |
    99  |              resetPlaceHolder_1();  |         |  120  |     2  |     12  |  7  |         13  |  [24,9,36,4,48,13,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32,52}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {73,94}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32,52}; {73,94}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {32,52}; {73,94} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     24  |                         0  |
    52  |         R = R + chunk;  |     36  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     48  |                         1  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     12  |                         1  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52}; {73,94}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     24  |                         0  |
    52  |         R = R + chunk;  |     36  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     48  |                         1  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     12  |                         1  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [53, 72])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     24  |                         0  |
    52  |         R = R + chunk;  |     36  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     48  |                         1  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     12  |                         1  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-31 00:59:22,194 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 00:59:23,686 INFO     Done. Execution time: 1.4919679164886475 seconds
2023-01-31 00:59:23,686 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.485s
user	0m2.656s
sys	0m0.164s

2023-01-31 00:59:23,687 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 00:59:23,687 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 01:00:29,480 INFO     Done. Execution time: 65.79287505149841 seconds
2023-01-31 01:00:29,480 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz2850178667066465297/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2850178667066465297/bin -o /tmp/qfuzz2850178667066465297/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2850178667066465297/bin
Found file /tmp/qfuzz2850178667066465297/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz2850178667066465297/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2850178667066465297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2850178667066465297/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2850178667066465297/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz2850178667066465297/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 122029 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [494.00]
2; /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [94.00]
9; /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8; 1; 0.00; [674.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
/tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 9, 36, 30, 22, 25, 20, 45, 35, 46, 8, 43, 5, 30, 32, 22, 9, 30, 26, 39, 7, 31, 8, 32, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 34, 5, 25, 9, 29, 37, 7, 12, 18, 32, 15, 16, 30, 31, 17, 9, 30, 26, 39, 7, 45, 26, 45, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz2850178667066465297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_010029_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 33, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 01:00:29,480 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-31 01:00:29,480 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 01:00:34,738 INFO     Done. Execution time: 5.257142066955566 seconds
2023-01-31 01:00:34,738 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_010029_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_010029_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(33, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 33
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 4
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 24
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      33  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      33  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      33  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      33  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      33  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  33  |      33  |
    29  |                    R = R + string;  |     33  |  33  |      |          2  |  33  |      33  |
    31  |                    int i = string;  |         |  33  |  33  |          2  |  33  |      33  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     33  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-31 01:00:34,738 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 01:00:36,544 INFO     Done. Execution time: 1.805556297302246 seconds
2023-01-31 01:00:36,544 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.797s
user	0m3.075s
sys	0m0.242s

2023-01-31 01:00:36,544 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 01:00:36,544 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds`
2023-01-31 01:01:42,884 INFO     Done. Execution time: 66.339772939682 seconds
2023-01-31 01:01:42,885 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz3346835094132416021/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3346835094132416021/bin -o /tmp/qfuzz3346835094132416021/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3346835094132416021/bin
Found file /tmp/qfuzz3346835094132416021/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz3346835094132416021/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3346835094132416021/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3346835094132416021/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3346835094132416021/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds -o /tmp/qfuzz3346835094132416021/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 131155 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3346835094132416021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3346835094132416021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 50] from /tmp/qfuzz3346835094132416021/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 9, 36, 4, 22, 32, 12, 13, 12, 15, 12, 48, 34, 40, 12, 46, 6, 45, 9, 33, 29, 12, 34, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_010142_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 24, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 01:01:42,885 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-31 01:01:42,885 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 01:01:45,930 INFO     Done. Execution time: 3.044555187225342 seconds
2023-01-31 01:01:45,930 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_010142_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_010142_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(24, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 24
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |      24  |
    22  |     return;  |         |  0  |          2  |      24  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-31 01:01:45,930 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 01:01:48,096 INFO     Done. Execution time: 2.1656723022460938 seconds
2023-01-31 01:01:48,096 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-0101-transparentAmortize-60s-mostPrecise/guava-raw-0131-0101-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.156s
user	0m3.782s
sys	0m0.277s

2023-01-31 01:01:48,097 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    65.88213610649109,
    10.500135898590088,
    16.085277318954468
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.50386142730713,
    15.696807622909546,
    62.3338189125061
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    65.76403951644897,
    16.726823568344116,
    62.85661315917969
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    65.73904132843018,
    11.490325450897217,
    84.98874974250793
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    66.1886854171753,
    9.517228364944458,
    8.05945110321045
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": [
    65.85800957679749,
    12.562084913253784,
    12.834408044815063
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": [
    65.99840807914734,
    11.377108812332153,
    7.246018886566162
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    65.98571681976318,
    6.557448148727417,
    14.67278265953064
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    65.73705005645752,
    4.931638240814209,
    8.025957107543945
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.00006437301636,
    8.4954514503479,
    10.00617003440857
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.7984862327575684,
    1.8254568576812744,
    1.0110406875610352
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    65.97259283065796,
    5.317371129989624,
    15.098984718322754
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    65.87320232391357,
    2.7780251502990723,
    2.0772287845611572
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    65.80794215202332,
    6.028029203414917,
    7.236662864685059
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    65.7747552394867,
    11.385194540023804,
    7.104701995849609
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    65.95040464401245,
    10.739017486572266,
    62.67966151237488
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    65.88633346557617,
    6.157877445220947,
    7.413474798202515
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    65.92227435112,
    13.960237741470337,
    11.61013126373291
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    65.85753345489502,
    6.367030382156372,
    7.284575700759888
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    65.78540444374084,
    7.030878067016602,
    7.835666656494141
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.03987526893616,
    5.1140406131744385,
    6.658700942993164
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.00632071495056,
    6.1532814502716064,
    7.195824384689331
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.19174838066101,
    5.32092547416687,
    7.571237325668335
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    65.81341576576233,
    3.6747584342956543,
    2.062286853790283
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    65.76600003242493,
    7.5037970542907715,
    9.773115158081055
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.00852870941162,
    6.019773721694946,
    6.886629343032837
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    65.74147319793701,
    3.8933188915252686,
    6.097201347351074
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    65.83708786964417,
    6.5490193367004395,
    21.08603310585022
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    65.9881820678711,
    2.7690744400024414,
    2.015303373336792
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    65.91561079025269,
    8.88285517692566,
    84.33405923843384
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    65.72980427742004,
    11.51539945602417,
    62.39607906341553
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.11347603797913,
    8.583297729492188,
    83.68481636047363
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    65.67516756057739,
    6.017080068588257,
    19.968499660491943
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    65.87985229492188,
    7.247474431991577,
    96.74643540382385
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.16725754737854,
    3.9614017009735107,
    2.0556843280792236
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    65.98066067695618,
    3.0712759494781494,
    2.1125636100769043
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    65.81828117370605,
    3.0269992351531982,
    2.031158685684204
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.01682424545288,
    7.366369009017944,
    1.4919679164886475
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    65.79287505149841,
    5.257142066955566,
    1.805556297302246
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.339772939682,
    3.044555187225342,
    2.1656723022460938
  ]
}
2023-01-31 01:01:48,097 INFO     Total time elapsed: 3712.1243669986725 seconds
2023-01-31 01:01:48,097 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-31 01:01:48,097 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 15,
  "stringutils": 8,
  "guava": 1
}
2023-01-31 01:01:48,097 INFO     Number of not verified programs: {
  "stac": 4,
  "lang3": 4,
  "stringutils": 2
}
2023-01-31 01:01:48,097 INFO     Number of unknown programs: {
  "lang3": 1,
  "guava": 2
}
2023-01-31 01:01:48,098 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 1
}
2023-01-31 01:01:48,098 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_22-56-11/qfuzz_00.json

2023-01-30 19:12:13,159 INFO     Arguments:
2023-01-30 19:12:13,159 INFO     timeout	60
2023-01-30 19:12:13,159 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-30 19:12:13,159 INFO     samples	0
2023-01-30 19:12:13,159 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-30 19:12:13,159 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-30 19:12:13,159 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-30 19:12:13,159 INFO     dry	False
2023-01-30 19:12:13,159 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/qfuzz_00.txt
2023-01-30 19:12:13,159 INFO     mode	qfuzz
2023-01-30 19:12:13,159 INFO     version	master
2023-01-30 19:12:13,159 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
2023-01-30 19:12:13,159 INFO     min_int	4
2023-01-30 19:12:13,159 INFO     max_int	100
2023-01-30 19:12:13,159 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-30 19:12:13,165 INFO     Done. Execution time: 0.005352497100830078 seconds
2023-01-30 19:12:13,165 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "9d82bc06fd266324a5e84a97982e066437800b9f"`
2023-01-30 19:12:13,171 INFO     Done. Execution time: 0.00557255744934082 seconds
2023-01-30 19:12:13,171 INFO     Build a new version: "9d82bc06fd266324a5e84a97982e066437800b9f"
2023-01-30 19:12:13,171 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-30 19:12:27,402 INFO     Done. Execution time: 14.230753660202026 seconds
2023-01-30 19:12:27,403 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 6 s, completed Jan 30, 2023 7:12:26 PM

2023-01-30 19:12:27,409 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-30 19:12:27,409 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:13:33,984 INFO     Done. Execution time: 66.575031042099 seconds
2023-01-30 19:13:33,985 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz8272225728344831631/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8272225728344831631/bin -o /tmp/qfuzz8272225728344831631/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8272225728344831631/bin
Found file /tmp/qfuzz8272225728344831631/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz8272225728344831631/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8272225728344831631/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8272225728344831631/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8272225728344831631/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz8272225728344831631/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 141095 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m141k to 141k us (average: 141k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 80.00; [895.00,1035.00,1164.00,1415.00,1495.00,1635.00,1735.00]
2; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 7; 9.00; [115.00,335.00,815.00,1175.00,1195.00,1204.00,1915.00]
3; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 7; 140.00; [95.00,895.00,1204.00,1355.00,1495.00,1635.00,1875.00]
6; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 7; 40.00; [95.00,335.00,535.00,575.00,1075.00,1175.00,1464.00]
13; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 7; 80.00; [375.00,1035.00,1164.00,1415.00,1495.00,1655.00,1735.00]
17; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 7; 20.00; [475.00,755.00,1164.00,1355.00,1615.00,1795.00,1815.00]
25; /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 20.00; [375.00,895.00,995.00,1124.00,1655.00,1675.00,1735.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 44, 86, 18, 82, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 37, 89, 80, 23, 90, 67, 57, 82, 49, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 86, 18, 82, 65, 20, 89, 91, 21, 46, 69, 89, 95, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72, 28, 16, 26, 53, 4, 58, 87, 26, 4, 4, 83, 87, 47, 22, 36, 4, 4, 87, 26, 16, 26, 53, 4, 58, 87, 64, 4, 4, 83, 87, 83, 34, 11, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 4, 93, 74, 81, 44, 67, 50, 10, 32, 52, 65, 70, 25, 90, 67, 57, 82, 82, 79, 77, 34, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 59, 5, 95, 16, 58, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8272225728344831631/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_191333_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55,44,86,18,82,83]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,37,89,80,23,90,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,86,18,82]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [72,28,16,26,53,4,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,4,93,74,81,44,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,59,5,95,16,58,40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:13:33,985 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-30 19:13:33,985 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-30 19:13:46,144 INFO     Done. Execution time: 12.158388376235962 seconds
2023-01-30 19:13:46,144 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_191333_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_191333_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55,44,86,18,82,83])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,37,89,80,23,90,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,86,18,82])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([72,28,16,26,53,4,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,4,93,74,81,44,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,59,5,95,16,58,40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [55,44,86,18,82,83]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,37,89,80,23,90,67]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,86,18,82]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [72,28,16,26,53,4,58]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [59,4,93,74,81,44,67]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [59,59,5,95,16,58,40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 104):
                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         text          |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [55,44,86,18,82,83]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [55,44,86,18,82,83]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [55,44,86,18,82,83]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [55,44,86,18,82,83]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [55,44,86,18,82,83]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [55,44,86,18,82,83]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     55  |  0  |  [55,44,86,18,82,83]  |
    25  |                     R = R + chunk;  |     55  |   55  |     55  |  0  |  [55,44,86,18,82,83]  |
    29  |                         i = i + 1;  |         |   55  |     55  |  1  |  [55,44,86,18,82,83]  |
    30  |              resetPlaceHolder_1();  |         |   55  |     55  |  1  |  [55,44,86,18,82,83]  |
    36  |        chunk = arrayRead(text, i);  |         |   55  |     44  |  1  |  [55,44,86,18,82,83]  |
    39  |                     R = R + chunk;  |     44  |   99  |     44  |  1  |  [55,44,86,18,82,83]  |
    43  |                         i = i + 1;  |         |   99  |     44  |  2  |  [55,44,86,18,82,83]  |
    44  |              resetPlaceHolder_1();  |         |   99  |     44  |  2  |  [55,44,86,18,82,83]  |
    50  |        chunk = arrayRead(text, i);  |         |   99  |     86  |  2  |  [55,44,86,18,82,83]  |
    53  |                     R = R + chunk;  |     86  |  185  |     86  |  2  |  [55,44,86,18,82,83]  |
    57  |                         i = i + 1;  |         |  185  |     86  |  3  |  [55,44,86,18,82,83]  |
    58  |              resetPlaceHolder_1();  |         |  185  |     86  |  3  |  [55,44,86,18,82,83]  |
    64  |        chunk = arrayRead(text, i);  |         |  185  |     18  |  3  |  [55,44,86,18,82,83]  |
    67  |                     R = R + chunk;  |     18  |  203  |     18  |  3  |  [55,44,86,18,82,83]  |
    71  |                         i = i + 1;  |         |  203  |     18  |  4  |  [55,44,86,18,82,83]  |
    72  |              resetPlaceHolder_1();  |         |  203  |     18  |  4  |  [55,44,86,18,82,83]  |
    78  |        chunk = arrayRead(text, i);  |         |  203  |     82  |  4  |  [55,44,86,18,82,83]  |
    81  |                     R = R + chunk;  |     82  |  285  |     82  |  4  |  [55,44,86,18,82,83]  |
    85  |                         i = i + 1;  |         |  285  |     82  |  5  |  [55,44,86,18,82,83]  |
    86  |              resetPlaceHolder_1();  |         |  285  |     82  |  5  |  [55,44,86,18,82,83]  |
    92  |        chunk = arrayRead(text, i);  |         |  285  |     83  |  5  |  [55,44,86,18,82,83]  |
    95  |                     R = R + chunk;  |     83  |  368  |     83  |  5  |  [55,44,86,18,82,83]  |
    99  |                         i = i + 1;  |         |  368  |     83  |  6  |  [55,44,86,18,82,83]  |
   100  |              resetPlaceHolder_1();  |         |  368  |     83  |  6  |  [55,44,86,18,82,83]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [25, 53, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     55  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     44  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     86  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     18  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     82  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     83  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-30 19:13:46,144 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:13:54,254 INFO     Done. Execution time: 8.10906195640564 seconds
2023-01-30 19:13:54,254 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1913-transparentAmortize-60s-mostPrecise/stac-raw-0130-1913-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.101s
user	0m18.159s
sys	0m2.113s

2023-01-30 19:13:54,254 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-30 19:13:54,254 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:15:00,393 INFO     Done. Execution time: 66.13854670524597 seconds
2023-01-30 19:15:00,394 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz8119545216676749645/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8119545216676749645/bin -o /tmp/qfuzz8119545216676749645/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8119545216676749645/bin
Found file /tmp/qfuzz8119545216676749645/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz8119545216676749645/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8119545216676749645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8119545216676749645/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8119545216676749645/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz8119545216676749645/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 145771 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m145k to 145k us (average: 145k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 8.00; [895.00,1035.00,1158.00,1166.00,1415.00,1495.00,1635.00,1652.00,1735.00]
2; /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 7; 6.00; [175.00,755.00,792.00,798.00,806.00,875.00,1315.00]
4; /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 9; 8.00; [375.00,895.00,1035.00,1158.00,1166.00,1635.00,1672.00,1735.00,1935.00]
7; /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 8; 3.00; [92.00,415.00,635.00,638.00,646.00,955.00,975.00,1195.00]
11; /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 9; 8.00; [375.00,895.00,1035.00,1158.00,1166.00,1415.00,1635.00,1672.00,1735.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 81, 44, 86, 18, 82, 83, 20, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 20, 31, 47, 48, 59, 31, 11, 4, 5, 31, 31, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 96, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 22, 89, 68, 10, 80, 4, 97, 7, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 8, 43, 37, 8, 43, 65, 8, 39, 8, 82, 92, 8, 88, 53, 51, 34, 97, 65, 8, 5, 36, 9, 68, 79, 17, 97, 28, 97, 84, 97, 34, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8119545216676749645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_191500_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,81,44,86,18], 2, 83
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,20,31,47,48,59,31], 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,96,81,44,86,18], 2, 83
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,8,43,37,8,43,65], 2, 39
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 2, 82
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:15:00,394 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-30 19:15:00,394 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-30 19:15:23,516 INFO     Done. Execution time: 23.121662616729736 seconds
2023-01-30 19:15:23,516 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_191500_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_191500_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,81,44,86,18], 2, 83)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,20,31,47,48,59,31], 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,96,81,44,86,18], 2, 83)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,8,43,37,8,43,65], 2, 39)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 2, 82)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,81,44,86,18]
templateds: 2
separator: 83
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [31,20,31,47,48,59,31]
templateds: 2
separator: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,96,81,44,86,18]
templateds: 2
separator: 83
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [39,8,43,37,8,43,65]
templateds: 2
separator: 39
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
templateds: 2
separator: 82
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |           text           |
-----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         83  |           2  |  [57,51,70,81,44,86,18]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     57  |  0  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    46  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    50  |                         j = j + 1;  |         |   57  |     57  |  0  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    51  |              resetPlaceHolder_2();  |         |   57  |     57  |  0  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    57  |        chunk = arrayRead(text, j);  |         |   57  |     51  |  0  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    60  |                     R = R + chunk;  |     51  |  108  |     51  |  0  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    64  |                         j = j + 1;  |         |  108  |     51  |  0  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    65  |              resetPlaceHolder_2();  |         |  108  |     51  |  0  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    71  |        chunk = arrayRead(text, j);  |         |  108  |     70  |  0  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    74  |                     R = R + chunk;  |     70  |  178  |     70  |  0  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    78  |                         j = j + 1;  |         |  178  |     70  |  0  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    79  |              resetPlaceHolder_2();  |         |  178  |     70  |  0  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    85  |        chunk = arrayRead(text, j);  |         |  178  |     81  |  0  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    88  |                     R = R + chunk;  |     81  |  259  |     81  |  0  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    92  |                         j = j + 1;  |         |  259  |     81  |  0  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    93  |              resetPlaceHolder_2();  |         |  259  |     81  |  0  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
    99  |        chunk = arrayRead(text, j);  |         |  259  |     44  |  0  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   102  |                     R = R + chunk;  |     44  |  303  |     44  |  0  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   106  |                         j = j + 1;  |         |  303  |     44  |  0  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   107  |              resetPlaceHolder_2();  |         |  303  |     44  |  0  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   113  |        chunk = arrayRead(text, j);  |         |  303  |     86  |  0  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   116  |                     R = R + chunk;  |     86  |  389  |     86  |  0  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   120  |                         j = j + 1;  |         |  389  |     86  |  0  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   121  |              resetPlaceHolder_2();  |         |  389  |     86  |  0  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   127  |        chunk = arrayRead(text, j);  |         |  389  |     18  |  0  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   130  |                     R = R + chunk;  |     18  |  407  |     18  |  0  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   134  |                         j = j + 1;  |         |  407  |     18  |  0  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   135  |              resetPlaceHolder_2();  |         |  407  |     18  |  0  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   141  |                 R = R + separator;  |     83  |  490  |     18  |  0  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   145  |                         i = i + 1;  |         |  490  |     18  |  1  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   146  |              resetPlaceHolder_1();  |         |  490  |     18  |  1  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   151  |                         int j = 0;  |         |  490  |     18  |  1  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   157  |        chunk = arrayRead(text, j);  |         |  490  |     57  |  1  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   160  |                     R = R + chunk;  |     57  |  547  |     57  |  1  |  0  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   164  |                         j = j + 1;  |         |  547  |     57  |  1  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   165  |              resetPlaceHolder_2();  |         |  547  |     57  |  1  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   171  |        chunk = arrayRead(text, j);  |         |  547  |     51  |  1  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   174  |                     R = R + chunk;  |     51  |  598  |     51  |  1  |  1  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   178  |                         j = j + 1;  |         |  598  |     51  |  1  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   179  |              resetPlaceHolder_2();  |         |  598  |     51  |  1  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   185  |        chunk = arrayRead(text, j);  |         |  598  |     70  |  1  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   188  |                     R = R + chunk;  |     70  |  668  |     70  |  1  |  2  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   192  |                         j = j + 1;  |         |  668  |     70  |  1  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   193  |              resetPlaceHolder_2();  |         |  668  |     70  |  1  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   199  |        chunk = arrayRead(text, j);  |         |  668  |     81  |  1  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   202  |                     R = R + chunk;  |     81  |  749  |     81  |  1  |  3  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   206  |                         j = j + 1;  |         |  749  |     81  |  1  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   207  |              resetPlaceHolder_2();  |         |  749  |     81  |  1  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   213  |        chunk = arrayRead(text, j);  |         |  749  |     44  |  1  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   216  |                     R = R + chunk;  |     44  |  793  |     44  |  1  |  4  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   220  |                         j = j + 1;  |         |  793  |     44  |  1  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   221  |              resetPlaceHolder_2();  |         |  793  |     44  |  1  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   227  |        chunk = arrayRead(text, j);  |         |  793  |     86  |  1  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   230  |                     R = R + chunk;  |     86  |  879  |     86  |  1  |  5  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   234  |                         j = j + 1;  |         |  879  |     86  |  1  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   235  |              resetPlaceHolder_2();  |         |  879  |     86  |  1  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   241  |        chunk = arrayRead(text, j);  |         |  879  |     18  |  1  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   244  |                     R = R + chunk;  |     18  |  897  |     18  |  1  |  6  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   248  |                         j = j + 1;  |         |  897  |     18  |  1  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   249  |              resetPlaceHolder_2();  |         |  897  |     18  |  1  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   255  |                 R = R + separator;  |     83  |  980  |     18  |  1  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   259  |                         i = i + 1;  |         |  980  |     18  |  2  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
   260  |              resetPlaceHolder_1();  |         |  980  |     18  |  2  |  7  |         83  |           2  |  [57,51,70,81,44,86,18]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 8 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {141}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {141}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     57  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     51  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     70  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     81  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     44  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     86  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     18  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     83  |                         0  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     57  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     51  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     70  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     81  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     44  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     86  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     18  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     83  |                         1  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 14 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 21 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {188,216}; {46,160}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {188,216}; {46,160} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     57  |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     51  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     70  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     81  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     44  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     86  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     18  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     83  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     57  |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     51  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     70  |                         1  |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     81  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     44  |                         1  |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     86  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     18  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     83  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 6), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 6), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,244}; {88,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 6), Set(3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,244}; {88,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 102, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 32 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230,244}; {60,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5, 6), Set(1, 5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230,244}; {60,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,230,244}; {88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5, 6), Set(3, 5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,230,244}; {88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,230}; {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 5), Set(1, 3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,230}; {60,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,244}; {60,88,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 6), Set(1, 3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,244}; {60,88,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 102, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 51 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 15 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,202,230,244}; {60,88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 5, 6), Set(1, 3, 5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,202,230,244}; {60,88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 102, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 58 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {60,88,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {60,88,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {60,88,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {60,88,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {88,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {88,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {88,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {88,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 51-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 51-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 52-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 52-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 53-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 53-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 54-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 54-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 55-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 55-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 56-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 56-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 57-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 57-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 102, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 51 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,88,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,88,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,88,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,102,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {74,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {74,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {74,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74,88,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {74,88,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {74,88,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {74,88,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 16 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,116,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 32-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 33-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 34-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 34-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 35-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 35-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 36-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 36-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 37-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 37-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 38-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 38-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 39-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 39-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 40-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 40-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 41-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 41-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 42-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 42-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 43-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 43-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 44-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 44-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 45-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 45-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 46-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 46-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 47-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 47-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 48-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 48-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 49-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 49-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 50-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 50-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 102, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 32 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,88,102,116,130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,88,102,116,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {60,74,88,102,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {60,74,88,102,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,116,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,116,130,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,116,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,130,174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,116,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,116,130,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,130,174,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,116,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,102,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,102,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,88,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,88,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,88,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,88,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,102,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,102,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,88,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,88,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 20-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 21-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,88,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,88,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,88,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,88,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 22-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,130,174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,88,102,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,88,102,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 23-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 24-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,102,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 25-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,174,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,116,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 26-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,174,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,88,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 27-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,88,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,116,130,174,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 28-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,116,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,130,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 29-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,116,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 30-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,88,102,116,130,202,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,88,102,130,202,230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 31-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {141}; {255}
GroupID(1): {188,216}; {46,160}
GroupID(2): {60,74,88,102,116,130,174,202,230,244}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     57  |                            |                         0  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     70  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     81  |                            |                            |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |     44  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     86  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     83  |                         0  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     57  |                            |                         0  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     51  |                            |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     70  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     81  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |     44  |                            |                         1  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     86  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     83  |                         1  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(165)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> if ((j < 0) || (j == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 0) || (i == 0))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((j < 4) || (j == 4))
    {
      if ((j < 1) || (j == 1))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 2) || (j == 2))
        {
          R1 = R1 + chunk;
        }
        else
        {
          if ((j < 3) || (j == 3))
          {
            R2 = R2 + chunk;
          }
          else
          {
            R1 = R1 + chunk;
          }
        }
      }
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 1) || (j == 1))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-30 19:15:23,518 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:16:26,766 INFO     Done. Execution time: 63.24789309501648 seconds
2023-01-30 19:16:26,766 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              if ((j < 1) || (j == 1))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 2) || (j == 2))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  if ((j < 3) || (j == 3))
                  {
                    D2 = D2 + chunk;
                  }
                  else
                  {
                    D1 = D1 + chunk;
                  }
                }
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D1p = D1;
            D1 = 0;
            C1 = C1 + 1;
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              if ((j < 1) || (j == 1))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 2) || (j == 2))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  if ((j < 3) || (j == 3))
                  {
                    D2 = D2 + chunk;
                  }
                  else
                  {
                    D1 = D1 + chunk;
                  }
                }
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D1p = D1;
            D1 = 0;
            C1 = C1 + 1;
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1154789549488902373.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8990726527917078006.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9022272067908721870.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5313697712285451060.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5107784891683999002.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4294977836774779950.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7283799279395550193.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6098930437528701022.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8198309173152911038.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    2)  (define-fun D2 () Int    7)  (define-fun D1 () Int    1)  (define-fun C2 () Int    5)  (define-fun C1 () Int    15)  (define-fun templateds () Int    7)  (define-fun text () Int    12)  (define-fun separator () Int    16)  (define-fun D0p () Int    15)  (define-fun D2p () Int    13)  (define-fun D1p () Int    15)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1915-transparentAmortize-60s-mostPrecise/stac-raw-0130-1915-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.238s
user	4m3.202s
sys	0m2.998s

2023-01-30 19:16:26,766 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-30 19:16:26,767 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:17:33,355 INFO     Done. Execution time: 66.58790135383606 seconds
2023-01-30 19:17:33,355 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz6241499083233623464/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6241499083233623464/bin -o /tmp/qfuzz6241499083233623464/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6241499083233623464/bin
Found file /tmp/qfuzz6241499083233623464/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz6241499083233623464/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6241499083233623464/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6241499083233623464/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6241499083233623464/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz6241499083233623464/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 159492 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m159k to 159k us (average: 159k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 8.00; [895.00,1035.00,1158.00,1166.00,1415.00,1495.00,1635.00,1652.00,1668.00,1735.00]
2; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 8; 3.00; [95.00,98.00,106.00,135.00,555.00,1675.00,1692.00,1968.00]
4; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 10; 8.00; [275.00,515.00,895.00,1158.00,1166.00,1415.00,1488.00,1615.00,1635.00,1852.00]
6; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 10; 8.00; [452.00,895.00,955.00,1035.00,1158.00,1166.00,1415.00,1548.00,1635.00,1735.00]
18; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 10; 8.00; [215.00,895.00,1035.00,1158.00,1166.00,1415.00,1495.00,1612.00,1635.00,1948.00]
26; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 8; 3.00; [295.00,315.00,488.00,492.00,495.00,1578.00,1586.00,1695.00]
38; /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 10; 8.00; [698.00,706.00,895.00,1035.00,1415.00,1495.00,1635.00,1652.00,1668.00,1735.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 51, 70, 74, 81, 44, 86, 18, 82, 83, 85, 89, 91, 21, 46, 58, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 24, 24, 14, 84, 24, 15, 24, 24, 24, 24, 24, 21, 93, 30, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 47, 81, 44, 86, 78, 22, 77, 30, 11, 80, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 25, 70, 13, 81, 44, 80, 97, 92, 74, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 83, 4, 4, 27, 6, 76, 84, 98, 66, 6, 91, 91, 51, 78, 83, 91, 51, 17, 36, 13, 8, 6, 36, 34, 65, 9, 71, 28, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6241499083233623464/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_191733_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,51,70,74,81,44,86], 2, 82, 83
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,24,24,14,84,24,15], 2, 24, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,10], 2, 80, 97
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,47,81,44,86], 2, 22, 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,25,70,13,81,44,80], 2, 92, 74
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,83,4,4,27,6], 2, 84, 98
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 2, 82, 83
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:17:33,356 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-30 19:17:33,356 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-30 19:17:51,076 INFO     Done. Execution time: 17.719860076904297 seconds
2023-01-30 19:17:51,076 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_191733_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_191733_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,51,70,74,81,44,86], 2, 82, 83)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,24,24,14,84,24,15], 2, 24, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,10], 2, 80, 97)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,47,81,44,86], 2, 22, 77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,25,70,13,81,44,80], 2, 92, 74)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,83,4,4,27,6], 2, 84, 98)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 2, 82, 83)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [34,51,70,74,81,44,86]
ts: 2
sep: 82
rep: 83
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [78,24,24,14,84,24,15]
ts: 2
sep: 24
rep: 24
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,10]
ts: 2
sep: 80
rep: 97
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,47,81,44,86]
ts: 2
sep: 22
rep: 77
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,25,70,13,81,44,80]
ts: 2
sep: 92
rep: 74
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,4,83,4,4,27,6]
ts: 2
sep: 84
rep: 98
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
ts: 2
sep: 82
rep: 83
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                          
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |           text           |  ts  |
------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    38  |                     int chunk = 0;  |         |     0  |      0  |     |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    40  |                         int i = 0;  |         |     0  |      0  |  0  |     |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    45  |                         int j = 0;  |         |     0  |      0  |  0  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |     0  |     34  |  0  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    54  |                     R = R + chunk;  |     34  |    34  |     34  |  0  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    57  |                       R = R + rep;  |     83  |   117  |     34  |  0  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    61  |                         j = j + 1;  |         |   117  |     34  |  0  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   117  |     34  |  0  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   117  |     51  |  0  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    71  |                     R = R + chunk;  |     51  |   168  |     51  |  0  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    74  |                       R = R + rep;  |     83  |   251  |     51  |  0  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    78  |                         j = j + 1;  |         |   251  |     51  |  0  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   251  |     51  |  0  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   251  |     70  |  0  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    88  |                     R = R + chunk;  |     70  |   321  |     70  |  0  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    91  |                       R = R + rep;  |     83  |   404  |     70  |  0  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    95  |                         j = j + 1;  |         |   404  |     70  |  0  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   404  |     70  |  0  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   404  |     74  |  0  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   105  |                     R = R + chunk;  |     74  |   478  |     74  |  0  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   108  |                       R = R + rep;  |     83  |   561  |     74  |  0  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   112  |                         j = j + 1;  |         |   561  |     74  |  0  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   113  |              resetPlaceHolder_2();  |         |   561  |     74  |  0  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |   561  |     81  |  0  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   122  |                     R = R + chunk;  |     81  |   642  |     81  |  0  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   125  |                       R = R + rep;  |     83  |   725  |     81  |  0  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   129  |                         j = j + 1;  |         |   725  |     81  |  0  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   130  |              resetPlaceHolder_2();  |         |   725  |     81  |  0  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |   725  |     44  |  0  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   139  |                     R = R + chunk;  |     44  |   769  |     44  |  0  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   142  |                       R = R + rep;  |     83  |   852  |     44  |  0  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   146  |                         j = j + 1;  |         |   852  |     44  |  0  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   147  |              resetPlaceHolder_2();  |         |   852  |     44  |  0  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |   852  |     86  |  0  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   156  |                     R = R + chunk;  |     86  |   938  |     86  |  0  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   159  |                       R = R + rep;  |     83  |  1021  |     86  |  0  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   163  |                         j = j + 1;  |         |  1021  |     86  |  0  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   164  |              resetPlaceHolder_2();  |         |  1021  |     86  |  0  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   170  |                       R = R + sep;  |     82  |  1103  |     86  |  0  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   174  |                         i = i + 1;  |         |  1103  |     86  |  1  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   175  |              resetPlaceHolder_1();  |         |  1103  |     86  |  1  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   180  |                         int j = 0;  |         |  1103  |     86  |  1  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |  1103  |     34  |  1  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   189  |                     R = R + chunk;  |     34  |  1137  |     34  |  1  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   192  |                       R = R + rep;  |     83  |  1220  |     34  |  1  |  0  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   196  |                         j = j + 1;  |         |  1220  |     34  |  1  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  1220  |     34  |  1  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  1220  |     51  |  1  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   206  |                     R = R + chunk;  |     51  |  1271  |     51  |  1  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   209  |                       R = R + rep;  |     83  |  1354  |     51  |  1  |  1  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   213  |                         j = j + 1;  |         |  1354  |     51  |  1  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  1354  |     51  |  1  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  1354  |     70  |  1  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   223  |                     R = R + chunk;  |     70  |  1424  |     70  |  1  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   226  |                       R = R + rep;  |     83  |  1507  |     70  |  1  |  2  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   230  |                         j = j + 1;  |         |  1507  |     70  |  1  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  1507  |     70  |  1  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  1507  |     74  |  1  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   240  |                     R = R + chunk;  |     74  |  1581  |     74  |  1  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   243  |                       R = R + rep;  |     83  |  1664  |     74  |  1  |  3  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   247  |                         j = j + 1;  |         |  1664  |     74  |  1  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  1664  |     74  |  1  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  1664  |     81  |  1  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   257  |                     R = R + chunk;  |     81  |  1745  |     81  |  1  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   260  |                       R = R + rep;  |     83  |  1828  |     81  |  1  |  4  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   264  |                         j = j + 1;  |         |  1828  |     81  |  1  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  1828  |     81  |  1  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  1828  |     44  |  1  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   274  |                     R = R + chunk;  |     44  |  1872  |     44  |  1  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   277  |                       R = R + rep;  |     83  |  1955  |     44  |  1  |  5  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   281  |                         j = j + 1;  |         |  1955  |     44  |  1  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  1955  |     44  |  1  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  1955  |     86  |  1  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   291  |                     R = R + chunk;  |     86  |  2041  |     86  |  1  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   294  |                       R = R + rep;  |     83  |  2124  |     86  |  1  |  6  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   298  |                         j = j + 1;  |         |  2124  |     86  |  1  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  2124  |     86  |  1  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   305  |                       R = R + sep;  |     82  |  2206  |     86  |  1  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   309  |                         i = i + 1;  |         |  2206  |     86  |  2  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  2206  |     86  |  2  |  7  |   83  |   82  |  [34,51,70,74,81,44,86]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     34  |                            |
    57  |           R = R + rep;  |     83  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     51  |                            |
    74  |           R = R + rep;  |     83  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     70  |                            |
    91  |           R = R + rep;  |     83  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     74  |                            |
   108  |           R = R + rep;  |     83  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     81  |                            |
   125  |           R = R + rep;  |     83  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     44  |                            |
   142  |           R = R + rep;  |     83  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     86  |                            |
   159  |           R = R + rep;  |     83  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     82  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     34  |                            |
   192  |           R = R + rep;  |     83  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     51  |                            |
   209  |           R = R + rep;  |     83  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     70  |                            |
   226  |           R = R + rep;  |     83  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     74  |                            |
   243  |           R = R + rep;  |     83  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     81  |                            |
   260  |           R = R + rep;  |     83  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     44  |                            |
   277  |           R = R + rep;  |     83  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     86  |                            |
   294  |           R = R + rep;  |     83  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     82  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {305} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     34  |                            |
    57  |           R = R + rep;  |     83  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     51  |                            |
    74  |           R = R + rep;  |     83  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     70  |                            |
    91  |           R = R + rep;  |     83  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     74  |                            |
   108  |           R = R + rep;  |     83  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     81  |                            |
   125  |           R = R + rep;  |     83  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     44  |                            |
   142  |           R = R + rep;  |     83  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     86  |                            |
   159  |           R = R + rep;  |     83  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     82  |                         0  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     34  |                            |
   192  |           R = R + rep;  |     83  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     51  |                            |
   209  |           R = R + rep;  |     83  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     70  |                            |
   226  |           R = R + rep;  |     83  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     74  |                            |
   243  |           R = R + rep;  |     83  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     81  |                            |
   260  |           R = R + rep;  |     83  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     44  |                            |
   277  |           R = R + rep;  |     83  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     86  |                            |
   294  |           R = R + rep;  |     83  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     82  |                         1  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 14 trace node indices: [88, 257, 189, 206, 156, 105, 291, 71, 54, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 6), Set(3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 3), Set(0, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,240}; {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {139,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,206}; {257,274}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {257,274}; {71,240}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {122,139}; {206,240}; {257,274}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 1), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(4, 5), Set(1, 3), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {122,139}; {206,240}; {257,274}; {71,105} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     34  |                            |
    57  |           R = R + rep;  |     83  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     51  |                         0  |
    74  |           R = R + rep;  |     83  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     70  |                            |
    91  |           R = R + rep;  |     83  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     74  |                         0  |
   108  |           R = R + rep;  |     83  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     81  |                         1  |
   125  |           R = R + rep;  |     83  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     44  |                         1  |
   142  |           R = R + rep;  |     83  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     86  |                            |
   159  |           R = R + rep;  |     83  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     82  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     34  |                            |
   192  |           R = R + rep;  |     83  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     51  |                         2  |
   209  |           R = R + rep;  |     83  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     70  |                            |
   226  |           R = R + rep;  |     83  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     74  |                         2  |
   243  |           R = R + rep;  |     83  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     81  |                         3  |
   260  |           R = R + rep;  |     83  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     44  |                         3  |
   277  |           R = R + rep;  |     83  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     86  |                            |
   294  |           R = R + rep;  |     83  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     82  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,291}; {54,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 6), Set(0, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,291}; {54,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,291}; {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 6), Set(2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,291}; {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223}; {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223}; {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [88, 189, 156, 291, 54, 223]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {54,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54,88,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,156,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189,223,291}; {54,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 6), Set(0, 2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189,223,291}; {54,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,156,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,189}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [88, 189, 156, 291, 54, 223]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,156,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,156,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,156,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,88,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,156,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [88, 189, 156, 291, 54, 223]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,156,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,156,189,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,156,189,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,156,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156,189,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [88, 189, 156, 291, 54, 223]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(1): {170}; {305}
GroupID(2): {122,139}; {206,240}; {257,274}; {71,105}
GroupID(3): {54,88,156,189,223,291}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     34  |                            |                            |                            |                         0  |
    57  |           R = R + rep;  |     83  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     51  |                            |                            |                         0  |                            |
    74  |           R = R + rep;  |     83  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     70  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     83  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     74  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     83  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     81  |                            |                            |                         1  |                            |
   125  |           R = R + rep;  |     83  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     44  |                            |                            |                         1  |                            |
   142  |           R = R + rep;  |     83  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     86  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     83  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |     82  |                            |                         0  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     34  |                            |                            |                            |                         0  |
   192  |           R = R + rep;  |     83  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     51  |                            |                            |                         2  |                            |
   209  |           R = R + rep;  |     83  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     70  |                            |                            |                            |                         0  |
   226  |           R = R + rep;  |     83  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     74  |                            |                            |                         2  |                            |
   243  |           R = R + rep;  |     83  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     81  |                            |                            |                         3  |                            |
   260  |           R = R + rep;  |     83  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     44  |                            |                            |                         3  |                            |
   277  |           R = R + rep;  |     83  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     86  |                            |                            |                            |                         0  |
   294  |           R = R + rep;  |     83  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |     82  |                            |                         1  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_2();
GroupID(3): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(1): Set(175)
GroupID(2): Set(113, 147, 248)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R rep -> R0 = R0 + rep;
resetPlaceHolder_2(); -> {
  // reset R3
  if ((j < 3) || (j == 3))
  {
    // reset R2
  }
  else
  {
    if ((j < 4) || (j == 4))
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
    else
    {
      if ((j < 5) || (j == 5))
      {
        // reset R2
      }
      else
      {
        if ((j < 6) || (j == 6))
        {
          if (S2 < R2)
          {
            S2 = R2;
          }
          else
          {
            ;
          }
          R2 = 0;
          C2 = C2 + 1;
        }
        else
        {
          // reset R2
        }
      }
    }
  }
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R sep -> R1 = R1 + sep;
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> if ((j < 0) || (j == 0))
{
  R3 = R3 + chunk;
}
else
{
  if ((j < 5) || (j == 5))
  {
    if ((j < 2) || (j == 2))
    {
      if ((j < 1) || (j == 1))
      {
        R2 = R2 + chunk;
      }
      else
      {
        R3 = R3 + chunk;
      }
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
  else
  {
    R3 = R3 + chunk;
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-30 19:17:51,077 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:18:54,610 INFO     Done. Execution time: 63.53309965133667 seconds
2023-01-30 19:18:54,610 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((j < 5) || (j == 5))
          {
            if ((j < 2) || (j == 2))
            {
              if ((j < 1) || (j == 1))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D3 = D3 + chunk;
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 3) || (j == 3))
        {

        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {

            }
            else
            {
              if ((j < 6) || (j == 6))
              {
                D2p = D2;
                D2 = 0;
                C2 = C2 + 1;
              }
              else
              {

              }
            }
          }
        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((j < 5) || (j == 5))
          {
            if ((j < 2) || (j == 2))
            {
              if ((j < 1) || (j == 1))
              {
                D2 = D2 + chunk;
              }
              else
              {
                D3 = D3 + chunk;
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 3) || (j == 3))
        {

        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
          else
          {
            if ((j < 5) || (j == 5))
            {

            }
            else
            {
              if ((j < 6) || (j == 6))
              {
                D2p = D2;
                D2 = 0;
                C2 = C2 + 1;
              }
              else
              {

              }
            }
          }
        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1840939384267497788.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3821863957624673620.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4476981343415087037.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7577763247372622482.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4994519271745590555.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4483652722343374870.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2523550576858780287.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8115201068566380737.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7039089799100886596.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7153259890769207839.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6367521896289798728.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7814698610814340156.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D2 0))
     (or true (= D3 0))
     (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 2))  (define-fun D3 () Int    (- 4))  (define-fun D2 () Int    6)  (define-fun D1 () Int    2)  (define-fun C2 () Int    14)  (define-fun C1 () Int    11)  (define-fun C3 () Int    14)  (define-fun rep () Int    11)  (define-fun sep () Int    5)  (define-fun text () Int    16)  (define-fun ts () Int    1)  (define-fun D0p () Int    7)  (define-fun D3p () Int    4)  (define-fun D2p () Int    7)  (define-fun D1p () Int    9)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `60.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1917-transparentAmortize-60s-mostPrecise/stac-raw-0130-1917-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.523s
user	4m3.614s
sys	0m3.628s

2023-01-30 19:18:54,611 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-30 19:18:54,611 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:20:00,830 INFO     Done. Execution time: 66.2195451259613 seconds
2023-01-30 19:20:00,831 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz3944751216477340409/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3944751216477340409/bin -o /tmp/qfuzz3944751216477340409/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3944751216477340409/bin
Found file /tmp/qfuzz3944751216477340409/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz3944751216477340409/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3944751216477340409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3944751216477340409/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3944751216477340409/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3944751216477340409/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 155464 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m155k to 155k us (average: 155k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 80.00; [895.00,1035.00,1165.00,1415.00,1495.00,1635.00,1735.00]
3; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 40.00; [115.00,415.00,455.00,585.00,935.00,1575.00]
6; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov; 7; 10.00; [115.00,125.00,895.00,1415.00,1495.00,1795.00,1915.00]
9; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 7; 100.00; [355.00,895.00,1035.00,1165.00,1495.00,1635.00,1735.00]
11; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 7; 40.00; [1035.00,1115.00,1165.00,1215.00,1255.00,1415.00,1495.00]
13; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 7; 40.00; [315.00,415.00,795.00,1165.00,1735.00,1775.00,1995.00]
22; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 100.00; [635.00,895.00,1035.00,1165.00,1495.00,1635.00,1735.00]
23; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 7; 160.00; [115.00,275.00,725.00,975.00,1395.00,1615.00,1815.00]
53; /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2; 6; 100.00; [115.00,215.00,415.00,1165.00,1615.00,1955.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 5, 83, 20, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 5, 90, 13, 80, 69, 48, 57, 13, 80, 24, 48, 12, 63, 17, 34, 93, 21, 77, 33, 65, 18, 7, 41, 16, 36, 41, 66, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 31, 74, 81, 44, 86, 18, 82, 83, 22, 54, 81, 21, 46, 69, 89, 68, 10, 80, 35, 76, 69, 10, 31, 91, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 99, 20, 86, 39, 15, 88, 65, 48, 17, 10, 66, 79, 77, 60, 36, 4, 43, 4, 52, 4, 46, 88, 65, 77, 88, 4, 91, 39, 10, 4, 57, 23, 35, 57, 77, 65, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 60, 55, 62, 44, 53, 62, 41, 54, 19, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 17, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 36, 4, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 70, 74, 89, 44, 95, 6, 92, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 68, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 78, 22, 5, 5, 20, 46, 70, 33, 85, 34, 6, 19, 30, 42, 22, 5, 5, 20, 46, 69, 89, 85, 34, 6, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3944751216477340409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_192000_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,5,83,20,10,80,80], 97
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,5,90,13,80,69,48], 57
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,31,74,81,44,86], 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,99,20,86,39,15,88], 65
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,60,55,62], 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,17,74,81,44,86], 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,70,74,89,44,95], 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,78,22,5,5,20,46], 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:20:00,831 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-30 19:20:00,831 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-30 19:20:21,809 INFO     Done. Execution time: 20.9772732257843 seconds
2023-01-30 19:20:21,809 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_192000_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_192000_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,5,83,20,10,80,80], 97)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,5,90,13,80,69,48], 57)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,99,20,86,39,15,88], 65)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,31,74,81,44,86], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,60,55,62], 44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,17,74,81,44,86], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,70,74,89,44,95], 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,78,22,5,5,20,46], 70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,5,70,74,89,44,95]
choice: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,5,83,20,10,80,80]
choice: 97
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [35,5,90,13,80,69,48]
choice: 57
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,31,74,81,44,86]
choice: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,99,20,86,39,15,88]
choice: 65
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,60,55,62]
choice: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,17,74,81,44,86]
choice: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [28,78,22,5,5,20,46]
choice: 70
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
choice: 18
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |          text          |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       6  |         |     |  [5,5,70,74,89,44,95]  |
    10  |                      // int R = 0;  |         |    0  |       6  |         |     |  [5,5,70,74,89,44,95]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       6  |         |     |  [5,5,70,74,89,44,95]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       6  |         |     |  [5,5,70,74,89,44,95]  |
    14  |                     int chunk = 0;  |         |    0  |       6  |      0  |     |  [5,5,70,74,89,44,95]  |
    25  |                         int j = 0;  |         |    0  |       6  |      0  |  0  |  [5,5,70,74,89,44,95]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       6  |      5  |  0  |  [5,5,70,74,89,44,95]  |
    34  |                     R = R + chunk;  |      5  |    5  |       6  |      5  |  0  |  [5,5,70,74,89,44,95]  |
    38  |                         j = j + 1;  |         |    5  |       6  |      5  |  1  |  [5,5,70,74,89,44,95]  |
    39  |              resetPlaceHolder_2();  |         |    5  |       6  |      5  |  1  |  [5,5,70,74,89,44,95]  |
    45  |        chunk = arrayRead(text, j);  |         |    5  |       6  |      5  |  1  |  [5,5,70,74,89,44,95]  |
    48  |                     R = R + chunk;  |      5  |   10  |       6  |      5  |  1  |  [5,5,70,74,89,44,95]  |
    52  |                         j = j + 1;  |         |   10  |       6  |      5  |  2  |  [5,5,70,74,89,44,95]  |
    53  |              resetPlaceHolder_2();  |         |   10  |       6  |      5  |  2  |  [5,5,70,74,89,44,95]  |
    59  |        chunk = arrayRead(text, j);  |         |   10  |       6  |     70  |  2  |  [5,5,70,74,89,44,95]  |
    62  |                     R = R + chunk;  |     70  |   80  |       6  |     70  |  2  |  [5,5,70,74,89,44,95]  |
    66  |                         j = j + 1;  |         |   80  |       6  |     70  |  3  |  [5,5,70,74,89,44,95]  |
    67  |              resetPlaceHolder_2();  |         |   80  |       6  |     70  |  3  |  [5,5,70,74,89,44,95]  |
    73  |        chunk = arrayRead(text, j);  |         |   80  |       6  |     74  |  3  |  [5,5,70,74,89,44,95]  |
    76  |                     R = R + chunk;  |     74  |  154  |       6  |     74  |  3  |  [5,5,70,74,89,44,95]  |
    80  |                         j = j + 1;  |         |  154  |       6  |     74  |  4  |  [5,5,70,74,89,44,95]  |
    81  |              resetPlaceHolder_2();  |         |  154  |       6  |     74  |  4  |  [5,5,70,74,89,44,95]  |
    87  |        chunk = arrayRead(text, j);  |         |  154  |       6  |     89  |  4  |  [5,5,70,74,89,44,95]  |
    90  |                     R = R + chunk;  |     89  |  243  |       6  |     89  |  4  |  [5,5,70,74,89,44,95]  |
    94  |                         j = j + 1;  |         |  243  |       6  |     89  |  5  |  [5,5,70,74,89,44,95]  |
    95  |              resetPlaceHolder_2();  |         |  243  |       6  |     89  |  5  |  [5,5,70,74,89,44,95]  |
   101  |        chunk = arrayRead(text, j);  |         |  243  |       6  |     44  |  5  |  [5,5,70,74,89,44,95]  |
   104  |                     R = R + chunk;  |     44  |  287  |       6  |     44  |  5  |  [5,5,70,74,89,44,95]  |
   108  |                         j = j + 1;  |         |  287  |       6  |     44  |  6  |  [5,5,70,74,89,44,95]  |
   109  |              resetPlaceHolder_2();  |         |  287  |       6  |     44  |  6  |  [5,5,70,74,89,44,95]  |
   115  |        chunk = arrayRead(text, j);  |         |  287  |       6  |     95  |  6  |  [5,5,70,74,89,44,95]  |
   118  |                     R = R + chunk;  |     95  |  382  |       6  |     95  |  6  |  [5,5,70,74,89,44,95]  |
   122  |                         j = j + 1;  |         |  382  |       6  |     95  |  7  |  [5,5,70,74,89,44,95]  |
   123  |              resetPlaceHolder_2();  |         |  382  |       6  |     95  |  7  |  [5,5,70,74,89,44,95]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {34}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {34}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |      5  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |      5  |                         1  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     70  |                            |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     74  |                            |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |     89  |                            |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     44  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     95  |                            |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [118, 76, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [118, 76, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [118, 76, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [118, 76, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}; {48}
GroupID(1): {62,76,90,104,118}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |      5  |                         0  |                            |
    39  |  resetPlaceHolder_2();  |         |                            |                            |
    48  |         R = R + chunk;  |      5  |                         1  |                            |
    53  |  resetPlaceHolder_2();  |         |                            |                            |
    62  |         R = R + chunk;  |     70  |                            |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |                            |
    76  |         R = R + chunk;  |     74  |                            |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |                            |
    90  |         R = R + chunk;  |     89  |                            |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |         R = R + chunk;  |     44  |                            |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |         R = R + chunk;  |     95  |                            |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      97  |         |     |  [57,5,83,20,10,80,80]  |
    10  |                      // int R = 0;  |         |    0  |      97  |         |     |  [57,5,83,20,10,80,80]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      97  |         |     |  [57,5,83,20,10,80,80]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      97  |         |     |  [57,5,83,20,10,80,80]  |
    14  |                     int chunk = 0;  |         |    0  |      97  |      0  |     |  [57,5,83,20,10,80,80]  |
    25  |                         int i = 0;  |         |    0  |      97  |      0  |  0  |  [57,5,83,20,10,80,80]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      97  |     57  |  0  |  [57,5,83,20,10,80,80]  |
    34  |                     R = R + chunk;  |     57  |   57  |      97  |     57  |  0  |  [57,5,83,20,10,80,80]  |
    38  |                         i = i + 1;  |         |   57  |      97  |     57  |  1  |  [57,5,83,20,10,80,80]  |
    39  |              resetPlaceHolder_1();  |         |   57  |      97  |     57  |  1  |  [57,5,83,20,10,80,80]  |
    45  |        chunk = arrayRead(text, i);  |         |   57  |      97  |      5  |  1  |  [57,5,83,20,10,80,80]  |
    48  |                     R = R + chunk;  |      5  |   62  |      97  |      5  |  1  |  [57,5,83,20,10,80,80]  |
    52  |                         i = i + 1;  |         |   62  |      97  |      5  |  2  |  [57,5,83,20,10,80,80]  |
    53  |              resetPlaceHolder_1();  |         |   62  |      97  |      5  |  2  |  [57,5,83,20,10,80,80]  |
    59  |        chunk = arrayRead(text, i);  |         |   62  |      97  |     83  |  2  |  [57,5,83,20,10,80,80]  |
    62  |                     R = R + chunk;  |     83  |  145  |      97  |     83  |  2  |  [57,5,83,20,10,80,80]  |
    66  |                         i = i + 1;  |         |  145  |      97  |     83  |  3  |  [57,5,83,20,10,80,80]  |
    67  |              resetPlaceHolder_1();  |         |  145  |      97  |     83  |  3  |  [57,5,83,20,10,80,80]  |
    73  |        chunk = arrayRead(text, i);  |         |  145  |      97  |     20  |  3  |  [57,5,83,20,10,80,80]  |
    76  |                     R = R + chunk;  |     20  |  165  |      97  |     20  |  3  |  [57,5,83,20,10,80,80]  |
    80  |                         i = i + 1;  |         |  165  |      97  |     20  |  4  |  [57,5,83,20,10,80,80]  |
    81  |              resetPlaceHolder_1();  |         |  165  |      97  |     20  |  4  |  [57,5,83,20,10,80,80]  |
    87  |        chunk = arrayRead(text, i);  |         |  165  |      97  |     10  |  4  |  [57,5,83,20,10,80,80]  |
    90  |                     R = R + chunk;  |     10  |  175  |      97  |     10  |  4  |  [57,5,83,20,10,80,80]  |
    94  |                         i = i + 1;  |         |  175  |      97  |     10  |  5  |  [57,5,83,20,10,80,80]  |
    95  |              resetPlaceHolder_1();  |         |  175  |      97  |     10  |  5  |  [57,5,83,20,10,80,80]  |
   101  |        chunk = arrayRead(text, i);  |         |  175  |      97  |     80  |  5  |  [57,5,83,20,10,80,80]  |
   104  |                     R = R + chunk;  |     80  |  255  |      97  |     80  |  5  |  [57,5,83,20,10,80,80]  |
   108  |                         i = i + 1;  |         |  255  |      97  |     80  |  6  |  [57,5,83,20,10,80,80]  |
   109  |              resetPlaceHolder_1();  |         |  255  |      97  |     80  |  6  |  [57,5,83,20,10,80,80]  |
   115  |        chunk = arrayRead(text, i);  |         |  255  |      97  |     80  |  6  |  [57,5,83,20,10,80,80]  |
   118  |                     R = R + chunk;  |     80  |  335  |      97  |     80  |  6  |  [57,5,83,20,10,80,80]  |
   122  |                         i = i + 1;  |         |  335  |      97  |     80  |  7  |  [57,5,83,20,10,80,80]  |
   123  |              resetPlaceHolder_1();  |         |  335  |      97  |     80  |  7  |  [57,5,83,20,10,80,80]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {118} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     57  |                            |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |      5  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     83  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     20  |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |     10  |                            |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     80  |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     80  |                         1  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [34, 76, 48, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [34, 76, 48, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [34, 76, 48, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [34, 76, 48, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {118}
GroupID(1): {34,48,62,76,90}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |     57  |                            |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |         R = R + chunk;  |      5  |                            |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |         R = R + chunk;  |     83  |                            |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     20  |                            |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |     10  |                            |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |                            |
   104  |         R = R + chunk;  |     80  |                         0  |                            |
   109  |  resetPlaceHolder_1();  |         |                            |                            |
   118  |         R = R + chunk;  |     80  |                         1  |                            |
   123  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(109)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 1) || (j == 1))
{
  R0 = R0 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_2(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 5) || (i == 5))
  {
    // reset R0
  }
  else
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
}
use R chunk -> if ((i < 4) || (i == 4))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-30 19:20:21,809 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:20:39,893 INFO     Done. Execution time: 18.08371591567993 seconds
2023-01-30 19:20:39,893 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 4) || (i == 4))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        i = i + 1;
        if ((i < 5) || (i == 5))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 4) || (i == 4))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
        i = i + 1;
        if ((i < 5) || (i == 5))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    7)  (define-fun D0 () Int    (- 1))  (define-fun text () Int    4)  (define-fun D0p () Int    2)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `15.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1920-transparentAmortize-60s-mostPrecise/stac-raw-0130-1920-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.075s
user	0m39.371s
sys	0m2.306s

2023-01-30 19:20:39,894 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-30 19:20:39,894 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:21:46,393 INFO     Done. Execution time: 66.49909162521362 seconds
2023-01-30 19:21:46,394 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz686130518504356291/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz686130518504356291/bin -o /tmp/qfuzz686130518504356291/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz686130518504356291/bin
Found file /tmp/qfuzz686130518504356291/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz686130518504356291/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz686130518504356291/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz686130518504356291/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz686130518504356291/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz686130518504356291/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz686130518504356291/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz686130518504356291/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 146700 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m146k to 146k us (average: 146k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 80.00; [895.00,1035.00,1162.00,1415.00,1495.00,1635.00,1735.00]
2; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 7; 73.00; [102.00,175.00,315.00,955.00,1235.00,1655.00,1815.00]
4; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 2; 7.00; [115.00,122.00]
6; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 7; 100.00; [415.00,895.00,1035.00,1162.00,1495.00,1635.00,1735.00]
8; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 7; 107.00; [95.00,535.00,895.00,1055.00,1162.00,1335.00,1855.00]
9; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 7; 60.00; [155.00,575.00,635.00,1035.00,1162.00,1415.00,1555.00]
12; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 7; 47.00; [895.00,1295.00,1495.00,1635.00,1682.00,1735.00,1815.00]
17; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 6; 20.00; [95.00,115.00,595.00,615.00,695.00,962.00]
29; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 113.00; [895.00,1035.00,1162.00,1275.00,1415.00,1635.00,2015.00]
31; /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta; 7; 127.00; [655.00,1035.00,1162.00,1355.00,1495.00,1635.00,1815.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 32, 74, 81, 90, 67, 63, 80, 53, 62, 41, 54, 19, 10, 12, 91, 70, 17, 90, 67, 25, 82, 79, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 100, 81, 44, 63, 18, 82, 83, 20, 53, 91, 21, 46, 69, 18, 77, 42, 14, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 83, 4, 29, 30, 4, 5, 34, 51, 50, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 64, 90, 74, 81, 44, 86, 18, 49, 83, 50, 11, 37, 53, 38, 41, 54, 19, 80, 22, 19, 10, 22, 97, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 31, 77, 7, 28, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 26, 52, 66, 4, 44, 92, 18, 48, 91, 42, 46, 69, 89, 68, 10, 100, 88, 97, 47, 72, 97, 47, 53, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 20, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 66, 70, 25, 90, 67, 57, 82, 79, 77, 89, 64, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 5, 5, 5, 5, 5, 5, 5, 60, 30, 14, 93, 93, 92, 22, 77, 46, 66, 88, 56, 65, 30, 35, 35, 35, 57, 35, 55, 35, 35, 35, 17, 97, 97, 97, 97, 97, 97, 97, 97, 68, 83, 65, 92, 33, 77, 81, 10, 20, 91, 81, 97, 57, 100, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 61, 47, 82, 15, 8, 90)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz686130518504356291/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_192146_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,32,74,81,90,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,100,81,44,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,83,4,29,30,4,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83,64,90,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,31,77,7,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,26,52,66,4,44,92]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,20,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,5,5,5,5,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,61,47,82,15,8,90]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:21:46,394 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-30 19:21:46,394 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-30 19:21:59,783 INFO     Done. Execution time: 13.389156579971313 seconds
2023-01-30 19:21:59,784 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_192146_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_192146_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,32,74,81,90,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,100,81,44,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83,64,90,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,83,4,29,30,4,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,31,77,7,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,26,52,66,4,44,92])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,20,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,5,5,5,5,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,61,47,82,15,8,90])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,32,74,81,90,67]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,100,81,44,63]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [47,83,4,29,30,4,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [83,64,90,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,31,77,7,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,26,52,66,4,44,92]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,20,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,5,5,5,5,5,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,61,47,82,15,8,90]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |           text           |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [57,51,32,74,81,90,67]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [57,51,32,74,81,90,67]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [57,51,32,74,81,90,67]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [57,51,32,74,81,90,67]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [57,51,32,74,81,90,67]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [57,51,32,74,81,90,67]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [57,51,32,74,81,90,67]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     57  |  0  |    0  |  [57,51,32,74,81,90,67]  |
    24  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |    0  |  [57,51,32,74,81,90,67]  |
    28  |                         i = i + 1;  |         |   57  |     57  |  1  |    0  |  [57,51,32,74,81,90,67]  |
    34  |        chunk = arrayRead(text, i);  |         |   57  |     51  |  1  |    0  |  [57,51,32,74,81,90,67]  |
    37  |                     R = R + chunk;  |     51  |  108  |     51  |  1  |    0  |  [57,51,32,74,81,90,67]  |
    41  |                         i = i + 1;  |         |  108  |     51  |  2  |    0  |  [57,51,32,74,81,90,67]  |
    42  |              resetPlaceHolder_1();  |         |  108  |     51  |  2  |    0  |  [57,51,32,74,81,90,67]  |
    48  |        chunk = arrayRead(text, i);  |         |  108  |     32  |  2  |    0  |  [57,51,32,74,81,90,67]  |
    51  |                     R = R + chunk;  |     32  |  140  |     32  |  2  |    0  |  [57,51,32,74,81,90,67]  |
    55  |                         i = i + 1;  |         |  140  |     32  |  3  |    0  |  [57,51,32,74,81,90,67]  |
    56  |              resetPlaceHolder_1();  |         |  140  |     32  |  3  |    0  |  [57,51,32,74,81,90,67]  |
    62  |        chunk = arrayRead(text, i);  |         |  140  |     74  |  3  |    0  |  [57,51,32,74,81,90,67]  |
    65  |                     R = R + chunk;  |     74  |  214  |     74  |  3  |    0  |  [57,51,32,74,81,90,67]  |
    69  |                         i = i + 1;  |         |  214  |     74  |  4  |    0  |  [57,51,32,74,81,90,67]  |
    70  |              resetPlaceHolder_1();  |         |  214  |     74  |  4  |    0  |  [57,51,32,74,81,90,67]  |
    76  |        chunk = arrayRead(text, i);  |         |  214  |     81  |  4  |    0  |  [57,51,32,74,81,90,67]  |
    79  |                     R = R + chunk;  |     81  |  295  |     81  |  4  |    0  |  [57,51,32,74,81,90,67]  |
    83  |                         i = i + 1;  |         |  295  |     81  |  5  |    0  |  [57,51,32,74,81,90,67]  |
    84  |              resetPlaceHolder_1();  |         |  295  |     81  |  5  |    0  |  [57,51,32,74,81,90,67]  |
    90  |        chunk = arrayRead(text, i);  |         |  295  |     90  |  5  |    0  |  [57,51,32,74,81,90,67]  |
    93  |                     R = R + chunk;  |     90  |  385  |     90  |  5  |    0  |  [57,51,32,74,81,90,67]  |
    97  |                         i = i + 1;  |         |  385  |     90  |  6  |    0  |  [57,51,32,74,81,90,67]  |
    98  |              resetPlaceHolder_1();  |         |  385  |     90  |  6  |    0  |  [57,51,32,74,81,90,67]  |
   104  |        chunk = arrayRead(text, i);  |         |  385  |     67  |  6  |    0  |  [57,51,32,74,81,90,67]  |
   107  |                     R = R + chunk;  |     67  |  452  |     67  |  6  |    0  |  [57,51,32,74,81,90,67]  |
   111  |                         i = i + 1;  |         |  452  |     67  |  7  |    0  |  [57,51,32,74,81,90,67]  |
   112  |              resetPlaceHolder_1();  |         |  452  |     67  |  7  |    0  |  [57,51,32,74,81,90,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,93,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,51,65,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,65,79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,93,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,51,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,79,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79,93,107}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     57  |                         0  |
    37  |         R = R + chunk;  |     51  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     32  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     74  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     81  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     90  |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |     67  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-30 19:21:59,784 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:22:10,288 INFO     Done. Execution time: 10.504178047180176 seconds
2023-01-30 19:22:10,289 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `8.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1922-transparentAmortize-60s-mostPrecise/stac-raw-0130-1922-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.496s
user	0m23.737s
sys	0m2.810s

2023-01-30 19:22:10,289 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-30 19:22:10,289 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:23:17,029 INFO     Done. Execution time: 66.74020266532898 seconds
2023-01-30 19:23:17,030 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz8980872145888822315/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8980872145888822315/bin -o /tmp/qfuzz8980872145888822315/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8980872145888822315/bin
Found file /tmp/qfuzz8980872145888822315/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz8980872145888822315/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8980872145888822315/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8980872145888822315/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8980872145888822315/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz8980872145888822315/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 138168 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 80.00; [28.00,895.00,1035.00,1164.00,1415.00,1495.00,1635.00,1735.00]
2; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 8; 49.00; [28.00,95.00,175.00,755.00,804.00,1375.00,1855.00,1995.00]
3; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 8; 120.00; [28.00,215.00,335.00,775.00,1015.00,1164.00,1415.00,1955.00]
5; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 7; 60.00; [28.00,1035.00,1164.00,1415.00,1495.00,1555.00,1735.00]
7; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 13.00; [15.00,28.00,1144.00]
13; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 8; 20.00; [28.00,435.00,915.00,935.00,955.00,1244.00,1315.00,1375.00]
14; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 5; 87.00; [28.00,115.00,655.00,1275.00,1924.00]
28; /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 8; 129.00; [28.00,715.00,895.00,1035.00,1164.00,1295.00,1495.00,1635.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 35, 74, 81, 44, 64, 22, 77, 55, 11, 59, 81, 70, 74, 81, 44, 64, 48, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 5, 32, 5, 5, 63, 63, 5, 5, 89, 5, 5, 5, 12, 5, 7, 5, 37, 5, 5, 5, 63, 5, 5, 5, 5, 5, 5, 62, 62, 62, 62, 18, 62, 62, 62, 62, 62, 62, 62, 50, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 65, 83, 68, 47, 45, 21, 46, 69, 83, 68, 49, 80, 84, 46, 80, 41, 66)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 77, 51, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 5, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 50, 70, 16, 38, 10, 97, 69, 89, 52, 10, 13, 61, 7, 83, 5, 34, 57, 6, 6, 22, 44, 83, 51, 53, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 37, 4, 68, 92, 99, 8, 34, 4, 70, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8980872145888822315/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230130_192316_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,35,74,81,44,64]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,5,32,5,5,63,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [61,65,83,68,47,45,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,77,51,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,50,70,16,38,10,97]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,37,4,68,92,99,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:23:17,030 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-30 19:23:17,030 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-30 19:23:29,008 INFO     Done. Execution time: 11.977284908294678 seconds
2023-01-30 19:23:29,008 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230130_192316_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230130_192316_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,35,74,81,44,64])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,5,32,5,5,63,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([61,65,83,68,47,45,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,77,51,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,50,70,16,38,10,97])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,37,4,68,92,99,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,35,74,81,44,64]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [95,5,32,5,5,63,63]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [61,65,83,68,47,45,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,77,51,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,50,70,16,38,10,97]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [39,37,4,68,92,99,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |    []  |
    10  |     return;  |         |  0  |    []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |           text           |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [57,51,35,74,81,44,64]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [57,51,35,74,81,44,64]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [57,51,35,74,81,44,64]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [57,51,35,74,81,44,64]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [57,51,35,74,81,44,64]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [57,51,35,74,81,44,64]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     57  |  0  |  [57,51,35,74,81,44,64]  |
    25  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |  [57,51,35,74,81,44,64]  |
    28  |                         R = R + 1;  |      1  |   58  |     57  |  0  |  [57,51,35,74,81,44,64]  |
    32  |                         i = i + 1;  |         |   58  |     57  |  1  |  [57,51,35,74,81,44,64]  |
    33  |              resetPlaceHolder_1();  |         |   58  |     57  |  1  |  [57,51,35,74,81,44,64]  |
    39  |        chunk = arrayRead(text, i);  |         |   58  |     51  |  1  |  [57,51,35,74,81,44,64]  |
    42  |                     R = R + chunk;  |     51  |  109  |     51  |  1  |  [57,51,35,74,81,44,64]  |
    45  |                         R = R + 1;  |      1  |  110  |     51  |  1  |  [57,51,35,74,81,44,64]  |
    49  |                         i = i + 1;  |         |  110  |     51  |  2  |  [57,51,35,74,81,44,64]  |
    50  |              resetPlaceHolder_1();  |         |  110  |     51  |  2  |  [57,51,35,74,81,44,64]  |
    56  |        chunk = arrayRead(text, i);  |         |  110  |     35  |  2  |  [57,51,35,74,81,44,64]  |
    59  |                     R = R + chunk;  |     35  |  145  |     35  |  2  |  [57,51,35,74,81,44,64]  |
    62  |                         R = R + 1;  |      1  |  146  |     35  |  2  |  [57,51,35,74,81,44,64]  |
    66  |                         i = i + 1;  |         |  146  |     35  |  3  |  [57,51,35,74,81,44,64]  |
    67  |              resetPlaceHolder_1();  |         |  146  |     35  |  3  |  [57,51,35,74,81,44,64]  |
    73  |        chunk = arrayRead(text, i);  |         |  146  |     74  |  3  |  [57,51,35,74,81,44,64]  |
    76  |                     R = R + chunk;  |     74  |  220  |     74  |  3  |  [57,51,35,74,81,44,64]  |
    79  |                         R = R + 1;  |      1  |  221  |     74  |  3  |  [57,51,35,74,81,44,64]  |
    83  |                         i = i + 1;  |         |  221  |     74  |  4  |  [57,51,35,74,81,44,64]  |
    84  |              resetPlaceHolder_1();  |         |  221  |     74  |  4  |  [57,51,35,74,81,44,64]  |
    90  |        chunk = arrayRead(text, i);  |         |  221  |     81  |  4  |  [57,51,35,74,81,44,64]  |
    93  |                     R = R + chunk;  |     81  |  302  |     81  |  4  |  [57,51,35,74,81,44,64]  |
    96  |                         R = R + 1;  |      1  |  303  |     81  |  4  |  [57,51,35,74,81,44,64]  |
   100  |                         i = i + 1;  |         |  303  |     81  |  5  |  [57,51,35,74,81,44,64]  |
   101  |              resetPlaceHolder_1();  |         |  303  |     81  |  5  |  [57,51,35,74,81,44,64]  |
   107  |        chunk = arrayRead(text, i);  |         |  303  |     44  |  5  |  [57,51,35,74,81,44,64]  |
   110  |                     R = R + chunk;  |     44  |  347  |     44  |  5  |  [57,51,35,74,81,44,64]  |
   113  |                         R = R + 1;  |      1  |  348  |     44  |  5  |  [57,51,35,74,81,44,64]  |
   117  |                         i = i + 1;  |         |  348  |     44  |  6  |  [57,51,35,74,81,44,64]  |
   118  |              resetPlaceHolder_1();  |         |  348  |     44  |  6  |  [57,51,35,74,81,44,64]  |
   124  |        chunk = arrayRead(text, i);  |         |  348  |     64  |  6  |  [57,51,35,74,81,44,64]  |
   127  |                     R = R + chunk;  |     64  |  412  |     64  |  6  |  [57,51,35,74,81,44,64]  |
   130  |                         R = R + 1;  |      1  |  413  |     64  |  6  |  [57,51,35,74,81,44,64]  |
   134  |                         i = i + 1;  |         |  413  |     64  |  7  |  [57,51,35,74,81,44,64]  |
   135  |              resetPlaceHolder_1();  |         |  413  |     64  |  7  |  [57,51,35,74,81,44,64]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     57  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     51  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     35  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     74  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     81  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     44  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     64  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {110,127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,42}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {110,127}; {25,42}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {110,127}; {25,42} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     57  |                         0  |
    28  |             R = R + 1;  |      1  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     51  |                         0  |
    45  |             R = R + 1;  |      1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     35  |                            |
    62  |             R = R + 1;  |      1  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     74  |                            |
    79  |             R = R + 1;  |      1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     81  |                            |
    96  |             R = R + 1;  |      1  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     44  |                         1  |
   113  |             R = R + 1;  |      1  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     64  |                         1  |
   130  |             R = R + 1;  |      1  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [93, 59, 76]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {110,127}; {25,42}
GroupID(2): {59,76,93}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     57  |                            |                         0  |                            |
    28  |             R = R + 1;  |      1  |                         0  |                            |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    42  |         R = R + chunk;  |     51  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         1  |                            |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    59  |         R = R + chunk;  |     35  |                            |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    76  |         R = R + chunk;  |     74  |                            |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    93  |         R = R + chunk;  |     81  |                            |                            |                         0  |
    96  |             R = R + 1;  |      1  |                         4  |                            |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   110  |         R = R + chunk;  |     44  |                            |                         1  |                            |
   113  |             R = R + 1;  |      1  |                         5  |                            |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   127  |         R = R + chunk;  |     64  |                            |                         1  |                            |
   130  |             R = R + 1;  |      1  |                         6  |                            |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set(50)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 4) || (i == 4))
  {
    R2 = R2 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-30 19:23:29,008 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:26:23,038 INFO     Done. Execution time: 174.0300371646881 seconds
2023-01-30 19:26:23,039 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D2 = D2 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4507936715089553917.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2427954178059099290.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-900226598558043318.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-784282873020078258.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1804145888769886836.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4454003107106127233.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0)))
      (a!5 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       a!4
       (<= D1p (+ 0 (* 1 1 text)))
       (or true (= D1p 0))
       true
       a!5)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and a!1 (or true (= D1 0)) a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ text text)) (= a!1 (+ text text))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    1)  (define-fun D1 () Int    3)  (define-fun D2 () Int    (- 8))  (define-fun C2 () Int    6)  (define-fun C1 () Int    2)  (define-fun text () Int    14)  (define-fun D0p () Int    0)  (define-fun D1p () Int    14)  (define-fun D2p () Int    14)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `171.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1923-transparentAmortize-60s-mostPrecise/stac-raw-0130-1923-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m54.022s
user	8m6.463s
sys	0m5.425s

2023-01-30 19:26:23,039 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-30 19:26:23,039 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:27:29,575 INFO     Done. Execution time: 66.53536629676819 seconds
2023-01-30 19:27:29,575 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz5406996984015368080/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5406996984015368080/bin -o /tmp/qfuzz5406996984015368080/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5406996984015368080/bin
Found file /tmp/qfuzz5406996984015368080/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz5406996984015368080/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5406996984015368080/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5406996984015368080/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5406996984015368080/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz5406996984015368080/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 137408 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 80.00; [895.00,1035.00,1164.00,1415.00,1495.00,1635.00,1735.00]
2; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 9.00; [375.00,1235.00,1244.00]
4; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 7; 100.00; [495.00,895.00,1035.00,1164.00,1495.00,1635.00,1735.00]
7; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 7; 129.00; [95.00,375.00,595.00,1035.00,1164.00,1415.00,1735.00]
8; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 7; 29.00; [95.00,124.00,895.00,1415.00,1495.00,1635.00,1735.00]
18; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 7; 151.00; [95.00,555.00,815.00,975.00,1204.00,1355.00,1815.00]
24; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 7; 80.00; [404.00,535.00,655.00,915.00,1535.00,1615.00,1975.00]
35; /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 100.00; [15.00,115.00,784.00,1475.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 98, 80, 45, 26, 32, 76, 33, 33, 33, 33, 33, 33, 42, 43, 33, 6, 13, 86, 38, 79, 82, 68, 66, 22, 69, 43, 42, 58, 11, 29, 69, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 90, 67, 27, 40, 48, 4, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 70, 74, 81, 44, 86, 86, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 18, 4, 29, 86, 89, 91, 97, 94, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 24, 74, 81, 44, 86, 18, 82, 83, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 18, 61, 61, 61, 61, 61, 61, 61, 61, 61, 52, 61, 78, 61, 61, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5406996984015368080/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230130_192729_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,73]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,98,80,45,26,32,76]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,90,67,27,40,48,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,4,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,18,4,29,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,24,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [61,18,61,61,61,61,61]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:27:29,575 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-30 19:27:29,575 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-30 19:27:37,059 INFO     Done. Execution time: 7.483335256576538 seconds
2023-01-30 19:27:37,059 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230130_192729_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230130_192729_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,73])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,98,80,45,26,32,76])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,90,67,27,40,48,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,4,70,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,18,4,29,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([61,18,61,61,61,61,61])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,24,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [38,73]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [19,98,80,45,26,32,76]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [59,90,67,27,40,48,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,4,70,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,18,4,29,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,24,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [61,18,61,61,61,61,61]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 48):
                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |   text    |
---------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [38,73]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [38,73]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [38,73]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [38,73]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [38,73]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [38,73]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     38  |  0  |  [38,73]  |
    25  |                     R = R + chunk;  |     38  |   38  |     38  |  0  |  [38,73]  |
    29  |                         i = i + 1;  |         |   38  |     38  |  1  |  [38,73]  |
    30  |              resetPlaceHolder_1();  |         |   38  |     38  |  1  |  [38,73]  |
    36  |        chunk = arrayRead(text, i);  |         |   38  |     73  |  1  |  [38,73]  |
    39  |                     R = R + chunk;  |     73  |  111  |     73  |  1  |  [38,73]  |
    43  |                         i = i + 1;  |         |  111  |     73  |  2  |  [38,73]  |
    44  |              resetPlaceHolder_1();  |         |  111  |     73  |  2  |  [38,73]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [25, 39]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [25, 39]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     38  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     73  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-30 19:27:37,059 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:27:46,092 INFO     Done. Execution time: 9.032238006591797 seconds
2023-01-30 19:27:46,092 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1927-transparentAmortize-60s-mostPrecise/stac-raw-0130-1927-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.022s
user	0m20.125s
sys	0m2.464s

2023-01-30 19:27:46,092 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-30 19:27:46,093 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:28:52,552 INFO     Done. Execution time: 66.4590437412262 seconds
2023-01-30 19:28:52,552 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz7609179763118891588/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7609179763118891588/bin -o /tmp/qfuzz7609179763118891588/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7609179763118891588/bin
Found file /tmp/qfuzz7609179763118891588/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz7609179763118891588/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7609179763118891588/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7609179763118891588/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7609179763118891588/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz7609179763118891588/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 131911 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,1151.00]
2; /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,731.00]
4; /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,1251.00]
9; /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,1231.00]
16; /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,911.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 23, 19, 17, 10, 95, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 67, 72, 4, 31, 30, 89, 5, 34, 33, 53, 97, 26, 24, 86, 61, 45, 40, 4, 21, 4, 57, 30, 22, 68, 36, 34, 33, 53, 97, 26, 30, 86, 61, 45, 40, 4, 82, 73, 57, 87, 69, 94, 51, 51, 51, 81, 98, 26, 38, 26, 4, 4, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 80, 89, 81, 12, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7609179763118891588/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_192852_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 61, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 62, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 57, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:28:52,552 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-30 19:28:52,552 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-30 19:28:59,400 INFO     Done. Execution time: 6.84720778465271 seconds
2023-01-30 19:28:59,400 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_192852_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_192852_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(61, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(62, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(57, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 61
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 62
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 36
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 57
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   61  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   61  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   61  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   61  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   61  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   61  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   61  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   61  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       62  |  1  |   61  |      2  |
    41  |                       R = R + sep;  |     61  |  62  |       62  |  1  |   61  |      2  |
    45  |             builder = builder + 1;  |         |  62  |       63  |  1  |   61  |      2  |
    48  |                         R = R + 1;  |      1  |  63  |       63  |  1  |   61  |      2  |
    52  |                         i = i + 1;  |         |  63  |       63  |  2  |   61  |      2  |
    53  |              resetPlaceHolder_1();  |         |  63  |       63  |  2  |   61  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     61  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     61  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     61  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-30 19:28:59,400 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:29:17,681 INFO     Done. Execution time: 18.280375719070435 seconds
2023-01-30 19:29:17,681 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `16.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1929-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1929-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.272s
user	0m48.660s
sys	0m7.111s

2023-01-30 19:29:17,681 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-30 19:29:17,681 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:30:23,909 INFO     Done. Execution time: 66.22781801223755 seconds
2023-01-30 19:30:23,910 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz3526322916503013994/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3526322916503013994/bin -o /tmp/qfuzz3526322916503013994/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3526322916503013994/bin
Found file /tmp/qfuzz3526322916503013994/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz3526322916503013994/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3526322916503013994/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3526322916503013994/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3526322916503013994/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3526322916503013994/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 127793 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 5, 4, 24, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3526322916503013994/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_193023_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:30:23,910 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-30 19:30:23,910 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-30 19:30:31,461 INFO     Done. Execution time: 7.550723075866699 seconds
2023-01-30 19:30:31,461 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_193023_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_193023_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-30 19:30:31,462 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:30:40,636 INFO     Done. Execution time: 9.17375373840332 seconds
2023-01-30 19:30:40,636 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1930-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1930-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.165s
user	0m19.609s
sys	0m2.633s

2023-01-30 19:30:40,636 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-30 19:30:40,636 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:31:47,448 INFO     Done. Execution time: 66.81180548667908 seconds
2023-01-30 19:31:47,449 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz3655459583687039683/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3655459583687039683/bin -o /tmp/qfuzz3655459583687039683/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3655459583687039683/bin
Found file /tmp/qfuzz3655459583687039683/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz3655459583687039683/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3655459583687039683/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3655459583687039683/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3655459583687039683/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3655459583687039683/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 163674 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m163k to 163k us (average: 163k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
3; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
6; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
7; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
10; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
11; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
12; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
13; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
16; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
21; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
26; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
29; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
30; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,38.00,50.00,66.00]
32; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
34; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
40; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
42; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
45; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
46; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
48; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
54; /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:2
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(96)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 73, 81, 44, 86, 18, 82, 83, 20, 89, 35, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 12, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 89, 98, 76, 81, 51, 86, 34, 82, 83, 20, 4, 97, 21, 36, 65, 23, 96, 96, 96, 96, 96, 51, 65, 23, 96, 96, 96, 52, 96, 51, 76, 81, 8, 86, 18, 82, 90, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(66, 51, 70, 68, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 26, 4, 41, 7, 57, 69, 69, 69, 69, 69, 69, 69, 45, 79, 24, 38, 21, 51, 44, 33, 43, 66, 35, 64, 69, 70, 12, 91, 4, 5, 34, 13, 18, 87, 35, 7, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 9, 26, 26, 26, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 77, 55, 11, 80, 53, 62, 41, 54, 19, 10, 89, 91, 21, 46, 69, 93, 62, 62, 23, 100, 57, 82, 79, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 10, 78, 61, 77, 55, 11, 80, 53, 95, 41, 54, 19, 94, 81, 44, 86, 18, 82, 83, 20, 89, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 14, 44, 86, 18, 82, 44, 5, 36, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 56, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 56, 39, 6, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 4, 4, 15, 4, 4, 4, 4, 4, 92, 12, 4, 4, 9, 47, 77, 73, 4, 4, 4, 4, 4, 4, 28, 15, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 79, 83, 11, 75, 4, 65, 77)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 54, 30, 67, 42, 87, 29, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 82, 83, 20, 20, 91, 12, 35, 66, 65, 66, 22, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 12, 70, 73, 82, 79, 77, 89, 19, 97, 97, 97, 97, 97, 80, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 75, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 57, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 82, 80, 80, 54, 57, 79, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 10, 22, 8, 31, 36, 91, 31, 36, 72, 50, 65, 77, 68, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 92, 26, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 19, 69, 89, 68, 10, 92, 80, 97, 57, 74, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3655459583687039683/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_193147_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [96]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,73,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,12,4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,89,98,76,81,51,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [66,51,70,68,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,26,4,41,7,57,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,9,26,26,26,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,77,55,11,80,53,62]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,10,78,61,77]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [52]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,14,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,56,39,6,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,4,4,15,4,4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,79,83,11,75,4,65]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,54,30,67,42,87,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [68,82,83,20,20,91,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,12,70,73,82,79,77]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,75,60]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,57,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,10,22,8,31,36,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,92,26,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:31:47,449 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-30 19:31:47,449 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-30 19:33:17,321 INFO     Done. Execution time: 89.87111735343933 seconds
2023-01-30 19:33:17,321 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_193147_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_193147_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 33 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([96])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,73,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,89,98,76,81,51,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,12,4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([66,51,70,68,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,26,4,41,7,57,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,9,26,26,26,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 33 (24.24%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,77,55,11,80,53,62])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,10,78,61,77])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([52])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([44])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,14,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,56,39,6,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,4,4,15,4,4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 33 (48.48%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,79,83,11,75,4,65])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,54,30,67,42,87,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([68,82,83,20,20,91,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,12,70,73,82,79,77])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,75,60])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,57,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,10,22,8,31,36,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,92,26,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 33)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 33 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,70,73,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [37,12,4,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,89,98,76,81,51,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [66,51,70,68,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,26,4,41,7,57,69]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [9,9,26,26,26,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [22,77,55,11,80,53,62]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,70,10,78,61,77]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,70,74,14,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [45,56,39,6,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,4,4,15,4,4,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [39,79,83,11,75,4,65]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [56,54,30,67,42,87,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [68,82,83,20,20,91,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,12,70,73,82,79,77]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [16,75,60]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,70,74,81,57,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [26,10,22,8,31,36,91]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,92,26,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [57,51,70,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [96]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [78]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [52]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [44]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [31]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [70]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 20 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 5235):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |          sorted          |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [57,51,70,73,81,44,86]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [57,51,70,73,81,44,86]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [57,51,70,73,81,44,86]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [57,51,70,73,81,44,86]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [57,51,70,73,81,44,86]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [57,51,70,73,81,44,86]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     57  |  0  |      |  [57,51,70,73,81,44,86]  |
    24  |                         int j = 0;  |         |    0  |     57  |  0  |   0  |  [57,51,70,73,81,44,86]  |
    30  |                         R = R + 2;  |      2  |    2  |     57  |  0  |   0  |  [57,51,70,73,81,44,86]  |
    34  |                         j = j + 1;  |         |    2  |     57  |  0  |   1  |  [57,51,70,73,81,44,86]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     57  |  0  |   1  |  [57,51,70,73,81,44,86]  |
    41  |                         R = R + 2;  |      2  |    4  |     57  |  0  |   1  |  [57,51,70,73,81,44,86]  |
    45  |                         j = j + 1;  |         |    4  |     57  |  0  |   2  |  [57,51,70,73,81,44,86]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     57  |  0  |   2  |  [57,51,70,73,81,44,86]  |
    52  |                         R = R + 2;  |      2  |    6  |     57  |  0  |   2  |  [57,51,70,73,81,44,86]  |
    56  |                         j = j + 1;  |         |    6  |     57  |  0  |   3  |  [57,51,70,73,81,44,86]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     57  |  0  |   3  |  [57,51,70,73,81,44,86]  |
    63  |                         R = R + 2;  |      2  |    8  |     57  |  0  |   3  |  [57,51,70,73,81,44,86]  |
    67  |                         j = j + 1;  |         |    8  |     57  |  0  |   4  |  [57,51,70,73,81,44,86]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     57  |  0  |   4  |  [57,51,70,73,81,44,86]  |
    74  |                         R = R + 2;  |      2  |   10  |     57  |  0  |   4  |  [57,51,70,73,81,44,86]  |
    78  |                         j = j + 1;  |         |   10  |     57  |  0  |   5  |  [57,51,70,73,81,44,86]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     57  |  0  |   5  |  [57,51,70,73,81,44,86]  |
    85  |                         R = R + 2;  |      2  |   12  |     57  |  0  |   5  |  [57,51,70,73,81,44,86]  |
    89  |                         j = j + 1;  |         |   12  |     57  |  0  |   6  |  [57,51,70,73,81,44,86]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     57  |  0  |   6  |  [57,51,70,73,81,44,86]  |
    96  |                         R = R + 2;  |      2  |   14  |     57  |  0  |   6  |  [57,51,70,73,81,44,86]  |
   100  |                         j = j + 1;  |         |   14  |     57  |  0  |   7  |  [57,51,70,73,81,44,86]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     57  |  0  |   7  |  [57,51,70,73,81,44,86]  |
   107  |                         R = R + 2;  |      2  |   16  |     57  |  0  |   7  |  [57,51,70,73,81,44,86]  |
   111  |                         j = j + 1;  |         |   16  |     57  |  0  |   8  |  [57,51,70,73,81,44,86]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     57  |  0  |   8  |  [57,51,70,73,81,44,86]  |
   118  |                         R = R + 2;  |      2  |   18  |     57  |  0  |   8  |  [57,51,70,73,81,44,86]  |
   122  |                         j = j + 1;  |         |   18  |     57  |  0  |   9  |  [57,51,70,73,81,44,86]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     57  |  0  |   9  |  [57,51,70,73,81,44,86]  |
   129  |                         R = R + 2;  |      2  |   20  |     57  |  0  |   9  |  [57,51,70,73,81,44,86]  |
   133  |                         j = j + 1;  |         |   20  |     57  |  0  |  10  |  [57,51,70,73,81,44,86]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     57  |  0  |  10  |  [57,51,70,73,81,44,86]  |
   140  |                         R = R + 2;  |      2  |   22  |     57  |  0  |  10  |  [57,51,70,73,81,44,86]  |
   144  |                         j = j + 1;  |         |   22  |     57  |  0  |  11  |  [57,51,70,73,81,44,86]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     57  |  0  |  11  |  [57,51,70,73,81,44,86]  |
   151  |                         R = R + 2;  |      2  |   24  |     57  |  0  |  11  |  [57,51,70,73,81,44,86]  |
   155  |                         j = j + 1;  |         |   24  |     57  |  0  |  12  |  [57,51,70,73,81,44,86]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     57  |  0  |  12  |  [57,51,70,73,81,44,86]  |
   162  |                         R = R + 2;  |      2  |   26  |     57  |  0  |  12  |  [57,51,70,73,81,44,86]  |
   166  |                         j = j + 1;  |         |   26  |     57  |  0  |  13  |  [57,51,70,73,81,44,86]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     57  |  0  |  13  |  [57,51,70,73,81,44,86]  |
   173  |                         R = R + 2;  |      2  |   28  |     57  |  0  |  13  |  [57,51,70,73,81,44,86]  |
   177  |                         j = j + 1;  |         |   28  |     57  |  0  |  14  |  [57,51,70,73,81,44,86]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     57  |  0  |  14  |  [57,51,70,73,81,44,86]  |
   184  |                         R = R + 2;  |      2  |   30  |     57  |  0  |  14  |  [57,51,70,73,81,44,86]  |
   188  |                         j = j + 1;  |         |   30  |     57  |  0  |  15  |  [57,51,70,73,81,44,86]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     57  |  0  |  15  |  [57,51,70,73,81,44,86]  |
   195  |                         R = R + 2;  |      2  |   32  |     57  |  0  |  15  |  [57,51,70,73,81,44,86]  |
   199  |                         j = j + 1;  |         |   32  |     57  |  0  |  16  |  [57,51,70,73,81,44,86]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     57  |  0  |  16  |  [57,51,70,73,81,44,86]  |
   206  |                         R = R + 2;  |      2  |   34  |     57  |  0  |  16  |  [57,51,70,73,81,44,86]  |
   210  |                         j = j + 1;  |         |   34  |     57  |  0  |  17  |  [57,51,70,73,81,44,86]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     57  |  0  |  17  |  [57,51,70,73,81,44,86]  |
   217  |                         R = R + 2;  |      2  |   36  |     57  |  0  |  17  |  [57,51,70,73,81,44,86]  |
   221  |                         j = j + 1;  |         |   36  |     57  |  0  |  18  |  [57,51,70,73,81,44,86]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     57  |  0  |  18  |  [57,51,70,73,81,44,86]  |
   228  |                         R = R + 2;  |      2  |   38  |     57  |  0  |  18  |  [57,51,70,73,81,44,86]  |
   232  |                         j = j + 1;  |         |   38  |     57  |  0  |  19  |  [57,51,70,73,81,44,86]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     57  |  0  |  19  |  [57,51,70,73,81,44,86]  |
   239  |                         R = R + 2;  |      2  |   40  |     57  |  0  |  19  |  [57,51,70,73,81,44,86]  |
   243  |                         j = j + 1;  |         |   40  |     57  |  0  |  20  |  [57,51,70,73,81,44,86]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     57  |  0  |  20  |  [57,51,70,73,81,44,86]  |
   250  |                         R = R + 2;  |      2  |   42  |     57  |  0  |  20  |  [57,51,70,73,81,44,86]  |
   254  |                         j = j + 1;  |         |   42  |     57  |  0  |  21  |  [57,51,70,73,81,44,86]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     57  |  0  |  21  |  [57,51,70,73,81,44,86]  |
   261  |                         R = R + 2;  |      2  |   44  |     57  |  0  |  21  |  [57,51,70,73,81,44,86]  |
   265  |                         j = j + 1;  |         |   44  |     57  |  0  |  22  |  [57,51,70,73,81,44,86]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     57  |  0  |  22  |  [57,51,70,73,81,44,86]  |
   272  |                         R = R + 2;  |      2  |   46  |     57  |  0  |  22  |  [57,51,70,73,81,44,86]  |
   276  |                         j = j + 1;  |         |   46  |     57  |  0  |  23  |  [57,51,70,73,81,44,86]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     57  |  0  |  23  |  [57,51,70,73,81,44,86]  |
   283  |                         R = R + 2;  |      2  |   48  |     57  |  0  |  23  |  [57,51,70,73,81,44,86]  |
   287  |                         j = j + 1;  |         |   48  |     57  |  0  |  24  |  [57,51,70,73,81,44,86]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     57  |  0  |  24  |  [57,51,70,73,81,44,86]  |
   294  |                         R = R + 2;  |      2  |   50  |     57  |  0  |  24  |  [57,51,70,73,81,44,86]  |
   298  |                         j = j + 1;  |         |   50  |     57  |  0  |  25  |  [57,51,70,73,81,44,86]  |
   299  |              resetPlaceHolder_2();  |         |   50  |     57  |  0  |  25  |  [57,51,70,73,81,44,86]  |
   305  |                         R = R + 2;  |      2  |   52  |     57  |  0  |  25  |  [57,51,70,73,81,44,86]  |
   309  |                         j = j + 1;  |         |   52  |     57  |  0  |  26  |  [57,51,70,73,81,44,86]  |
   310  |              resetPlaceHolder_2();  |         |   52  |     57  |  0  |  26  |  [57,51,70,73,81,44,86]  |
   316  |                         R = R + 2;  |      2  |   54  |     57  |  0  |  26  |  [57,51,70,73,81,44,86]  |
   320  |                         j = j + 1;  |         |   54  |     57  |  0  |  27  |  [57,51,70,73,81,44,86]  |
   321  |              resetPlaceHolder_2();  |         |   54  |     57  |  0  |  27  |  [57,51,70,73,81,44,86]  |
   327  |                         R = R + 2;  |      2  |   56  |     57  |  0  |  27  |  [57,51,70,73,81,44,86]  |
   331  |                         j = j + 1;  |         |   56  |     57  |  0  |  28  |  [57,51,70,73,81,44,86]  |
   332  |              resetPlaceHolder_2();  |         |   56  |     57  |  0  |  28  |  [57,51,70,73,81,44,86]  |
   338  |                         R = R + 2;  |      2  |   58  |     57  |  0  |  28  |  [57,51,70,73,81,44,86]  |
   342  |                         j = j + 1;  |         |   58  |     57  |  0  |  29  |  [57,51,70,73,81,44,86]  |
   343  |              resetPlaceHolder_2();  |         |   58  |     57  |  0  |  29  |  [57,51,70,73,81,44,86]  |
   349  |                         R = R + 2;  |      2  |   60  |     57  |  0  |  29  |  [57,51,70,73,81,44,86]  |
   353  |                         j = j + 1;  |         |   60  |     57  |  0  |  30  |  [57,51,70,73,81,44,86]  |
   354  |              resetPlaceHolder_2();  |         |   60  |     57  |  0  |  30  |  [57,51,70,73,81,44,86]  |
   360  |                         R = R + 2;  |      2  |   62  |     57  |  0  |  30  |  [57,51,70,73,81,44,86]  |
   364  |                         j = j + 1;  |         |   62  |     57  |  0  |  31  |  [57,51,70,73,81,44,86]  |
   365  |              resetPlaceHolder_2();  |         |   62  |     57  |  0  |  31  |  [57,51,70,73,81,44,86]  |
   371  |                         R = R + 2;  |      2  |   64  |     57  |  0  |  31  |  [57,51,70,73,81,44,86]  |
   375  |                         j = j + 1;  |         |   64  |     57  |  0  |  32  |  [57,51,70,73,81,44,86]  |
   376  |              resetPlaceHolder_2();  |         |   64  |     57  |  0  |  32  |  [57,51,70,73,81,44,86]  |
   382  |                         R = R + 2;  |      2  |   66  |     57  |  0  |  32  |  [57,51,70,73,81,44,86]  |
   386  |                         j = j + 1;  |         |   66  |     57  |  0  |  33  |  [57,51,70,73,81,44,86]  |
   387  |              resetPlaceHolder_2();  |         |   66  |     57  |  0  |  33  |  [57,51,70,73,81,44,86]  |
   393  |                         R = R + 2;  |      2  |   68  |     57  |  0  |  33  |  [57,51,70,73,81,44,86]  |
   397  |                         j = j + 1;  |         |   68  |     57  |  0  |  34  |  [57,51,70,73,81,44,86]  |
   398  |              resetPlaceHolder_2();  |         |   68  |     57  |  0  |  34  |  [57,51,70,73,81,44,86]  |
   404  |                         R = R + 2;  |      2  |   70  |     57  |  0  |  34  |  [57,51,70,73,81,44,86]  |
   408  |                         j = j + 1;  |         |   70  |     57  |  0  |  35  |  [57,51,70,73,81,44,86]  |
   409  |              resetPlaceHolder_2();  |         |   70  |     57  |  0  |  35  |  [57,51,70,73,81,44,86]  |
   415  |                         R = R + 2;  |      2  |   72  |     57  |  0  |  35  |  [57,51,70,73,81,44,86]  |
   419  |                         j = j + 1;  |         |   72  |     57  |  0  |  36  |  [57,51,70,73,81,44,86]  |
   420  |              resetPlaceHolder_2();  |         |   72  |     57  |  0  |  36  |  [57,51,70,73,81,44,86]  |
   426  |                         R = R + 2;  |      2  |   74  |     57  |  0  |  36  |  [57,51,70,73,81,44,86]  |
   430  |                         j = j + 1;  |         |   74  |     57  |  0  |  37  |  [57,51,70,73,81,44,86]  |
   431  |              resetPlaceHolder_2();  |         |   74  |     57  |  0  |  37  |  [57,51,70,73,81,44,86]  |
   437  |                         R = R + 2;  |      2  |   76  |     57  |  0  |  37  |  [57,51,70,73,81,44,86]  |
   441  |                         j = j + 1;  |         |   76  |     57  |  0  |  38  |  [57,51,70,73,81,44,86]  |
   442  |              resetPlaceHolder_2();  |         |   76  |     57  |  0  |  38  |  [57,51,70,73,81,44,86]  |
   448  |                         R = R + 2;  |      2  |   78  |     57  |  0  |  38  |  [57,51,70,73,81,44,86]  |
   452  |                         j = j + 1;  |         |   78  |     57  |  0  |  39  |  [57,51,70,73,81,44,86]  |
   453  |              resetPlaceHolder_2();  |         |   78  |     57  |  0  |  39  |  [57,51,70,73,81,44,86]  |
   459  |                         R = R + 2;  |      2  |   80  |     57  |  0  |  39  |  [57,51,70,73,81,44,86]  |
   463  |                         j = j + 1;  |         |   80  |     57  |  0  |  40  |  [57,51,70,73,81,44,86]  |
   464  |              resetPlaceHolder_2();  |         |   80  |     57  |  0  |  40  |  [57,51,70,73,81,44,86]  |
   470  |                         R = R + 2;  |      2  |   82  |     57  |  0  |  40  |  [57,51,70,73,81,44,86]  |
   474  |                         j = j + 1;  |         |   82  |     57  |  0  |  41  |  [57,51,70,73,81,44,86]  |
   475  |              resetPlaceHolder_2();  |         |   82  |     57  |  0  |  41  |  [57,51,70,73,81,44,86]  |
   481  |                         R = R + 2;  |      2  |   84  |     57  |  0  |  41  |  [57,51,70,73,81,44,86]  |
   485  |                         j = j + 1;  |         |   84  |     57  |  0  |  42  |  [57,51,70,73,81,44,86]  |
   486  |              resetPlaceHolder_2();  |         |   84  |     57  |  0  |  42  |  [57,51,70,73,81,44,86]  |
   492  |                         R = R + 2;  |      2  |   86  |     57  |  0  |  42  |  [57,51,70,73,81,44,86]  |
   496  |                         j = j + 1;  |         |   86  |     57  |  0  |  43  |  [57,51,70,73,81,44,86]  |
   497  |              resetPlaceHolder_2();  |         |   86  |     57  |  0  |  43  |  [57,51,70,73,81,44,86]  |
   503  |                         R = R + 2;  |      2  |   88  |     57  |  0  |  43  |  [57,51,70,73,81,44,86]  |
   507  |                         j = j + 1;  |         |   88  |     57  |  0  |  44  |  [57,51,70,73,81,44,86]  |
   508  |              resetPlaceHolder_2();  |         |   88  |     57  |  0  |  44  |  [57,51,70,73,81,44,86]  |
   514  |                         R = R + 2;  |      2  |   90  |     57  |  0  |  44  |  [57,51,70,73,81,44,86]  |
   518  |                         j = j + 1;  |         |   90  |     57  |  0  |  45  |  [57,51,70,73,81,44,86]  |
   519  |              resetPlaceHolder_2();  |         |   90  |     57  |  0  |  45  |  [57,51,70,73,81,44,86]  |
   525  |                         R = R + 2;  |      2  |   92  |     57  |  0  |  45  |  [57,51,70,73,81,44,86]  |
   529  |                         j = j + 1;  |         |   92  |     57  |  0  |  46  |  [57,51,70,73,81,44,86]  |
   530  |              resetPlaceHolder_2();  |         |   92  |     57  |  0  |  46  |  [57,51,70,73,81,44,86]  |
   536  |                         R = R + 2;  |      2  |   94  |     57  |  0  |  46  |  [57,51,70,73,81,44,86]  |
   540  |                         j = j + 1;  |         |   94  |     57  |  0  |  47  |  [57,51,70,73,81,44,86]  |
   541  |              resetPlaceHolder_2();  |         |   94  |     57  |  0  |  47  |  [57,51,70,73,81,44,86]  |
   547  |                         R = R + 2;  |      2  |   96  |     57  |  0  |  47  |  [57,51,70,73,81,44,86]  |
   551  |                         j = j + 1;  |         |   96  |     57  |  0  |  48  |  [57,51,70,73,81,44,86]  |
   552  |              resetPlaceHolder_2();  |         |   96  |     57  |  0  |  48  |  [57,51,70,73,81,44,86]  |
   558  |                         R = R + 2;  |      2  |   98  |     57  |  0  |  48  |  [57,51,70,73,81,44,86]  |
   562  |                         j = j + 1;  |         |   98  |     57  |  0  |  49  |  [57,51,70,73,81,44,86]  |
   563  |              resetPlaceHolder_2();  |         |   98  |     57  |  0  |  49  |  [57,51,70,73,81,44,86]  |
   569  |                         R = R + 2;  |      2  |  100  |     57  |  0  |  49  |  [57,51,70,73,81,44,86]  |
   573  |                         j = j + 1;  |         |  100  |     57  |  0  |  50  |  [57,51,70,73,81,44,86]  |
   574  |              resetPlaceHolder_2();  |         |  100  |     57  |  0  |  50  |  [57,51,70,73,81,44,86]  |
   580  |                         R = R + 2;  |      2  |  102  |     57  |  0  |  50  |  [57,51,70,73,81,44,86]  |
   584  |                         j = j + 1;  |         |  102  |     57  |  0  |  51  |  [57,51,70,73,81,44,86]  |
   585  |              resetPlaceHolder_2();  |         |  102  |     57  |  0  |  51  |  [57,51,70,73,81,44,86]  |
   591  |                         R = R + 2;  |      2  |  104  |     57  |  0  |  51  |  [57,51,70,73,81,44,86]  |
   595  |                         j = j + 1;  |         |  104  |     57  |  0  |  52  |  [57,51,70,73,81,44,86]  |
   596  |              resetPlaceHolder_2();  |         |  104  |     57  |  0  |  52  |  [57,51,70,73,81,44,86]  |
   602  |                         R = R + 2;  |      2  |  106  |     57  |  0  |  52  |  [57,51,70,73,81,44,86]  |
   606  |                         j = j + 1;  |         |  106  |     57  |  0  |  53  |  [57,51,70,73,81,44,86]  |
   607  |              resetPlaceHolder_2();  |         |  106  |     57  |  0  |  53  |  [57,51,70,73,81,44,86]  |
   613  |                         R = R + 2;  |      2  |  108  |     57  |  0  |  53  |  [57,51,70,73,81,44,86]  |
   617  |                         j = j + 1;  |         |  108  |     57  |  0  |  54  |  [57,51,70,73,81,44,86]  |
   618  |              resetPlaceHolder_2();  |         |  108  |     57  |  0  |  54  |  [57,51,70,73,81,44,86]  |
   624  |                         R = R + 2;  |      2  |  110  |     57  |  0  |  54  |  [57,51,70,73,81,44,86]  |
   628  |                         j = j + 1;  |         |  110  |     57  |  0  |  55  |  [57,51,70,73,81,44,86]  |
   629  |              resetPlaceHolder_2();  |         |  110  |     57  |  0  |  55  |  [57,51,70,73,81,44,86]  |
   635  |                         R = R + 2;  |      2  |  112  |     57  |  0  |  55  |  [57,51,70,73,81,44,86]  |
   639  |                         j = j + 1;  |         |  112  |     57  |  0  |  56  |  [57,51,70,73,81,44,86]  |
   640  |              resetPlaceHolder_2();  |         |  112  |     57  |  0  |  56  |  [57,51,70,73,81,44,86]  |
   646  |                         R = R + 2;  |      2  |  114  |     57  |  0  |  56  |  [57,51,70,73,81,44,86]  |
   650  |                         j = j + 1;  |         |  114  |     57  |  0  |  57  |  [57,51,70,73,81,44,86]  |
   651  |              resetPlaceHolder_2();  |         |  114  |     57  |  0  |  57  |  [57,51,70,73,81,44,86]  |
   657  |                         R = R + 1;  |      1  |  115  |     57  |  0  |  57  |  [57,51,70,73,81,44,86]  |
   661  |                         i = i + 1;  |         |  115  |     57  |  1  |  57  |  [57,51,70,73,81,44,86]  |
   662  |              resetPlaceHolder_1();  |         |  115  |     57  |  1  |  57  |  [57,51,70,73,81,44,86]  |
   668  |      entry = arrayRead(sorted, i);  |         |  115  |     51  |  1  |  57  |  [57,51,70,73,81,44,86]  |
   670  |                         int j = 0;  |         |  115  |     51  |  1  |   0  |  [57,51,70,73,81,44,86]  |
   676  |                         R = R + 2;  |      2  |  117  |     51  |  1  |   0  |  [57,51,70,73,81,44,86]  |
   680  |                         j = j + 1;  |         |  117  |     51  |  1  |   1  |  [57,51,70,73,81,44,86]  |
   681  |              resetPlaceHolder_2();  |         |  117  |     51  |  1  |   1  |  [57,51,70,73,81,44,86]  |
   687  |                         R = R + 2;  |      2  |  119  |     51  |  1  |   1  |  [57,51,70,73,81,44,86]  |
   691  |                         j = j + 1;  |         |  119  |     51  |  1  |   2  |  [57,51,70,73,81,44,86]  |
   692  |              resetPlaceHolder_2();  |         |  119  |     51  |  1  |   2  |  [57,51,70,73,81,44,86]  |
   698  |                         R = R + 2;  |      2  |  121  |     51  |  1  |   2  |  [57,51,70,73,81,44,86]  |
   702  |                         j = j + 1;  |         |  121  |     51  |  1  |   3  |  [57,51,70,73,81,44,86]  |
   703  |              resetPlaceHolder_2();  |         |  121  |     51  |  1  |   3  |  [57,51,70,73,81,44,86]  |
   709  |                         R = R + 2;  |      2  |  123  |     51  |  1  |   3  |  [57,51,70,73,81,44,86]  |
   713  |                         j = j + 1;  |         |  123  |     51  |  1  |   4  |  [57,51,70,73,81,44,86]  |
   714  |              resetPlaceHolder_2();  |         |  123  |     51  |  1  |   4  |  [57,51,70,73,81,44,86]  |
   720  |                         R = R + 2;  |      2  |  125  |     51  |  1  |   4  |  [57,51,70,73,81,44,86]  |
   724  |                         j = j + 1;  |         |  125  |     51  |  1  |   5  |  [57,51,70,73,81,44,86]  |
   725  |              resetPlaceHolder_2();  |         |  125  |     51  |  1  |   5  |  [57,51,70,73,81,44,86]  |
   731  |                         R = R + 2;  |      2  |  127  |     51  |  1  |   5  |  [57,51,70,73,81,44,86]  |
   735  |                         j = j + 1;  |         |  127  |     51  |  1  |   6  |  [57,51,70,73,81,44,86]  |
   736  |              resetPlaceHolder_2();  |         |  127  |     51  |  1  |   6  |  [57,51,70,73,81,44,86]  |
   742  |                         R = R + 2;  |      2  |  129  |     51  |  1  |   6  |  [57,51,70,73,81,44,86]  |
   746  |                         j = j + 1;  |         |  129  |     51  |  1  |   7  |  [57,51,70,73,81,44,86]  |
   747  |              resetPlaceHolder_2();  |         |  129  |     51  |  1  |   7  |  [57,51,70,73,81,44,86]  |
   753  |                         R = R + 2;  |      2  |  131  |     51  |  1  |   7  |  [57,51,70,73,81,44,86]  |
   757  |                         j = j + 1;  |         |  131  |     51  |  1  |   8  |  [57,51,70,73,81,44,86]  |
   758  |              resetPlaceHolder_2();  |         |  131  |     51  |  1  |   8  |  [57,51,70,73,81,44,86]  |
   764  |                         R = R + 2;  |      2  |  133  |     51  |  1  |   8  |  [57,51,70,73,81,44,86]  |
   768  |                         j = j + 1;  |         |  133  |     51  |  1  |   9  |  [57,51,70,73,81,44,86]  |
   769  |              resetPlaceHolder_2();  |         |  133  |     51  |  1  |   9  |  [57,51,70,73,81,44,86]  |
   775  |                         R = R + 2;  |      2  |  135  |     51  |  1  |   9  |  [57,51,70,73,81,44,86]  |
   779  |                         j = j + 1;  |         |  135  |     51  |  1  |  10  |  [57,51,70,73,81,44,86]  |
   780  |              resetPlaceHolder_2();  |         |  135  |     51  |  1  |  10  |  [57,51,70,73,81,44,86]  |
   786  |                         R = R + 2;  |      2  |  137  |     51  |  1  |  10  |  [57,51,70,73,81,44,86]  |
   790  |                         j = j + 1;  |         |  137  |     51  |  1  |  11  |  [57,51,70,73,81,44,86]  |
   791  |              resetPlaceHolder_2();  |         |  137  |     51  |  1  |  11  |  [57,51,70,73,81,44,86]  |
   797  |                         R = R + 2;  |      2  |  139  |     51  |  1  |  11  |  [57,51,70,73,81,44,86]  |
   801  |                         j = j + 1;  |         |  139  |     51  |  1  |  12  |  [57,51,70,73,81,44,86]  |
   802  |              resetPlaceHolder_2();  |         |  139  |     51  |  1  |  12  |  [57,51,70,73,81,44,86]  |
   808  |                         R = R + 2;  |      2  |  141  |     51  |  1  |  12  |  [57,51,70,73,81,44,86]  |
   812  |                         j = j + 1;  |         |  141  |     51  |  1  |  13  |  [57,51,70,73,81,44,86]  |
   813  |              resetPlaceHolder_2();  |         |  141  |     51  |  1  |  13  |  [57,51,70,73,81,44,86]  |
   819  |                         R = R + 2;  |      2  |  143  |     51  |  1  |  13  |  [57,51,70,73,81,44,86]  |
   823  |                         j = j + 1;  |         |  143  |     51  |  1  |  14  |  [57,51,70,73,81,44,86]  |
   824  |              resetPlaceHolder_2();  |         |  143  |     51  |  1  |  14  |  [57,51,70,73,81,44,86]  |
   830  |                         R = R + 2;  |      2  |  145  |     51  |  1  |  14  |  [57,51,70,73,81,44,86]  |
   834  |                         j = j + 1;  |         |  145  |     51  |  1  |  15  |  [57,51,70,73,81,44,86]  |
   835  |              resetPlaceHolder_2();  |         |  145  |     51  |  1  |  15  |  [57,51,70,73,81,44,86]  |
   841  |                         R = R + 2;  |      2  |  147  |     51  |  1  |  15  |  [57,51,70,73,81,44,86]  |
   845  |                         j = j + 1;  |         |  147  |     51  |  1  |  16  |  [57,51,70,73,81,44,86]  |
   846  |              resetPlaceHolder_2();  |         |  147  |     51  |  1  |  16  |  [57,51,70,73,81,44,86]  |
   852  |                         R = R + 2;  |      2  |  149  |     51  |  1  |  16  |  [57,51,70,73,81,44,86]  |
   856  |                         j = j + 1;  |         |  149  |     51  |  1  |  17  |  [57,51,70,73,81,44,86]  |
   857  |              resetPlaceHolder_2();  |         |  149  |     51  |  1  |  17  |  [57,51,70,73,81,44,86]  |
   863  |                         R = R + 2;  |      2  |  151  |     51  |  1  |  17  |  [57,51,70,73,81,44,86]  |
   867  |                         j = j + 1;  |         |  151  |     51  |  1  |  18  |  [57,51,70,73,81,44,86]  |
   868  |              resetPlaceHolder_2();  |         |  151  |     51  |  1  |  18  |  [57,51,70,73,81,44,86]  |
   874  |                         R = R + 2;  |      2  |  153  |     51  |  1  |  18  |  [57,51,70,73,81,44,86]  |
   878  |                         j = j + 1;  |         |  153  |     51  |  1  |  19  |  [57,51,70,73,81,44,86]  |
   879  |              resetPlaceHolder_2();  |         |  153  |     51  |  1  |  19  |  [57,51,70,73,81,44,86]  |
   885  |                         R = R + 2;  |      2  |  155  |     51  |  1  |  19  |  [57,51,70,73,81,44,86]  |
   889  |                         j = j + 1;  |         |  155  |     51  |  1  |  20  |  [57,51,70,73,81,44,86]  |
   890  |              resetPlaceHolder_2();  |         |  155  |     51  |  1  |  20  |  [57,51,70,73,81,44,86]  |
   896  |                         R = R + 2;  |      2  |  157  |     51  |  1  |  20  |  [57,51,70,73,81,44,86]  |
   900  |                         j = j + 1;  |         |  157  |     51  |  1  |  21  |  [57,51,70,73,81,44,86]  |
   901  |              resetPlaceHolder_2();  |         |  157  |     51  |  1  |  21  |  [57,51,70,73,81,44,86]  |
   907  |                         R = R + 2;  |      2  |  159  |     51  |  1  |  21  |  [57,51,70,73,81,44,86]  |
   911  |                         j = j + 1;  |         |  159  |     51  |  1  |  22  |  [57,51,70,73,81,44,86]  |
   912  |              resetPlaceHolder_2();  |         |  159  |     51  |  1  |  22  |  [57,51,70,73,81,44,86]  |
   918  |                         R = R + 2;  |      2  |  161  |     51  |  1  |  22  |  [57,51,70,73,81,44,86]  |
   922  |                         j = j + 1;  |         |  161  |     51  |  1  |  23  |  [57,51,70,73,81,44,86]  |
   923  |              resetPlaceHolder_2();  |         |  161  |     51  |  1  |  23  |  [57,51,70,73,81,44,86]  |
   929  |                         R = R + 2;  |      2  |  163  |     51  |  1  |  23  |  [57,51,70,73,81,44,86]  |
   933  |                         j = j + 1;  |         |  163  |     51  |  1  |  24  |  [57,51,70,73,81,44,86]  |
   934  |              resetPlaceHolder_2();  |         |  163  |     51  |  1  |  24  |  [57,51,70,73,81,44,86]  |
   940  |                         R = R + 2;  |      2  |  165  |     51  |  1  |  24  |  [57,51,70,73,81,44,86]  |
   944  |                         j = j + 1;  |         |  165  |     51  |  1  |  25  |  [57,51,70,73,81,44,86]  |
   945  |              resetPlaceHolder_2();  |         |  165  |     51  |  1  |  25  |  [57,51,70,73,81,44,86]  |
   951  |                         R = R + 2;  |      2  |  167  |     51  |  1  |  25  |  [57,51,70,73,81,44,86]  |
   955  |                         j = j + 1;  |         |  167  |     51  |  1  |  26  |  [57,51,70,73,81,44,86]  |
   956  |              resetPlaceHolder_2();  |         |  167  |     51  |  1  |  26  |  [57,51,70,73,81,44,86]  |
   962  |                         R = R + 2;  |      2  |  169  |     51  |  1  |  26  |  [57,51,70,73,81,44,86]  |
   966  |                         j = j + 1;  |         |  169  |     51  |  1  |  27  |  [57,51,70,73,81,44,86]  |
   967  |              resetPlaceHolder_2();  |         |  169  |     51  |  1  |  27  |  [57,51,70,73,81,44,86]  |
   973  |                         R = R + 2;  |      2  |  171  |     51  |  1  |  27  |  [57,51,70,73,81,44,86]  |
   977  |                         j = j + 1;  |         |  171  |     51  |  1  |  28  |  [57,51,70,73,81,44,86]  |
   978  |              resetPlaceHolder_2();  |         |  171  |     51  |  1  |  28  |  [57,51,70,73,81,44,86]  |
   984  |                         R = R + 2;  |      2  |  173  |     51  |  1  |  28  |  [57,51,70,73,81,44,86]  |
   988  |                         j = j + 1;  |         |  173  |     51  |  1  |  29  |  [57,51,70,73,81,44,86]  |
   989  |              resetPlaceHolder_2();  |         |  173  |     51  |  1  |  29  |  [57,51,70,73,81,44,86]  |
   995  |                         R = R + 2;  |      2  |  175  |     51  |  1  |  29  |  [57,51,70,73,81,44,86]  |
   999  |                         j = j + 1;  |         |  175  |     51  |  1  |  30  |  [57,51,70,73,81,44,86]  |
  1000  |              resetPlaceHolder_2();  |         |  175  |     51  |  1  |  30  |  [57,51,70,73,81,44,86]  |
  1006  |                         R = R + 2;  |      2  |  177  |     51  |  1  |  30  |  [57,51,70,73,81,44,86]  |
  1010  |                         j = j + 1;  |         |  177  |     51  |  1  |  31  |  [57,51,70,73,81,44,86]  |
  1011  |              resetPlaceHolder_2();  |         |  177  |     51  |  1  |  31  |  [57,51,70,73,81,44,86]  |
  1017  |                         R = R + 2;  |      2  |  179  |     51  |  1  |  31  |  [57,51,70,73,81,44,86]  |
  1021  |                         j = j + 1;  |         |  179  |     51  |  1  |  32  |  [57,51,70,73,81,44,86]  |
  1022  |              resetPlaceHolder_2();  |         |  179  |     51  |  1  |  32  |  [57,51,70,73,81,44,86]  |
  1028  |                         R = R + 2;  |      2  |  181  |     51  |  1  |  32  |  [57,51,70,73,81,44,86]  |
  1032  |                         j = j + 1;  |         |  181  |     51  |  1  |  33  |  [57,51,70,73,81,44,86]  |
  1033  |              resetPlaceHolder_2();  |         |  181  |     51  |  1  |  33  |  [57,51,70,73,81,44,86]  |
  1039  |                         R = R + 2;  |      2  |  183  |     51  |  1  |  33  |  [57,51,70,73,81,44,86]  |
  1043  |                         j = j + 1;  |         |  183  |     51  |  1  |  34  |  [57,51,70,73,81,44,86]  |
  1044  |              resetPlaceHolder_2();  |         |  183  |     51  |  1  |  34  |  [57,51,70,73,81,44,86]  |
  1050  |                         R = R + 2;  |      2  |  185  |     51  |  1  |  34  |  [57,51,70,73,81,44,86]  |
  1054  |                         j = j + 1;  |         |  185  |     51  |  1  |  35  |  [57,51,70,73,81,44,86]  |
  1055  |              resetPlaceHolder_2();  |         |  185  |     51  |  1  |  35  |  [57,51,70,73,81,44,86]  |
  1061  |                         R = R + 2;  |      2  |  187  |     51  |  1  |  35  |  [57,51,70,73,81,44,86]  |
  1065  |                         j = j + 1;  |         |  187  |     51  |  1  |  36  |  [57,51,70,73,81,44,86]  |
  1066  |              resetPlaceHolder_2();  |         |  187  |     51  |  1  |  36  |  [57,51,70,73,81,44,86]  |
  1072  |                         R = R + 2;  |      2  |  189  |     51  |  1  |  36  |  [57,51,70,73,81,44,86]  |
  1076  |                         j = j + 1;  |         |  189  |     51  |  1  |  37  |  [57,51,70,73,81,44,86]  |
  1077  |              resetPlaceHolder_2();  |         |  189  |     51  |  1  |  37  |  [57,51,70,73,81,44,86]  |
  1083  |                         R = R + 2;  |      2  |  191  |     51  |  1  |  37  |  [57,51,70,73,81,44,86]  |
  1087  |                         j = j + 1;  |         |  191  |     51  |  1  |  38  |  [57,51,70,73,81,44,86]  |
  1088  |              resetPlaceHolder_2();  |         |  191  |     51  |  1  |  38  |  [57,51,70,73,81,44,86]  |
  1094  |                         R = R + 2;  |      2  |  193  |     51  |  1  |  38  |  [57,51,70,73,81,44,86]  |
  1098  |                         j = j + 1;  |         |  193  |     51  |  1  |  39  |  [57,51,70,73,81,44,86]  |
  1099  |              resetPlaceHolder_2();  |         |  193  |     51  |  1  |  39  |  [57,51,70,73,81,44,86]  |
  1105  |                         R = R + 2;  |      2  |  195  |     51  |  1  |  39  |  [57,51,70,73,81,44,86]  |
  1109  |                         j = j + 1;  |         |  195  |     51  |  1  |  40  |  [57,51,70,73,81,44,86]  |
  1110  |              resetPlaceHolder_2();  |         |  195  |     51  |  1  |  40  |  [57,51,70,73,81,44,86]  |
  1116  |                         R = R + 2;  |      2  |  197  |     51  |  1  |  40  |  [57,51,70,73,81,44,86]  |
  1120  |                         j = j + 1;  |         |  197  |     51  |  1  |  41  |  [57,51,70,73,81,44,86]  |
  1121  |              resetPlaceHolder_2();  |         |  197  |     51  |  1  |  41  |  [57,51,70,73,81,44,86]  |
  1127  |                         R = R + 2;  |      2  |  199  |     51  |  1  |  41  |  [57,51,70,73,81,44,86]  |
  1131  |                         j = j + 1;  |         |  199  |     51  |  1  |  42  |  [57,51,70,73,81,44,86]  |
  1132  |              resetPlaceHolder_2();  |         |  199  |     51  |  1  |  42  |  [57,51,70,73,81,44,86]  |
  1138  |                         R = R + 2;  |      2  |  201  |     51  |  1  |  42  |  [57,51,70,73,81,44,86]  |
  1142  |                         j = j + 1;  |         |  201  |     51  |  1  |  43  |  [57,51,70,73,81,44,86]  |
  1143  |              resetPlaceHolder_2();  |         |  201  |     51  |  1  |  43  |  [57,51,70,73,81,44,86]  |
  1149  |                         R = R + 2;  |      2  |  203  |     51  |  1  |  43  |  [57,51,70,73,81,44,86]  |
  1153  |                         j = j + 1;  |         |  203  |     51  |  1  |  44  |  [57,51,70,73,81,44,86]  |
  1154  |              resetPlaceHolder_2();  |         |  203  |     51  |  1  |  44  |  [57,51,70,73,81,44,86]  |
  1160  |                         R = R + 2;  |      2  |  205  |     51  |  1  |  44  |  [57,51,70,73,81,44,86]  |
  1164  |                         j = j + 1;  |         |  205  |     51  |  1  |  45  |  [57,51,70,73,81,44,86]  |
  1165  |              resetPlaceHolder_2();  |         |  205  |     51  |  1  |  45  |  [57,51,70,73,81,44,86]  |
  1171  |                         R = R + 2;  |      2  |  207  |     51  |  1  |  45  |  [57,51,70,73,81,44,86]  |
  1175  |                         j = j + 1;  |         |  207  |     51  |  1  |  46  |  [57,51,70,73,81,44,86]  |
  1176  |              resetPlaceHolder_2();  |         |  207  |     51  |  1  |  46  |  [57,51,70,73,81,44,86]  |
  1182  |                         R = R + 2;  |      2  |  209  |     51  |  1  |  46  |  [57,51,70,73,81,44,86]  |
  1186  |                         j = j + 1;  |         |  209  |     51  |  1  |  47  |  [57,51,70,73,81,44,86]  |
  1187  |              resetPlaceHolder_2();  |         |  209  |     51  |  1  |  47  |  [57,51,70,73,81,44,86]  |
  1193  |                         R = R + 2;  |      2  |  211  |     51  |  1  |  47  |  [57,51,70,73,81,44,86]  |
  1197  |                         j = j + 1;  |         |  211  |     51  |  1  |  48  |  [57,51,70,73,81,44,86]  |
  1198  |              resetPlaceHolder_2();  |         |  211  |     51  |  1  |  48  |  [57,51,70,73,81,44,86]  |
  1204  |                         R = R + 2;  |      2  |  213  |     51  |  1  |  48  |  [57,51,70,73,81,44,86]  |
  1208  |                         j = j + 1;  |         |  213  |     51  |  1  |  49  |  [57,51,70,73,81,44,86]  |
  1209  |              resetPlaceHolder_2();  |         |  213  |     51  |  1  |  49  |  [57,51,70,73,81,44,86]  |
  1215  |                         R = R + 2;  |      2  |  215  |     51  |  1  |  49  |  [57,51,70,73,81,44,86]  |
  1219  |                         j = j + 1;  |         |  215  |     51  |  1  |  50  |  [57,51,70,73,81,44,86]  |
  1220  |              resetPlaceHolder_2();  |         |  215  |     51  |  1  |  50  |  [57,51,70,73,81,44,86]  |
  1226  |                         R = R + 2;  |      2  |  217  |     51  |  1  |  50  |  [57,51,70,73,81,44,86]  |
  1230  |                         j = j + 1;  |         |  217  |     51  |  1  |  51  |  [57,51,70,73,81,44,86]  |
  1231  |              resetPlaceHolder_2();  |         |  217  |     51  |  1  |  51  |  [57,51,70,73,81,44,86]  |
  1237  |                         R = R + 1;  |      1  |  218  |     51  |  1  |  51  |  [57,51,70,73,81,44,86]  |
  1241  |                         i = i + 1;  |         |  218  |     51  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1242  |              resetPlaceHolder_1();  |         |  218  |     51  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1248  |      entry = arrayRead(sorted, i);  |         |  218  |     70  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1250  |                         int j = 0;  |         |  218  |     70  |  2  |   0  |  [57,51,70,73,81,44,86]  |
  1256  |                         R = R + 2;  |      2  |  220  |     70  |  2  |   0  |  [57,51,70,73,81,44,86]  |
  1260  |                         j = j + 1;  |         |  220  |     70  |  2  |   1  |  [57,51,70,73,81,44,86]  |
  1261  |              resetPlaceHolder_2();  |         |  220  |     70  |  2  |   1  |  [57,51,70,73,81,44,86]  |
  1267  |                         R = R + 2;  |      2  |  222  |     70  |  2  |   1  |  [57,51,70,73,81,44,86]  |
  1271  |                         j = j + 1;  |         |  222  |     70  |  2  |   2  |  [57,51,70,73,81,44,86]  |
  1272  |              resetPlaceHolder_2();  |         |  222  |     70  |  2  |   2  |  [57,51,70,73,81,44,86]  |
  1278  |                         R = R + 2;  |      2  |  224  |     70  |  2  |   2  |  [57,51,70,73,81,44,86]  |
  1282  |                         j = j + 1;  |         |  224  |     70  |  2  |   3  |  [57,51,70,73,81,44,86]  |
  1283  |              resetPlaceHolder_2();  |         |  224  |     70  |  2  |   3  |  [57,51,70,73,81,44,86]  |
  1289  |                         R = R + 2;  |      2  |  226  |     70  |  2  |   3  |  [57,51,70,73,81,44,86]  |
  1293  |                         j = j + 1;  |         |  226  |     70  |  2  |   4  |  [57,51,70,73,81,44,86]  |
  1294  |              resetPlaceHolder_2();  |         |  226  |     70  |  2  |   4  |  [57,51,70,73,81,44,86]  |
  1300  |                         R = R + 2;  |      2  |  228  |     70  |  2  |   4  |  [57,51,70,73,81,44,86]  |
  1304  |                         j = j + 1;  |         |  228  |     70  |  2  |   5  |  [57,51,70,73,81,44,86]  |
  1305  |              resetPlaceHolder_2();  |         |  228  |     70  |  2  |   5  |  [57,51,70,73,81,44,86]  |
  1311  |                         R = R + 2;  |      2  |  230  |     70  |  2  |   5  |  [57,51,70,73,81,44,86]  |
  1315  |                         j = j + 1;  |         |  230  |     70  |  2  |   6  |  [57,51,70,73,81,44,86]  |
  1316  |              resetPlaceHolder_2();  |         |  230  |     70  |  2  |   6  |  [57,51,70,73,81,44,86]  |
  1322  |                         R = R + 2;  |      2  |  232  |     70  |  2  |   6  |  [57,51,70,73,81,44,86]  |
  1326  |                         j = j + 1;  |         |  232  |     70  |  2  |   7  |  [57,51,70,73,81,44,86]  |
  1327  |              resetPlaceHolder_2();  |         |  232  |     70  |  2  |   7  |  [57,51,70,73,81,44,86]  |
  1333  |                         R = R + 2;  |      2  |  234  |     70  |  2  |   7  |  [57,51,70,73,81,44,86]  |
  1337  |                         j = j + 1;  |         |  234  |     70  |  2  |   8  |  [57,51,70,73,81,44,86]  |
  1338  |              resetPlaceHolder_2();  |         |  234  |     70  |  2  |   8  |  [57,51,70,73,81,44,86]  |
  1344  |                         R = R + 2;  |      2  |  236  |     70  |  2  |   8  |  [57,51,70,73,81,44,86]  |
  1348  |                         j = j + 1;  |         |  236  |     70  |  2  |   9  |  [57,51,70,73,81,44,86]  |
  1349  |              resetPlaceHolder_2();  |         |  236  |     70  |  2  |   9  |  [57,51,70,73,81,44,86]  |
  1355  |                         R = R + 2;  |      2  |  238  |     70  |  2  |   9  |  [57,51,70,73,81,44,86]  |
  1359  |                         j = j + 1;  |         |  238  |     70  |  2  |  10  |  [57,51,70,73,81,44,86]  |
  1360  |              resetPlaceHolder_2();  |         |  238  |     70  |  2  |  10  |  [57,51,70,73,81,44,86]  |
  1366  |                         R = R + 2;  |      2  |  240  |     70  |  2  |  10  |  [57,51,70,73,81,44,86]  |
  1370  |                         j = j + 1;  |         |  240  |     70  |  2  |  11  |  [57,51,70,73,81,44,86]  |
  1371  |              resetPlaceHolder_2();  |         |  240  |     70  |  2  |  11  |  [57,51,70,73,81,44,86]  |
  1377  |                         R = R + 2;  |      2  |  242  |     70  |  2  |  11  |  [57,51,70,73,81,44,86]  |
  1381  |                         j = j + 1;  |         |  242  |     70  |  2  |  12  |  [57,51,70,73,81,44,86]  |
  1382  |              resetPlaceHolder_2();  |         |  242  |     70  |  2  |  12  |  [57,51,70,73,81,44,86]  |
  1388  |                         R = R + 2;  |      2  |  244  |     70  |  2  |  12  |  [57,51,70,73,81,44,86]  |
  1392  |                         j = j + 1;  |         |  244  |     70  |  2  |  13  |  [57,51,70,73,81,44,86]  |
  1393  |              resetPlaceHolder_2();  |         |  244  |     70  |  2  |  13  |  [57,51,70,73,81,44,86]  |
  1399  |                         R = R + 2;  |      2  |  246  |     70  |  2  |  13  |  [57,51,70,73,81,44,86]  |
  1403  |                         j = j + 1;  |         |  246  |     70  |  2  |  14  |  [57,51,70,73,81,44,86]  |
  1404  |              resetPlaceHolder_2();  |         |  246  |     70  |  2  |  14  |  [57,51,70,73,81,44,86]  |
  1410  |                         R = R + 2;  |      2  |  248  |     70  |  2  |  14  |  [57,51,70,73,81,44,86]  |
  1414  |                         j = j + 1;  |         |  248  |     70  |  2  |  15  |  [57,51,70,73,81,44,86]  |
  1415  |              resetPlaceHolder_2();  |         |  248  |     70  |  2  |  15  |  [57,51,70,73,81,44,86]  |
  1421  |                         R = R + 2;  |      2  |  250  |     70  |  2  |  15  |  [57,51,70,73,81,44,86]  |
  1425  |                         j = j + 1;  |         |  250  |     70  |  2  |  16  |  [57,51,70,73,81,44,86]  |
  1426  |              resetPlaceHolder_2();  |         |  250  |     70  |  2  |  16  |  [57,51,70,73,81,44,86]  |
  1432  |                         R = R + 2;  |      2  |  252  |     70  |  2  |  16  |  [57,51,70,73,81,44,86]  |
  1436  |                         j = j + 1;  |         |  252  |     70  |  2  |  17  |  [57,51,70,73,81,44,86]  |
  1437  |              resetPlaceHolder_2();  |         |  252  |     70  |  2  |  17  |  [57,51,70,73,81,44,86]  |
  1443  |                         R = R + 2;  |      2  |  254  |     70  |  2  |  17  |  [57,51,70,73,81,44,86]  |
  1447  |                         j = j + 1;  |         |  254  |     70  |  2  |  18  |  [57,51,70,73,81,44,86]  |
  1448  |              resetPlaceHolder_2();  |         |  254  |     70  |  2  |  18  |  [57,51,70,73,81,44,86]  |
  1454  |                         R = R + 2;  |      2  |  256  |     70  |  2  |  18  |  [57,51,70,73,81,44,86]  |
  1458  |                         j = j + 1;  |         |  256  |     70  |  2  |  19  |  [57,51,70,73,81,44,86]  |
  1459  |              resetPlaceHolder_2();  |         |  256  |     70  |  2  |  19  |  [57,51,70,73,81,44,86]  |
  1465  |                         R = R + 2;  |      2  |  258  |     70  |  2  |  19  |  [57,51,70,73,81,44,86]  |
  1469  |                         j = j + 1;  |         |  258  |     70  |  2  |  20  |  [57,51,70,73,81,44,86]  |
  1470  |              resetPlaceHolder_2();  |         |  258  |     70  |  2  |  20  |  [57,51,70,73,81,44,86]  |
  1476  |                         R = R + 2;  |      2  |  260  |     70  |  2  |  20  |  [57,51,70,73,81,44,86]  |
  1480  |                         j = j + 1;  |         |  260  |     70  |  2  |  21  |  [57,51,70,73,81,44,86]  |
  1481  |              resetPlaceHolder_2();  |         |  260  |     70  |  2  |  21  |  [57,51,70,73,81,44,86]  |
  1487  |                         R = R + 2;  |      2  |  262  |     70  |  2  |  21  |  [57,51,70,73,81,44,86]  |
  1491  |                         j = j + 1;  |         |  262  |     70  |  2  |  22  |  [57,51,70,73,81,44,86]  |
  1492  |              resetPlaceHolder_2();  |         |  262  |     70  |  2  |  22  |  [57,51,70,73,81,44,86]  |
  1498  |                         R = R + 2;  |      2  |  264  |     70  |  2  |  22  |  [57,51,70,73,81,44,86]  |
  1502  |                         j = j + 1;  |         |  264  |     70  |  2  |  23  |  [57,51,70,73,81,44,86]  |
  1503  |              resetPlaceHolder_2();  |         |  264  |     70  |  2  |  23  |  [57,51,70,73,81,44,86]  |
  1509  |                         R = R + 2;  |      2  |  266  |     70  |  2  |  23  |  [57,51,70,73,81,44,86]  |
  1513  |                         j = j + 1;  |         |  266  |     70  |  2  |  24  |  [57,51,70,73,81,44,86]  |
  1514  |              resetPlaceHolder_2();  |         |  266  |     70  |  2  |  24  |  [57,51,70,73,81,44,86]  |
  1520  |                         R = R + 2;  |      2  |  268  |     70  |  2  |  24  |  [57,51,70,73,81,44,86]  |
  1524  |                         j = j + 1;  |         |  268  |     70  |  2  |  25  |  [57,51,70,73,81,44,86]  |
  1525  |              resetPlaceHolder_2();  |         |  268  |     70  |  2  |  25  |  [57,51,70,73,81,44,86]  |
  1531  |                         R = R + 2;  |      2  |  270  |     70  |  2  |  25  |  [57,51,70,73,81,44,86]  |
  1535  |                         j = j + 1;  |         |  270  |     70  |  2  |  26  |  [57,51,70,73,81,44,86]  |
  1536  |              resetPlaceHolder_2();  |         |  270  |     70  |  2  |  26  |  [57,51,70,73,81,44,86]  |
  1542  |                         R = R + 2;  |      2  |  272  |     70  |  2  |  26  |  [57,51,70,73,81,44,86]  |
  1546  |                         j = j + 1;  |         |  272  |     70  |  2  |  27  |  [57,51,70,73,81,44,86]  |
  1547  |              resetPlaceHolder_2();  |         |  272  |     70  |  2  |  27  |  [57,51,70,73,81,44,86]  |
  1553  |                         R = R + 2;  |      2  |  274  |     70  |  2  |  27  |  [57,51,70,73,81,44,86]  |
  1557  |                         j = j + 1;  |         |  274  |     70  |  2  |  28  |  [57,51,70,73,81,44,86]  |
  1558  |              resetPlaceHolder_2();  |         |  274  |     70  |  2  |  28  |  [57,51,70,73,81,44,86]  |
  1564  |                         R = R + 2;  |      2  |  276  |     70  |  2  |  28  |  [57,51,70,73,81,44,86]  |
  1568  |                         j = j + 1;  |         |  276  |     70  |  2  |  29  |  [57,51,70,73,81,44,86]  |
  1569  |              resetPlaceHolder_2();  |         |  276  |     70  |  2  |  29  |  [57,51,70,73,81,44,86]  |
  1575  |                         R = R + 2;  |      2  |  278  |     70  |  2  |  29  |  [57,51,70,73,81,44,86]  |
  1579  |                         j = j + 1;  |         |  278  |     70  |  2  |  30  |  [57,51,70,73,81,44,86]  |
  1580  |              resetPlaceHolder_2();  |         |  278  |     70  |  2  |  30  |  [57,51,70,73,81,44,86]  |
  1586  |                         R = R + 2;  |      2  |  280  |     70  |  2  |  30  |  [57,51,70,73,81,44,86]  |
  1590  |                         j = j + 1;  |         |  280  |     70  |  2  |  31  |  [57,51,70,73,81,44,86]  |
  1591  |              resetPlaceHolder_2();  |         |  280  |     70  |  2  |  31  |  [57,51,70,73,81,44,86]  |
  1597  |                         R = R + 2;  |      2  |  282  |     70  |  2  |  31  |  [57,51,70,73,81,44,86]  |
  1601  |                         j = j + 1;  |         |  282  |     70  |  2  |  32  |  [57,51,70,73,81,44,86]  |
  1602  |              resetPlaceHolder_2();  |         |  282  |     70  |  2  |  32  |  [57,51,70,73,81,44,86]  |
  1608  |                         R = R + 2;  |      2  |  284  |     70  |  2  |  32  |  [57,51,70,73,81,44,86]  |
  1612  |                         j = j + 1;  |         |  284  |     70  |  2  |  33  |  [57,51,70,73,81,44,86]  |
  1613  |              resetPlaceHolder_2();  |         |  284  |     70  |  2  |  33  |  [57,51,70,73,81,44,86]  |
  1619  |                         R = R + 2;  |      2  |  286  |     70  |  2  |  33  |  [57,51,70,73,81,44,86]  |
  1623  |                         j = j + 1;  |         |  286  |     70  |  2  |  34  |  [57,51,70,73,81,44,86]  |
  1624  |              resetPlaceHolder_2();  |         |  286  |     70  |  2  |  34  |  [57,51,70,73,81,44,86]  |
  1630  |                         R = R + 2;  |      2  |  288  |     70  |  2  |  34  |  [57,51,70,73,81,44,86]  |
  1634  |                         j = j + 1;  |         |  288  |     70  |  2  |  35  |  [57,51,70,73,81,44,86]  |
  1635  |              resetPlaceHolder_2();  |         |  288  |     70  |  2  |  35  |  [57,51,70,73,81,44,86]  |
  1641  |                         R = R + 2;  |      2  |  290  |     70  |  2  |  35  |  [57,51,70,73,81,44,86]  |
  1645  |                         j = j + 1;  |         |  290  |     70  |  2  |  36  |  [57,51,70,73,81,44,86]  |
  1646  |              resetPlaceHolder_2();  |         |  290  |     70  |  2  |  36  |  [57,51,70,73,81,44,86]  |
  1652  |                         R = R + 2;  |      2  |  292  |     70  |  2  |  36  |  [57,51,70,73,81,44,86]  |
  1656  |                         j = j + 1;  |         |  292  |     70  |  2  |  37  |  [57,51,70,73,81,44,86]  |
  1657  |              resetPlaceHolder_2();  |         |  292  |     70  |  2  |  37  |  [57,51,70,73,81,44,86]  |
  1663  |                         R = R + 2;  |      2  |  294  |     70  |  2  |  37  |  [57,51,70,73,81,44,86]  |
  1667  |                         j = j + 1;  |         |  294  |     70  |  2  |  38  |  [57,51,70,73,81,44,86]  |
  1668  |              resetPlaceHolder_2();  |         |  294  |     70  |  2  |  38  |  [57,51,70,73,81,44,86]  |
  1674  |                         R = R + 2;  |      2  |  296  |     70  |  2  |  38  |  [57,51,70,73,81,44,86]  |
  1678  |                         j = j + 1;  |         |  296  |     70  |  2  |  39  |  [57,51,70,73,81,44,86]  |
  1679  |              resetPlaceHolder_2();  |         |  296  |     70  |  2  |  39  |  [57,51,70,73,81,44,86]  |
  1685  |                         R = R + 2;  |      2  |  298  |     70  |  2  |  39  |  [57,51,70,73,81,44,86]  |
  1689  |                         j = j + 1;  |         |  298  |     70  |  2  |  40  |  [57,51,70,73,81,44,86]  |
  1690  |              resetPlaceHolder_2();  |         |  298  |     70  |  2  |  40  |  [57,51,70,73,81,44,86]  |
  1696  |                         R = R + 2;  |      2  |  300  |     70  |  2  |  40  |  [57,51,70,73,81,44,86]  |
  1700  |                         j = j + 1;  |         |  300  |     70  |  2  |  41  |  [57,51,70,73,81,44,86]  |
  1701  |              resetPlaceHolder_2();  |         |  300  |     70  |  2  |  41  |  [57,51,70,73,81,44,86]  |
  1707  |                         R = R + 2;  |      2  |  302  |     70  |  2  |  41  |  [57,51,70,73,81,44,86]  |
  1711  |                         j = j + 1;  |         |  302  |     70  |  2  |  42  |  [57,51,70,73,81,44,86]  |
  1712  |              resetPlaceHolder_2();  |         |  302  |     70  |  2  |  42  |  [57,51,70,73,81,44,86]  |
  1718  |                         R = R + 2;  |      2  |  304  |     70  |  2  |  42  |  [57,51,70,73,81,44,86]  |
  1722  |                         j = j + 1;  |         |  304  |     70  |  2  |  43  |  [57,51,70,73,81,44,86]  |
  1723  |              resetPlaceHolder_2();  |         |  304  |     70  |  2  |  43  |  [57,51,70,73,81,44,86]  |
  1729  |                         R = R + 2;  |      2  |  306  |     70  |  2  |  43  |  [57,51,70,73,81,44,86]  |
  1733  |                         j = j + 1;  |         |  306  |     70  |  2  |  44  |  [57,51,70,73,81,44,86]  |
  1734  |              resetPlaceHolder_2();  |         |  306  |     70  |  2  |  44  |  [57,51,70,73,81,44,86]  |
  1740  |                         R = R + 2;  |      2  |  308  |     70  |  2  |  44  |  [57,51,70,73,81,44,86]  |
  1744  |                         j = j + 1;  |         |  308  |     70  |  2  |  45  |  [57,51,70,73,81,44,86]  |
  1745  |              resetPlaceHolder_2();  |         |  308  |     70  |  2  |  45  |  [57,51,70,73,81,44,86]  |
  1751  |                         R = R + 2;  |      2  |  310  |     70  |  2  |  45  |  [57,51,70,73,81,44,86]  |
  1755  |                         j = j + 1;  |         |  310  |     70  |  2  |  46  |  [57,51,70,73,81,44,86]  |
  1756  |              resetPlaceHolder_2();  |         |  310  |     70  |  2  |  46  |  [57,51,70,73,81,44,86]  |
  1762  |                         R = R + 2;  |      2  |  312  |     70  |  2  |  46  |  [57,51,70,73,81,44,86]  |
  1766  |                         j = j + 1;  |         |  312  |     70  |  2  |  47  |  [57,51,70,73,81,44,86]  |
  1767  |              resetPlaceHolder_2();  |         |  312  |     70  |  2  |  47  |  [57,51,70,73,81,44,86]  |
  1773  |                         R = R + 2;  |      2  |  314  |     70  |  2  |  47  |  [57,51,70,73,81,44,86]  |
  1777  |                         j = j + 1;  |         |  314  |     70  |  2  |  48  |  [57,51,70,73,81,44,86]  |
  1778  |              resetPlaceHolder_2();  |         |  314  |     70  |  2  |  48  |  [57,51,70,73,81,44,86]  |
  1784  |                         R = R + 2;  |      2  |  316  |     70  |  2  |  48  |  [57,51,70,73,81,44,86]  |
  1788  |                         j = j + 1;  |         |  316  |     70  |  2  |  49  |  [57,51,70,73,81,44,86]  |
  1789  |              resetPlaceHolder_2();  |         |  316  |     70  |  2  |  49  |  [57,51,70,73,81,44,86]  |
  1795  |                         R = R + 2;  |      2  |  318  |     70  |  2  |  49  |  [57,51,70,73,81,44,86]  |
  1799  |                         j = j + 1;  |         |  318  |     70  |  2  |  50  |  [57,51,70,73,81,44,86]  |
  1800  |              resetPlaceHolder_2();  |         |  318  |     70  |  2  |  50  |  [57,51,70,73,81,44,86]  |
  1806  |                         R = R + 2;  |      2  |  320  |     70  |  2  |  50  |  [57,51,70,73,81,44,86]  |
  1810  |                         j = j + 1;  |         |  320  |     70  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1811  |              resetPlaceHolder_2();  |         |  320  |     70  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1817  |                         R = R + 2;  |      2  |  322  |     70  |  2  |  51  |  [57,51,70,73,81,44,86]  |
  1821  |                         j = j + 1;  |         |  322  |     70  |  2  |  52  |  [57,51,70,73,81,44,86]  |
  1822  |              resetPlaceHolder_2();  |         |  322  |     70  |  2  |  52  |  [57,51,70,73,81,44,86]  |
  1828  |                         R = R + 2;  |      2  |  324  |     70  |  2  |  52  |  [57,51,70,73,81,44,86]  |
  1832  |                         j = j + 1;  |         |  324  |     70  |  2  |  53  |  [57,51,70,73,81,44,86]  |
  1833  |              resetPlaceHolder_2();  |         |  324  |     70  |  2  |  53  |  [57,51,70,73,81,44,86]  |
  1839  |                         R = R + 2;  |      2  |  326  |     70  |  2  |  53  |  [57,51,70,73,81,44,86]  |
  1843  |                         j = j + 1;  |         |  326  |     70  |  2  |  54  |  [57,51,70,73,81,44,86]  |
  1844  |              resetPlaceHolder_2();  |         |  326  |     70  |  2  |  54  |  [57,51,70,73,81,44,86]  |
  1850  |                         R = R + 2;  |      2  |  328  |     70  |  2  |  54  |  [57,51,70,73,81,44,86]  |
  1854  |                         j = j + 1;  |         |  328  |     70  |  2  |  55  |  [57,51,70,73,81,44,86]  |
  1855  |              resetPlaceHolder_2();  |         |  328  |     70  |  2  |  55  |  [57,51,70,73,81,44,86]  |
  1861  |                         R = R + 2;  |      2  |  330  |     70  |  2  |  55  |  [57,51,70,73,81,44,86]  |
  1865  |                         j = j + 1;  |         |  330  |     70  |  2  |  56  |  [57,51,70,73,81,44,86]  |
  1866  |              resetPlaceHolder_2();  |         |  330  |     70  |  2  |  56  |  [57,51,70,73,81,44,86]  |
  1872  |                         R = R + 2;  |      2  |  332  |     70  |  2  |  56  |  [57,51,70,73,81,44,86]  |
  1876  |                         j = j + 1;  |         |  332  |     70  |  2  |  57  |  [57,51,70,73,81,44,86]  |
  1877  |              resetPlaceHolder_2();  |         |  332  |     70  |  2  |  57  |  [57,51,70,73,81,44,86]  |
  1883  |                         R = R + 2;  |      2  |  334  |     70  |  2  |  57  |  [57,51,70,73,81,44,86]  |
  1887  |                         j = j + 1;  |         |  334  |     70  |  2  |  58  |  [57,51,70,73,81,44,86]  |
  1888  |              resetPlaceHolder_2();  |         |  334  |     70  |  2  |  58  |  [57,51,70,73,81,44,86]  |
  1894  |                         R = R + 2;  |      2  |  336  |     70  |  2  |  58  |  [57,51,70,73,81,44,86]  |
  1898  |                         j = j + 1;  |         |  336  |     70  |  2  |  59  |  [57,51,70,73,81,44,86]  |
  1899  |              resetPlaceHolder_2();  |         |  336  |     70  |  2  |  59  |  [57,51,70,73,81,44,86]  |
  1905  |                         R = R + 2;  |      2  |  338  |     70  |  2  |  59  |  [57,51,70,73,81,44,86]  |
  1909  |                         j = j + 1;  |         |  338  |     70  |  2  |  60  |  [57,51,70,73,81,44,86]  |
  1910  |              resetPlaceHolder_2();  |         |  338  |     70  |  2  |  60  |  [57,51,70,73,81,44,86]  |
  1916  |                         R = R + 2;  |      2  |  340  |     70  |  2  |  60  |  [57,51,70,73,81,44,86]  |
  1920  |                         j = j + 1;  |         |  340  |     70  |  2  |  61  |  [57,51,70,73,81,44,86]  |
  1921  |              resetPlaceHolder_2();  |         |  340  |     70  |  2  |  61  |  [57,51,70,73,81,44,86]  |
  1927  |                         R = R + 2;  |      2  |  342  |     70  |  2  |  61  |  [57,51,70,73,81,44,86]  |
  1931  |                         j = j + 1;  |         |  342  |     70  |  2  |  62  |  [57,51,70,73,81,44,86]  |
  1932  |              resetPlaceHolder_2();  |         |  342  |     70  |  2  |  62  |  [57,51,70,73,81,44,86]  |
  1938  |                         R = R + 2;  |      2  |  344  |     70  |  2  |  62  |  [57,51,70,73,81,44,86]  |
  1942  |                         j = j + 1;  |         |  344  |     70  |  2  |  63  |  [57,51,70,73,81,44,86]  |
  1943  |              resetPlaceHolder_2();  |         |  344  |     70  |  2  |  63  |  [57,51,70,73,81,44,86]  |
  1949  |                         R = R + 2;  |      2  |  346  |     70  |  2  |  63  |  [57,51,70,73,81,44,86]  |
  1953  |                         j = j + 1;  |         |  346  |     70  |  2  |  64  |  [57,51,70,73,81,44,86]  |
  1954  |              resetPlaceHolder_2();  |         |  346  |     70  |  2  |  64  |  [57,51,70,73,81,44,86]  |
  1960  |                         R = R + 2;  |      2  |  348  |     70  |  2  |  64  |  [57,51,70,73,81,44,86]  |
  1964  |                         j = j + 1;  |         |  348  |     70  |  2  |  65  |  [57,51,70,73,81,44,86]  |
  1965  |              resetPlaceHolder_2();  |         |  348  |     70  |  2  |  65  |  [57,51,70,73,81,44,86]  |
  1971  |                         R = R + 2;  |      2  |  350  |     70  |  2  |  65  |  [57,51,70,73,81,44,86]  |
  1975  |                         j = j + 1;  |         |  350  |     70  |  2  |  66  |  [57,51,70,73,81,44,86]  |
  1976  |              resetPlaceHolder_2();  |         |  350  |     70  |  2  |  66  |  [57,51,70,73,81,44,86]  |
  1982  |                         R = R + 2;  |      2  |  352  |     70  |  2  |  66  |  [57,51,70,73,81,44,86]  |
  1986  |                         j = j + 1;  |         |  352  |     70  |  2  |  67  |  [57,51,70,73,81,44,86]  |
  1987  |              resetPlaceHolder_2();  |         |  352  |     70  |  2  |  67  |  [57,51,70,73,81,44,86]  |
  1993  |                         R = R + 2;  |      2  |  354  |     70  |  2  |  67  |  [57,51,70,73,81,44,86]  |
  1997  |                         j = j + 1;  |         |  354  |     70  |  2  |  68  |  [57,51,70,73,81,44,86]  |
  1998  |              resetPlaceHolder_2();  |         |  354  |     70  |  2  |  68  |  [57,51,70,73,81,44,86]  |
  2004  |                         R = R + 2;  |      2  |  356  |     70  |  2  |  68  |  [57,51,70,73,81,44,86]  |
  2008  |                         j = j + 1;  |         |  356  |     70  |  2  |  69  |  [57,51,70,73,81,44,86]  |
  2009  |              resetPlaceHolder_2();  |         |  356  |     70  |  2  |  69  |  [57,51,70,73,81,44,86]  |
  2015  |                         R = R + 2;  |      2  |  358  |     70  |  2  |  69  |  [57,51,70,73,81,44,86]  |
  2019  |                         j = j + 1;  |         |  358  |     70  |  2  |  70  |  [57,51,70,73,81,44,86]  |
  2020  |              resetPlaceHolder_2();  |         |  358  |     70  |  2  |  70  |  [57,51,70,73,81,44,86]  |
  2026  |                         R = R + 1;  |      1  |  359  |     70  |  2  |  70  |  [57,51,70,73,81,44,86]  |
  2030  |                         i = i + 1;  |         |  359  |     70  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2031  |              resetPlaceHolder_1();  |         |  359  |     70  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2037  |      entry = arrayRead(sorted, i);  |         |  359  |     73  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2039  |                         int j = 0;  |         |  359  |     73  |  3  |   0  |  [57,51,70,73,81,44,86]  |
  2045  |                         R = R + 2;  |      2  |  361  |     73  |  3  |   0  |  [57,51,70,73,81,44,86]  |
  2049  |                         j = j + 1;  |         |  361  |     73  |  3  |   1  |  [57,51,70,73,81,44,86]  |
  2050  |              resetPlaceHolder_2();  |         |  361  |     73  |  3  |   1  |  [57,51,70,73,81,44,86]  |
  2056  |                         R = R + 2;  |      2  |  363  |     73  |  3  |   1  |  [57,51,70,73,81,44,86]  |
  2060  |                         j = j + 1;  |         |  363  |     73  |  3  |   2  |  [57,51,70,73,81,44,86]  |
  2061  |              resetPlaceHolder_2();  |         |  363  |     73  |  3  |   2  |  [57,51,70,73,81,44,86]  |
  2067  |                         R = R + 2;  |      2  |  365  |     73  |  3  |   2  |  [57,51,70,73,81,44,86]  |
  2071  |                         j = j + 1;  |         |  365  |     73  |  3  |   3  |  [57,51,70,73,81,44,86]  |
  2072  |              resetPlaceHolder_2();  |         |  365  |     73  |  3  |   3  |  [57,51,70,73,81,44,86]  |
  2078  |                         R = R + 2;  |      2  |  367  |     73  |  3  |   3  |  [57,51,70,73,81,44,86]  |
  2082  |                         j = j + 1;  |         |  367  |     73  |  3  |   4  |  [57,51,70,73,81,44,86]  |
  2083  |              resetPlaceHolder_2();  |         |  367  |     73  |  3  |   4  |  [57,51,70,73,81,44,86]  |
  2089  |                         R = R + 2;  |      2  |  369  |     73  |  3  |   4  |  [57,51,70,73,81,44,86]  |
  2093  |                         j = j + 1;  |         |  369  |     73  |  3  |   5  |  [57,51,70,73,81,44,86]  |
  2094  |              resetPlaceHolder_2();  |         |  369  |     73  |  3  |   5  |  [57,51,70,73,81,44,86]  |
  2100  |                         R = R + 2;  |      2  |  371  |     73  |  3  |   5  |  [57,51,70,73,81,44,86]  |
  2104  |                         j = j + 1;  |         |  371  |     73  |  3  |   6  |  [57,51,70,73,81,44,86]  |
  2105  |              resetPlaceHolder_2();  |         |  371  |     73  |  3  |   6  |  [57,51,70,73,81,44,86]  |
  2111  |                         R = R + 2;  |      2  |  373  |     73  |  3  |   6  |  [57,51,70,73,81,44,86]  |
  2115  |                         j = j + 1;  |         |  373  |     73  |  3  |   7  |  [57,51,70,73,81,44,86]  |
  2116  |              resetPlaceHolder_2();  |         |  373  |     73  |  3  |   7  |  [57,51,70,73,81,44,86]  |
  2122  |                         R = R + 2;  |      2  |  375  |     73  |  3  |   7  |  [57,51,70,73,81,44,86]  |
  2126  |                         j = j + 1;  |         |  375  |     73  |  3  |   8  |  [57,51,70,73,81,44,86]  |
  2127  |              resetPlaceHolder_2();  |         |  375  |     73  |  3  |   8  |  [57,51,70,73,81,44,86]  |
  2133  |                         R = R + 2;  |      2  |  377  |     73  |  3  |   8  |  [57,51,70,73,81,44,86]  |
  2137  |                         j = j + 1;  |         |  377  |     73  |  3  |   9  |  [57,51,70,73,81,44,86]  |
  2138  |              resetPlaceHolder_2();  |         |  377  |     73  |  3  |   9  |  [57,51,70,73,81,44,86]  |
  2144  |                         R = R + 2;  |      2  |  379  |     73  |  3  |   9  |  [57,51,70,73,81,44,86]  |
  2148  |                         j = j + 1;  |         |  379  |     73  |  3  |  10  |  [57,51,70,73,81,44,86]  |
  2149  |              resetPlaceHolder_2();  |         |  379  |     73  |  3  |  10  |  [57,51,70,73,81,44,86]  |
  2155  |                         R = R + 2;  |      2  |  381  |     73  |  3  |  10  |  [57,51,70,73,81,44,86]  |
  2159  |                         j = j + 1;  |         |  381  |     73  |  3  |  11  |  [57,51,70,73,81,44,86]  |
  2160  |              resetPlaceHolder_2();  |         |  381  |     73  |  3  |  11  |  [57,51,70,73,81,44,86]  |
  2166  |                         R = R + 2;  |      2  |  383  |     73  |  3  |  11  |  [57,51,70,73,81,44,86]  |
  2170  |                         j = j + 1;  |         |  383  |     73  |  3  |  12  |  [57,51,70,73,81,44,86]  |
  2171  |              resetPlaceHolder_2();  |         |  383  |     73  |  3  |  12  |  [57,51,70,73,81,44,86]  |
  2177  |                         R = R + 2;  |      2  |  385  |     73  |  3  |  12  |  [57,51,70,73,81,44,86]  |
  2181  |                         j = j + 1;  |         |  385  |     73  |  3  |  13  |  [57,51,70,73,81,44,86]  |
  2182  |              resetPlaceHolder_2();  |         |  385  |     73  |  3  |  13  |  [57,51,70,73,81,44,86]  |
  2188  |                         R = R + 2;  |      2  |  387  |     73  |  3  |  13  |  [57,51,70,73,81,44,86]  |
  2192  |                         j = j + 1;  |         |  387  |     73  |  3  |  14  |  [57,51,70,73,81,44,86]  |
  2193  |              resetPlaceHolder_2();  |         |  387  |     73  |  3  |  14  |  [57,51,70,73,81,44,86]  |
  2199  |                         R = R + 2;  |      2  |  389  |     73  |  3  |  14  |  [57,51,70,73,81,44,86]  |
  2203  |                         j = j + 1;  |         |  389  |     73  |  3  |  15  |  [57,51,70,73,81,44,86]  |
  2204  |              resetPlaceHolder_2();  |         |  389  |     73  |  3  |  15  |  [57,51,70,73,81,44,86]  |
  2210  |                         R = R + 2;  |      2  |  391  |     73  |  3  |  15  |  [57,51,70,73,81,44,86]  |
  2214  |                         j = j + 1;  |         |  391  |     73  |  3  |  16  |  [57,51,70,73,81,44,86]  |
  2215  |              resetPlaceHolder_2();  |         |  391  |     73  |  3  |  16  |  [57,51,70,73,81,44,86]  |
  2221  |                         R = R + 2;  |      2  |  393  |     73  |  3  |  16  |  [57,51,70,73,81,44,86]  |
  2225  |                         j = j + 1;  |         |  393  |     73  |  3  |  17  |  [57,51,70,73,81,44,86]  |
  2226  |              resetPlaceHolder_2();  |         |  393  |     73  |  3  |  17  |  [57,51,70,73,81,44,86]  |
  2232  |                         R = R + 2;  |      2  |  395  |     73  |  3  |  17  |  [57,51,70,73,81,44,86]  |
  2236  |                         j = j + 1;  |         |  395  |     73  |  3  |  18  |  [57,51,70,73,81,44,86]  |
  2237  |              resetPlaceHolder_2();  |         |  395  |     73  |  3  |  18  |  [57,51,70,73,81,44,86]  |
  2243  |                         R = R + 2;  |      2  |  397  |     73  |  3  |  18  |  [57,51,70,73,81,44,86]  |
  2247  |                         j = j + 1;  |         |  397  |     73  |  3  |  19  |  [57,51,70,73,81,44,86]  |
  2248  |              resetPlaceHolder_2();  |         |  397  |     73  |  3  |  19  |  [57,51,70,73,81,44,86]  |
  2254  |                         R = R + 2;  |      2  |  399  |     73  |  3  |  19  |  [57,51,70,73,81,44,86]  |
  2258  |                         j = j + 1;  |         |  399  |     73  |  3  |  20  |  [57,51,70,73,81,44,86]  |
  2259  |              resetPlaceHolder_2();  |         |  399  |     73  |  3  |  20  |  [57,51,70,73,81,44,86]  |
  2265  |                         R = R + 2;  |      2  |  401  |     73  |  3  |  20  |  [57,51,70,73,81,44,86]  |
  2269  |                         j = j + 1;  |         |  401  |     73  |  3  |  21  |  [57,51,70,73,81,44,86]  |
  2270  |              resetPlaceHolder_2();  |         |  401  |     73  |  3  |  21  |  [57,51,70,73,81,44,86]  |
  2276  |                         R = R + 2;  |      2  |  403  |     73  |  3  |  21  |  [57,51,70,73,81,44,86]  |
  2280  |                         j = j + 1;  |         |  403  |     73  |  3  |  22  |  [57,51,70,73,81,44,86]  |
  2281  |              resetPlaceHolder_2();  |         |  403  |     73  |  3  |  22  |  [57,51,70,73,81,44,86]  |
  2287  |                         R = R + 2;  |      2  |  405  |     73  |  3  |  22  |  [57,51,70,73,81,44,86]  |
  2291  |                         j = j + 1;  |         |  405  |     73  |  3  |  23  |  [57,51,70,73,81,44,86]  |
  2292  |              resetPlaceHolder_2();  |         |  405  |     73  |  3  |  23  |  [57,51,70,73,81,44,86]  |
  2298  |                         R = R + 2;  |      2  |  407  |     73  |  3  |  23  |  [57,51,70,73,81,44,86]  |
  2302  |                         j = j + 1;  |         |  407  |     73  |  3  |  24  |  [57,51,70,73,81,44,86]  |
  2303  |              resetPlaceHolder_2();  |         |  407  |     73  |  3  |  24  |  [57,51,70,73,81,44,86]  |
  2309  |                         R = R + 2;  |      2  |  409  |     73  |  3  |  24  |  [57,51,70,73,81,44,86]  |
  2313  |                         j = j + 1;  |         |  409  |     73  |  3  |  25  |  [57,51,70,73,81,44,86]  |
  2314  |              resetPlaceHolder_2();  |         |  409  |     73  |  3  |  25  |  [57,51,70,73,81,44,86]  |
  2320  |                         R = R + 2;  |      2  |  411  |     73  |  3  |  25  |  [57,51,70,73,81,44,86]  |
  2324  |                         j = j + 1;  |         |  411  |     73  |  3  |  26  |  [57,51,70,73,81,44,86]  |
  2325  |              resetPlaceHolder_2();  |         |  411  |     73  |  3  |  26  |  [57,51,70,73,81,44,86]  |
  2331  |                         R = R + 2;  |      2  |  413  |     73  |  3  |  26  |  [57,51,70,73,81,44,86]  |
  2335  |                         j = j + 1;  |         |  413  |     73  |  3  |  27  |  [57,51,70,73,81,44,86]  |
  2336  |              resetPlaceHolder_2();  |         |  413  |     73  |  3  |  27  |  [57,51,70,73,81,44,86]  |
  2342  |                         R = R + 2;  |      2  |  415  |     73  |  3  |  27  |  [57,51,70,73,81,44,86]  |
  2346  |                         j = j + 1;  |         |  415  |     73  |  3  |  28  |  [57,51,70,73,81,44,86]  |
  2347  |              resetPlaceHolder_2();  |         |  415  |     73  |  3  |  28  |  [57,51,70,73,81,44,86]  |
  2353  |                         R = R + 2;  |      2  |  417  |     73  |  3  |  28  |  [57,51,70,73,81,44,86]  |
  2357  |                         j = j + 1;  |         |  417  |     73  |  3  |  29  |  [57,51,70,73,81,44,86]  |
  2358  |              resetPlaceHolder_2();  |         |  417  |     73  |  3  |  29  |  [57,51,70,73,81,44,86]  |
  2364  |                         R = R + 2;  |      2  |  419  |     73  |  3  |  29  |  [57,51,70,73,81,44,86]  |
  2368  |                         j = j + 1;  |         |  419  |     73  |  3  |  30  |  [57,51,70,73,81,44,86]  |
  2369  |              resetPlaceHolder_2();  |         |  419  |     73  |  3  |  30  |  [57,51,70,73,81,44,86]  |
  2375  |                         R = R + 2;  |      2  |  421  |     73  |  3  |  30  |  [57,51,70,73,81,44,86]  |
  2379  |                         j = j + 1;  |         |  421  |     73  |  3  |  31  |  [57,51,70,73,81,44,86]  |
  2380  |              resetPlaceHolder_2();  |         |  421  |     73  |  3  |  31  |  [57,51,70,73,81,44,86]  |
  2386  |                         R = R + 2;  |      2  |  423  |     73  |  3  |  31  |  [57,51,70,73,81,44,86]  |
  2390  |                         j = j + 1;  |         |  423  |     73  |  3  |  32  |  [57,51,70,73,81,44,86]  |
  2391  |              resetPlaceHolder_2();  |         |  423  |     73  |  3  |  32  |  [57,51,70,73,81,44,86]  |
  2397  |                         R = R + 2;  |      2  |  425  |     73  |  3  |  32  |  [57,51,70,73,81,44,86]  |
  2401  |                         j = j + 1;  |         |  425  |     73  |  3  |  33  |  [57,51,70,73,81,44,86]  |
  2402  |              resetPlaceHolder_2();  |         |  425  |     73  |  3  |  33  |  [57,51,70,73,81,44,86]  |
  2408  |                         R = R + 2;  |      2  |  427  |     73  |  3  |  33  |  [57,51,70,73,81,44,86]  |
  2412  |                         j = j + 1;  |         |  427  |     73  |  3  |  34  |  [57,51,70,73,81,44,86]  |
  2413  |              resetPlaceHolder_2();  |         |  427  |     73  |  3  |  34  |  [57,51,70,73,81,44,86]  |
  2419  |                         R = R + 2;  |      2  |  429  |     73  |  3  |  34  |  [57,51,70,73,81,44,86]  |
  2423  |                         j = j + 1;  |         |  429  |     73  |  3  |  35  |  [57,51,70,73,81,44,86]  |
  2424  |              resetPlaceHolder_2();  |         |  429  |     73  |  3  |  35  |  [57,51,70,73,81,44,86]  |
  2430  |                         R = R + 2;  |      2  |  431  |     73  |  3  |  35  |  [57,51,70,73,81,44,86]  |
  2434  |                         j = j + 1;  |         |  431  |     73  |  3  |  36  |  [57,51,70,73,81,44,86]  |
  2435  |              resetPlaceHolder_2();  |         |  431  |     73  |  3  |  36  |  [57,51,70,73,81,44,86]  |
  2441  |                         R = R + 2;  |      2  |  433  |     73  |  3  |  36  |  [57,51,70,73,81,44,86]  |
  2445  |                         j = j + 1;  |         |  433  |     73  |  3  |  37  |  [57,51,70,73,81,44,86]  |
  2446  |              resetPlaceHolder_2();  |         |  433  |     73  |  3  |  37  |  [57,51,70,73,81,44,86]  |
  2452  |                         R = R + 2;  |      2  |  435  |     73  |  3  |  37  |  [57,51,70,73,81,44,86]  |
  2456  |                         j = j + 1;  |         |  435  |     73  |  3  |  38  |  [57,51,70,73,81,44,86]  |
  2457  |              resetPlaceHolder_2();  |         |  435  |     73  |  3  |  38  |  [57,51,70,73,81,44,86]  |
  2463  |                         R = R + 2;  |      2  |  437  |     73  |  3  |  38  |  [57,51,70,73,81,44,86]  |
  2467  |                         j = j + 1;  |         |  437  |     73  |  3  |  39  |  [57,51,70,73,81,44,86]  |
  2468  |              resetPlaceHolder_2();  |         |  437  |     73  |  3  |  39  |  [57,51,70,73,81,44,86]  |
  2474  |                         R = R + 2;  |      2  |  439  |     73  |  3  |  39  |  [57,51,70,73,81,44,86]  |
  2478  |                         j = j + 1;  |         |  439  |     73  |  3  |  40  |  [57,51,70,73,81,44,86]  |
  2479  |              resetPlaceHolder_2();  |         |  439  |     73  |  3  |  40  |  [57,51,70,73,81,44,86]  |
  2485  |                         R = R + 2;  |      2  |  441  |     73  |  3  |  40  |  [57,51,70,73,81,44,86]  |
  2489  |                         j = j + 1;  |         |  441  |     73  |  3  |  41  |  [57,51,70,73,81,44,86]  |
  2490  |              resetPlaceHolder_2();  |         |  441  |     73  |  3  |  41  |  [57,51,70,73,81,44,86]  |
  2496  |                         R = R + 2;  |      2  |  443  |     73  |  3  |  41  |  [57,51,70,73,81,44,86]  |
  2500  |                         j = j + 1;  |         |  443  |     73  |  3  |  42  |  [57,51,70,73,81,44,86]  |
  2501  |              resetPlaceHolder_2();  |         |  443  |     73  |  3  |  42  |  [57,51,70,73,81,44,86]  |
  2507  |                         R = R + 2;  |      2  |  445  |     73  |  3  |  42  |  [57,51,70,73,81,44,86]  |
  2511  |                         j = j + 1;  |         |  445  |     73  |  3  |  43  |  [57,51,70,73,81,44,86]  |
  2512  |              resetPlaceHolder_2();  |         |  445  |     73  |  3  |  43  |  [57,51,70,73,81,44,86]  |
  2518  |                         R = R + 2;  |      2  |  447  |     73  |  3  |  43  |  [57,51,70,73,81,44,86]  |
  2522  |                         j = j + 1;  |         |  447  |     73  |  3  |  44  |  [57,51,70,73,81,44,86]  |
  2523  |              resetPlaceHolder_2();  |         |  447  |     73  |  3  |  44  |  [57,51,70,73,81,44,86]  |
  2529  |                         R = R + 2;  |      2  |  449  |     73  |  3  |  44  |  [57,51,70,73,81,44,86]  |
  2533  |                         j = j + 1;  |         |  449  |     73  |  3  |  45  |  [57,51,70,73,81,44,86]  |
  2534  |              resetPlaceHolder_2();  |         |  449  |     73  |  3  |  45  |  [57,51,70,73,81,44,86]  |
  2540  |                         R = R + 2;  |      2  |  451  |     73  |  3  |  45  |  [57,51,70,73,81,44,86]  |
  2544  |                         j = j + 1;  |         |  451  |     73  |  3  |  46  |  [57,51,70,73,81,44,86]  |
  2545  |              resetPlaceHolder_2();  |         |  451  |     73  |  3  |  46  |  [57,51,70,73,81,44,86]  |
  2551  |                         R = R + 2;  |      2  |  453  |     73  |  3  |  46  |  [57,51,70,73,81,44,86]  |
  2555  |                         j = j + 1;  |         |  453  |     73  |  3  |  47  |  [57,51,70,73,81,44,86]  |
  2556  |              resetPlaceHolder_2();  |         |  453  |     73  |  3  |  47  |  [57,51,70,73,81,44,86]  |
  2562  |                         R = R + 2;  |      2  |  455  |     73  |  3  |  47  |  [57,51,70,73,81,44,86]  |
  2566  |                         j = j + 1;  |         |  455  |     73  |  3  |  48  |  [57,51,70,73,81,44,86]  |
  2567  |              resetPlaceHolder_2();  |         |  455  |     73  |  3  |  48  |  [57,51,70,73,81,44,86]  |
  2573  |                         R = R + 2;  |      2  |  457  |     73  |  3  |  48  |  [57,51,70,73,81,44,86]  |
  2577  |                         j = j + 1;  |         |  457  |     73  |  3  |  49  |  [57,51,70,73,81,44,86]  |
  2578  |              resetPlaceHolder_2();  |         |  457  |     73  |  3  |  49  |  [57,51,70,73,81,44,86]  |
  2584  |                         R = R + 2;  |      2  |  459  |     73  |  3  |  49  |  [57,51,70,73,81,44,86]  |
  2588  |                         j = j + 1;  |         |  459  |     73  |  3  |  50  |  [57,51,70,73,81,44,86]  |
  2589  |              resetPlaceHolder_2();  |         |  459  |     73  |  3  |  50  |  [57,51,70,73,81,44,86]  |
  2595  |                         R = R + 2;  |      2  |  461  |     73  |  3  |  50  |  [57,51,70,73,81,44,86]  |
  2599  |                         j = j + 1;  |         |  461  |     73  |  3  |  51  |  [57,51,70,73,81,44,86]  |
  2600  |              resetPlaceHolder_2();  |         |  461  |     73  |  3  |  51  |  [57,51,70,73,81,44,86]  |
  2606  |                         R = R + 2;  |      2  |  463  |     73  |  3  |  51  |  [57,51,70,73,81,44,86]  |
  2610  |                         j = j + 1;  |         |  463  |     73  |  3  |  52  |  [57,51,70,73,81,44,86]  |
  2611  |              resetPlaceHolder_2();  |         |  463  |     73  |  3  |  52  |  [57,51,70,73,81,44,86]  |
  2617  |                         R = R + 2;  |      2  |  465  |     73  |  3  |  52  |  [57,51,70,73,81,44,86]  |
  2621  |                         j = j + 1;  |         |  465  |     73  |  3  |  53  |  [57,51,70,73,81,44,86]  |
  2622  |              resetPlaceHolder_2();  |         |  465  |     73  |  3  |  53  |  [57,51,70,73,81,44,86]  |
  2628  |                         R = R + 2;  |      2  |  467  |     73  |  3  |  53  |  [57,51,70,73,81,44,86]  |
  2632  |                         j = j + 1;  |         |  467  |     73  |  3  |  54  |  [57,51,70,73,81,44,86]  |
  2633  |              resetPlaceHolder_2();  |         |  467  |     73  |  3  |  54  |  [57,51,70,73,81,44,86]  |
  2639  |                         R = R + 2;  |      2  |  469  |     73  |  3  |  54  |  [57,51,70,73,81,44,86]  |
  2643  |                         j = j + 1;  |         |  469  |     73  |  3  |  55  |  [57,51,70,73,81,44,86]  |
  2644  |              resetPlaceHolder_2();  |         |  469  |     73  |  3  |  55  |  [57,51,70,73,81,44,86]  |
  2650  |                         R = R + 2;  |      2  |  471  |     73  |  3  |  55  |  [57,51,70,73,81,44,86]  |
  2654  |                         j = j + 1;  |         |  471  |     73  |  3  |  56  |  [57,51,70,73,81,44,86]  |
  2655  |              resetPlaceHolder_2();  |         |  471  |     73  |  3  |  56  |  [57,51,70,73,81,44,86]  |
  2661  |                         R = R + 2;  |      2  |  473  |     73  |  3  |  56  |  [57,51,70,73,81,44,86]  |
  2665  |                         j = j + 1;  |         |  473  |     73  |  3  |  57  |  [57,51,70,73,81,44,86]  |
  2666  |              resetPlaceHolder_2();  |         |  473  |     73  |  3  |  57  |  [57,51,70,73,81,44,86]  |
  2672  |                         R = R + 2;  |      2  |  475  |     73  |  3  |  57  |  [57,51,70,73,81,44,86]  |
  2676  |                         j = j + 1;  |         |  475  |     73  |  3  |  58  |  [57,51,70,73,81,44,86]  |
  2677  |              resetPlaceHolder_2();  |         |  475  |     73  |  3  |  58  |  [57,51,70,73,81,44,86]  |
  2683  |                         R = R + 2;  |      2  |  477  |     73  |  3  |  58  |  [57,51,70,73,81,44,86]  |
  2687  |                         j = j + 1;  |         |  477  |     73  |  3  |  59  |  [57,51,70,73,81,44,86]  |
  2688  |              resetPlaceHolder_2();  |         |  477  |     73  |  3  |  59  |  [57,51,70,73,81,44,86]  |
  2694  |                         R = R + 2;  |      2  |  479  |     73  |  3  |  59  |  [57,51,70,73,81,44,86]  |
  2698  |                         j = j + 1;  |         |  479  |     73  |  3  |  60  |  [57,51,70,73,81,44,86]  |
  2699  |              resetPlaceHolder_2();  |         |  479  |     73  |  3  |  60  |  [57,51,70,73,81,44,86]  |
  2705  |                         R = R + 2;  |      2  |  481  |     73  |  3  |  60  |  [57,51,70,73,81,44,86]  |
  2709  |                         j = j + 1;  |         |  481  |     73  |  3  |  61  |  [57,51,70,73,81,44,86]  |
  2710  |              resetPlaceHolder_2();  |         |  481  |     73  |  3  |  61  |  [57,51,70,73,81,44,86]  |
  2716  |                         R = R + 2;  |      2  |  483  |     73  |  3  |  61  |  [57,51,70,73,81,44,86]  |
  2720  |                         j = j + 1;  |         |  483  |     73  |  3  |  62  |  [57,51,70,73,81,44,86]  |
  2721  |              resetPlaceHolder_2();  |         |  483  |     73  |  3  |  62  |  [57,51,70,73,81,44,86]  |
  2727  |                         R = R + 2;  |      2  |  485  |     73  |  3  |  62  |  [57,51,70,73,81,44,86]  |
  2731  |                         j = j + 1;  |         |  485  |     73  |  3  |  63  |  [57,51,70,73,81,44,86]  |
  2732  |              resetPlaceHolder_2();  |         |  485  |     73  |  3  |  63  |  [57,51,70,73,81,44,86]  |
  2738  |                         R = R + 2;  |      2  |  487  |     73  |  3  |  63  |  [57,51,70,73,81,44,86]  |
  2742  |                         j = j + 1;  |         |  487  |     73  |  3  |  64  |  [57,51,70,73,81,44,86]  |
  2743  |              resetPlaceHolder_2();  |         |  487  |     73  |  3  |  64  |  [57,51,70,73,81,44,86]  |
  2749  |                         R = R + 2;  |      2  |  489  |     73  |  3  |  64  |  [57,51,70,73,81,44,86]  |
  2753  |                         j = j + 1;  |         |  489  |     73  |  3  |  65  |  [57,51,70,73,81,44,86]  |
  2754  |              resetPlaceHolder_2();  |         |  489  |     73  |  3  |  65  |  [57,51,70,73,81,44,86]  |
  2760  |                         R = R + 2;  |      2  |  491  |     73  |  3  |  65  |  [57,51,70,73,81,44,86]  |
  2764  |                         j = j + 1;  |         |  491  |     73  |  3  |  66  |  [57,51,70,73,81,44,86]  |
  2765  |              resetPlaceHolder_2();  |         |  491  |     73  |  3  |  66  |  [57,51,70,73,81,44,86]  |
  2771  |                         R = R + 2;  |      2  |  493  |     73  |  3  |  66  |  [57,51,70,73,81,44,86]  |
  2775  |                         j = j + 1;  |         |  493  |     73  |  3  |  67  |  [57,51,70,73,81,44,86]  |
  2776  |              resetPlaceHolder_2();  |         |  493  |     73  |  3  |  67  |  [57,51,70,73,81,44,86]  |
  2782  |                         R = R + 2;  |      2  |  495  |     73  |  3  |  67  |  [57,51,70,73,81,44,86]  |
  2786  |                         j = j + 1;  |         |  495  |     73  |  3  |  68  |  [57,51,70,73,81,44,86]  |
  2787  |              resetPlaceHolder_2();  |         |  495  |     73  |  3  |  68  |  [57,51,70,73,81,44,86]  |
  2793  |                         R = R + 2;  |      2  |  497  |     73  |  3  |  68  |  [57,51,70,73,81,44,86]  |
  2797  |                         j = j + 1;  |         |  497  |     73  |  3  |  69  |  [57,51,70,73,81,44,86]  |
  2798  |              resetPlaceHolder_2();  |         |  497  |     73  |  3  |  69  |  [57,51,70,73,81,44,86]  |
  2804  |                         R = R + 2;  |      2  |  499  |     73  |  3  |  69  |  [57,51,70,73,81,44,86]  |
  2808  |                         j = j + 1;  |         |  499  |     73  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2809  |              resetPlaceHolder_2();  |         |  499  |     73  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2815  |                         R = R + 2;  |      2  |  501  |     73  |  3  |  70  |  [57,51,70,73,81,44,86]  |
  2819  |                         j = j + 1;  |         |  501  |     73  |  3  |  71  |  [57,51,70,73,81,44,86]  |
  2820  |              resetPlaceHolder_2();  |         |  501  |     73  |  3  |  71  |  [57,51,70,73,81,44,86]  |
  2826  |                         R = R + 2;  |      2  |  503  |     73  |  3  |  71  |  [57,51,70,73,81,44,86]  |
  2830  |                         j = j + 1;  |         |  503  |     73  |  3  |  72  |  [57,51,70,73,81,44,86]  |
  2831  |              resetPlaceHolder_2();  |         |  503  |     73  |  3  |  72  |  [57,51,70,73,81,44,86]  |
  2837  |                         R = R + 2;  |      2  |  505  |     73  |  3  |  72  |  [57,51,70,73,81,44,86]  |
  2841  |                         j = j + 1;  |         |  505  |     73  |  3  |  73  |  [57,51,70,73,81,44,86]  |
  2842  |              resetPlaceHolder_2();  |         |  505  |     73  |  3  |  73  |  [57,51,70,73,81,44,86]  |
  2848  |                         R = R + 1;  |      1  |  506  |     73  |  3  |  73  |  [57,51,70,73,81,44,86]  |
  2852  |                         i = i + 1;  |         |  506  |     73  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  2853  |              resetPlaceHolder_1();  |         |  506  |     73  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  2859  |      entry = arrayRead(sorted, i);  |         |  506  |     81  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  2861  |                         int j = 0;  |         |  506  |     81  |  4  |   0  |  [57,51,70,73,81,44,86]  |
  2867  |                         R = R + 2;  |      2  |  508  |     81  |  4  |   0  |  [57,51,70,73,81,44,86]  |
  2871  |                         j = j + 1;  |         |  508  |     81  |  4  |   1  |  [57,51,70,73,81,44,86]  |
  2872  |              resetPlaceHolder_2();  |         |  508  |     81  |  4  |   1  |  [57,51,70,73,81,44,86]  |
  2878  |                         R = R + 2;  |      2  |  510  |     81  |  4  |   1  |  [57,51,70,73,81,44,86]  |
  2882  |                         j = j + 1;  |         |  510  |     81  |  4  |   2  |  [57,51,70,73,81,44,86]  |
  2883  |              resetPlaceHolder_2();  |         |  510  |     81  |  4  |   2  |  [57,51,70,73,81,44,86]  |
  2889  |                         R = R + 2;  |      2  |  512  |     81  |  4  |   2  |  [57,51,70,73,81,44,86]  |
  2893  |                         j = j + 1;  |         |  512  |     81  |  4  |   3  |  [57,51,70,73,81,44,86]  |
  2894  |              resetPlaceHolder_2();  |         |  512  |     81  |  4  |   3  |  [57,51,70,73,81,44,86]  |
  2900  |                         R = R + 2;  |      2  |  514  |     81  |  4  |   3  |  [57,51,70,73,81,44,86]  |
  2904  |                         j = j + 1;  |         |  514  |     81  |  4  |   4  |  [57,51,70,73,81,44,86]  |
  2905  |              resetPlaceHolder_2();  |         |  514  |     81  |  4  |   4  |  [57,51,70,73,81,44,86]  |
  2911  |                         R = R + 2;  |      2  |  516  |     81  |  4  |   4  |  [57,51,70,73,81,44,86]  |
  2915  |                         j = j + 1;  |         |  516  |     81  |  4  |   5  |  [57,51,70,73,81,44,86]  |
  2916  |              resetPlaceHolder_2();  |         |  516  |     81  |  4  |   5  |  [57,51,70,73,81,44,86]  |
  2922  |                         R = R + 2;  |      2  |  518  |     81  |  4  |   5  |  [57,51,70,73,81,44,86]  |
  2926  |                         j = j + 1;  |         |  518  |     81  |  4  |   6  |  [57,51,70,73,81,44,86]  |
  2927  |              resetPlaceHolder_2();  |         |  518  |     81  |  4  |   6  |  [57,51,70,73,81,44,86]  |
  2933  |                         R = R + 2;  |      2  |  520  |     81  |  4  |   6  |  [57,51,70,73,81,44,86]  |
  2937  |                         j = j + 1;  |         |  520  |     81  |  4  |   7  |  [57,51,70,73,81,44,86]  |
  2938  |              resetPlaceHolder_2();  |         |  520  |     81  |  4  |   7  |  [57,51,70,73,81,44,86]  |
  2944  |                         R = R + 2;  |      2  |  522  |     81  |  4  |   7  |  [57,51,70,73,81,44,86]  |
  2948  |                         j = j + 1;  |         |  522  |     81  |  4  |   8  |  [57,51,70,73,81,44,86]  |
  2949  |              resetPlaceHolder_2();  |         |  522  |     81  |  4  |   8  |  [57,51,70,73,81,44,86]  |
  2955  |                         R = R + 2;  |      2  |  524  |     81  |  4  |   8  |  [57,51,70,73,81,44,86]  |
  2959  |                         j = j + 1;  |         |  524  |     81  |  4  |   9  |  [57,51,70,73,81,44,86]  |
  2960  |              resetPlaceHolder_2();  |         |  524  |     81  |  4  |   9  |  [57,51,70,73,81,44,86]  |
  2966  |                         R = R + 2;  |      2  |  526  |     81  |  4  |   9  |  [57,51,70,73,81,44,86]  |
  2970  |                         j = j + 1;  |         |  526  |     81  |  4  |  10  |  [57,51,70,73,81,44,86]  |
  2971  |              resetPlaceHolder_2();  |         |  526  |     81  |  4  |  10  |  [57,51,70,73,81,44,86]  |
  2977  |                         R = R + 2;  |      2  |  528  |     81  |  4  |  10  |  [57,51,70,73,81,44,86]  |
  2981  |                         j = j + 1;  |         |  528  |     81  |  4  |  11  |  [57,51,70,73,81,44,86]  |
  2982  |              resetPlaceHolder_2();  |         |  528  |     81  |  4  |  11  |  [57,51,70,73,81,44,86]  |
  2988  |                         R = R + 2;  |      2  |  530  |     81  |  4  |  11  |  [57,51,70,73,81,44,86]  |
  2992  |                         j = j + 1;  |         |  530  |     81  |  4  |  12  |  [57,51,70,73,81,44,86]  |
  2993  |              resetPlaceHolder_2();  |         |  530  |     81  |  4  |  12  |  [57,51,70,73,81,44,86]  |
  2999  |                         R = R + 2;  |      2  |  532  |     81  |  4  |  12  |  [57,51,70,73,81,44,86]  |
  3003  |                         j = j + 1;  |         |  532  |     81  |  4  |  13  |  [57,51,70,73,81,44,86]  |
  3004  |              resetPlaceHolder_2();  |         |  532  |     81  |  4  |  13  |  [57,51,70,73,81,44,86]  |
  3010  |                         R = R + 2;  |      2  |  534  |     81  |  4  |  13  |  [57,51,70,73,81,44,86]  |
  3014  |                         j = j + 1;  |         |  534  |     81  |  4  |  14  |  [57,51,70,73,81,44,86]  |
  3015  |              resetPlaceHolder_2();  |         |  534  |     81  |  4  |  14  |  [57,51,70,73,81,44,86]  |
  3021  |                         R = R + 2;  |      2  |  536  |     81  |  4  |  14  |  [57,51,70,73,81,44,86]  |
  3025  |                         j = j + 1;  |         |  536  |     81  |  4  |  15  |  [57,51,70,73,81,44,86]  |
  3026  |              resetPlaceHolder_2();  |         |  536  |     81  |  4  |  15  |  [57,51,70,73,81,44,86]  |
  3032  |                         R = R + 2;  |      2  |  538  |     81  |  4  |  15  |  [57,51,70,73,81,44,86]  |
  3036  |                         j = j + 1;  |         |  538  |     81  |  4  |  16  |  [57,51,70,73,81,44,86]  |
  3037  |              resetPlaceHolder_2();  |         |  538  |     81  |  4  |  16  |  [57,51,70,73,81,44,86]  |
  3043  |                         R = R + 2;  |      2  |  540  |     81  |  4  |  16  |  [57,51,70,73,81,44,86]  |
  3047  |                         j = j + 1;  |         |  540  |     81  |  4  |  17  |  [57,51,70,73,81,44,86]  |
  3048  |              resetPlaceHolder_2();  |         |  540  |     81  |  4  |  17  |  [57,51,70,73,81,44,86]  |
  3054  |                         R = R + 2;  |      2  |  542  |     81  |  4  |  17  |  [57,51,70,73,81,44,86]  |
  3058  |                         j = j + 1;  |         |  542  |     81  |  4  |  18  |  [57,51,70,73,81,44,86]  |
  3059  |              resetPlaceHolder_2();  |         |  542  |     81  |  4  |  18  |  [57,51,70,73,81,44,86]  |
  3065  |                         R = R + 2;  |      2  |  544  |     81  |  4  |  18  |  [57,51,70,73,81,44,86]  |
  3069  |                         j = j + 1;  |         |  544  |     81  |  4  |  19  |  [57,51,70,73,81,44,86]  |
  3070  |              resetPlaceHolder_2();  |         |  544  |     81  |  4  |  19  |  [57,51,70,73,81,44,86]  |
  3076  |                         R = R + 2;  |      2  |  546  |     81  |  4  |  19  |  [57,51,70,73,81,44,86]  |
  3080  |                         j = j + 1;  |         |  546  |     81  |  4  |  20  |  [57,51,70,73,81,44,86]  |
  3081  |              resetPlaceHolder_2();  |         |  546  |     81  |  4  |  20  |  [57,51,70,73,81,44,86]  |
  3087  |                         R = R + 2;  |      2  |  548  |     81  |  4  |  20  |  [57,51,70,73,81,44,86]  |
  3091  |                         j = j + 1;  |         |  548  |     81  |  4  |  21  |  [57,51,70,73,81,44,86]  |
  3092  |              resetPlaceHolder_2();  |         |  548  |     81  |  4  |  21  |  [57,51,70,73,81,44,86]  |
  3098  |                         R = R + 2;  |      2  |  550  |     81  |  4  |  21  |  [57,51,70,73,81,44,86]  |
  3102  |                         j = j + 1;  |         |  550  |     81  |  4  |  22  |  [57,51,70,73,81,44,86]  |
  3103  |              resetPlaceHolder_2();  |         |  550  |     81  |  4  |  22  |  [57,51,70,73,81,44,86]  |
  3109  |                         R = R + 2;  |      2  |  552  |     81  |  4  |  22  |  [57,51,70,73,81,44,86]  |
  3113  |                         j = j + 1;  |         |  552  |     81  |  4  |  23  |  [57,51,70,73,81,44,86]  |
  3114  |              resetPlaceHolder_2();  |         |  552  |     81  |  4  |  23  |  [57,51,70,73,81,44,86]  |
  3120  |                         R = R + 2;  |      2  |  554  |     81  |  4  |  23  |  [57,51,70,73,81,44,86]  |
  3124  |                         j = j + 1;  |         |  554  |     81  |  4  |  24  |  [57,51,70,73,81,44,86]  |
  3125  |              resetPlaceHolder_2();  |         |  554  |     81  |  4  |  24  |  [57,51,70,73,81,44,86]  |
  3131  |                         R = R + 2;  |      2  |  556  |     81  |  4  |  24  |  [57,51,70,73,81,44,86]  |
  3135  |                         j = j + 1;  |         |  556  |     81  |  4  |  25  |  [57,51,70,73,81,44,86]  |
  3136  |              resetPlaceHolder_2();  |         |  556  |     81  |  4  |  25  |  [57,51,70,73,81,44,86]  |
  3142  |                         R = R + 2;  |      2  |  558  |     81  |  4  |  25  |  [57,51,70,73,81,44,86]  |
  3146  |                         j = j + 1;  |         |  558  |     81  |  4  |  26  |  [57,51,70,73,81,44,86]  |
  3147  |              resetPlaceHolder_2();  |         |  558  |     81  |  4  |  26  |  [57,51,70,73,81,44,86]  |
  3153  |                         R = R + 2;  |      2  |  560  |     81  |  4  |  26  |  [57,51,70,73,81,44,86]  |
  3157  |                         j = j + 1;  |         |  560  |     81  |  4  |  27  |  [57,51,70,73,81,44,86]  |
  3158  |              resetPlaceHolder_2();  |         |  560  |     81  |  4  |  27  |  [57,51,70,73,81,44,86]  |
  3164  |                         R = R + 2;  |      2  |  562  |     81  |  4  |  27  |  [57,51,70,73,81,44,86]  |
  3168  |                         j = j + 1;  |         |  562  |     81  |  4  |  28  |  [57,51,70,73,81,44,86]  |
  3169  |              resetPlaceHolder_2();  |         |  562  |     81  |  4  |  28  |  [57,51,70,73,81,44,86]  |
  3175  |                         R = R + 2;  |      2  |  564  |     81  |  4  |  28  |  [57,51,70,73,81,44,86]  |
  3179  |                         j = j + 1;  |         |  564  |     81  |  4  |  29  |  [57,51,70,73,81,44,86]  |
  3180  |              resetPlaceHolder_2();  |         |  564  |     81  |  4  |  29  |  [57,51,70,73,81,44,86]  |
  3186  |                         R = R + 2;  |      2  |  566  |     81  |  4  |  29  |  [57,51,70,73,81,44,86]  |
  3190  |                         j = j + 1;  |         |  566  |     81  |  4  |  30  |  [57,51,70,73,81,44,86]  |
  3191  |              resetPlaceHolder_2();  |         |  566  |     81  |  4  |  30  |  [57,51,70,73,81,44,86]  |
  3197  |                         R = R + 2;  |      2  |  568  |     81  |  4  |  30  |  [57,51,70,73,81,44,86]  |
  3201  |                         j = j + 1;  |         |  568  |     81  |  4  |  31  |  [57,51,70,73,81,44,86]  |
  3202  |              resetPlaceHolder_2();  |         |  568  |     81  |  4  |  31  |  [57,51,70,73,81,44,86]  |
  3208  |                         R = R + 2;  |      2  |  570  |     81  |  4  |  31  |  [57,51,70,73,81,44,86]  |
  3212  |                         j = j + 1;  |         |  570  |     81  |  4  |  32  |  [57,51,70,73,81,44,86]  |
  3213  |              resetPlaceHolder_2();  |         |  570  |     81  |  4  |  32  |  [57,51,70,73,81,44,86]  |
  3219  |                         R = R + 2;  |      2  |  572  |     81  |  4  |  32  |  [57,51,70,73,81,44,86]  |
  3223  |                         j = j + 1;  |         |  572  |     81  |  4  |  33  |  [57,51,70,73,81,44,86]  |
  3224  |              resetPlaceHolder_2();  |         |  572  |     81  |  4  |  33  |  [57,51,70,73,81,44,86]  |
  3230  |                         R = R + 2;  |      2  |  574  |     81  |  4  |  33  |  [57,51,70,73,81,44,86]  |
  3234  |                         j = j + 1;  |         |  574  |     81  |  4  |  34  |  [57,51,70,73,81,44,86]  |
  3235  |              resetPlaceHolder_2();  |         |  574  |     81  |  4  |  34  |  [57,51,70,73,81,44,86]  |
  3241  |                         R = R + 2;  |      2  |  576  |     81  |  4  |  34  |  [57,51,70,73,81,44,86]  |
  3245  |                         j = j + 1;  |         |  576  |     81  |  4  |  35  |  [57,51,70,73,81,44,86]  |
  3246  |              resetPlaceHolder_2();  |         |  576  |     81  |  4  |  35  |  [57,51,70,73,81,44,86]  |
  3252  |                         R = R + 2;  |      2  |  578  |     81  |  4  |  35  |  [57,51,70,73,81,44,86]  |
  3256  |                         j = j + 1;  |         |  578  |     81  |  4  |  36  |  [57,51,70,73,81,44,86]  |
  3257  |              resetPlaceHolder_2();  |         |  578  |     81  |  4  |  36  |  [57,51,70,73,81,44,86]  |
  3263  |                         R = R + 2;  |      2  |  580  |     81  |  4  |  36  |  [57,51,70,73,81,44,86]  |
  3267  |                         j = j + 1;  |         |  580  |     81  |  4  |  37  |  [57,51,70,73,81,44,86]  |
  3268  |              resetPlaceHolder_2();  |         |  580  |     81  |  4  |  37  |  [57,51,70,73,81,44,86]  |
  3274  |                         R = R + 2;  |      2  |  582  |     81  |  4  |  37  |  [57,51,70,73,81,44,86]  |
  3278  |                         j = j + 1;  |         |  582  |     81  |  4  |  38  |  [57,51,70,73,81,44,86]  |
  3279  |              resetPlaceHolder_2();  |         |  582  |     81  |  4  |  38  |  [57,51,70,73,81,44,86]  |
  3285  |                         R = R + 2;  |      2  |  584  |     81  |  4  |  38  |  [57,51,70,73,81,44,86]  |
  3289  |                         j = j + 1;  |         |  584  |     81  |  4  |  39  |  [57,51,70,73,81,44,86]  |
  3290  |              resetPlaceHolder_2();  |         |  584  |     81  |  4  |  39  |  [57,51,70,73,81,44,86]  |
  3296  |                         R = R + 2;  |      2  |  586  |     81  |  4  |  39  |  [57,51,70,73,81,44,86]  |
  3300  |                         j = j + 1;  |         |  586  |     81  |  4  |  40  |  [57,51,70,73,81,44,86]  |
  3301  |              resetPlaceHolder_2();  |         |  586  |     81  |  4  |  40  |  [57,51,70,73,81,44,86]  |
  3307  |                         R = R + 2;  |      2  |  588  |     81  |  4  |  40  |  [57,51,70,73,81,44,86]  |
  3311  |                         j = j + 1;  |         |  588  |     81  |  4  |  41  |  [57,51,70,73,81,44,86]  |
  3312  |              resetPlaceHolder_2();  |         |  588  |     81  |  4  |  41  |  [57,51,70,73,81,44,86]  |
  3318  |                         R = R + 2;  |      2  |  590  |     81  |  4  |  41  |  [57,51,70,73,81,44,86]  |
  3322  |                         j = j + 1;  |         |  590  |     81  |  4  |  42  |  [57,51,70,73,81,44,86]  |
  3323  |              resetPlaceHolder_2();  |         |  590  |     81  |  4  |  42  |  [57,51,70,73,81,44,86]  |
  3329  |                         R = R + 2;  |      2  |  592  |     81  |  4  |  42  |  [57,51,70,73,81,44,86]  |
  3333  |                         j = j + 1;  |         |  592  |     81  |  4  |  43  |  [57,51,70,73,81,44,86]  |
  3334  |              resetPlaceHolder_2();  |         |  592  |     81  |  4  |  43  |  [57,51,70,73,81,44,86]  |
  3340  |                         R = R + 2;  |      2  |  594  |     81  |  4  |  43  |  [57,51,70,73,81,44,86]  |
  3344  |                         j = j + 1;  |         |  594  |     81  |  4  |  44  |  [57,51,70,73,81,44,86]  |
  3345  |              resetPlaceHolder_2();  |         |  594  |     81  |  4  |  44  |  [57,51,70,73,81,44,86]  |
  3351  |                         R = R + 2;  |      2  |  596  |     81  |  4  |  44  |  [57,51,70,73,81,44,86]  |
  3355  |                         j = j + 1;  |         |  596  |     81  |  4  |  45  |  [57,51,70,73,81,44,86]  |
  3356  |              resetPlaceHolder_2();  |         |  596  |     81  |  4  |  45  |  [57,51,70,73,81,44,86]  |
  3362  |                         R = R + 2;  |      2  |  598  |     81  |  4  |  45  |  [57,51,70,73,81,44,86]  |
  3366  |                         j = j + 1;  |         |  598  |     81  |  4  |  46  |  [57,51,70,73,81,44,86]  |
  3367  |              resetPlaceHolder_2();  |         |  598  |     81  |  4  |  46  |  [57,51,70,73,81,44,86]  |
  3373  |                         R = R + 2;  |      2  |  600  |     81  |  4  |  46  |  [57,51,70,73,81,44,86]  |
  3377  |                         j = j + 1;  |         |  600  |     81  |  4  |  47  |  [57,51,70,73,81,44,86]  |
  3378  |              resetPlaceHolder_2();  |         |  600  |     81  |  4  |  47  |  [57,51,70,73,81,44,86]  |
  3384  |                         R = R + 2;  |      2  |  602  |     81  |  4  |  47  |  [57,51,70,73,81,44,86]  |
  3388  |                         j = j + 1;  |         |  602  |     81  |  4  |  48  |  [57,51,70,73,81,44,86]  |
  3389  |              resetPlaceHolder_2();  |         |  602  |     81  |  4  |  48  |  [57,51,70,73,81,44,86]  |
  3395  |                         R = R + 2;  |      2  |  604  |     81  |  4  |  48  |  [57,51,70,73,81,44,86]  |
  3399  |                         j = j + 1;  |         |  604  |     81  |  4  |  49  |  [57,51,70,73,81,44,86]  |
  3400  |              resetPlaceHolder_2();  |         |  604  |     81  |  4  |  49  |  [57,51,70,73,81,44,86]  |
  3406  |                         R = R + 2;  |      2  |  606  |     81  |  4  |  49  |  [57,51,70,73,81,44,86]  |
  3410  |                         j = j + 1;  |         |  606  |     81  |  4  |  50  |  [57,51,70,73,81,44,86]  |
  3411  |              resetPlaceHolder_2();  |         |  606  |     81  |  4  |  50  |  [57,51,70,73,81,44,86]  |
  3417  |                         R = R + 2;  |      2  |  608  |     81  |  4  |  50  |  [57,51,70,73,81,44,86]  |
  3421  |                         j = j + 1;  |         |  608  |     81  |  4  |  51  |  [57,51,70,73,81,44,86]  |
  3422  |              resetPlaceHolder_2();  |         |  608  |     81  |  4  |  51  |  [57,51,70,73,81,44,86]  |
  3428  |                         R = R + 2;  |      2  |  610  |     81  |  4  |  51  |  [57,51,70,73,81,44,86]  |
  3432  |                         j = j + 1;  |         |  610  |     81  |  4  |  52  |  [57,51,70,73,81,44,86]  |
  3433  |              resetPlaceHolder_2();  |         |  610  |     81  |  4  |  52  |  [57,51,70,73,81,44,86]  |
  3439  |                         R = R + 2;  |      2  |  612  |     81  |  4  |  52  |  [57,51,70,73,81,44,86]  |
  3443  |                         j = j + 1;  |         |  612  |     81  |  4  |  53  |  [57,51,70,73,81,44,86]  |
  3444  |              resetPlaceHolder_2();  |         |  612  |     81  |  4  |  53  |  [57,51,70,73,81,44,86]  |
  3450  |                         R = R + 2;  |      2  |  614  |     81  |  4  |  53  |  [57,51,70,73,81,44,86]  |
  3454  |                         j = j + 1;  |         |  614  |     81  |  4  |  54  |  [57,51,70,73,81,44,86]  |
  3455  |              resetPlaceHolder_2();  |         |  614  |     81  |  4  |  54  |  [57,51,70,73,81,44,86]  |
  3461  |                         R = R + 2;  |      2  |  616  |     81  |  4  |  54  |  [57,51,70,73,81,44,86]  |
  3465  |                         j = j + 1;  |         |  616  |     81  |  4  |  55  |  [57,51,70,73,81,44,86]  |
  3466  |              resetPlaceHolder_2();  |         |  616  |     81  |  4  |  55  |  [57,51,70,73,81,44,86]  |
  3472  |                         R = R + 2;  |      2  |  618  |     81  |  4  |  55  |  [57,51,70,73,81,44,86]  |
  3476  |                         j = j + 1;  |         |  618  |     81  |  4  |  56  |  [57,51,70,73,81,44,86]  |
  3477  |              resetPlaceHolder_2();  |         |  618  |     81  |  4  |  56  |  [57,51,70,73,81,44,86]  |
  3483  |                         R = R + 2;  |      2  |  620  |     81  |  4  |  56  |  [57,51,70,73,81,44,86]  |
  3487  |                         j = j + 1;  |         |  620  |     81  |  4  |  57  |  [57,51,70,73,81,44,86]  |
  3488  |              resetPlaceHolder_2();  |         |  620  |     81  |  4  |  57  |  [57,51,70,73,81,44,86]  |
  3494  |                         R = R + 2;  |      2  |  622  |     81  |  4  |  57  |  [57,51,70,73,81,44,86]  |
  3498  |                         j = j + 1;  |         |  622  |     81  |  4  |  58  |  [57,51,70,73,81,44,86]  |
  3499  |              resetPlaceHolder_2();  |         |  622  |     81  |  4  |  58  |  [57,51,70,73,81,44,86]  |
  3505  |                         R = R + 2;  |      2  |  624  |     81  |  4  |  58  |  [57,51,70,73,81,44,86]  |
  3509  |                         j = j + 1;  |         |  624  |     81  |  4  |  59  |  [57,51,70,73,81,44,86]  |
  3510  |              resetPlaceHolder_2();  |         |  624  |     81  |  4  |  59  |  [57,51,70,73,81,44,86]  |
  3516  |                         R = R + 2;  |      2  |  626  |     81  |  4  |  59  |  [57,51,70,73,81,44,86]  |
  3520  |                         j = j + 1;  |         |  626  |     81  |  4  |  60  |  [57,51,70,73,81,44,86]  |
  3521  |              resetPlaceHolder_2();  |         |  626  |     81  |  4  |  60  |  [57,51,70,73,81,44,86]  |
  3527  |                         R = R + 2;  |      2  |  628  |     81  |  4  |  60  |  [57,51,70,73,81,44,86]  |
  3531  |                         j = j + 1;  |         |  628  |     81  |  4  |  61  |  [57,51,70,73,81,44,86]  |
  3532  |              resetPlaceHolder_2();  |         |  628  |     81  |  4  |  61  |  [57,51,70,73,81,44,86]  |
  3538  |                         R = R + 2;  |      2  |  630  |     81  |  4  |  61  |  [57,51,70,73,81,44,86]  |
  3542  |                         j = j + 1;  |         |  630  |     81  |  4  |  62  |  [57,51,70,73,81,44,86]  |
  3543  |              resetPlaceHolder_2();  |         |  630  |     81  |  4  |  62  |  [57,51,70,73,81,44,86]  |
  3549  |                         R = R + 2;  |      2  |  632  |     81  |  4  |  62  |  [57,51,70,73,81,44,86]  |
  3553  |                         j = j + 1;  |         |  632  |     81  |  4  |  63  |  [57,51,70,73,81,44,86]  |
  3554  |              resetPlaceHolder_2();  |         |  632  |     81  |  4  |  63  |  [57,51,70,73,81,44,86]  |
  3560  |                         R = R + 2;  |      2  |  634  |     81  |  4  |  63  |  [57,51,70,73,81,44,86]  |
  3564  |                         j = j + 1;  |         |  634  |     81  |  4  |  64  |  [57,51,70,73,81,44,86]  |
  3565  |              resetPlaceHolder_2();  |         |  634  |     81  |  4  |  64  |  [57,51,70,73,81,44,86]  |
  3571  |                         R = R + 2;  |      2  |  636  |     81  |  4  |  64  |  [57,51,70,73,81,44,86]  |
  3575  |                         j = j + 1;  |         |  636  |     81  |  4  |  65  |  [57,51,70,73,81,44,86]  |
  3576  |              resetPlaceHolder_2();  |         |  636  |     81  |  4  |  65  |  [57,51,70,73,81,44,86]  |
  3582  |                         R = R + 2;  |      2  |  638  |     81  |  4  |  65  |  [57,51,70,73,81,44,86]  |
  3586  |                         j = j + 1;  |         |  638  |     81  |  4  |  66  |  [57,51,70,73,81,44,86]  |
  3587  |              resetPlaceHolder_2();  |         |  638  |     81  |  4  |  66  |  [57,51,70,73,81,44,86]  |
  3593  |                         R = R + 2;  |      2  |  640  |     81  |  4  |  66  |  [57,51,70,73,81,44,86]  |
  3597  |                         j = j + 1;  |         |  640  |     81  |  4  |  67  |  [57,51,70,73,81,44,86]  |
  3598  |              resetPlaceHolder_2();  |         |  640  |     81  |  4  |  67  |  [57,51,70,73,81,44,86]  |
  3604  |                         R = R + 2;  |      2  |  642  |     81  |  4  |  67  |  [57,51,70,73,81,44,86]  |
  3608  |                         j = j + 1;  |         |  642  |     81  |  4  |  68  |  [57,51,70,73,81,44,86]  |
  3609  |              resetPlaceHolder_2();  |         |  642  |     81  |  4  |  68  |  [57,51,70,73,81,44,86]  |
  3615  |                         R = R + 2;  |      2  |  644  |     81  |  4  |  68  |  [57,51,70,73,81,44,86]  |
  3619  |                         j = j + 1;  |         |  644  |     81  |  4  |  69  |  [57,51,70,73,81,44,86]  |
  3620  |              resetPlaceHolder_2();  |         |  644  |     81  |  4  |  69  |  [57,51,70,73,81,44,86]  |
  3626  |                         R = R + 2;  |      2  |  646  |     81  |  4  |  69  |  [57,51,70,73,81,44,86]  |
  3630  |                         j = j + 1;  |         |  646  |     81  |  4  |  70  |  [57,51,70,73,81,44,86]  |
  3631  |              resetPlaceHolder_2();  |         |  646  |     81  |  4  |  70  |  [57,51,70,73,81,44,86]  |
  3637  |                         R = R + 2;  |      2  |  648  |     81  |  4  |  70  |  [57,51,70,73,81,44,86]  |
  3641  |                         j = j + 1;  |         |  648  |     81  |  4  |  71  |  [57,51,70,73,81,44,86]  |
  3642  |              resetPlaceHolder_2();  |         |  648  |     81  |  4  |  71  |  [57,51,70,73,81,44,86]  |
  3648  |                         R = R + 2;  |      2  |  650  |     81  |  4  |  71  |  [57,51,70,73,81,44,86]  |
  3652  |                         j = j + 1;  |         |  650  |     81  |  4  |  72  |  [57,51,70,73,81,44,86]  |
  3653  |              resetPlaceHolder_2();  |         |  650  |     81  |  4  |  72  |  [57,51,70,73,81,44,86]  |
  3659  |                         R = R + 2;  |      2  |  652  |     81  |  4  |  72  |  [57,51,70,73,81,44,86]  |
  3663  |                         j = j + 1;  |         |  652  |     81  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  3664  |              resetPlaceHolder_2();  |         |  652  |     81  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  3670  |                         R = R + 2;  |      2  |  654  |     81  |  4  |  73  |  [57,51,70,73,81,44,86]  |
  3674  |                         j = j + 1;  |         |  654  |     81  |  4  |  74  |  [57,51,70,73,81,44,86]  |
  3675  |              resetPlaceHolder_2();  |         |  654  |     81  |  4  |  74  |  [57,51,70,73,81,44,86]  |
  3681  |                         R = R + 2;  |      2  |  656  |     81  |  4  |  74  |  [57,51,70,73,81,44,86]  |
  3685  |                         j = j + 1;  |         |  656  |     81  |  4  |  75  |  [57,51,70,73,81,44,86]  |
  3686  |              resetPlaceHolder_2();  |         |  656  |     81  |  4  |  75  |  [57,51,70,73,81,44,86]  |
  3692  |                         R = R + 2;  |      2  |  658  |     81  |  4  |  75  |  [57,51,70,73,81,44,86]  |
  3696  |                         j = j + 1;  |         |  658  |     81  |  4  |  76  |  [57,51,70,73,81,44,86]  |
  3697  |              resetPlaceHolder_2();  |         |  658  |     81  |  4  |  76  |  [57,51,70,73,81,44,86]  |
  3703  |                         R = R + 2;  |      2  |  660  |     81  |  4  |  76  |  [57,51,70,73,81,44,86]  |
  3707  |                         j = j + 1;  |         |  660  |     81  |  4  |  77  |  [57,51,70,73,81,44,86]  |
  3708  |              resetPlaceHolder_2();  |         |  660  |     81  |  4  |  77  |  [57,51,70,73,81,44,86]  |
  3714  |                         R = R + 2;  |      2  |  662  |     81  |  4  |  77  |  [57,51,70,73,81,44,86]  |
  3718  |                         j = j + 1;  |         |  662  |     81  |  4  |  78  |  [57,51,70,73,81,44,86]  |
  3719  |              resetPlaceHolder_2();  |         |  662  |     81  |  4  |  78  |  [57,51,70,73,81,44,86]  |
  3725  |                         R = R + 2;  |      2  |  664  |     81  |  4  |  78  |  [57,51,70,73,81,44,86]  |
  3729  |                         j = j + 1;  |         |  664  |     81  |  4  |  79  |  [57,51,70,73,81,44,86]  |
  3730  |              resetPlaceHolder_2();  |         |  664  |     81  |  4  |  79  |  [57,51,70,73,81,44,86]  |
  3736  |                         R = R + 2;  |      2  |  666  |     81  |  4  |  79  |  [57,51,70,73,81,44,86]  |
  3740  |                         j = j + 1;  |         |  666  |     81  |  4  |  80  |  [57,51,70,73,81,44,86]  |
  3741  |              resetPlaceHolder_2();  |         |  666  |     81  |  4  |  80  |  [57,51,70,73,81,44,86]  |
  3747  |                         R = R + 2;  |      2  |  668  |     81  |  4  |  80  |  [57,51,70,73,81,44,86]  |
  3751  |                         j = j + 1;  |         |  668  |     81  |  4  |  81  |  [57,51,70,73,81,44,86]  |
  3752  |              resetPlaceHolder_2();  |         |  668  |     81  |  4  |  81  |  [57,51,70,73,81,44,86]  |
  3758  |                         R = R + 1;  |      1  |  669  |     81  |  4  |  81  |  [57,51,70,73,81,44,86]  |
  3762  |                         i = i + 1;  |         |  669  |     81  |  5  |  81  |  [57,51,70,73,81,44,86]  |
  3763  |              resetPlaceHolder_1();  |         |  669  |     81  |  5  |  81  |  [57,51,70,73,81,44,86]  |
  3769  |      entry = arrayRead(sorted, i);  |         |  669  |     44  |  5  |  81  |  [57,51,70,73,81,44,86]  |
  3771  |                         int j = 0;  |         |  669  |     44  |  5  |   0  |  [57,51,70,73,81,44,86]  |
  3777  |                         R = R + 2;  |      2  |  671  |     44  |  5  |   0  |  [57,51,70,73,81,44,86]  |
  3781  |                         j = j + 1;  |         |  671  |     44  |  5  |   1  |  [57,51,70,73,81,44,86]  |
  3782  |              resetPlaceHolder_2();  |         |  671  |     44  |  5  |   1  |  [57,51,70,73,81,44,86]  |
  3788  |                         R = R + 2;  |      2  |  673  |     44  |  5  |   1  |  [57,51,70,73,81,44,86]  |
  3792  |                         j = j + 1;  |         |  673  |     44  |  5  |   2  |  [57,51,70,73,81,44,86]  |
  3793  |              resetPlaceHolder_2();  |         |  673  |     44  |  5  |   2  |  [57,51,70,73,81,44,86]  |
  3799  |                         R = R + 2;  |      2  |  675  |     44  |  5  |   2  |  [57,51,70,73,81,44,86]  |
  3803  |                         j = j + 1;  |         |  675  |     44  |  5  |   3  |  [57,51,70,73,81,44,86]  |
  3804  |              resetPlaceHolder_2();  |         |  675  |     44  |  5  |   3  |  [57,51,70,73,81,44,86]  |
  3810  |                         R = R + 2;  |      2  |  677  |     44  |  5  |   3  |  [57,51,70,73,81,44,86]  |
  3814  |                         j = j + 1;  |         |  677  |     44  |  5  |   4  |  [57,51,70,73,81,44,86]  |
  3815  |              resetPlaceHolder_2();  |         |  677  |     44  |  5  |   4  |  [57,51,70,73,81,44,86]  |
  3821  |                         R = R + 2;  |      2  |  679  |     44  |  5  |   4  |  [57,51,70,73,81,44,86]  |
  3825  |                         j = j + 1;  |         |  679  |     44  |  5  |   5  |  [57,51,70,73,81,44,86]  |
  3826  |              resetPlaceHolder_2();  |         |  679  |     44  |  5  |   5  |  [57,51,70,73,81,44,86]  |
  3832  |                         R = R + 2;  |      2  |  681  |     44  |  5  |   5  |  [57,51,70,73,81,44,86]  |
  3836  |                         j = j + 1;  |         |  681  |     44  |  5  |   6  |  [57,51,70,73,81,44,86]  |
  3837  |              resetPlaceHolder_2();  |         |  681  |     44  |  5  |   6  |  [57,51,70,73,81,44,86]  |
  3843  |                         R = R + 2;  |      2  |  683  |     44  |  5  |   6  |  [57,51,70,73,81,44,86]  |
  3847  |                         j = j + 1;  |         |  683  |     44  |  5  |   7  |  [57,51,70,73,81,44,86]  |
  3848  |              resetPlaceHolder_2();  |         |  683  |     44  |  5  |   7  |  [57,51,70,73,81,44,86]  |
  3854  |                         R = R + 2;  |      2  |  685  |     44  |  5  |   7  |  [57,51,70,73,81,44,86]  |
  3858  |                         j = j + 1;  |         |  685  |     44  |  5  |   8  |  [57,51,70,73,81,44,86]  |
  3859  |              resetPlaceHolder_2();  |         |  685  |     44  |  5  |   8  |  [57,51,70,73,81,44,86]  |
  3865  |                         R = R + 2;  |      2  |  687  |     44  |  5  |   8  |  [57,51,70,73,81,44,86]  |
  3869  |                         j = j + 1;  |         |  687  |     44  |  5  |   9  |  [57,51,70,73,81,44,86]  |
  3870  |              resetPlaceHolder_2();  |         |  687  |     44  |  5  |   9  |  [57,51,70,73,81,44,86]  |
  3876  |                         R = R + 2;  |      2  |  689  |     44  |  5  |   9  |  [57,51,70,73,81,44,86]  |
  3880  |                         j = j + 1;  |         |  689  |     44  |  5  |  10  |  [57,51,70,73,81,44,86]  |
  3881  |              resetPlaceHolder_2();  |         |  689  |     44  |  5  |  10  |  [57,51,70,73,81,44,86]  |
  3887  |                         R = R + 2;  |      2  |  691  |     44  |  5  |  10  |  [57,51,70,73,81,44,86]  |
  3891  |                         j = j + 1;  |         |  691  |     44  |  5  |  11  |  [57,51,70,73,81,44,86]  |
  3892  |              resetPlaceHolder_2();  |         |  691  |     44  |  5  |  11  |  [57,51,70,73,81,44,86]  |
  3898  |                         R = R + 2;  |      2  |  693  |     44  |  5  |  11  |  [57,51,70,73,81,44,86]  |
  3902  |                         j = j + 1;  |         |  693  |     44  |  5  |  12  |  [57,51,70,73,81,44,86]  |
  3903  |              resetPlaceHolder_2();  |         |  693  |     44  |  5  |  12  |  [57,51,70,73,81,44,86]  |
  3909  |                         R = R + 2;  |      2  |  695  |     44  |  5  |  12  |  [57,51,70,73,81,44,86]  |
  3913  |                         j = j + 1;  |         |  695  |     44  |  5  |  13  |  [57,51,70,73,81,44,86]  |
  3914  |              resetPlaceHolder_2();  |         |  695  |     44  |  5  |  13  |  [57,51,70,73,81,44,86]  |
  3920  |                         R = R + 2;  |      2  |  697  |     44  |  5  |  13  |  [57,51,70,73,81,44,86]  |
  3924  |                         j = j + 1;  |         |  697  |     44  |  5  |  14  |  [57,51,70,73,81,44,86]  |
  3925  |              resetPlaceHolder_2();  |         |  697  |     44  |  5  |  14  |  [57,51,70,73,81,44,86]  |
  3931  |                         R = R + 2;  |      2  |  699  |     44  |  5  |  14  |  [57,51,70,73,81,44,86]  |
  3935  |                         j = j + 1;  |         |  699  |     44  |  5  |  15  |  [57,51,70,73,81,44,86]  |
  3936  |              resetPlaceHolder_2();  |         |  699  |     44  |  5  |  15  |  [57,51,70,73,81,44,86]  |
  3942  |                         R = R + 2;  |      2  |  701  |     44  |  5  |  15  |  [57,51,70,73,81,44,86]  |
  3946  |                         j = j + 1;  |         |  701  |     44  |  5  |  16  |  [57,51,70,73,81,44,86]  |
  3947  |              resetPlaceHolder_2();  |         |  701  |     44  |  5  |  16  |  [57,51,70,73,81,44,86]  |
  3953  |                         R = R + 2;  |      2  |  703  |     44  |  5  |  16  |  [57,51,70,73,81,44,86]  |
  3957  |                         j = j + 1;  |         |  703  |     44  |  5  |  17  |  [57,51,70,73,81,44,86]  |
  3958  |              resetPlaceHolder_2();  |         |  703  |     44  |  5  |  17  |  [57,51,70,73,81,44,86]  |
  3964  |                         R = R + 2;  |      2  |  705  |     44  |  5  |  17  |  [57,51,70,73,81,44,86]  |
  3968  |                         j = j + 1;  |         |  705  |     44  |  5  |  18  |  [57,51,70,73,81,44,86]  |
  3969  |              resetPlaceHolder_2();  |         |  705  |     44  |  5  |  18  |  [57,51,70,73,81,44,86]  |
  3975  |                         R = R + 2;  |      2  |  707  |     44  |  5  |  18  |  [57,51,70,73,81,44,86]  |
  3979  |                         j = j + 1;  |         |  707  |     44  |  5  |  19  |  [57,51,70,73,81,44,86]  |
  3980  |              resetPlaceHolder_2();  |         |  707  |     44  |  5  |  19  |  [57,51,70,73,81,44,86]  |
  3986  |                         R = R + 2;  |      2  |  709  |     44  |  5  |  19  |  [57,51,70,73,81,44,86]  |
  3990  |                         j = j + 1;  |         |  709  |     44  |  5  |  20  |  [57,51,70,73,81,44,86]  |
  3991  |              resetPlaceHolder_2();  |         |  709  |     44  |  5  |  20  |  [57,51,70,73,81,44,86]  |
  3997  |                         R = R + 2;  |      2  |  711  |     44  |  5  |  20  |  [57,51,70,73,81,44,86]  |
  4001  |                         j = j + 1;  |         |  711  |     44  |  5  |  21  |  [57,51,70,73,81,44,86]  |
  4002  |              resetPlaceHolder_2();  |         |  711  |     44  |  5  |  21  |  [57,51,70,73,81,44,86]  |
  4008  |                         R = R + 2;  |      2  |  713  |     44  |  5  |  21  |  [57,51,70,73,81,44,86]  |
  4012  |                         j = j + 1;  |         |  713  |     44  |  5  |  22  |  [57,51,70,73,81,44,86]  |
  4013  |              resetPlaceHolder_2();  |         |  713  |     44  |  5  |  22  |  [57,51,70,73,81,44,86]  |
  4019  |                         R = R + 2;  |      2  |  715  |     44  |  5  |  22  |  [57,51,70,73,81,44,86]  |
  4023  |                         j = j + 1;  |         |  715  |     44  |  5  |  23  |  [57,51,70,73,81,44,86]  |
  4024  |              resetPlaceHolder_2();  |         |  715  |     44  |  5  |  23  |  [57,51,70,73,81,44,86]  |
  4030  |                         R = R + 2;  |      2  |  717  |     44  |  5  |  23  |  [57,51,70,73,81,44,86]  |
  4034  |                         j = j + 1;  |         |  717  |     44  |  5  |  24  |  [57,51,70,73,81,44,86]  |
  4035  |              resetPlaceHolder_2();  |         |  717  |     44  |  5  |  24  |  [57,51,70,73,81,44,86]  |
  4041  |                         R = R + 2;  |      2  |  719  |     44  |  5  |  24  |  [57,51,70,73,81,44,86]  |
  4045  |                         j = j + 1;  |         |  719  |     44  |  5  |  25  |  [57,51,70,73,81,44,86]  |
  4046  |              resetPlaceHolder_2();  |         |  719  |     44  |  5  |  25  |  [57,51,70,73,81,44,86]  |
  4052  |                         R = R + 2;  |      2  |  721  |     44  |  5  |  25  |  [57,51,70,73,81,44,86]  |
  4056  |                         j = j + 1;  |         |  721  |     44  |  5  |  26  |  [57,51,70,73,81,44,86]  |
  4057  |              resetPlaceHolder_2();  |         |  721  |     44  |  5  |  26  |  [57,51,70,73,81,44,86]  |
  4063  |                         R = R + 2;  |      2  |  723  |     44  |  5  |  26  |  [57,51,70,73,81,44,86]  |
  4067  |                         j = j + 1;  |         |  723  |     44  |  5  |  27  |  [57,51,70,73,81,44,86]  |
  4068  |              resetPlaceHolder_2();  |         |  723  |     44  |  5  |  27  |  [57,51,70,73,81,44,86]  |
  4074  |                         R = R + 2;  |      2  |  725  |     44  |  5  |  27  |  [57,51,70,73,81,44,86]  |
  4078  |                         j = j + 1;  |         |  725  |     44  |  5  |  28  |  [57,51,70,73,81,44,86]  |
  4079  |              resetPlaceHolder_2();  |         |  725  |     44  |  5  |  28  |  [57,51,70,73,81,44,86]  |
  4085  |                         R = R + 2;  |      2  |  727  |     44  |  5  |  28  |  [57,51,70,73,81,44,86]  |
  4089  |                         j = j + 1;  |         |  727  |     44  |  5  |  29  |  [57,51,70,73,81,44,86]  |
  4090  |              resetPlaceHolder_2();  |         |  727  |     44  |  5  |  29  |  [57,51,70,73,81,44,86]  |
  4096  |                         R = R + 2;  |      2  |  729  |     44  |  5  |  29  |  [57,51,70,73,81,44,86]  |
  4100  |                         j = j + 1;  |         |  729  |     44  |  5  |  30  |  [57,51,70,73,81,44,86]  |
  4101  |              resetPlaceHolder_2();  |         |  729  |     44  |  5  |  30  |  [57,51,70,73,81,44,86]  |
  4107  |                         R = R + 2;  |      2  |  731  |     44  |  5  |  30  |  [57,51,70,73,81,44,86]  |
  4111  |                         j = j + 1;  |         |  731  |     44  |  5  |  31  |  [57,51,70,73,81,44,86]  |
  4112  |              resetPlaceHolder_2();  |         |  731  |     44  |  5  |  31  |  [57,51,70,73,81,44,86]  |
  4118  |                         R = R + 2;  |      2  |  733  |     44  |  5  |  31  |  [57,51,70,73,81,44,86]  |
  4122  |                         j = j + 1;  |         |  733  |     44  |  5  |  32  |  [57,51,70,73,81,44,86]  |
  4123  |              resetPlaceHolder_2();  |         |  733  |     44  |  5  |  32  |  [57,51,70,73,81,44,86]  |
  4129  |                         R = R + 2;  |      2  |  735  |     44  |  5  |  32  |  [57,51,70,73,81,44,86]  |
  4133  |                         j = j + 1;  |         |  735  |     44  |  5  |  33  |  [57,51,70,73,81,44,86]  |
  4134  |              resetPlaceHolder_2();  |         |  735  |     44  |  5  |  33  |  [57,51,70,73,81,44,86]  |
  4140  |                         R = R + 2;  |      2  |  737  |     44  |  5  |  33  |  [57,51,70,73,81,44,86]  |
  4144  |                         j = j + 1;  |         |  737  |     44  |  5  |  34  |  [57,51,70,73,81,44,86]  |
  4145  |              resetPlaceHolder_2();  |         |  737  |     44  |  5  |  34  |  [57,51,70,73,81,44,86]  |
  4151  |                         R = R + 2;  |      2  |  739  |     44  |  5  |  34  |  [57,51,70,73,81,44,86]  |
  4155  |                         j = j + 1;  |         |  739  |     44  |  5  |  35  |  [57,51,70,73,81,44,86]  |
  4156  |              resetPlaceHolder_2();  |         |  739  |     44  |  5  |  35  |  [57,51,70,73,81,44,86]  |
  4162  |                         R = R + 2;  |      2  |  741  |     44  |  5  |  35  |  [57,51,70,73,81,44,86]  |
  4166  |                         j = j + 1;  |         |  741  |     44  |  5  |  36  |  [57,51,70,73,81,44,86]  |
  4167  |              resetPlaceHolder_2();  |         |  741  |     44  |  5  |  36  |  [57,51,70,73,81,44,86]  |
  4173  |                         R = R + 2;  |      2  |  743  |     44  |  5  |  36  |  [57,51,70,73,81,44,86]  |
  4177  |                         j = j + 1;  |         |  743  |     44  |  5  |  37  |  [57,51,70,73,81,44,86]  |
  4178  |              resetPlaceHolder_2();  |         |  743  |     44  |  5  |  37  |  [57,51,70,73,81,44,86]  |
  4184  |                         R = R + 2;  |      2  |  745  |     44  |  5  |  37  |  [57,51,70,73,81,44,86]  |
  4188  |                         j = j + 1;  |         |  745  |     44  |  5  |  38  |  [57,51,70,73,81,44,86]  |
  4189  |              resetPlaceHolder_2();  |         |  745  |     44  |  5  |  38  |  [57,51,70,73,81,44,86]  |
  4195  |                         R = R + 2;  |      2  |  747  |     44  |  5  |  38  |  [57,51,70,73,81,44,86]  |
  4199  |                         j = j + 1;  |         |  747  |     44  |  5  |  39  |  [57,51,70,73,81,44,86]  |
  4200  |              resetPlaceHolder_2();  |         |  747  |     44  |  5  |  39  |  [57,51,70,73,81,44,86]  |
  4206  |                         R = R + 2;  |      2  |  749  |     44  |  5  |  39  |  [57,51,70,73,81,44,86]  |
  4210  |                         j = j + 1;  |         |  749  |     44  |  5  |  40  |  [57,51,70,73,81,44,86]  |
  4211  |              resetPlaceHolder_2();  |         |  749  |     44  |  5  |  40  |  [57,51,70,73,81,44,86]  |
  4217  |                         R = R + 2;  |      2  |  751  |     44  |  5  |  40  |  [57,51,70,73,81,44,86]  |
  4221  |                         j = j + 1;  |         |  751  |     44  |  5  |  41  |  [57,51,70,73,81,44,86]  |
  4222  |              resetPlaceHolder_2();  |         |  751  |     44  |  5  |  41  |  [57,51,70,73,81,44,86]  |
  4228  |                         R = R + 2;  |      2  |  753  |     44  |  5  |  41  |  [57,51,70,73,81,44,86]  |
  4232  |                         j = j + 1;  |         |  753  |     44  |  5  |  42  |  [57,51,70,73,81,44,86]  |
  4233  |              resetPlaceHolder_2();  |         |  753  |     44  |  5  |  42  |  [57,51,70,73,81,44,86]  |
  4239  |                         R = R + 2;  |      2  |  755  |     44  |  5  |  42  |  [57,51,70,73,81,44,86]  |
  4243  |                         j = j + 1;  |         |  755  |     44  |  5  |  43  |  [57,51,70,73,81,44,86]  |
  4244  |              resetPlaceHolder_2();  |         |  755  |     44  |  5  |  43  |  [57,51,70,73,81,44,86]  |
  4250  |                         R = R + 2;  |      2  |  757  |     44  |  5  |  43  |  [57,51,70,73,81,44,86]  |
  4254  |                         j = j + 1;  |         |  757  |     44  |  5  |  44  |  [57,51,70,73,81,44,86]  |
  4255  |              resetPlaceHolder_2();  |         |  757  |     44  |  5  |  44  |  [57,51,70,73,81,44,86]  |
  4261  |                         R = R + 1;  |      1  |  758  |     44  |  5  |  44  |  [57,51,70,73,81,44,86]  |
  4265  |                         i = i + 1;  |         |  758  |     44  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4266  |              resetPlaceHolder_1();  |         |  758  |     44  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4272  |      entry = arrayRead(sorted, i);  |         |  758  |     86  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4274  |                         int j = 0;  |         |  758  |     86  |  6  |   0  |  [57,51,70,73,81,44,86]  |
  4280  |                         R = R + 2;  |      2  |  760  |     86  |  6  |   0  |  [57,51,70,73,81,44,86]  |
  4284  |                         j = j + 1;  |         |  760  |     86  |  6  |   1  |  [57,51,70,73,81,44,86]  |
  4285  |              resetPlaceHolder_2();  |         |  760  |     86  |  6  |   1  |  [57,51,70,73,81,44,86]  |
  4291  |                         R = R + 2;  |      2  |  762  |     86  |  6  |   1  |  [57,51,70,73,81,44,86]  |
  4295  |                         j = j + 1;  |         |  762  |     86  |  6  |   2  |  [57,51,70,73,81,44,86]  |
  4296  |              resetPlaceHolder_2();  |         |  762  |     86  |  6  |   2  |  [57,51,70,73,81,44,86]  |
  4302  |                         R = R + 2;  |      2  |  764  |     86  |  6  |   2  |  [57,51,70,73,81,44,86]  |
  4306  |                         j = j + 1;  |         |  764  |     86  |  6  |   3  |  [57,51,70,73,81,44,86]  |
  4307  |              resetPlaceHolder_2();  |         |  764  |     86  |  6  |   3  |  [57,51,70,73,81,44,86]  |
  4313  |                         R = R + 2;  |      2  |  766  |     86  |  6  |   3  |  [57,51,70,73,81,44,86]  |
  4317  |                         j = j + 1;  |         |  766  |     86  |  6  |   4  |  [57,51,70,73,81,44,86]  |
  4318  |              resetPlaceHolder_2();  |         |  766  |     86  |  6  |   4  |  [57,51,70,73,81,44,86]  |
  4324  |                         R = R + 2;  |      2  |  768  |     86  |  6  |   4  |  [57,51,70,73,81,44,86]  |
  4328  |                         j = j + 1;  |         |  768  |     86  |  6  |   5  |  [57,51,70,73,81,44,86]  |
  4329  |              resetPlaceHolder_2();  |         |  768  |     86  |  6  |   5  |  [57,51,70,73,81,44,86]  |
  4335  |                         R = R + 2;  |      2  |  770  |     86  |  6  |   5  |  [57,51,70,73,81,44,86]  |
  4339  |                         j = j + 1;  |         |  770  |     86  |  6  |   6  |  [57,51,70,73,81,44,86]  |
  4340  |              resetPlaceHolder_2();  |         |  770  |     86  |  6  |   6  |  [57,51,70,73,81,44,86]  |
  4346  |                         R = R + 2;  |      2  |  772  |     86  |  6  |   6  |  [57,51,70,73,81,44,86]  |
  4350  |                         j = j + 1;  |         |  772  |     86  |  6  |   7  |  [57,51,70,73,81,44,86]  |
  4351  |              resetPlaceHolder_2();  |         |  772  |     86  |  6  |   7  |  [57,51,70,73,81,44,86]  |
  4357  |                         R = R + 2;  |      2  |  774  |     86  |  6  |   7  |  [57,51,70,73,81,44,86]  |
  4361  |                         j = j + 1;  |         |  774  |     86  |  6  |   8  |  [57,51,70,73,81,44,86]  |
  4362  |              resetPlaceHolder_2();  |         |  774  |     86  |  6  |   8  |  [57,51,70,73,81,44,86]  |
  4368  |                         R = R + 2;  |      2  |  776  |     86  |  6  |   8  |  [57,51,70,73,81,44,86]  |
  4372  |                         j = j + 1;  |         |  776  |     86  |  6  |   9  |  [57,51,70,73,81,44,86]  |
  4373  |              resetPlaceHolder_2();  |         |  776  |     86  |  6  |   9  |  [57,51,70,73,81,44,86]  |
  4379  |                         R = R + 2;  |      2  |  778  |     86  |  6  |   9  |  [57,51,70,73,81,44,86]  |
  4383  |                         j = j + 1;  |         |  778  |     86  |  6  |  10  |  [57,51,70,73,81,44,86]  |
  4384  |              resetPlaceHolder_2();  |         |  778  |     86  |  6  |  10  |  [57,51,70,73,81,44,86]  |
  4390  |                         R = R + 2;  |      2  |  780  |     86  |  6  |  10  |  [57,51,70,73,81,44,86]  |
  4394  |                         j = j + 1;  |         |  780  |     86  |  6  |  11  |  [57,51,70,73,81,44,86]  |
  4395  |              resetPlaceHolder_2();  |         |  780  |     86  |  6  |  11  |  [57,51,70,73,81,44,86]  |
  4401  |                         R = R + 2;  |      2  |  782  |     86  |  6  |  11  |  [57,51,70,73,81,44,86]  |
  4405  |                         j = j + 1;  |         |  782  |     86  |  6  |  12  |  [57,51,70,73,81,44,86]  |
  4406  |              resetPlaceHolder_2();  |         |  782  |     86  |  6  |  12  |  [57,51,70,73,81,44,86]  |
  4412  |                         R = R + 2;  |      2  |  784  |     86  |  6  |  12  |  [57,51,70,73,81,44,86]  |
  4416  |                         j = j + 1;  |         |  784  |     86  |  6  |  13  |  [57,51,70,73,81,44,86]  |
  4417  |              resetPlaceHolder_2();  |         |  784  |     86  |  6  |  13  |  [57,51,70,73,81,44,86]  |
  4423  |                         R = R + 2;  |      2  |  786  |     86  |  6  |  13  |  [57,51,70,73,81,44,86]  |
  4427  |                         j = j + 1;  |         |  786  |     86  |  6  |  14  |  [57,51,70,73,81,44,86]  |
  4428  |              resetPlaceHolder_2();  |         |  786  |     86  |  6  |  14  |  [57,51,70,73,81,44,86]  |
  4434  |                         R = R + 2;  |      2  |  788  |     86  |  6  |  14  |  [57,51,70,73,81,44,86]  |
  4438  |                         j = j + 1;  |         |  788  |     86  |  6  |  15  |  [57,51,70,73,81,44,86]  |
  4439  |              resetPlaceHolder_2();  |         |  788  |     86  |  6  |  15  |  [57,51,70,73,81,44,86]  |
  4445  |                         R = R + 2;  |      2  |  790  |     86  |  6  |  15  |  [57,51,70,73,81,44,86]  |
  4449  |                         j = j + 1;  |         |  790  |     86  |  6  |  16  |  [57,51,70,73,81,44,86]  |
  4450  |              resetPlaceHolder_2();  |         |  790  |     86  |  6  |  16  |  [57,51,70,73,81,44,86]  |
  4456  |                         R = R + 2;  |      2  |  792  |     86  |  6  |  16  |  [57,51,70,73,81,44,86]  |
  4460  |                         j = j + 1;  |         |  792  |     86  |  6  |  17  |  [57,51,70,73,81,44,86]  |
  4461  |              resetPlaceHolder_2();  |         |  792  |     86  |  6  |  17  |  [57,51,70,73,81,44,86]  |
  4467  |                         R = R + 2;  |      2  |  794  |     86  |  6  |  17  |  [57,51,70,73,81,44,86]  |
  4471  |                         j = j + 1;  |         |  794  |     86  |  6  |  18  |  [57,51,70,73,81,44,86]  |
  4472  |              resetPlaceHolder_2();  |         |  794  |     86  |  6  |  18  |  [57,51,70,73,81,44,86]  |
  4478  |                         R = R + 2;  |      2  |  796  |     86  |  6  |  18  |  [57,51,70,73,81,44,86]  |
  4482  |                         j = j + 1;  |         |  796  |     86  |  6  |  19  |  [57,51,70,73,81,44,86]  |
  4483  |              resetPlaceHolder_2();  |         |  796  |     86  |  6  |  19  |  [57,51,70,73,81,44,86]  |
  4489  |                         R = R + 2;  |      2  |  798  |     86  |  6  |  19  |  [57,51,70,73,81,44,86]  |
  4493  |                         j = j + 1;  |         |  798  |     86  |  6  |  20  |  [57,51,70,73,81,44,86]  |
  4494  |              resetPlaceHolder_2();  |         |  798  |     86  |  6  |  20  |  [57,51,70,73,81,44,86]  |
  4500  |                         R = R + 2;  |      2  |  800  |     86  |  6  |  20  |  [57,51,70,73,81,44,86]  |
  4504  |                         j = j + 1;  |         |  800  |     86  |  6  |  21  |  [57,51,70,73,81,44,86]  |
  4505  |              resetPlaceHolder_2();  |         |  800  |     86  |  6  |  21  |  [57,51,70,73,81,44,86]  |
  4511  |                         R = R + 2;  |      2  |  802  |     86  |  6  |  21  |  [57,51,70,73,81,44,86]  |
  4515  |                         j = j + 1;  |         |  802  |     86  |  6  |  22  |  [57,51,70,73,81,44,86]  |
  4516  |              resetPlaceHolder_2();  |         |  802  |     86  |  6  |  22  |  [57,51,70,73,81,44,86]  |
  4522  |                         R = R + 2;  |      2  |  804  |     86  |  6  |  22  |  [57,51,70,73,81,44,86]  |
  4526  |                         j = j + 1;  |         |  804  |     86  |  6  |  23  |  [57,51,70,73,81,44,86]  |
  4527  |              resetPlaceHolder_2();  |         |  804  |     86  |  6  |  23  |  [57,51,70,73,81,44,86]  |
  4533  |                         R = R + 2;  |      2  |  806  |     86  |  6  |  23  |  [57,51,70,73,81,44,86]  |
  4537  |                         j = j + 1;  |         |  806  |     86  |  6  |  24  |  [57,51,70,73,81,44,86]  |
  4538  |              resetPlaceHolder_2();  |         |  806  |     86  |  6  |  24  |  [57,51,70,73,81,44,86]  |
  4544  |                         R = R + 2;  |      2  |  808  |     86  |  6  |  24  |  [57,51,70,73,81,44,86]  |
  4548  |                         j = j + 1;  |         |  808  |     86  |  6  |  25  |  [57,51,70,73,81,44,86]  |
  4549  |              resetPlaceHolder_2();  |         |  808  |     86  |  6  |  25  |  [57,51,70,73,81,44,86]  |
  4555  |                         R = R + 2;  |      2  |  810  |     86  |  6  |  25  |  [57,51,70,73,81,44,86]  |
  4559  |                         j = j + 1;  |         |  810  |     86  |  6  |  26  |  [57,51,70,73,81,44,86]  |
  4560  |              resetPlaceHolder_2();  |         |  810  |     86  |  6  |  26  |  [57,51,70,73,81,44,86]  |
  4566  |                         R = R + 2;  |      2  |  812  |     86  |  6  |  26  |  [57,51,70,73,81,44,86]  |
  4570  |                         j = j + 1;  |         |  812  |     86  |  6  |  27  |  [57,51,70,73,81,44,86]  |
  4571  |              resetPlaceHolder_2();  |         |  812  |     86  |  6  |  27  |  [57,51,70,73,81,44,86]  |
  4577  |                         R = R + 2;  |      2  |  814  |     86  |  6  |  27  |  [57,51,70,73,81,44,86]  |
  4581  |                         j = j + 1;  |         |  814  |     86  |  6  |  28  |  [57,51,70,73,81,44,86]  |
  4582  |              resetPlaceHolder_2();  |         |  814  |     86  |  6  |  28  |  [57,51,70,73,81,44,86]  |
  4588  |                         R = R + 2;  |      2  |  816  |     86  |  6  |  28  |  [57,51,70,73,81,44,86]  |
  4592  |                         j = j + 1;  |         |  816  |     86  |  6  |  29  |  [57,51,70,73,81,44,86]  |
  4593  |              resetPlaceHolder_2();  |         |  816  |     86  |  6  |  29  |  [57,51,70,73,81,44,86]  |
  4599  |                         R = R + 2;  |      2  |  818  |     86  |  6  |  29  |  [57,51,70,73,81,44,86]  |
  4603  |                         j = j + 1;  |         |  818  |     86  |  6  |  30  |  [57,51,70,73,81,44,86]  |
  4604  |              resetPlaceHolder_2();  |         |  818  |     86  |  6  |  30  |  [57,51,70,73,81,44,86]  |
  4610  |                         R = R + 2;  |      2  |  820  |     86  |  6  |  30  |  [57,51,70,73,81,44,86]  |
  4614  |                         j = j + 1;  |         |  820  |     86  |  6  |  31  |  [57,51,70,73,81,44,86]  |
  4615  |              resetPlaceHolder_2();  |         |  820  |     86  |  6  |  31  |  [57,51,70,73,81,44,86]  |
  4621  |                         R = R + 2;  |      2  |  822  |     86  |  6  |  31  |  [57,51,70,73,81,44,86]  |
  4625  |                         j = j + 1;  |         |  822  |     86  |  6  |  32  |  [57,51,70,73,81,44,86]  |
  4626  |              resetPlaceHolder_2();  |         |  822  |     86  |  6  |  32  |  [57,51,70,73,81,44,86]  |
  4632  |                         R = R + 2;  |      2  |  824  |     86  |  6  |  32  |  [57,51,70,73,81,44,86]  |
  4636  |                         j = j + 1;  |         |  824  |     86  |  6  |  33  |  [57,51,70,73,81,44,86]  |
  4637  |              resetPlaceHolder_2();  |         |  824  |     86  |  6  |  33  |  [57,51,70,73,81,44,86]  |
  4643  |                         R = R + 2;  |      2  |  826  |     86  |  6  |  33  |  [57,51,70,73,81,44,86]  |
  4647  |                         j = j + 1;  |         |  826  |     86  |  6  |  34  |  [57,51,70,73,81,44,86]  |
  4648  |              resetPlaceHolder_2();  |         |  826  |     86  |  6  |  34  |  [57,51,70,73,81,44,86]  |
  4654  |                         R = R + 2;  |      2  |  828  |     86  |  6  |  34  |  [57,51,70,73,81,44,86]  |
  4658  |                         j = j + 1;  |         |  828  |     86  |  6  |  35  |  [57,51,70,73,81,44,86]  |
  4659  |              resetPlaceHolder_2();  |         |  828  |     86  |  6  |  35  |  [57,51,70,73,81,44,86]  |
  4665  |                         R = R + 2;  |      2  |  830  |     86  |  6  |  35  |  [57,51,70,73,81,44,86]  |
  4669  |                         j = j + 1;  |         |  830  |     86  |  6  |  36  |  [57,51,70,73,81,44,86]  |
  4670  |              resetPlaceHolder_2();  |         |  830  |     86  |  6  |  36  |  [57,51,70,73,81,44,86]  |
  4676  |                         R = R + 2;  |      2  |  832  |     86  |  6  |  36  |  [57,51,70,73,81,44,86]  |
  4680  |                         j = j + 1;  |         |  832  |     86  |  6  |  37  |  [57,51,70,73,81,44,86]  |
  4681  |              resetPlaceHolder_2();  |         |  832  |     86  |  6  |  37  |  [57,51,70,73,81,44,86]  |
  4687  |                         R = R + 2;  |      2  |  834  |     86  |  6  |  37  |  [57,51,70,73,81,44,86]  |
  4691  |                         j = j + 1;  |         |  834  |     86  |  6  |  38  |  [57,51,70,73,81,44,86]  |
  4692  |              resetPlaceHolder_2();  |         |  834  |     86  |  6  |  38  |  [57,51,70,73,81,44,86]  |
  4698  |                         R = R + 2;  |      2  |  836  |     86  |  6  |  38  |  [57,51,70,73,81,44,86]  |
  4702  |                         j = j + 1;  |         |  836  |     86  |  6  |  39  |  [57,51,70,73,81,44,86]  |
  4703  |              resetPlaceHolder_2();  |         |  836  |     86  |  6  |  39  |  [57,51,70,73,81,44,86]  |
  4709  |                         R = R + 2;  |      2  |  838  |     86  |  6  |  39  |  [57,51,70,73,81,44,86]  |
  4713  |                         j = j + 1;  |         |  838  |     86  |  6  |  40  |  [57,51,70,73,81,44,86]  |
  4714  |              resetPlaceHolder_2();  |         |  838  |     86  |  6  |  40  |  [57,51,70,73,81,44,86]  |
  4720  |                         R = R + 2;  |      2  |  840  |     86  |  6  |  40  |  [57,51,70,73,81,44,86]  |
  4724  |                         j = j + 1;  |         |  840  |     86  |  6  |  41  |  [57,51,70,73,81,44,86]  |
  4725  |              resetPlaceHolder_2();  |         |  840  |     86  |  6  |  41  |  [57,51,70,73,81,44,86]  |
  4731  |                         R = R + 2;  |      2  |  842  |     86  |  6  |  41  |  [57,51,70,73,81,44,86]  |
  4735  |                         j = j + 1;  |         |  842  |     86  |  6  |  42  |  [57,51,70,73,81,44,86]  |
  4736  |              resetPlaceHolder_2();  |         |  842  |     86  |  6  |  42  |  [57,51,70,73,81,44,86]  |
  4742  |                         R = R + 2;  |      2  |  844  |     86  |  6  |  42  |  [57,51,70,73,81,44,86]  |
  4746  |                         j = j + 1;  |         |  844  |     86  |  6  |  43  |  [57,51,70,73,81,44,86]  |
  4747  |              resetPlaceHolder_2();  |         |  844  |     86  |  6  |  43  |  [57,51,70,73,81,44,86]  |
  4753  |                         R = R + 2;  |      2  |  846  |     86  |  6  |  43  |  [57,51,70,73,81,44,86]  |
  4757  |                         j = j + 1;  |         |  846  |     86  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4758  |              resetPlaceHolder_2();  |         |  846  |     86  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4764  |                         R = R + 2;  |      2  |  848  |     86  |  6  |  44  |  [57,51,70,73,81,44,86]  |
  4768  |                         j = j + 1;  |         |  848  |     86  |  6  |  45  |  [57,51,70,73,81,44,86]  |
  4769  |              resetPlaceHolder_2();  |         |  848  |     86  |  6  |  45  |  [57,51,70,73,81,44,86]  |
  4775  |                         R = R + 2;  |      2  |  850  |     86  |  6  |  45  |  [57,51,70,73,81,44,86]  |
  4779  |                         j = j + 1;  |         |  850  |     86  |  6  |  46  |  [57,51,70,73,81,44,86]  |
  4780  |              resetPlaceHolder_2();  |         |  850  |     86  |  6  |  46  |  [57,51,70,73,81,44,86]  |
  4786  |                         R = R + 2;  |      2  |  852  |     86  |  6  |  46  |  [57,51,70,73,81,44,86]  |
  4790  |                         j = j + 1;  |         |  852  |     86  |  6  |  47  |  [57,51,70,73,81,44,86]  |
  4791  |              resetPlaceHolder_2();  |         |  852  |     86  |  6  |  47  |  [57,51,70,73,81,44,86]  |
  4797  |                         R = R + 2;  |      2  |  854  |     86  |  6  |  47  |  [57,51,70,73,81,44,86]  |
  4801  |                         j = j + 1;  |         |  854  |     86  |  6  |  48  |  [57,51,70,73,81,44,86]  |
  4802  |              resetPlaceHolder_2();  |         |  854  |     86  |  6  |  48  |  [57,51,70,73,81,44,86]  |
  4808  |                         R = R + 2;  |      2  |  856  |     86  |  6  |  48  |  [57,51,70,73,81,44,86]  |
  4812  |                         j = j + 1;  |         |  856  |     86  |  6  |  49  |  [57,51,70,73,81,44,86]  |
  4813  |              resetPlaceHolder_2();  |         |  856  |     86  |  6  |  49  |  [57,51,70,73,81,44,86]  |
  4819  |                         R = R + 2;  |      2  |  858  |     86  |  6  |  49  |  [57,51,70,73,81,44,86]  |
  4823  |                         j = j + 1;  |         |  858  |     86  |  6  |  50  |  [57,51,70,73,81,44,86]  |
  4824  |              resetPlaceHolder_2();  |         |  858  |     86  |  6  |  50  |  [57,51,70,73,81,44,86]  |
  4830  |                         R = R + 2;  |      2  |  860  |     86  |  6  |  50  |  [57,51,70,73,81,44,86]  |
  4834  |                         j = j + 1;  |         |  860  |     86  |  6  |  51  |  [57,51,70,73,81,44,86]  |
  4835  |              resetPlaceHolder_2();  |         |  860  |     86  |  6  |  51  |  [57,51,70,73,81,44,86]  |
  4841  |                         R = R + 2;  |      2  |  862  |     86  |  6  |  51  |  [57,51,70,73,81,44,86]  |
  4845  |                         j = j + 1;  |         |  862  |     86  |  6  |  52  |  [57,51,70,73,81,44,86]  |
  4846  |              resetPlaceHolder_2();  |         |  862  |     86  |  6  |  52  |  [57,51,70,73,81,44,86]  |
  4852  |                         R = R + 2;  |      2  |  864  |     86  |  6  |  52  |  [57,51,70,73,81,44,86]  |
  4856  |                         j = j + 1;  |         |  864  |     86  |  6  |  53  |  [57,51,70,73,81,44,86]  |
  4857  |              resetPlaceHolder_2();  |         |  864  |     86  |  6  |  53  |  [57,51,70,73,81,44,86]  |
  4863  |                         R = R + 2;  |      2  |  866  |     86  |  6  |  53  |  [57,51,70,73,81,44,86]  |
  4867  |                         j = j + 1;  |         |  866  |     86  |  6  |  54  |  [57,51,70,73,81,44,86]  |
  4868  |              resetPlaceHolder_2();  |         |  866  |     86  |  6  |  54  |  [57,51,70,73,81,44,86]  |
  4874  |                         R = R + 2;  |      2  |  868  |     86  |  6  |  54  |  [57,51,70,73,81,44,86]  |
  4878  |                         j = j + 1;  |         |  868  |     86  |  6  |  55  |  [57,51,70,73,81,44,86]  |
  4879  |              resetPlaceHolder_2();  |         |  868  |     86  |  6  |  55  |  [57,51,70,73,81,44,86]  |
  4885  |                         R = R + 2;  |      2  |  870  |     86  |  6  |  55  |  [57,51,70,73,81,44,86]  |
  4889  |                         j = j + 1;  |         |  870  |     86  |  6  |  56  |  [57,51,70,73,81,44,86]  |
  4890  |              resetPlaceHolder_2();  |         |  870  |     86  |  6  |  56  |  [57,51,70,73,81,44,86]  |
  4896  |                         R = R + 2;  |      2  |  872  |     86  |  6  |  56  |  [57,51,70,73,81,44,86]  |
  4900  |                         j = j + 1;  |         |  872  |     86  |  6  |  57  |  [57,51,70,73,81,44,86]  |
  4901  |              resetPlaceHolder_2();  |         |  872  |     86  |  6  |  57  |  [57,51,70,73,81,44,86]  |
  4907  |                         R = R + 2;  |      2  |  874  |     86  |  6  |  57  |  [57,51,70,73,81,44,86]  |
  4911  |                         j = j + 1;  |         |  874  |     86  |  6  |  58  |  [57,51,70,73,81,44,86]  |
  4912  |              resetPlaceHolder_2();  |         |  874  |     86  |  6  |  58  |  [57,51,70,73,81,44,86]  |
  4918  |                         R = R + 2;  |      2  |  876  |     86  |  6  |  58  |  [57,51,70,73,81,44,86]  |
  4922  |                         j = j + 1;  |         |  876  |     86  |  6  |  59  |  [57,51,70,73,81,44,86]  |
  4923  |              resetPlaceHolder_2();  |         |  876  |     86  |  6  |  59  |  [57,51,70,73,81,44,86]  |
  4929  |                         R = R + 2;  |      2  |  878  |     86  |  6  |  59  |  [57,51,70,73,81,44,86]  |
  4933  |                         j = j + 1;  |         |  878  |     86  |  6  |  60  |  [57,51,70,73,81,44,86]  |
  4934  |              resetPlaceHolder_2();  |         |  878  |     86  |  6  |  60  |  [57,51,70,73,81,44,86]  |
  4940  |                         R = R + 2;  |      2  |  880  |     86  |  6  |  60  |  [57,51,70,73,81,44,86]  |
  4944  |                         j = j + 1;  |         |  880  |     86  |  6  |  61  |  [57,51,70,73,81,44,86]  |
  4945  |              resetPlaceHolder_2();  |         |  880  |     86  |  6  |  61  |  [57,51,70,73,81,44,86]  |
  4951  |                         R = R + 2;  |      2  |  882  |     86  |  6  |  61  |  [57,51,70,73,81,44,86]  |
  4955  |                         j = j + 1;  |         |  882  |     86  |  6  |  62  |  [57,51,70,73,81,44,86]  |
  4956  |              resetPlaceHolder_2();  |         |  882  |     86  |  6  |  62  |  [57,51,70,73,81,44,86]  |
  4962  |                         R = R + 2;  |      2  |  884  |     86  |  6  |  62  |  [57,51,70,73,81,44,86]  |
  4966  |                         j = j + 1;  |         |  884  |     86  |  6  |  63  |  [57,51,70,73,81,44,86]  |
  4967  |              resetPlaceHolder_2();  |         |  884  |     86  |  6  |  63  |  [57,51,70,73,81,44,86]  |
  4973  |                         R = R + 2;  |      2  |  886  |     86  |  6  |  63  |  [57,51,70,73,81,44,86]  |
  4977  |                         j = j + 1;  |         |  886  |     86  |  6  |  64  |  [57,51,70,73,81,44,86]  |
  4978  |              resetPlaceHolder_2();  |         |  886  |     86  |  6  |  64  |  [57,51,70,73,81,44,86]  |
  4984  |                         R = R + 2;  |      2  |  888  |     86  |  6  |  64  |  [57,51,70,73,81,44,86]  |
  4988  |                         j = j + 1;  |         |  888  |     86  |  6  |  65  |  [57,51,70,73,81,44,86]  |
  4989  |              resetPlaceHolder_2();  |         |  888  |     86  |  6  |  65  |  [57,51,70,73,81,44,86]  |
  4995  |                         R = R + 2;  |      2  |  890  |     86  |  6  |  65  |  [57,51,70,73,81,44,86]  |
  4999  |                         j = j + 1;  |         |  890  |     86  |  6  |  66  |  [57,51,70,73,81,44,86]  |
  5000  |              resetPlaceHolder_2();  |         |  890  |     86  |  6  |  66  |  [57,51,70,73,81,44,86]  |
  5006  |                         R = R + 2;  |      2  |  892  |     86  |  6  |  66  |  [57,51,70,73,81,44,86]  |
  5010  |                         j = j + 1;  |         |  892  |     86  |  6  |  67  |  [57,51,70,73,81,44,86]  |
  5011  |              resetPlaceHolder_2();  |         |  892  |     86  |  6  |  67  |  [57,51,70,73,81,44,86]  |
  5017  |                         R = R + 2;  |      2  |  894  |     86  |  6  |  67  |  [57,51,70,73,81,44,86]  |
  5021  |                         j = j + 1;  |         |  894  |     86  |  6  |  68  |  [57,51,70,73,81,44,86]  |
  5022  |              resetPlaceHolder_2();  |         |  894  |     86  |  6  |  68  |  [57,51,70,73,81,44,86]  |
  5028  |                         R = R + 2;  |      2  |  896  |     86  |  6  |  68  |  [57,51,70,73,81,44,86]  |
  5032  |                         j = j + 1;  |         |  896  |     86  |  6  |  69  |  [57,51,70,73,81,44,86]  |
  5033  |              resetPlaceHolder_2();  |         |  896  |     86  |  6  |  69  |  [57,51,70,73,81,44,86]  |
  5039  |                         R = R + 2;  |      2  |  898  |     86  |  6  |  69  |  [57,51,70,73,81,44,86]  |
  5043  |                         j = j + 1;  |         |  898  |     86  |  6  |  70  |  [57,51,70,73,81,44,86]  |
  5044  |              resetPlaceHolder_2();  |         |  898  |     86  |  6  |  70  |  [57,51,70,73,81,44,86]  |
  5050  |                         R = R + 2;  |      2  |  900  |     86  |  6  |  70  |  [57,51,70,73,81,44,86]  |
  5054  |                         j = j + 1;  |         |  900  |     86  |  6  |  71  |  [57,51,70,73,81,44,86]  |
  5055  |              resetPlaceHolder_2();  |         |  900  |     86  |  6  |  71  |  [57,51,70,73,81,44,86]  |
  5061  |                         R = R + 2;  |      2  |  902  |     86  |  6  |  71  |  [57,51,70,73,81,44,86]  |
  5065  |                         j = j + 1;  |         |  902  |     86  |  6  |  72  |  [57,51,70,73,81,44,86]  |
  5066  |              resetPlaceHolder_2();  |         |  902  |     86  |  6  |  72  |  [57,51,70,73,81,44,86]  |
  5072  |                         R = R + 2;  |      2  |  904  |     86  |  6  |  72  |  [57,51,70,73,81,44,86]  |
  5076  |                         j = j + 1;  |         |  904  |     86  |  6  |  73  |  [57,51,70,73,81,44,86]  |
  5077  |              resetPlaceHolder_2();  |         |  904  |     86  |  6  |  73  |  [57,51,70,73,81,44,86]  |
  5083  |                         R = R + 2;  |      2  |  906  |     86  |  6  |  73  |  [57,51,70,73,81,44,86]  |
  5087  |                         j = j + 1;  |         |  906  |     86  |  6  |  74  |  [57,51,70,73,81,44,86]  |
  5088  |              resetPlaceHolder_2();  |         |  906  |     86  |  6  |  74  |  [57,51,70,73,81,44,86]  |
  5094  |                         R = R + 2;  |      2  |  908  |     86  |  6  |  74  |  [57,51,70,73,81,44,86]  |
  5098  |                         j = j + 1;  |         |  908  |     86  |  6  |  75  |  [57,51,70,73,81,44,86]  |
  5099  |              resetPlaceHolder_2();  |         |  908  |     86  |  6  |  75  |  [57,51,70,73,81,44,86]  |
  5105  |                         R = R + 2;  |      2  |  910  |     86  |  6  |  75  |  [57,51,70,73,81,44,86]  |
  5109  |                         j = j + 1;  |         |  910  |     86  |  6  |  76  |  [57,51,70,73,81,44,86]  |
  5110  |              resetPlaceHolder_2();  |         |  910  |     86  |  6  |  76  |  [57,51,70,73,81,44,86]  |
  5116  |                         R = R + 2;  |      2  |  912  |     86  |  6  |  76  |  [57,51,70,73,81,44,86]  |
  5120  |                         j = j + 1;  |         |  912  |     86  |  6  |  77  |  [57,51,70,73,81,44,86]  |
  5121  |              resetPlaceHolder_2();  |         |  912  |     86  |  6  |  77  |  [57,51,70,73,81,44,86]  |
  5127  |                         R = R + 2;  |      2  |  914  |     86  |  6  |  77  |  [57,51,70,73,81,44,86]  |
  5131  |                         j = j + 1;  |         |  914  |     86  |  6  |  78  |  [57,51,70,73,81,44,86]  |
  5132  |              resetPlaceHolder_2();  |         |  914  |     86  |  6  |  78  |  [57,51,70,73,81,44,86]  |
  5138  |                         R = R + 2;  |      2  |  916  |     86  |  6  |  78  |  [57,51,70,73,81,44,86]  |
  5142  |                         j = j + 1;  |         |  916  |     86  |  6  |  79  |  [57,51,70,73,81,44,86]  |
  5143  |              resetPlaceHolder_2();  |         |  916  |     86  |  6  |  79  |  [57,51,70,73,81,44,86]  |
  5149  |                         R = R + 2;  |      2  |  918  |     86  |  6  |  79  |  [57,51,70,73,81,44,86]  |
  5153  |                         j = j + 1;  |         |  918  |     86  |  6  |  80  |  [57,51,70,73,81,44,86]  |
  5154  |              resetPlaceHolder_2();  |         |  918  |     86  |  6  |  80  |  [57,51,70,73,81,44,86]  |
  5160  |                         R = R + 2;  |      2  |  920  |     86  |  6  |  80  |  [57,51,70,73,81,44,86]  |
  5164  |                         j = j + 1;  |         |  920  |     86  |  6  |  81  |  [57,51,70,73,81,44,86]  |
  5165  |              resetPlaceHolder_2();  |         |  920  |     86  |  6  |  81  |  [57,51,70,73,81,44,86]  |
  5171  |                         R = R + 2;  |      2  |  922  |     86  |  6  |  81  |  [57,51,70,73,81,44,86]  |
  5175  |                         j = j + 1;  |         |  922  |     86  |  6  |  82  |  [57,51,70,73,81,44,86]  |
  5176  |              resetPlaceHolder_2();  |         |  922  |     86  |  6  |  82  |  [57,51,70,73,81,44,86]  |
  5182  |                         R = R + 2;  |      2  |  924  |     86  |  6  |  82  |  [57,51,70,73,81,44,86]  |
  5186  |                         j = j + 1;  |         |  924  |     86  |  6  |  83  |  [57,51,70,73,81,44,86]  |
  5187  |              resetPlaceHolder_2();  |         |  924  |     86  |  6  |  83  |  [57,51,70,73,81,44,86]  |
  5193  |                         R = R + 2;  |      2  |  926  |     86  |  6  |  83  |  [57,51,70,73,81,44,86]  |
  5197  |                         j = j + 1;  |         |  926  |     86  |  6  |  84  |  [57,51,70,73,81,44,86]  |
  5198  |              resetPlaceHolder_2();  |         |  926  |     86  |  6  |  84  |  [57,51,70,73,81,44,86]  |
  5204  |                         R = R + 2;  |      2  |  928  |     86  |  6  |  84  |  [57,51,70,73,81,44,86]  |
  5208  |                         j = j + 1;  |         |  928  |     86  |  6  |  85  |  [57,51,70,73,81,44,86]  |
  5209  |              resetPlaceHolder_2();  |         |  928  |     86  |  6  |  85  |  [57,51,70,73,81,44,86]  |
  5215  |                         R = R + 2;  |      2  |  930  |     86  |  6  |  85  |  [57,51,70,73,81,44,86]  |
  5219  |                         j = j + 1;  |         |  930  |     86  |  6  |  86  |  [57,51,70,73,81,44,86]  |
  5220  |              resetPlaceHolder_2();  |         |  930  |     86  |  6  |  86  |  [57,51,70,73,81,44,86]  |
  5226  |                         R = R + 1;  |      1  |  931  |     86  |  6  |  86  |  [57,51,70,73,81,44,86]  |
  5230  |                         i = i + 1;  |         |  931  |     86  |  7  |  86  |  [57,51,70,73,81,44,86]  |
  5231  |              resetPlaceHolder_1();  |         |  931  |     86  |  7  |  86  |  [57,51,70,73,81,44,86]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 469 trace node indices: [2199, 3021, 1322, 1586, 2452, 1718, 5116, 2889, 1454, 1105, 1729, 1237, 2463, 4852, 2595, 1850, 1083, 962, 1982, 2331, 5028, 481, 3681, 2309, 2210, 4500, 217, 3230, 3549, 1443, 3417, 3285, 3153, 3098, 2837, 1971, 4973, 1608, 3439, 3120, 3648, 3942, 3175, 797, 2933, 1872, 698, 404, 1127, 709, 841, 973, 885, 3777, 3898, 4030, 1366, 2067, 4665, 4610, 4467, 4775, 4511, 52, 3263, 4896, 184, 3131, 4151, 3821, 4654, 5160, 5182, 2562, 4984, 3043, 5127, 5193, 4830, 4368, 228, 4632, 1641, 1773, 448, 316, 4390, 4302, 261, 4008, 3788, 492, 1465, 3887, 4173, 591, 2782, 3670, 2650, 3527, 646, 2122, 1828, 514, 2254, 2540, 1960, 4162, 602, 3986, 687, 1377, 1215, 3505, 1072, 2639, 4643, 2804, 4379, 4588, 74, 3406, 1696, 206, 1564, 2922, 3582, 3450, 4962, 4753, 85, 5017, 2364, 3186, 3318, 1311, 2232, 3054, 2496, 2441, 2705, 1355, 4434, 349, 2133, 1751, 1487, 2606, 1619, 2015, 1883, 3307, 1938, 4280, 4140, 2628, 3810, 852, 2826, 3065, 830, 3931, 1740, 3799, 4063, 4808, 742, 3909, 3615, 874, 1762, 2100, 1017, 5006, 4544, 1498, 2694, 1006, 1138, 3087, 4676, 4291, 1160, 4951, 1028, 753, 1182, 3714, 2419, 3010, 3032, 3428, 2551, 4621, 1039, 547, 96, 3703, 393, 5149, 2900, 2243, 1050, 984, 173, 129, 569, 3692, 3109, 41, 3920, 371, 503, 1333, 2749, 4184, 4195, 360, 657, 558, 2408, 2793, 1663, 2089, 2221, 2617, 2529, 4995, 2144, 1278, 5138, 4874, 4412, 1927, 4797, 4577, 3274, 4489, 4599, 4786, 4041, 819, 2727, 1916, 1784, 2188, 3472, 1652, 3736, 3758, 1388, 4709, 5050, 118, 1795, 2716, 3604, 1520, 1256, 1226, 5039, 382, 3964, 4096, 1707, 2738, 3208, 3340, 4764, 3832, 2166, 2474, 2573, 764, 4929, 4228, 1894, 1806, 2955, 1542, 3197, 3384, 4107, 863, 3219, 4401, 3747, 4445, 2111, 1630, 1993, 4731, 140, 1149, 3483, 1344, 1061, 2911, 1171, 4720, 5094, 4085, 3953, 3241, 4918, 3142, 2999, 3876, 2867, 4907, 426, 162, 3395, 4456, 1905, 2878, 4052, 1509, 3975, 4566, 3571, 2298, 525, 580, 63, 2397, 2661, 2977, 2375, 327, 5171, 3659, 2518, 1267, 2386, 1531, 4324, 4522, 4346, 1432, 1300, 2276, 338, 470, 951, 808, 3329, 907, 2056, 613, 2320, 1094, 5226, 5083, 2848, 2584, 4819, 4217, 2760, 1421, 250, 1839, 4698, 2045, 1685, 1553, 1949, 1817, 2078, 3725, 2342, 1575, 1289, 3593, 2988, 1476, 896, 1674, 4250, 2004, 2026, 3516, 731, 786, 3252, 995, 4261, 2944, 1861, 929, 4478, 1193, 272, 5072, 3351, 4074, 536, 1116, 151, 2287, 2683, 4687, 2155, 3997, 3865, 30, 3373, 2815, 4841, 4357, 4885, 3164, 305, 107, 239, 294, 918, 3560, 195, 5105, 437, 1410, 635, 5215, 720, 3843, 283, 415, 624, 2353, 3362, 5204, 4129, 2966, 2430, 2485, 2265, 4118, 5061, 459, 4239, 2507, 4206, 3538, 1597, 4019, 3076, 3494, 1399, 4533, 4335, 2672, 3461, 940, 3626, 4555, 3854, 4742, 4313, 775, 4423, 676, 3637, 4863, 1204, 3296, 4940, 2177, 2771]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,676,687,698,709,720,731,742,753,764,775,786,797,808,819,830,841,852,863,874,885,896,907,918,929,940,951,962,973,984,995,1006,1017,1028,1039,1050,1061,1072,1083,1094,1105,1116,1127,1138,1149,1160,1171,1182,1193,1204,1215,1226,1237,1256,1267,1278,1289,1300,1311,1322,1333,1344,1355,1366,1377,1388,1399,1410,1421,1432,1443,1454,1465,1476,1487,1498,1509,1520,1531,1542,1553,1564,1575,1586,1597,1608,1619,1630,1641,1652,1663,1674,1685,1696,1707,1718,1729,1740,1751,1762,1773,1784,1795,1806,1817,1828,1839,1850,1861,1872,1883,1894,1905,1916,1927,1938,1949,1960,1971,1982,1993,2004,2015,2026,2045,2056,2067,2078,2089,2100,2111,2122,2133,2144,2155,2166,2177,2188,2199,2210,2221,2232,2243,2254,2265,2276,2287,2298,2309,2320,2331,2342,2353,2364,2375,2386,2397,2408,2419,2430,2441,2452,2463,2474,2485,2496,2507,2518,2529,2540,2551,2562,2573,2584,2595,2606,2617,2628,2639,2650,2661,2672,2683,2694,2705,2716,2727,2738,2749,2760,2771,2782,2793,2804,2815,2826,2837,2848,2867,2878,2889,2900,2911,2922,2933,2944,2955,2966,2977,2988,2999,3010,3021,3032,3043,3054,3065,3076,3087,3098,3109,3120,3131,3142,3153,3164,3175,3186,3197,3208,3219,3230,3241,3252,3263,3274,3285,3296,3307,3318,3329,3340,3351,3362,3373,3384,3395,3406,3417,3428,3439,3450,3461,3472,3483,3494,3505,3516,3527,3538,3549,3560,3571,3582,3593,3604,3615,3626,3637,3648,3659,3670,3681,3692,3703,3714,3725,3736,3747,3758,3777,3788,3799,3810,3821,3832,3843,3854,3865,3876,3887,3898,3909,3920,3931,3942,3953,3964,3975,3986,3997,4008,4019,4030,4041,4052,4063,4074,4085,4096,4107,4118,4129,4140,4151,4162,4173,4184,4195,4206,4217,4228,4239,4250,4261,4280,4291,4302,4313,4324,4335,4346,4357,4368,4379,4390,4401,4412,4423,4434,4445,4456,4467,4478,4489,4500,4511,4522,4533,4544,4555,4566,4577,4588,4599,4610,4621,4632,4643,4654,4665,4676,4687,4698,4709,4720,4731,4742,4753,4764,4775,4786,4797,4808,4819,4830,4841,4852,4863,4874,4885,4896,4907,4918,4929,4940,4951,4962,4973,4984,4995,5006,5017,5028,5039,5050,5061,5072,5083,5094,5105,5116,5127,5138,5149,5160,5171,5182,5193,5204,5215,5226}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 1;  |      1  |                         0  |
   662  |  resetPlaceHolder_1();  |         |                            |
   676  |             R = R + 2;  |      2  |                         0  |
   681  |  resetPlaceHolder_2();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   692  |  resetPlaceHolder_2();  |         |                            |
   698  |             R = R + 2;  |      2  |                         0  |
   703  |  resetPlaceHolder_2();  |         |                            |
   709  |             R = R + 2;  |      2  |                         0  |
   714  |  resetPlaceHolder_2();  |         |                            |
   720  |             R = R + 2;  |      2  |                         0  |
   725  |  resetPlaceHolder_2();  |         |                            |
   731  |             R = R + 2;  |      2  |                         0  |
   736  |  resetPlaceHolder_2();  |         |                            |
   742  |             R = R + 2;  |      2  |                         0  |
   747  |  resetPlaceHolder_2();  |         |                            |
   753  |             R = R + 2;  |      2  |                         0  |
   758  |  resetPlaceHolder_2();  |         |                            |
   764  |             R = R + 2;  |      2  |                         0  |
   769  |  resetPlaceHolder_2();  |         |                            |
   775  |             R = R + 2;  |      2  |                         0  |
   780  |  resetPlaceHolder_2();  |         |                            |
   786  |             R = R + 2;  |      2  |                         0  |
   791  |  resetPlaceHolder_2();  |         |                            |
   797  |             R = R + 2;  |      2  |                         0  |
   802  |  resetPlaceHolder_2();  |         |                            |
   808  |             R = R + 2;  |      2  |                         0  |
   813  |  resetPlaceHolder_2();  |         |                            |
   819  |             R = R + 2;  |      2  |                         0  |
   824  |  resetPlaceHolder_2();  |         |                            |
   830  |             R = R + 2;  |      2  |                         0  |
   835  |  resetPlaceHolder_2();  |         |                            |
   841  |             R = R + 2;  |      2  |                         0  |
   846  |  resetPlaceHolder_2();  |         |                            |
   852  |             R = R + 2;  |      2  |                         0  |
   857  |  resetPlaceHolder_2();  |         |                            |
   863  |             R = R + 2;  |      2  |                         0  |
   868  |  resetPlaceHolder_2();  |         |                            |
   874  |             R = R + 2;  |      2  |                         0  |
   879  |  resetPlaceHolder_2();  |         |                            |
   885  |             R = R + 2;  |      2  |                         0  |
   890  |  resetPlaceHolder_2();  |         |                            |
   896  |             R = R + 2;  |      2  |                         0  |
   901  |  resetPlaceHolder_2();  |         |                            |
   907  |             R = R + 2;  |      2  |                         0  |
   912  |  resetPlaceHolder_2();  |         |                            |
   918  |             R = R + 2;  |      2  |                         0  |
   923  |  resetPlaceHolder_2();  |         |                            |
   929  |             R = R + 2;  |      2  |                         0  |
   934  |  resetPlaceHolder_2();  |         |                            |
   940  |             R = R + 2;  |      2  |                         0  |
   945  |  resetPlaceHolder_2();  |         |                            |
   951  |             R = R + 2;  |      2  |                         0  |
   956  |  resetPlaceHolder_2();  |         |                            |
   962  |             R = R + 2;  |      2  |                         0  |
   967  |  resetPlaceHolder_2();  |         |                            |
   973  |             R = R + 2;  |      2  |                         0  |
   978  |  resetPlaceHolder_2();  |         |                            |
   984  |             R = R + 2;  |      2  |                         0  |
   989  |  resetPlaceHolder_2();  |         |                            |
   995  |             R = R + 2;  |      2  |                         0  |
  1000  |  resetPlaceHolder_2();  |         |                            |
  1006  |             R = R + 2;  |      2  |                         0  |
  1011  |  resetPlaceHolder_2();  |         |                            |
  1017  |             R = R + 2;  |      2  |                         0  |
  1022  |  resetPlaceHolder_2();  |         |                            |
  1028  |             R = R + 2;  |      2  |                         0  |
  1033  |  resetPlaceHolder_2();  |         |                            |
  1039  |             R = R + 2;  |      2  |                         0  |
  1044  |  resetPlaceHolder_2();  |         |                            |
  1050  |             R = R + 2;  |      2  |                         0  |
  1055  |  resetPlaceHolder_2();  |         |                            |
  1061  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_2();  |         |                            |
  1072  |             R = R + 2;  |      2  |                         0  |
  1077  |  resetPlaceHolder_2();  |         |                            |
  1083  |             R = R + 2;  |      2  |                         0  |
  1088  |  resetPlaceHolder_2();  |         |                            |
  1094  |             R = R + 2;  |      2  |                         0  |
  1099  |  resetPlaceHolder_2();  |         |                            |
  1105  |             R = R + 2;  |      2  |                         0  |
  1110  |  resetPlaceHolder_2();  |         |                            |
  1116  |             R = R + 2;  |      2  |                         0  |
  1121  |  resetPlaceHolder_2();  |         |                            |
  1127  |             R = R + 2;  |      2  |                         0  |
  1132  |  resetPlaceHolder_2();  |         |                            |
  1138  |             R = R + 2;  |      2  |                         0  |
  1143  |  resetPlaceHolder_2();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1154  |  resetPlaceHolder_2();  |         |                            |
  1160  |             R = R + 2;  |      2  |                         0  |
  1165  |  resetPlaceHolder_2();  |         |                            |
  1171  |             R = R + 2;  |      2  |                         0  |
  1176  |  resetPlaceHolder_2();  |         |                            |
  1182  |             R = R + 2;  |      2  |                         0  |
  1187  |  resetPlaceHolder_2();  |         |                            |
  1193  |             R = R + 2;  |      2  |                         0  |
  1198  |  resetPlaceHolder_2();  |         |                            |
  1204  |             R = R + 2;  |      2  |                         0  |
  1209  |  resetPlaceHolder_2();  |         |                            |
  1215  |             R = R + 2;  |      2  |                         0  |
  1220  |  resetPlaceHolder_2();  |         |                            |
  1226  |             R = R + 2;  |      2  |                         0  |
  1231  |  resetPlaceHolder_2();  |         |                            |
  1237  |             R = R + 1;  |      1  |                         0  |
  1242  |  resetPlaceHolder_1();  |         |                            |
  1256  |             R = R + 2;  |      2  |                         0  |
  1261  |  resetPlaceHolder_2();  |         |                            |
  1267  |             R = R + 2;  |      2  |                         0  |
  1272  |  resetPlaceHolder_2();  |         |                            |
  1278  |             R = R + 2;  |      2  |                         0  |
  1283  |  resetPlaceHolder_2();  |         |                            |
  1289  |             R = R + 2;  |      2  |                         0  |
  1294  |  resetPlaceHolder_2();  |         |                            |
  1300  |             R = R + 2;  |      2  |                         0  |
  1305  |  resetPlaceHolder_2();  |         |                            |
  1311  |             R = R + 2;  |      2  |                         0  |
  1316  |  resetPlaceHolder_2();  |         |                            |
  1322  |             R = R + 2;  |      2  |                         0  |
  1327  |  resetPlaceHolder_2();  |         |                            |
  1333  |             R = R + 2;  |      2  |                         0  |
  1338  |  resetPlaceHolder_2();  |         |                            |
  1344  |             R = R + 2;  |      2  |                         0  |
  1349  |  resetPlaceHolder_2();  |         |                            |
  1355  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_2();  |         |                            |
  1366  |             R = R + 2;  |      2  |                         0  |
  1371  |  resetPlaceHolder_2();  |         |                            |
  1377  |             R = R + 2;  |      2  |                         0  |
  1382  |  resetPlaceHolder_2();  |         |                            |
  1388  |             R = R + 2;  |      2  |                         0  |
  1393  |  resetPlaceHolder_2();  |         |                            |
  1399  |             R = R + 2;  |      2  |                         0  |
  1404  |  resetPlaceHolder_2();  |         |                            |
  1410  |             R = R + 2;  |      2  |                         0  |
  1415  |  resetPlaceHolder_2();  |         |                            |
  1421  |             R = R + 2;  |      2  |                         0  |
  1426  |  resetPlaceHolder_2();  |         |                            |
  1432  |             R = R + 2;  |      2  |                         0  |
  1437  |  resetPlaceHolder_2();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1448  |  resetPlaceHolder_2();  |         |                            |
  1454  |             R = R + 2;  |      2  |                         0  |
  1459  |  resetPlaceHolder_2();  |         |                            |
  1465  |             R = R + 2;  |      2  |                         0  |
  1470  |  resetPlaceHolder_2();  |         |                            |
  1476  |             R = R + 2;  |      2  |                         0  |
  1481  |  resetPlaceHolder_2();  |         |                            |
  1487  |             R = R + 2;  |      2  |                         0  |
  1492  |  resetPlaceHolder_2();  |         |                            |
  1498  |             R = R + 2;  |      2  |                         0  |
  1503  |  resetPlaceHolder_2();  |         |                            |
  1509  |             R = R + 2;  |      2  |                         0  |
  1514  |  resetPlaceHolder_2();  |         |                            |
  1520  |             R = R + 2;  |      2  |                         0  |
  1525  |  resetPlaceHolder_2();  |         |                            |
  1531  |             R = R + 2;  |      2  |                         0  |
  1536  |  resetPlaceHolder_2();  |         |                            |
  1542  |             R = R + 2;  |      2  |                         0  |
  1547  |  resetPlaceHolder_2();  |         |                            |
  1553  |             R = R + 2;  |      2  |                         0  |
  1558  |  resetPlaceHolder_2();  |         |                            |
  1564  |             R = R + 2;  |      2  |                         0  |
  1569  |  resetPlaceHolder_2();  |         |                            |
  1575  |             R = R + 2;  |      2  |                         0  |
  1580  |  resetPlaceHolder_2();  |         |                            |
  1586  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_2();  |         |                            |
  1597  |             R = R + 2;  |      2  |                         0  |
  1602  |  resetPlaceHolder_2();  |         |                            |
  1608  |             R = R + 2;  |      2  |                         0  |
  1613  |  resetPlaceHolder_2();  |         |                            |
  1619  |             R = R + 2;  |      2  |                         0  |
  1624  |  resetPlaceHolder_2();  |         |                            |
  1630  |             R = R + 2;  |      2  |                         0  |
  1635  |  resetPlaceHolder_2();  |         |                            |
  1641  |             R = R + 2;  |      2  |                         0  |
  1646  |  resetPlaceHolder_2();  |         |                            |
  1652  |             R = R + 2;  |      2  |                         0  |
  1657  |  resetPlaceHolder_2();  |         |                            |
  1663  |             R = R + 2;  |      2  |                         0  |
  1668  |  resetPlaceHolder_2();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1679  |  resetPlaceHolder_2();  |         |                            |
  1685  |             R = R + 2;  |      2  |                         0  |
  1690  |  resetPlaceHolder_2();  |         |                            |
  1696  |             R = R + 2;  |      2  |                         0  |
  1701  |  resetPlaceHolder_2();  |         |                            |
  1707  |             R = R + 2;  |      2  |                         0  |
  1712  |  resetPlaceHolder_2();  |         |                            |
  1718  |             R = R + 2;  |      2  |                         0  |
  1723  |  resetPlaceHolder_2();  |         |                            |
  1729  |             R = R + 2;  |      2  |                         0  |
  1734  |  resetPlaceHolder_2();  |         |                            |
  1740  |             R = R + 2;  |      2  |                         0  |
  1745  |  resetPlaceHolder_2();  |         |                            |
  1751  |             R = R + 2;  |      2  |                         0  |
  1756  |  resetPlaceHolder_2();  |         |                            |
  1762  |             R = R + 2;  |      2  |                         0  |
  1767  |  resetPlaceHolder_2();  |         |                            |
  1773  |             R = R + 2;  |      2  |                         0  |
  1778  |  resetPlaceHolder_2();  |         |                            |
  1784  |             R = R + 2;  |      2  |                         0  |
  1789  |  resetPlaceHolder_2();  |         |                            |
  1795  |             R = R + 2;  |      2  |                         0  |
  1800  |  resetPlaceHolder_2();  |         |                            |
  1806  |             R = R + 2;  |      2  |                         0  |
  1811  |  resetPlaceHolder_2();  |         |                            |
  1817  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_2();  |         |                            |
  1828  |             R = R + 2;  |      2  |                         0  |
  1833  |  resetPlaceHolder_2();  |         |                            |
  1839  |             R = R + 2;  |      2  |                         0  |
  1844  |  resetPlaceHolder_2();  |         |                            |
  1850  |             R = R + 2;  |      2  |                         0  |
  1855  |  resetPlaceHolder_2();  |         |                            |
  1861  |             R = R + 2;  |      2  |                         0  |
  1866  |  resetPlaceHolder_2();  |         |                            |
  1872  |             R = R + 2;  |      2  |                         0  |
  1877  |  resetPlaceHolder_2();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1888  |  resetPlaceHolder_2();  |         |                            |
  1894  |             R = R + 2;  |      2  |                         0  |
  1899  |  resetPlaceHolder_2();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1910  |  resetPlaceHolder_2();  |         |                            |
  1916  |             R = R + 2;  |      2  |                         0  |
  1921  |  resetPlaceHolder_2();  |         |                            |
  1927  |             R = R + 2;  |      2  |                         0  |
  1932  |  resetPlaceHolder_2();  |         |                            |
  1938  |             R = R + 2;  |      2  |                         0  |
  1943  |  resetPlaceHolder_2();  |         |                            |
  1949  |             R = R + 2;  |      2  |                         0  |
  1954  |  resetPlaceHolder_2();  |         |                            |
  1960  |             R = R + 2;  |      2  |                         0  |
  1965  |  resetPlaceHolder_2();  |         |                            |
  1971  |             R = R + 2;  |      2  |                         0  |
  1976  |  resetPlaceHolder_2();  |         |                            |
  1982  |             R = R + 2;  |      2  |                         0  |
  1987  |  resetPlaceHolder_2();  |         |                            |
  1993  |             R = R + 2;  |      2  |                         0  |
  1998  |  resetPlaceHolder_2();  |         |                            |
  2004  |             R = R + 2;  |      2  |                         0  |
  2009  |  resetPlaceHolder_2();  |         |                            |
  2015  |             R = R + 2;  |      2  |                         0  |
  2020  |  resetPlaceHolder_2();  |         |                            |
  2026  |             R = R + 1;  |      1  |                         0  |
  2031  |  resetPlaceHolder_1();  |         |                            |
  2045  |             R = R + 2;  |      2  |                         0  |
  2050  |  resetPlaceHolder_2();  |         |                            |
  2056  |             R = R + 2;  |      2  |                         0  |
  2061  |  resetPlaceHolder_2();  |         |                            |
  2067  |             R = R + 2;  |      2  |                         0  |
  2072  |  resetPlaceHolder_2();  |         |                            |
  2078  |             R = R + 2;  |      2  |                         0  |
  2083  |  resetPlaceHolder_2();  |         |                            |
  2089  |             R = R + 2;  |      2  |                         0  |
  2094  |  resetPlaceHolder_2();  |         |                            |
  2100  |             R = R + 2;  |      2  |                         0  |
  2105  |  resetPlaceHolder_2();  |         |                            |
  2111  |             R = R + 2;  |      2  |                         0  |
  2116  |  resetPlaceHolder_2();  |         |                            |
  2122  |             R = R + 2;  |      2  |                         0  |
  2127  |  resetPlaceHolder_2();  |         |                            |
  2133  |             R = R + 2;  |      2  |                         0  |
  2138  |  resetPlaceHolder_2();  |         |                            |
  2144  |             R = R + 2;  |      2  |                         0  |
  2149  |  resetPlaceHolder_2();  |         |                            |
  2155  |             R = R + 2;  |      2  |                         0  |
  2160  |  resetPlaceHolder_2();  |         |                            |
  2166  |             R = R + 2;  |      2  |                         0  |
  2171  |  resetPlaceHolder_2();  |         |                            |
  2177  |             R = R + 2;  |      2  |                         0  |
  2182  |  resetPlaceHolder_2();  |         |                            |
  2188  |             R = R + 2;  |      2  |                         0  |
  2193  |  resetPlaceHolder_2();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2204  |  resetPlaceHolder_2();  |         |                            |
  2210  |             R = R + 2;  |      2  |                         0  |
  2215  |  resetPlaceHolder_2();  |         |                            |
  2221  |             R = R + 2;  |      2  |                         0  |
  2226  |  resetPlaceHolder_2();  |         |                            |
  2232  |             R = R + 2;  |      2  |                         0  |
  2237  |  resetPlaceHolder_2();  |         |                            |
  2243  |             R = R + 2;  |      2  |                         0  |
  2248  |  resetPlaceHolder_2();  |         |                            |
  2254  |             R = R + 2;  |      2  |                         0  |
  2259  |  resetPlaceHolder_2();  |         |                            |
  2265  |             R = R + 2;  |      2  |                         0  |
  2270  |  resetPlaceHolder_2();  |         |                            |
  2276  |             R = R + 2;  |      2  |                         0  |
  2281  |  resetPlaceHolder_2();  |         |                            |
  2287  |             R = R + 2;  |      2  |                         0  |
  2292  |  resetPlaceHolder_2();  |         |                            |
  2298  |             R = R + 2;  |      2  |                         0  |
  2303  |  resetPlaceHolder_2();  |         |                            |
  2309  |             R = R + 2;  |      2  |                         0  |
  2314  |  resetPlaceHolder_2();  |         |                            |
  2320  |             R = R + 2;  |      2  |                         0  |
  2325  |  resetPlaceHolder_2();  |         |                            |
  2331  |             R = R + 2;  |      2  |                         0  |
  2336  |  resetPlaceHolder_2();  |         |                            |
  2342  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_2();  |         |                            |
  2353  |             R = R + 2;  |      2  |                         0  |
  2358  |  resetPlaceHolder_2();  |         |                            |
  2364  |             R = R + 2;  |      2  |                         0  |
  2369  |  resetPlaceHolder_2();  |         |                            |
  2375  |             R = R + 2;  |      2  |                         0  |
  2380  |  resetPlaceHolder_2();  |         |                            |
  2386  |             R = R + 2;  |      2  |                         0  |
  2391  |  resetPlaceHolder_2();  |         |                            |
  2397  |             R = R + 2;  |      2  |                         0  |
  2402  |  resetPlaceHolder_2();  |         |                            |
  2408  |             R = R + 2;  |      2  |                         0  |
  2413  |  resetPlaceHolder_2();  |         |                            |
  2419  |             R = R + 2;  |      2  |                         0  |
  2424  |  resetPlaceHolder_2();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2435  |  resetPlaceHolder_2();  |         |                            |
  2441  |             R = R + 2;  |      2  |                         0  |
  2446  |  resetPlaceHolder_2();  |         |                            |
  2452  |             R = R + 2;  |      2  |                         0  |
  2457  |  resetPlaceHolder_2();  |         |                            |
  2463  |             R = R + 2;  |      2  |                         0  |
  2468  |  resetPlaceHolder_2();  |         |                            |
  2474  |             R = R + 2;  |      2  |                         0  |
  2479  |  resetPlaceHolder_2();  |         |                            |
  2485  |             R = R + 2;  |      2  |                         0  |
  2490  |  resetPlaceHolder_2();  |         |                            |
  2496  |             R = R + 2;  |      2  |                         0  |
  2501  |  resetPlaceHolder_2();  |         |                            |
  2507  |             R = R + 2;  |      2  |                         0  |
  2512  |  resetPlaceHolder_2();  |         |                            |
  2518  |             R = R + 2;  |      2  |                         0  |
  2523  |  resetPlaceHolder_2();  |         |                            |
  2529  |             R = R + 2;  |      2  |                         0  |
  2534  |  resetPlaceHolder_2();  |         |                            |
  2540  |             R = R + 2;  |      2  |                         0  |
  2545  |  resetPlaceHolder_2();  |         |                            |
  2551  |             R = R + 2;  |      2  |                         0  |
  2556  |  resetPlaceHolder_2();  |         |                            |
  2562  |             R = R + 2;  |      2  |                         0  |
  2567  |  resetPlaceHolder_2();  |         |                            |
  2573  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_2();  |         |                            |
  2584  |             R = R + 2;  |      2  |                         0  |
  2589  |  resetPlaceHolder_2();  |         |                            |
  2595  |             R = R + 2;  |      2  |                         0  |
  2600  |  resetPlaceHolder_2();  |         |                            |
  2606  |             R = R + 2;  |      2  |                         0  |
  2611  |  resetPlaceHolder_2();  |         |                            |
  2617  |             R = R + 2;  |      2  |                         0  |
  2622  |  resetPlaceHolder_2();  |         |                            |
  2628  |             R = R + 2;  |      2  |                         0  |
  2633  |  resetPlaceHolder_2();  |         |                            |
  2639  |             R = R + 2;  |      2  |                         0  |
  2644  |  resetPlaceHolder_2();  |         |                            |
  2650  |             R = R + 2;  |      2  |                         0  |
  2655  |  resetPlaceHolder_2();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2666  |  resetPlaceHolder_2();  |         |                            |
  2672  |             R = R + 2;  |      2  |                         0  |
  2677  |  resetPlaceHolder_2();  |         |                            |
  2683  |             R = R + 2;  |      2  |                         0  |
  2688  |  resetPlaceHolder_2();  |         |                            |
  2694  |             R = R + 2;  |      2  |                         0  |
  2699  |  resetPlaceHolder_2();  |         |                            |
  2705  |             R = R + 2;  |      2  |                         0  |
  2710  |  resetPlaceHolder_2();  |         |                            |
  2716  |             R = R + 2;  |      2  |                         0  |
  2721  |  resetPlaceHolder_2();  |         |                            |
  2727  |             R = R + 2;  |      2  |                         0  |
  2732  |  resetPlaceHolder_2();  |         |                            |
  2738  |             R = R + 2;  |      2  |                         0  |
  2743  |  resetPlaceHolder_2();  |         |                            |
  2749  |             R = R + 2;  |      2  |                         0  |
  2754  |  resetPlaceHolder_2();  |         |                            |
  2760  |             R = R + 2;  |      2  |                         0  |
  2765  |  resetPlaceHolder_2();  |         |                            |
  2771  |             R = R + 2;  |      2  |                         0  |
  2776  |  resetPlaceHolder_2();  |         |                            |
  2782  |             R = R + 2;  |      2  |                         0  |
  2787  |  resetPlaceHolder_2();  |         |                            |
  2793  |             R = R + 2;  |      2  |                         0  |
  2798  |  resetPlaceHolder_2();  |         |                            |
  2804  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_2();  |         |                            |
  2815  |             R = R + 2;  |      2  |                         0  |
  2820  |  resetPlaceHolder_2();  |         |                            |
  2826  |             R = R + 2;  |      2  |                         0  |
  2831  |  resetPlaceHolder_2();  |         |                            |
  2837  |             R = R + 2;  |      2  |                         0  |
  2842  |  resetPlaceHolder_2();  |         |                            |
  2848  |             R = R + 1;  |      1  |                         0  |
  2853  |  resetPlaceHolder_1();  |         |                            |
  2867  |             R = R + 2;  |      2  |                         0  |
  2872  |  resetPlaceHolder_2();  |         |                            |
  2878  |             R = R + 2;  |      2  |                         0  |
  2883  |  resetPlaceHolder_2();  |         |                            |
  2889  |             R = R + 2;  |      2  |                         0  |
  2894  |  resetPlaceHolder_2();  |         |                            |
  2900  |             R = R + 2;  |      2  |                         0  |
  2905  |  resetPlaceHolder_2();  |         |                            |
  2911  |             R = R + 2;  |      2  |                         0  |
  2916  |  resetPlaceHolder_2();  |         |                            |
  2922  |             R = R + 2;  |      2  |                         0  |
  2927  |  resetPlaceHolder_2();  |         |                            |
  2933  |             R = R + 2;  |      2  |                         0  |
  2938  |  resetPlaceHolder_2();  |         |                            |
  2944  |             R = R + 2;  |      2  |                         0  |
  2949  |  resetPlaceHolder_2();  |         |                            |
  2955  |             R = R + 2;  |      2  |                         0  |
  2960  |  resetPlaceHolder_2();  |         |                            |
  2966  |             R = R + 2;  |      2  |                         0  |
  2971  |  resetPlaceHolder_2();  |         |                            |
  2977  |             R = R + 2;  |      2  |                         0  |
  2982  |  resetPlaceHolder_2();  |         |                            |
  2988  |             R = R + 2;  |      2  |                         0  |
  2993  |  resetPlaceHolder_2();  |         |                            |
  2999  |             R = R + 2;  |      2  |                         0  |
  3004  |  resetPlaceHolder_2();  |         |                            |
  3010  |             R = R + 2;  |      2  |                         0  |
  3015  |  resetPlaceHolder_2();  |         |                            |
  3021  |             R = R + 2;  |      2  |                         0  |
  3026  |  resetPlaceHolder_2();  |         |                            |
  3032  |             R = R + 2;  |      2  |                         0  |
  3037  |  resetPlaceHolder_2();  |         |                            |
  3043  |             R = R + 2;  |      2  |                         0  |
  3048  |  resetPlaceHolder_2();  |         |                            |
  3054  |             R = R + 2;  |      2  |                         0  |
  3059  |  resetPlaceHolder_2();  |         |                            |
  3065  |             R = R + 2;  |      2  |                         0  |
  3070  |  resetPlaceHolder_2();  |         |                            |
  3076  |             R = R + 2;  |      2  |                         0  |
  3081  |  resetPlaceHolder_2();  |         |                            |
  3087  |             R = R + 2;  |      2  |                         0  |
  3092  |  resetPlaceHolder_2();  |         |                            |
  3098  |             R = R + 2;  |      2  |                         0  |
  3103  |  resetPlaceHolder_2();  |         |                            |
  3109  |             R = R + 2;  |      2  |                         0  |
  3114  |  resetPlaceHolder_2();  |         |                            |
  3120  |             R = R + 2;  |      2  |                         0  |
  3125  |  resetPlaceHolder_2();  |         |                            |
  3131  |             R = R + 2;  |      2  |                         0  |
  3136  |  resetPlaceHolder_2();  |         |                            |
  3142  |             R = R + 2;  |      2  |                         0  |
  3147  |  resetPlaceHolder_2();  |         |                            |
  3153  |             R = R + 2;  |      2  |                         0  |
  3158  |  resetPlaceHolder_2();  |         |                            |
  3164  |             R = R + 2;  |      2  |                         0  |
  3169  |  resetPlaceHolder_2();  |         |                            |
  3175  |             R = R + 2;  |      2  |                         0  |
  3180  |  resetPlaceHolder_2();  |         |                            |
  3186  |             R = R + 2;  |      2  |                         0  |
  3191  |  resetPlaceHolder_2();  |         |                            |
  3197  |             R = R + 2;  |      2  |                         0  |
  3202  |  resetPlaceHolder_2();  |         |                            |
  3208  |             R = R + 2;  |      2  |                         0  |
  3213  |  resetPlaceHolder_2();  |         |                            |
  3219  |             R = R + 2;  |      2  |                         0  |
  3224  |  resetPlaceHolder_2();  |         |                            |
  3230  |             R = R + 2;  |      2  |                         0  |
  3235  |  resetPlaceHolder_2();  |         |                            |
  3241  |             R = R + 2;  |      2  |                         0  |
  3246  |  resetPlaceHolder_2();  |         |                            |
  3252  |             R = R + 2;  |      2  |                         0  |
  3257  |  resetPlaceHolder_2();  |         |                            |
  3263  |             R = R + 2;  |      2  |                         0  |
  3268  |  resetPlaceHolder_2();  |         |                            |
  3274  |             R = R + 2;  |      2  |                         0  |
  3279  |  resetPlaceHolder_2();  |         |                            |
  3285  |             R = R + 2;  |      2  |                         0  |
  3290  |  resetPlaceHolder_2();  |         |                            |
  3296  |             R = R + 2;  |      2  |                         0  |
  3301  |  resetPlaceHolder_2();  |         |                            |
  3307  |             R = R + 2;  |      2  |                         0  |
  3312  |  resetPlaceHolder_2();  |         |                            |
  3318  |             R = R + 2;  |      2  |                         0  |
  3323  |  resetPlaceHolder_2();  |         |                            |
  3329  |             R = R + 2;  |      2  |                         0  |
  3334  |  resetPlaceHolder_2();  |         |                            |
  3340  |             R = R + 2;  |      2  |                         0  |
  3345  |  resetPlaceHolder_2();  |         |                            |
  3351  |             R = R + 2;  |      2  |                         0  |
  3356  |  resetPlaceHolder_2();  |         |                            |
  3362  |             R = R + 2;  |      2  |                         0  |
  3367  |  resetPlaceHolder_2();  |         |                            |
  3373  |             R = R + 2;  |      2  |                         0  |
  3378  |  resetPlaceHolder_2();  |         |                            |
  3384  |             R = R + 2;  |      2  |                         0  |
  3389  |  resetPlaceHolder_2();  |         |                            |
  3395  |             R = R + 2;  |      2  |                         0  |
  3400  |  resetPlaceHolder_2();  |         |                            |
  3406  |             R = R + 2;  |      2  |                         0  |
  3411  |  resetPlaceHolder_2();  |         |                            |
  3417  |             R = R + 2;  |      2  |                         0  |
  3422  |  resetPlaceHolder_2();  |         |                            |
  3428  |             R = R + 2;  |      2  |                         0  |
  3433  |  resetPlaceHolder_2();  |         |                            |
  3439  |             R = R + 2;  |      2  |                         0  |
  3444  |  resetPlaceHolder_2();  |         |                            |
  3450  |             R = R + 2;  |      2  |                         0  |
  3455  |  resetPlaceHolder_2();  |         |                            |
  3461  |             R = R + 2;  |      2  |                         0  |
  3466  |  resetPlaceHolder_2();  |         |                            |
  3472  |             R = R + 2;  |      2  |                         0  |
  3477  |  resetPlaceHolder_2();  |         |                            |
  3483  |             R = R + 2;  |      2  |                         0  |
  3488  |  resetPlaceHolder_2();  |         |                            |
  3494  |             R = R + 2;  |      2  |                         0  |
  3499  |  resetPlaceHolder_2();  |         |                            |
  3505  |             R = R + 2;  |      2  |                         0  |
  3510  |  resetPlaceHolder_2();  |         |                            |
  3516  |             R = R + 2;  |      2  |                         0  |
  3521  |  resetPlaceHolder_2();  |         |                            |
  3527  |             R = R + 2;  |      2  |                         0  |
  3532  |  resetPlaceHolder_2();  |         |                            |
  3538  |             R = R + 2;  |      2  |                         0  |
  3543  |  resetPlaceHolder_2();  |         |                            |
  3549  |             R = R + 2;  |      2  |                         0  |
  3554  |  resetPlaceHolder_2();  |         |                            |
  3560  |             R = R + 2;  |      2  |                         0  |
  3565  |  resetPlaceHolder_2();  |         |                            |
  3571  |             R = R + 2;  |      2  |                         0  |
  3576  |  resetPlaceHolder_2();  |         |                            |
  3582  |             R = R + 2;  |      2  |                         0  |
  3587  |  resetPlaceHolder_2();  |         |                            |
  3593  |             R = R + 2;  |      2  |                         0  |
  3598  |  resetPlaceHolder_2();  |         |                            |
  3604  |             R = R + 2;  |      2  |                         0  |
  3609  |  resetPlaceHolder_2();  |         |                            |
  3615  |             R = R + 2;  |      2  |                         0  |
  3620  |  resetPlaceHolder_2();  |         |                            |
  3626  |             R = R + 2;  |      2  |                         0  |
  3631  |  resetPlaceHolder_2();  |         |                            |
  3637  |             R = R + 2;  |      2  |                         0  |
  3642  |  resetPlaceHolder_2();  |         |                            |
  3648  |             R = R + 2;  |      2  |                         0  |
  3653  |  resetPlaceHolder_2();  |         |                            |
  3659  |             R = R + 2;  |      2  |                         0  |
  3664  |  resetPlaceHolder_2();  |         |                            |
  3670  |             R = R + 2;  |      2  |                         0  |
  3675  |  resetPlaceHolder_2();  |         |                            |
  3681  |             R = R + 2;  |      2  |                         0  |
  3686  |  resetPlaceHolder_2();  |         |                            |
  3692  |             R = R + 2;  |      2  |                         0  |
  3697  |  resetPlaceHolder_2();  |         |                            |
  3703  |             R = R + 2;  |      2  |                         0  |
  3708  |  resetPlaceHolder_2();  |         |                            |
  3714  |             R = R + 2;  |      2  |                         0  |
  3719  |  resetPlaceHolder_2();  |         |                            |
  3725  |             R = R + 2;  |      2  |                         0  |
  3730  |  resetPlaceHolder_2();  |         |                            |
  3736  |             R = R + 2;  |      2  |                         0  |
  3741  |  resetPlaceHolder_2();  |         |                            |
  3747  |             R = R + 2;  |      2  |                         0  |
  3752  |  resetPlaceHolder_2();  |         |                            |
  3758  |             R = R + 1;  |      1  |                         0  |
  3763  |  resetPlaceHolder_1();  |         |                            |
  3777  |             R = R + 2;  |      2  |                         0  |
  3782  |  resetPlaceHolder_2();  |         |                            |
  3788  |             R = R + 2;  |      2  |                         0  |
  3793  |  resetPlaceHolder_2();  |         |                            |
  3799  |             R = R + 2;  |      2  |                         0  |
  3804  |  resetPlaceHolder_2();  |         |                            |
  3810  |             R = R + 2;  |      2  |                         0  |
  3815  |  resetPlaceHolder_2();  |         |                            |
  3821  |             R = R + 2;  |      2  |                         0  |
  3826  |  resetPlaceHolder_2();  |         |                            |
  3832  |             R = R + 2;  |      2  |                         0  |
  3837  |  resetPlaceHolder_2();  |         |                            |
  3843  |             R = R + 2;  |      2  |                         0  |
  3848  |  resetPlaceHolder_2();  |         |                            |
  3854  |             R = R + 2;  |      2  |                         0  |
  3859  |  resetPlaceHolder_2();  |         |                            |
  3865  |             R = R + 2;  |      2  |                         0  |
  3870  |  resetPlaceHolder_2();  |         |                            |
  3876  |             R = R + 2;  |      2  |                         0  |
  3881  |  resetPlaceHolder_2();  |         |                            |
  3887  |             R = R + 2;  |      2  |                         0  |
  3892  |  resetPlaceHolder_2();  |         |                            |
  3898  |             R = R + 2;  |      2  |                         0  |
  3903  |  resetPlaceHolder_2();  |         |                            |
  3909  |             R = R + 2;  |      2  |                         0  |
  3914  |  resetPlaceHolder_2();  |         |                            |
  3920  |             R = R + 2;  |      2  |                         0  |
  3925  |  resetPlaceHolder_2();  |         |                            |
  3931  |             R = R + 2;  |      2  |                         0  |
  3936  |  resetPlaceHolder_2();  |         |                            |
  3942  |             R = R + 2;  |      2  |                         0  |
  3947  |  resetPlaceHolder_2();  |         |                            |
  3953  |             R = R + 2;  |      2  |                         0  |
  3958  |  resetPlaceHolder_2();  |         |                            |
  3964  |             R = R + 2;  |      2  |                         0  |
  3969  |  resetPlaceHolder_2();  |         |                            |
  3975  |             R = R + 2;  |      2  |                         0  |
  3980  |  resetPlaceHolder_2();  |         |                            |
  3986  |             R = R + 2;  |      2  |                         0  |
  3991  |  resetPlaceHolder_2();  |         |                            |
  3997  |             R = R + 2;  |      2  |                         0  |
  4002  |  resetPlaceHolder_2();  |         |                            |
  4008  |             R = R + 2;  |      2  |                         0  |
  4013  |  resetPlaceHolder_2();  |         |                            |
  4019  |             R = R + 2;  |      2  |                         0  |
  4024  |  resetPlaceHolder_2();  |         |                            |
  4030  |             R = R + 2;  |      2  |                         0  |
  4035  |  resetPlaceHolder_2();  |         |                            |
  4041  |             R = R + 2;  |      2  |                         0  |
  4046  |  resetPlaceHolder_2();  |         |                            |
  4052  |             R = R + 2;  |      2  |                         0  |
  4057  |  resetPlaceHolder_2();  |         |                            |
  4063  |             R = R + 2;  |      2  |                         0  |
  4068  |  resetPlaceHolder_2();  |         |                            |
  4074  |             R = R + 2;  |      2  |                         0  |
  4079  |  resetPlaceHolder_2();  |         |                            |
  4085  |             R = R + 2;  |      2  |                         0  |
  4090  |  resetPlaceHolder_2();  |         |                            |
  4096  |             R = R + 2;  |      2  |                         0  |
  4101  |  resetPlaceHolder_2();  |         |                            |
  4107  |             R = R + 2;  |      2  |                         0  |
  4112  |  resetPlaceHolder_2();  |         |                            |
  4118  |             R = R + 2;  |      2  |                         0  |
  4123  |  resetPlaceHolder_2();  |         |                            |
  4129  |             R = R + 2;  |      2  |                         0  |
  4134  |  resetPlaceHolder_2();  |         |                            |
  4140  |             R = R + 2;  |      2  |                         0  |
  4145  |  resetPlaceHolder_2();  |         |                            |
  4151  |             R = R + 2;  |      2  |                         0  |
  4156  |  resetPlaceHolder_2();  |         |                            |
  4162  |             R = R + 2;  |      2  |                         0  |
  4167  |  resetPlaceHolder_2();  |         |                            |
  4173  |             R = R + 2;  |      2  |                         0  |
  4178  |  resetPlaceHolder_2();  |         |                            |
  4184  |             R = R + 2;  |      2  |                         0  |
  4189  |  resetPlaceHolder_2();  |         |                            |
  4195  |             R = R + 2;  |      2  |                         0  |
  4200  |  resetPlaceHolder_2();  |         |                            |
  4206  |             R = R + 2;  |      2  |                         0  |
  4211  |  resetPlaceHolder_2();  |         |                            |
  4217  |             R = R + 2;  |      2  |                         0  |
  4222  |  resetPlaceHolder_2();  |         |                            |
  4228  |             R = R + 2;  |      2  |                         0  |
  4233  |  resetPlaceHolder_2();  |         |                            |
  4239  |             R = R + 2;  |      2  |                         0  |
  4244  |  resetPlaceHolder_2();  |         |                            |
  4250  |             R = R + 2;  |      2  |                         0  |
  4255  |  resetPlaceHolder_2();  |         |                            |
  4261  |             R = R + 1;  |      1  |                         0  |
  4266  |  resetPlaceHolder_1();  |         |                            |
  4280  |             R = R + 2;  |      2  |                         0  |
  4285  |  resetPlaceHolder_2();  |         |                            |
  4291  |             R = R + 2;  |      2  |                         0  |
  4296  |  resetPlaceHolder_2();  |         |                            |
  4302  |             R = R + 2;  |      2  |                         0  |
  4307  |  resetPlaceHolder_2();  |         |                            |
  4313  |             R = R + 2;  |      2  |                         0  |
  4318  |  resetPlaceHolder_2();  |         |                            |
  4324  |             R = R + 2;  |      2  |                         0  |
  4329  |  resetPlaceHolder_2();  |         |                            |
  4335  |             R = R + 2;  |      2  |                         0  |
  4340  |  resetPlaceHolder_2();  |         |                            |
  4346  |             R = R + 2;  |      2  |                         0  |
  4351  |  resetPlaceHolder_2();  |         |                            |
  4357  |             R = R + 2;  |      2  |                         0  |
  4362  |  resetPlaceHolder_2();  |         |                            |
  4368  |             R = R + 2;  |      2  |                         0  |
  4373  |  resetPlaceHolder_2();  |         |                            |
  4379  |             R = R + 2;  |      2  |                         0  |
  4384  |  resetPlaceHolder_2();  |         |                            |
  4390  |             R = R + 2;  |      2  |                         0  |
  4395  |  resetPlaceHolder_2();  |         |                            |
  4401  |             R = R + 2;  |      2  |                         0  |
  4406  |  resetPlaceHolder_2();  |         |                            |
  4412  |             R = R + 2;  |      2  |                         0  |
  4417  |  resetPlaceHolder_2();  |         |                            |
  4423  |             R = R + 2;  |      2  |                         0  |
  4428  |  resetPlaceHolder_2();  |         |                            |
  4434  |             R = R + 2;  |      2  |                         0  |
  4439  |  resetPlaceHolder_2();  |         |                            |
  4445  |             R = R + 2;  |      2  |                         0  |
  4450  |  resetPlaceHolder_2();  |         |                            |
  4456  |             R = R + 2;  |      2  |                         0  |
  4461  |  resetPlaceHolder_2();  |         |                            |
  4467  |             R = R + 2;  |      2  |                         0  |
  4472  |  resetPlaceHolder_2();  |         |                            |
  4478  |             R = R + 2;  |      2  |                         0  |
  4483  |  resetPlaceHolder_2();  |         |                            |
  4489  |             R = R + 2;  |      2  |                         0  |
  4494  |  resetPlaceHolder_2();  |         |                            |
  4500  |             R = R + 2;  |      2  |                         0  |
  4505  |  resetPlaceHolder_2();  |         |                            |
  4511  |             R = R + 2;  |      2  |                         0  |
  4516  |  resetPlaceHolder_2();  |         |                            |
  4522  |             R = R + 2;  |      2  |                         0  |
  4527  |  resetPlaceHolder_2();  |         |                            |
  4533  |             R = R + 2;  |      2  |                         0  |
  4538  |  resetPlaceHolder_2();  |         |                            |
  4544  |             R = R + 2;  |      2  |                         0  |
  4549  |  resetPlaceHolder_2();  |         |                            |
  4555  |             R = R + 2;  |      2  |                         0  |
  4560  |  resetPlaceHolder_2();  |         |                            |
  4566  |             R = R + 2;  |      2  |                         0  |
  4571  |  resetPlaceHolder_2();  |         |                            |
  4577  |             R = R + 2;  |      2  |                         0  |
  4582  |  resetPlaceHolder_2();  |         |                            |
  4588  |             R = R + 2;  |      2  |                         0  |
  4593  |  resetPlaceHolder_2();  |         |                            |
  4599  |             R = R + 2;  |      2  |                         0  |
  4604  |  resetPlaceHolder_2();  |         |                            |
  4610  |             R = R + 2;  |      2  |                         0  |
  4615  |  resetPlaceHolder_2();  |         |                            |
  4621  |             R = R + 2;  |      2  |                         0  |
  4626  |  resetPlaceHolder_2();  |         |                            |
  4632  |             R = R + 2;  |      2  |                         0  |
  4637  |  resetPlaceHolder_2();  |         |                            |
  4643  |             R = R + 2;  |      2  |                         0  |
  4648  |  resetPlaceHolder_2();  |         |                            |
  4654  |             R = R + 2;  |      2  |                         0  |
  4659  |  resetPlaceHolder_2();  |         |                            |
  4665  |             R = R + 2;  |      2  |                         0  |
  4670  |  resetPlaceHolder_2();  |         |                            |
  4676  |             R = R + 2;  |      2  |                         0  |
  4681  |  resetPlaceHolder_2();  |         |                            |
  4687  |             R = R + 2;  |      2  |                         0  |
  4692  |  resetPlaceHolder_2();  |         |                            |
  4698  |             R = R + 2;  |      2  |                         0  |
  4703  |  resetPlaceHolder_2();  |         |                            |
  4709  |             R = R + 2;  |      2  |                         0  |
  4714  |  resetPlaceHolder_2();  |         |                            |
  4720  |             R = R + 2;  |      2  |                         0  |
  4725  |  resetPlaceHolder_2();  |         |                            |
  4731  |             R = R + 2;  |      2  |                         0  |
  4736  |  resetPlaceHolder_2();  |         |                            |
  4742  |             R = R + 2;  |      2  |                         0  |
  4747  |  resetPlaceHolder_2();  |         |                            |
  4753  |             R = R + 2;  |      2  |                         0  |
  4758  |  resetPlaceHolder_2();  |         |                            |
  4764  |             R = R + 2;  |      2  |                         0  |
  4769  |  resetPlaceHolder_2();  |         |                            |
  4775  |             R = R + 2;  |      2  |                         0  |
  4780  |  resetPlaceHolder_2();  |         |                            |
  4786  |             R = R + 2;  |      2  |                         0  |
  4791  |  resetPlaceHolder_2();  |         |                            |
  4797  |             R = R + 2;  |      2  |                         0  |
  4802  |  resetPlaceHolder_2();  |         |                            |
  4808  |             R = R + 2;  |      2  |                         0  |
  4813  |  resetPlaceHolder_2();  |         |                            |
  4819  |             R = R + 2;  |      2  |                         0  |
  4824  |  resetPlaceHolder_2();  |         |                            |
  4830  |             R = R + 2;  |      2  |                         0  |
  4835  |  resetPlaceHolder_2();  |         |                            |
  4841  |             R = R + 2;  |      2  |                         0  |
  4846  |  resetPlaceHolder_2();  |         |                            |
  4852  |             R = R + 2;  |      2  |                         0  |
  4857  |  resetPlaceHolder_2();  |         |                            |
  4863  |             R = R + 2;  |      2  |                         0  |
  4868  |  resetPlaceHolder_2();  |         |                            |
  4874  |             R = R + 2;  |      2  |                         0  |
  4879  |  resetPlaceHolder_2();  |         |                            |
  4885  |             R = R + 2;  |      2  |                         0  |
  4890  |  resetPlaceHolder_2();  |         |                            |
  4896  |             R = R + 2;  |      2  |                         0  |
  4901  |  resetPlaceHolder_2();  |         |                            |
  4907  |             R = R + 2;  |      2  |                         0  |
  4912  |  resetPlaceHolder_2();  |         |                            |
  4918  |             R = R + 2;  |      2  |                         0  |
  4923  |  resetPlaceHolder_2();  |         |                            |
  4929  |             R = R + 2;  |      2  |                         0  |
  4934  |  resetPlaceHolder_2();  |         |                            |
  4940  |             R = R + 2;  |      2  |                         0  |
  4945  |  resetPlaceHolder_2();  |         |                            |
  4951  |             R = R + 2;  |      2  |                         0  |
  4956  |  resetPlaceHolder_2();  |         |                            |
  4962  |             R = R + 2;  |      2  |                         0  |
  4967  |  resetPlaceHolder_2();  |         |                            |
  4973  |             R = R + 2;  |      2  |                         0  |
  4978  |  resetPlaceHolder_2();  |         |                            |
  4984  |             R = R + 2;  |      2  |                         0  |
  4989  |  resetPlaceHolder_2();  |         |                            |
  4995  |             R = R + 2;  |      2  |                         0  |
  5000  |  resetPlaceHolder_2();  |         |                            |
  5006  |             R = R + 2;  |      2  |                         0  |
  5011  |  resetPlaceHolder_2();  |         |                            |
  5017  |             R = R + 2;  |      2  |                         0  |
  5022  |  resetPlaceHolder_2();  |         |                            |
  5028  |             R = R + 2;  |      2  |                         0  |
  5033  |  resetPlaceHolder_2();  |         |                            |
  5039  |             R = R + 2;  |      2  |                         0  |
  5044  |  resetPlaceHolder_2();  |         |                            |
  5050  |             R = R + 2;  |      2  |                         0  |
  5055  |  resetPlaceHolder_2();  |         |                            |
  5061  |             R = R + 2;  |      2  |                         0  |
  5066  |  resetPlaceHolder_2();  |         |                            |
  5072  |             R = R + 2;  |      2  |                         0  |
  5077  |  resetPlaceHolder_2();  |         |                            |
  5083  |             R = R + 2;  |      2  |                         0  |
  5088  |  resetPlaceHolder_2();  |         |                            |
  5094  |             R = R + 2;  |      2  |                         0  |
  5099  |  resetPlaceHolder_2();  |         |                            |
  5105  |             R = R + 2;  |      2  |                         0  |
  5110  |  resetPlaceHolder_2();  |         |                            |
  5116  |             R = R + 2;  |      2  |                         0  |
  5121  |  resetPlaceHolder_2();  |         |                            |
  5127  |             R = R + 2;  |      2  |                         0  |
  5132  |  resetPlaceHolder_2();  |         |                            |
  5138  |             R = R + 2;  |      2  |                         0  |
  5143  |  resetPlaceHolder_2();  |         |                            |
  5149  |             R = R + 2;  |      2  |                         0  |
  5154  |  resetPlaceHolder_2();  |         |                            |
  5160  |             R = R + 2;  |      2  |                         0  |
  5165  |  resetPlaceHolder_2();  |         |                            |
  5171  |             R = R + 2;  |      2  |                         0  |
  5176  |  resetPlaceHolder_2();  |         |                            |
  5182  |             R = R + 2;  |      2  |                         0  |
  5187  |  resetPlaceHolder_2();  |         |                            |
  5193  |             R = R + 2;  |      2  |                         0  |
  5198  |  resetPlaceHolder_2();  |         |                            |
  5204  |             R = R + 2;  |      2  |                         0  |
  5209  |  resetPlaceHolder_2();  |         |                            |
  5215  |             R = R + 2;  |      2  |                         0  |
  5220  |  resetPlaceHolder_2();  |         |                            |
  5226  |             R = R + 1;  |      1  |                         0  |
  5231  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |      []  |
    10  |     return;  |         |  0  |      []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-30 19:33:17,322 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:33:29,866 INFO     Done. Execution time: 12.5436532497406 seconds
2023-01-30 19:33:29,867 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1933-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1933-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.536s
user	0m28.121s
sys	0m2.620s

2023-01-30 19:33:29,868 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-30 19:33:29,868 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:33:31,969 INFO     Done. Execution time: 2.1005845069885254 seconds
2023-01-30 19:33:31,969 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-30 19:33:31,969 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-30 19:33:31,969 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-30 19:33:34,077 INFO     Done. Execution time: 2.1072628498077393 seconds
2023-01-30 19:33:34,077 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-30 19:33:34,077 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:33:35,280 INFO     Done. Execution time: 1.2029666900634766 seconds
2023-01-30 19:33:35,281 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.195s
user	0m2.009s
sys	0m0.103s

2023-01-30 19:33:35,281 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-30 19:33:35,281 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:34:41,653 INFO     Done. Execution time: 66.37198281288147 seconds
2023-01-30 19:34:41,654 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz3534849597443907737/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3534849597443907737/bin -o /tmp/qfuzz3534849597443907737/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3534849597443907737/bin
Found file /tmp/qfuzz3534849597443907737/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz3534849597443907737/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3534849597443907737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3534849597443907737/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3534849597443907737/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3534849597443907737/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 127603 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [53.00]
4; /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 8, 20, 89, 91, 21, 46, 69, 89, 89, 91, 21, 46, 69, 89, 68, 10, 80, 79, 91, 70, 25, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 27, 18, 17, 36, 99, 4, 79, 22, 85, 70, 66, 43, 27, 75, 92, 99, 8, 13, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3534849597443907737/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_193441_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [51,70,8,20,89,91,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,27,18,17,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [51,70,74,81,44,86,18]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:34:41,654 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-30 19:34:41,654 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-30 19:34:47,611 INFO     Done. Execution time: 5.957144260406494 seconds
2023-01-30 19:34:47,612 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_193441_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_193441_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [51,70,8,20,89,91,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [51,70,74,81,44,86,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,27,18,17,36])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [4,4,4,27,18,17,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [51,70,8,20,89,91,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [51,70,74,81,44,86,18]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [4,4,4,27,18,17,36]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,27,18,17,36]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,27,18,17,36]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,27,18,17,36]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [4,4,4,27,18,17,36]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [4,4,4,27,18,17,36]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [4,4,4,27,18,17,36]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [4,4,4,27,18,17,36]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [4,4,4,27,18,17,36]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,27,18,17,36]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |       4  |  1  |         1  |        2  |    1  |      1  |  [4,4,4,27,18,17,36]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,27,18,17,36]  |
    59  |  appendTo = appendTo + (pos - l...  |         |  0  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,27,18,17,36]  |
    64  |          R = R + (pos - lastHold);  |      1  |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,27,18,17,36]  |
    65  |                             break;  |         |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [4,4,4,27,18,17,36]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                              
 Index  |          Commands           |  Costs  |  SegmentIDs in GroupID(0)  |
------------------------------------------------------------------------------
    64  |  R = R + (pos - lastHold);  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |        stopIndex        |
------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [51,70,8,20,89,91,21]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [51,70,8,20,89,91,21]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [51,70,8,20,89,91,21]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [51,70,8,20,89,91,21]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [51,70,8,20,89,91,21]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [51,70,8,20,89,91,21]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [51,70,8,20,89,91,21]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [51,70,8,20,89,91,21]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [51,70,8,20,89,91,21]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [51,70,8,20,89,91,21]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      70  |  1  |         1  |        2  |    1  |      1  |  [51,70,8,20,89,91,21]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      70  |  1  |         1  |        2  |    2  |      1  |  [51,70,8,20,89,91,21]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      70  |  2  |         1  |        2  |    2  |      1  |  [51,70,8,20,89,91,21]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      70  |  2  |         1  |        2  |    2  |      1  |  [51,70,8,20,89,91,21]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (pos - lastHold) -> R0 = R0 + (pos - lastHold);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-30 19:34:47,612 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:35:06,918 INFO     Done. Execution time: 19.30591583251953 seconds
2023-01-30 19:35:06,919 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `17.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1934-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1934-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.298s
user	0m35.300s
sys	0m4.137s

2023-01-30 19:35:06,919 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-30 19:35:06,919 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:36:13,501 INFO     Done. Execution time: 66.58144068717957 seconds
2023-01-30 19:36:13,501 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz3337664269649019952/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3337664269649019952/bin -o /tmp/qfuzz3337664269649019952/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3337664269649019952/bin
Found file /tmp/qfuzz3337664269649019952/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz3337664269649019952/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3337664269649019952/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3337664269649019952/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3337664269649019952/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3337664269649019952/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 133921 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3337664269649019952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3337664269649019952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3337664269649019952/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_193613_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 57, 2, 70
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:36:13,501 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-30 19:36:13,502 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-30 19:36:16,963 INFO     Done. Execution time: 3.461177110671997 seconds
2023-01-30 19:36:16,963 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_193613_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_193613_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(57, 2, 70)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 57
recursiveTypeIndexes: 2
d: 70
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |             57  |  70  |                     2  |
    32  |     return;  |         |  0  |             57  |  70  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-30 19:36:16,964 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:36:19,440 INFO     Done. Execution time: 2.4765238761901855 seconds
2023-01-30 19:36:19,441 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1936-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1936-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.467s
user	0m4.406s
sys	0m0.323s

2023-01-30 19:36:19,441 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-30 19:36:19,441 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:37:25,777 INFO     Done. Execution time: 66.33600330352783 seconds
2023-01-30 19:37:25,777 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz2116712637011711396/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2116712637011711396/bin -o /tmp/qfuzz2116712637011711396/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2116712637011711396/bin
Found file /tmp/qfuzz2116712637011711396/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz2116712637011711396/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2116712637011711396/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2116712637011711396/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2116712637011711396/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz2116712637011711396/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 133155 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz2116712637011711396/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_193725_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:37:25,778 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-30 19:37:25,778 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-30 19:37:31,782 INFO     Done. Execution time: 6.00401759147644 seconds
2023-01-30 19:37:31,782 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_193725_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_193725_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-30 19:37:31,782 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:37:40,343 INFO     Done. Execution time: 8.560551404953003 seconds
2023-01-30 19:37:40,344 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1937-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1937-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.553s
user	0m18.794s
sys	0m2.535s

2023-01-30 19:37:40,344 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-30 19:37:40,344 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:38:46,806 INFO     Done. Execution time: 66.46141910552979 seconds
2023-01-30 19:38:46,806 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6620833743287811310/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6620833743287811310/bin -o /tmp/qfuzz6620833743287811310/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6620833743287811310/bin
Found file /tmp/qfuzz6620833743287811310/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6620833743287811310/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6620833743287811310/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6620833743287811310/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6620833743287811310/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz6620833743287811310/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 107173 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m107k to 107k us (average: 107k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 80.00; [895.00,1035.00,1166.00,1415.00,1495.00,1635.00,1735.00]
2; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 7; 11.00; [95.00,106.00,155.00,195.00,875.00,1095.00,1335.00]
3; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 60.00; [615.00,975.00,1115.00,1175.00,1326.00,1555.00]
4; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 7; 20.00; [355.00,375.00,995.00,1155.00,1555.00,1795.00,1906.00]
11; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 7; 91.00; [235.00,375.00,466.00,1115.00,1435.00,1575.00,1715.00]
16; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 131.00; [275.00,455.00,895.00,1035.00,1166.00,1415.00,1735.00]
24; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 40.00; [15.00,415.00,506.00,1035.00,1495.00,1795.00,1835.00]
38; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 7; 100.00; [435.00,895.00,1015.00,1166.00,1495.00,1635.00,1735.00]
43; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 7; 140.00; [395.00,615.00,875.00,1095.00,1266.00,1495.00,1635.00]
54; /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 7; 200.00; [95.00,455.00,835.00,1035.00,1275.00,1726.00,1935.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 51, 22, 96, 4, 41, 63, 78, 52, 4, 5, 61, 31, 61, 45, 45, 34, 26, 63, 66, 10, 14, 19, 100, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 74, 81, 43, 30, 54, 19, 32, 32, 32, 32, 32, 49, 60, 82, 83, 49, 46, 16, 50, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 21, 50, 74, 81, 44, 86, 83, 4, 83, 20, 89, 91, 21, 46, 69, 97, 66, 22, 80, 88, 97, 94, 41, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24, 51, 74, 20, 89, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 13, 22, 44, 86, 18, 82, 68, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 71, 85, 11, 18, 55, 78, 19, 55, 32, 61, 74, 55, 11, 46, 43, 53, 5, 5, 41, 5, 69, 71, 76, 26, 71, 81, 33, 60, 54, 42, 25, 5, 41, 5, 55, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 49, 57, 18, 17, 77, 89, 89, 28, 32, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 48, 58, 55, 30, 55, 77, 47, 47, 66, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 20, 57, 93, 63, 84, 67, 60, 61, 76, 84, 12, 72)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 66, 7, 4, 9, 54, 43, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6620833743287811310/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_193846_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [85,51,22,96,4,41,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [62,74,81,43,30,54,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,21,50,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24,51,74,20,89,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,13,22,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,71,85,11,18,55,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [94,49,57,18,17,77,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,48,58,55,30,55,77]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,66,7,4,9,54,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:38:46,806 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-30 19:38:46,806 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-30 19:38:59,931 INFO     Done. Execution time: 13.124116659164429 seconds
2023-01-30 19:38:59,931 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_193846_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_193846_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([85,51,22,96,4,41,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([62,74,81,43,30,54,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,21,50,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24,51,74,20,89,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,13,22,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,71,85,11,18,55,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([94,49,57,18,17,77,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,48,58,55,30,55,77])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,66,7,4,9,54,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [85,51,22,96,4,41,63]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [62,74,81,43,30,54,19]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [57,21,50,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [24,51,74,20,89,91]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [57,51,70,13,22,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [22,71,85,11,18,55,78]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [94,49,57,18,17,77,89]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [65,48,58,55,30,55,77]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [4,66,7,4,9,54,43]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 122):
                                                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |          diff           |  i  |  lhsBuilder  |  rhsBuilder  |
-----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [85,51,22,96,4,41,63]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [85,51,22,96,4,41,63]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [85,51,22,96,4,41,63]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     85  |  [85,51,22,96,4,41,63]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     85  |   85  |     85  |  [85,51,22,96,4,41,63]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   85  |     85  |  [85,51,22,96,4,41,63]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   85  |     85  |  [85,51,22,96,4,41,63]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   85  |     51  |  [85,51,22,96,4,41,63]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     51  |  136  |     51  |  [85,51,22,96,4,41,63]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  136  |     51  |  [85,51,22,96,4,41,63]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  136  |     51  |  [85,51,22,96,4,41,63]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  136  |     22  |  [85,51,22,96,4,41,63]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     22  |  158  |     22  |  [85,51,22,96,4,41,63]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  158  |     22  |  [85,51,22,96,4,41,63]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  158  |     22  |  [85,51,22,96,4,41,63]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  158  |     96  |  [85,51,22,96,4,41,63]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     96  |  254  |     96  |  [85,51,22,96,4,41,63]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  254  |     96  |  [85,51,22,96,4,41,63]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  254  |     96  |  [85,51,22,96,4,41,63]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  254  |      4  |  [85,51,22,96,4,41,63]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |      4  |  258  |      4  |  [85,51,22,96,4,41,63]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  258  |      4  |  [85,51,22,96,4,41,63]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  258  |      4  |  [85,51,22,96,4,41,63]  |  5  |           0  |           0  |
    96  |        chunk = arrayRead(diff, i);  |         |  258  |     41  |  [85,51,22,96,4,41,63]  |  5  |           0  |           0  |
    99  |                     R = R + chunk;  |     41  |  299  |     41  |  [85,51,22,96,4,41,63]  |  5  |           0  |           0  |
   103  |                         i = i + 1;  |         |  299  |     41  |  [85,51,22,96,4,41,63]  |  6  |           0  |           0  |
   104  |              resetPlaceHolder_1();  |         |  299  |     41  |  [85,51,22,96,4,41,63]  |  6  |           0  |           0  |
   110  |        chunk = arrayRead(diff, i);  |         |  299  |     63  |  [85,51,22,96,4,41,63]  |  6  |           0  |           0  |
   113  |                     R = R + chunk;  |     63  |  362  |     63  |  [85,51,22,96,4,41,63]  |  6  |           0  |           0  |
   117  |                         i = i + 1;  |         |  362  |     63  |  [85,51,22,96,4,41,63]  |  7  |           0  |           0  |
   118  |              resetPlaceHolder_1();  |         |  362  |     63  |  [85,51,22,96,4,41,63]  |  7  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43,57,71,85,99,113}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     85  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     51  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     22  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     96  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |      4  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     41  |                         0  |
   104  |  resetPlaceHolder_1();  |         |                            |
   113  |         R = R + chunk;  |     63  |                         0  |
   118  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-30 19:38:59,931 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:39:10,096 INFO     Done. Execution time: 10.164844274520874 seconds
2023-01-30 19:39:10,096 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `7.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1939-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1939-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.157s
user	0m22.200s
sys	0m2.996s

2023-01-30 19:39:10,097 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-30 19:39:10,097 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:40:16,728 INFO     Done. Execution time: 66.63085508346558 seconds
2023-01-30 19:40:16,728 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz5009936084370106489/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5009936084370106489/bin -o /tmp/qfuzz5009936084370106489/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5009936084370106489/bin
Found file /tmp/qfuzz5009936084370106489/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz5009936084370106489/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5009936084370106489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5009936084370106489/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5009936084370106489/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz5009936084370106489/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 147312 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m147k to 147k us (average: 147k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 13.00; [368.00,895.00,1035.00,1164.00,1415.00,1495.00,1635.00,1648.00,1735.00]
2; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 9; 27.00; [395.00,835.00,875.00,1095.00,1164.00,1368.00,1395.00,1788.00,1855.00]
3; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 9; 20.00; [368.00,528.00,564.00,895.00,1035.00,1415.00,1635.00,1655.00,1735.00]
5; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 9; 29.00; [335.00,628.00,895.00,1035.00,1135.00,1164.00,1415.00,1828.00,2015.00]
7; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 9; 53.00; [275.00,495.00,1108.00,1164.00,1415.00,1495.00,1635.00,1688.00,1915.00]
8; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 9; 13.00; [375.00,895.00,1035.00,1164.00,1228.00,1495.00,1635.00,1648.00,1735.00]
10; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 9; 47.00; [115.00,695.00,895.00,1164.00,1368.00,1415.00,1515.00,1588.00,1835.00]
12; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 9; 60.00; [88.00,195.00,595.00,1164.00,1495.00,1555.00,1668.00,1735.00,1955.00]
16; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 9; 7.00; [1088.00,1095.00,1164.00,1215.00,1388.00,1415.00,1715.00,1875.00,1895.00]
21; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 9; 80.00; [368.00,728.00,895.00,1035.00,1164.00,1415.00,1495.00,1635.00,1735.00]
26; /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 9; 93.00; [95.00,475.00,635.00,728.00,1184.00,1315.00,1455.00,1568.00,1675.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 23, 31, 4, 72, 83, 65, 36, 78, 70, 27, 22, 9, 9, 9, 9, 44, 9, 9, 12, 9, 9, 10, 40, 80, 17, 57, 30, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 36, 83, 6, 32, 89, 91, 19, 10, 12, 91, 39, 46, 69, 89, 68, 10, 91, 80, 97, 57, 74, 94)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 94, 70, 85, 93, 54, 60, 69, 54, 85, 10, 12, 4, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 77, 97, 74, 29, 9, 86, 4, 83, 83, 67, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 91, 70, 34, 5, 75, 44, 68, 79, 89, 68, 10, 90, 67, 33, 92, 68, 82, 68, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 74, 81, 44, 86, 18, 82, 61, 61, 20, 89, 91, 21, 46, 69, 89, 89, 68, 62, 80, 80, 97, 57, 74, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 95, 83, 74, 81, 70, 13, 24, 84, 55, 56, 42, 89, 97, 11, 82, 4, 27, 83, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 56, 70, 100, 51, 44, 16, 91, 31, 43, 10, 78, 55, 96, 93, 35, 18, 89, 77, 31, 70, 21, 54, 4, 82, 21, 54, 63, 38, 59, 83, 43, 46, 84, 76, 59, 44, 16, 9, 9, 9, 9, 54, 9, 34, 9, 20, 98, 86, 43, 68, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 51, 70, 82, 81, 44, 86, 18, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 92, 41, 54, 19, 43, 69, 89, 68, 10, 30, 58, 96, 47, 19, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5009936084370106489/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_194016_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,23,31,4,72,83,65], 36, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,94,70,85,93,54,60], 69, 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,77,97,74,29,9,86], 4, 83
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,91,70,34,5,75,44], 68, 79
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,74,81,44,86,18], 82, 61
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,95,83,74,81,70,13], 24, 84
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,56,70,100,51,44,16], 91, 31
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,51,70,82,81,44,86], 18, 26
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,92,41,54,19,43,69], 89, 68
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18, 82
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:40:16,728 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-30 19:40:16,729 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-30 19:40:34,095 INFO     Done. Execution time: 17.36632776260376 seconds
2023-01-30 19:40:34,095 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_194016_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_194016_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,23,31,4,72,83,65], 36, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,94,70,85,93,54,60], 69, 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,77,97,74,29,9,86], 4, 83)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,91,70,34,5,75,44], 68, 79)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,74,81,44,86,18], 82, 61)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,95,83,74,81,70,13], 24, 84)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,56,70,100,51,44,16], 91, 31)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,51,70,82,81,44,86], 18, 26)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,92,41,54,19,43,69], 89, 68)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18, 82)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [58,23,31,4,72,83,65]
years: 36
months: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,51,70,74,81,44,86]
years: 18
months: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,94,70,85,93,54,60]
years: 69
months: 54
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,77,97,74,29,9,86]
years: 4
months: 83
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,91,70,34,5,75,44]
years: 68
months: 79
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,51,74,81,44,86,18]
years: 82
months: 61
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,95,83,74,81,70,13]
years: 24
months: 84
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,56,70,100,51,44,16]
years: 91
months: 31
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [27,51,70,82,81,44,86]
years: 18
months: 26
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,92,41,54,19,43,69]
years: 89
months: 68
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [57,51,70,74,81,44,86]
years: 18
months: 82
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 176):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |         tokens          |  years  |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |      78  |  [58,23,31,4,72,83,65]  |     36  |
    26  |                      // int R = 0;  |         |     0  |         |     |      78  |  [58,23,31,4,72,83,65]  |     36  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |      78  |  [58,23,31,4,72,83,65]  |     36  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |      78  |  [58,23,31,4,72,83,65]  |     36  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |      78  |  [58,23,31,4,72,83,65]  |     36  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |     58  |  0  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    41  |                     R = R + chunk;  |     58  |    58  |     58  |  0  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    44  |                     R = R + years;  |     36  |    94  |     58  |  0  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    47  |                    R = R + months;  |     78  |   172  |     58  |  0  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    51  |                         i = i + 1;  |         |   172  |     58  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    52  |              resetPlaceHolder_1();  |         |   172  |     58  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    58  |      chunk = arrayRead(tokens, i);  |         |   172  |     23  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    61  |                     R = R + chunk;  |     23  |   195  |     23  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    64  |                     R = R + years;  |     36  |   231  |     23  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    67  |                    R = R + months;  |     78  |   309  |     23  |  1  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    71  |                         i = i + 1;  |         |   309  |     23  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    72  |              resetPlaceHolder_1();  |         |   309  |     23  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    78  |      chunk = arrayRead(tokens, i);  |         |   309  |     31  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    81  |                     R = R + chunk;  |     31  |   340  |     31  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    84  |                     R = R + years;  |     36  |   376  |     31  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    87  |                    R = R + months;  |     78  |   454  |     31  |  2  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    91  |                         i = i + 1;  |         |   454  |     31  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    92  |              resetPlaceHolder_1();  |         |   454  |     31  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
    98  |      chunk = arrayRead(tokens, i);  |         |   454  |      4  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   101  |                     R = R + chunk;  |      4  |   458  |      4  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   104  |                     R = R + years;  |     36  |   494  |      4  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   107  |                    R = R + months;  |     78  |   572  |      4  |  3  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   111  |                         i = i + 1;  |         |   572  |      4  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   112  |              resetPlaceHolder_1();  |         |   572  |      4  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   118  |      chunk = arrayRead(tokens, i);  |         |   572  |     72  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   121  |                     R = R + chunk;  |     72  |   644  |     72  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   124  |                     R = R + years;  |     36  |   680  |     72  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   127  |                    R = R + months;  |     78  |   758  |     72  |  4  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   131  |                         i = i + 1;  |         |   758  |     72  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   132  |              resetPlaceHolder_1();  |         |   758  |     72  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   138  |      chunk = arrayRead(tokens, i);  |         |   758  |     83  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   141  |                     R = R + chunk;  |     83  |   841  |     83  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   144  |                     R = R + years;  |     36  |   877  |     83  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   147  |                    R = R + months;  |     78  |   955  |     83  |  5  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   151  |                         i = i + 1;  |         |   955  |     83  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   152  |              resetPlaceHolder_1();  |         |   955  |     83  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   158  |      chunk = arrayRead(tokens, i);  |         |   955  |     65  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   161  |                     R = R + chunk;  |     65  |  1020  |     65  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   164  |                     R = R + years;  |     36  |  1056  |     65  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   167  |                    R = R + months;  |     78  |  1134  |     65  |  6  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   171  |                         i = i + 1;  |         |  1134  |     65  |  7  |      78  |  [58,23,31,4,72,83,65]  |     36  |
   172  |              resetPlaceHolder_1();  |         |  1134  |     65  |  7  |      78  |  [58,23,31,4,72,83,65]  |     36  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 21 trace node indices: [101, 164, 121, 84, 147, 61, 141, 124, 41, 161, 64, 44, 144, 81, 167, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {144}; {164}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {144}; {164}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     58  |                            |
    44  |         R = R + years;  |     36  |                         0  |
    47  |        R = R + months;  |     78  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     23  |                            |
    64  |         R = R + years;  |     36  |                         1  |
    67  |        R = R + months;  |     78  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     31  |                            |
    84  |         R = R + years;  |     36  |                         2  |
    87  |        R = R + months;  |     78  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      4  |                            |
   104  |         R = R + years;  |     36  |                         3  |
   107  |        R = R + months;  |     78  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     72  |                            |
   124  |         R = R + years;  |     36  |                         4  |
   127  |        R = R + months;  |     78  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     83  |                            |
   144  |         R = R + years;  |     36  |                         5  |
   147  |        R = R + months;  |     78  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     65  |                            |
   164  |         R = R + years;  |     36  |                         6  |
   167  |        R = R + months;  |     78  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {147}; {167}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {147}; {167}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |     58  |                            |
    44  |         R = R + years;  |     36  |                            |
    47  |        R = R + months;  |     78  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     23  |                            |
    64  |         R = R + years;  |     36  |                            |
    67  |        R = R + months;  |     78  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     31  |                            |
    84  |         R = R + years;  |     36  |                            |
    87  |        R = R + months;  |     78  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      4  |                            |
   104  |         R = R + years;  |     36  |                            |
   107  |        R = R + months;  |     78  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     72  |                            |
   124  |         R = R + years;  |     36  |                            |
   127  |        R = R + months;  |     78  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     83  |                            |
   144  |         R = R + years;  |     36  |                            |
   147  |        R = R + months;  |     78  |                         5  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     65  |                            |
   164  |         R = R + years;  |     36  |                            |
   167  |        R = R + months;  |     78  |                         6  |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {144}; {164}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {147}; {167}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121,141,161}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |     58  |                            |                            |                         0  |
    44  |         R = R + years;  |     36  |                         0  |                            |                            |
    47  |        R = R + months;  |     78  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     23  |                            |                            |                         0  |
    64  |         R = R + years;  |     36  |                         1  |                            |                            |
    67  |        R = R + months;  |     78  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     31  |                            |                            |                         0  |
    84  |         R = R + years;  |     36  |                         2  |                            |                            |
    87  |        R = R + months;  |     78  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |      4  |                            |                            |                         0  |
   104  |         R = R + years;  |     36  |                         3  |                            |                            |
   107  |        R = R + months;  |     78  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   124  |         R = R + years;  |     36  |                         4  |                            |                            |
   127  |        R = R + months;  |     78  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   141  |         R = R + chunk;  |     83  |                            |                            |                         0  |
   144  |         R = R + years;  |     36  |                         5  |                            |                            |
   147  |        R = R + months;  |     78  |                            |                         5  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |         R = R + chunk;  |     65  |                            |                            |                         0  |
   164  |         R = R + years;  |     36  |                         6  |                            |                            |
   167  |        R = R + months;  |     78  |                            |                         6  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 152, 132, 92, 112, 72)
GroupID(1): Set(52, 152, 132, 92, 112, 72)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
use R years -> R0 = R0 + years;
use R months -> R1 = R1 + months;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-30 19:40:34,096 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:41:42,754 INFO     Done. Execution time: 68.65824866294861 seconds
2023-01-30 19:41:42,755 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `66.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1940-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1940-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m8.648s
user	3m32.495s
sys	0m20.031s

2023-01-30 19:41:42,755 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-30 19:41:42,755 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:42:49,118 INFO     Done. Execution time: 66.3627278804779 seconds
2023-01-30 19:42:49,118 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz1780090664356575502/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1780090664356575502/bin -o /tmp/qfuzz1780090664356575502/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1780090664356575502/bin
Found file /tmp/qfuzz1780090664356575502/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz1780090664356575502/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1780090664356575502/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1780090664356575502/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1780090664356575502/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz1780090664356575502/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 125890 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1780090664356575502/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_194248_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:42:49,119 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-30 19:42:49,119 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-30 19:42:55,255 INFO     Done. Execution time: 6.135922193527222 seconds
2023-01-30 19:42:55,255 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_194248_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_194248_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-30 19:42:55,255 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:43:04,932 INFO     Done. Execution time: 9.676833629608154 seconds
2023-01-30 19:43:04,933 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1942-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1942-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.669s
user	0m19.916s
sys	0m3.023s

2023-01-30 19:43:04,933 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-30 19:43:04,933 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:44:11,974 INFO     Done. Execution time: 67.04050016403198 seconds
2023-01-30 19:44:11,974 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz174722410479792598/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz174722410479792598/bin -o /tmp/qfuzz174722410479792598/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz174722410479792598/bin
Found file /tmp/qfuzz174722410479792598/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz174722410479792598/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz174722410479792598/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz174722410479792598/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz174722410479792598/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz174722410479792598/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz174722410479792598/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz174722410479792598/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 155426 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m155k to 155k us (average: 155k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 11; 1.00; [28.00,32.00,35.50,37.00,888.00,1028.00,1148.00,1408.00,1488.00,1628.00,1728.00]
2; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 11; 1.00; [28.00,32.00,35.50,37.00,428.00,928.00,1028.00,1148.00,1388.00,1788.00,1828.00]
7; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 8; 1.00; [8.00,28.00,32.00,35.50,37.00,608.00,1248.00,1828.00]
10; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 11; 1.00; [28.00,32.00,35.50,37.00,708.00,828.00,1148.00,1488.00,1568.00,1808.00,1968.00]
15; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 8; 1.00; [8.00,28.00,32.00,35.50,37.00,928.00,1148.00,1448.00]
20; /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 9; 1.00; [28.00,32.00,35.50,37.00,228.00,588.00,1028.00,1328.00,1448.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 51, 72, 11, 29, 29, 66, 66, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 72, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 74, 35, 78, 90, 98, 57, 93, 79, 73, 89, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 62, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 91, 21, 46, 69, 89, 68, 11, 34, 80, 30, 66, 33, 10, 84, 11, 10, 11, 12, 91, 70, 25, 90, 67, 57, 84, 11, 86, 18, 82, 83, 57, 12, 91, 70, 25, 90, 67, 57, 82, 82, 79, 62, 80, 67, 56, 33, 82, 53, 62, 41, 52, 91, 21, 100, 69, 89, 68, 10, 80, 80, 97, 4, 4, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz174722410479792598/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_194411_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,51,72,11,29,29,66]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,72,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,74,35,78,90,98,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,62,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,91,21,46,69,89]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:44:11,974 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-30 19:44:11,974 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-30 19:44:28,135 INFO     Done. Execution time: 16.160118103027344 seconds
2023-01-30 19:44:28,135 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_194411_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_194411_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,51,72,11,29,29,66])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,72,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,62,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,74,35,78,90,98,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,91,21,46,69,89])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [29,51,72,11,29,29,66]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [57,72,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [41,74,35,78,90,98,57]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [30,62,91]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [57,51,91,21,46,69,89]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 255):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |       baseMessage        |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [29,51,72,11,29,29,66]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [29,51,72,11,29,29,66]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [29,51,72,11,29,29,66]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [29,51,72,11,29,29,66]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    42  |                     R = R + chunk;  |     29  |   34  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    45  |                         R = R + 1;  |      1  |   35  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    48  |                         R = R + 1;  |      1  |   36  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    51  |                         R = R + 1;  |      1  |   37  |  [29,51,72,11,29,29,66]  |       0  |     29  |  0  |
    55  |                         i = i + 1;  |         |   37  |  [29,51,72,11,29,29,66]  |       0  |     29  |  1  |
    56  |              resetPlaceHolder_1();  |         |   37  |  [29,51,72,11,29,29,66]  |       0  |     29  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   37  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    65  |                         R = R + 1;  |      1  |   38  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    68  |                         R = R + 1;  |      1  |   39  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    71  |                         R = R + 1;  |      1  |   40  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    74  |                     R = R + chunk;  |     51  |   91  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    77  |                         R = R + 1;  |      1  |   92  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    80  |                         R = R + 1;  |      1  |   93  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    83  |                         R = R + 1;  |      1  |   94  |  [29,51,72,11,29,29,66]  |       0  |     51  |  1  |
    87  |                         i = i + 1;  |         |   94  |  [29,51,72,11,29,29,66]  |       0  |     51  |  2  |
    88  |              resetPlaceHolder_1();  |         |   94  |  [29,51,72,11,29,29,66]  |       0  |     51  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |   94  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
    97  |                         R = R + 1;  |      1  |   95  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   100  |                         R = R + 1;  |      1  |   96  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   103  |                         R = R + 1;  |      1  |   97  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   106  |                     R = R + chunk;  |     72  |  169  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   109  |                         R = R + 1;  |      1  |  170  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   112  |                         R = R + 1;  |      1  |  171  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   115  |                         R = R + 1;  |      1  |  172  |  [29,51,72,11,29,29,66]  |       0  |     72  |  2  |
   119  |                         i = i + 1;  |         |  172  |  [29,51,72,11,29,29,66]  |       0  |     72  |  3  |
   120  |              resetPlaceHolder_1();  |         |  172  |  [29,51,72,11,29,29,66]  |       0  |     72  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  172  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   129  |                         R = R + 1;  |      1  |  173  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   132  |                         R = R + 1;  |      1  |  174  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   135  |                         R = R + 1;  |      1  |  175  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   138  |                     R = R + chunk;  |     11  |  186  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   141  |                         R = R + 1;  |      1  |  187  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   144  |                         R = R + 1;  |      1  |  188  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   147  |                         R = R + 1;  |      1  |  189  |  [29,51,72,11,29,29,66]  |       0  |     11  |  3  |
   151  |                         i = i + 1;  |         |  189  |  [29,51,72,11,29,29,66]  |       0  |     11  |  4  |
   152  |              resetPlaceHolder_1();  |         |  189  |  [29,51,72,11,29,29,66]  |       0  |     11  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  189  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   161  |                         R = R + 1;  |      1  |  190  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   164  |                         R = R + 1;  |      1  |  191  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   167  |                         R = R + 1;  |      1  |  192  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   170  |                     R = R + chunk;  |     29  |  221  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   173  |                         R = R + 1;  |      1  |  222  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   176  |                         R = R + 1;  |      1  |  223  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   179  |                         R = R + 1;  |      1  |  224  |  [29,51,72,11,29,29,66]  |       0  |     29  |  4  |
   183  |                         i = i + 1;  |         |  224  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   184  |              resetPlaceHolder_1();  |         |  224  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   190  |  chunk = arrayRead(baseMessage,...  |         |  224  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   193  |                         R = R + 1;  |      1  |  225  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   196  |                         R = R + 1;  |      1  |  226  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   199  |                         R = R + 1;  |      1  |  227  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   202  |                     R = R + chunk;  |     29  |  256  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   205  |                         R = R + 1;  |      1  |  257  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   208  |                         R = R + 1;  |      1  |  258  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   211  |                         R = R + 1;  |      1  |  259  |  [29,51,72,11,29,29,66]  |       0  |     29  |  5  |
   215  |                         i = i + 1;  |         |  259  |  [29,51,72,11,29,29,66]  |       0  |     29  |  6  |
   216  |              resetPlaceHolder_1();  |         |  259  |  [29,51,72,11,29,29,66]  |       0  |     29  |  6  |
   222  |  chunk = arrayRead(baseMessage,...  |         |  259  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   225  |                         R = R + 1;  |      1  |  260  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   228  |                         R = R + 1;  |      1  |  261  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   231  |                         R = R + 1;  |      1  |  262  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   234  |                     R = R + chunk;  |     66  |  328  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   237  |                         R = R + 1;  |      1  |  329  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   240  |                         R = R + 1;  |      1  |  330  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   243  |                         R = R + 1;  |      1  |  331  |  [29,51,72,11,29,29,66]  |       0  |     66  |  6  |
   247  |                         i = i + 1;  |         |  331  |  [29,51,72,11,29,29,66]  |       0  |     66  |  7  |
   248  |              resetPlaceHolder_1();  |         |  331  |  [29,51,72,11,29,29,66]  |       0  |     66  |  7  |
   254  |                         R = R + 1;  |      1  |  332  |  [29,51,72,11,29,29,66]  |       0  |     66  |  7  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 52 trace node indices: [138, 234, 170, 115, 202, 42, 196, 20, 228, 164, 179, 211, 106, 147, 132, 243, 74, 33, 65, 97, 141, 109, 225, 77, 193, 173, 129, 237, 205, 45, 161, 17, 176, 71, 144, 39, 208, 103, 240, 135, 80, 167, 112, 48, 199, 231, 36, 51, 68, 254, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {193}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {196}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {199}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {205}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {208}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {228}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {231}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     29  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     51  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     72  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     11  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     29  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                        32  |
   196  |             R = R + 1;  |      1  |                        33  |
   199  |             R = R + 1;  |      1  |                        34  |
   202  |         R = R + chunk;  |     29  |                            |
   205  |             R = R + 1;  |      1  |                        35  |
   208  |             R = R + 1;  |      1  |                        36  |
   211  |             R = R + 1;  |      1  |                        37  |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                        38  |
   228  |             R = R + 1;  |      1  |                        39  |
   231  |             R = R + 1;  |      1  |                        40  |
   234  |         R = R + chunk;  |     66  |                            |
   237  |             R = R + 1;  |      1  |                        41  |
   240  |             R = R + 1;  |      1  |                        42  |
   243  |             R = R + 1;  |      1  |                        43  |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                        44  |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {42}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {202}; {42}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {202}; {42} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |     29  |                         0  |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |     51  |                            |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     72  |                            |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |     11  |                            |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |     29  |                         1  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                            |
   196  |             R = R + 1;  |      1  |                            |
   199  |             R = R + 1;  |      1  |                            |
   202  |         R = R + chunk;  |     29  |                         2  |
   205  |             R = R + 1;  |      1  |                            |
   208  |             R = R + 1;  |      1  |                            |
   211  |             R = R + 1;  |      1  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                            |
   228  |             R = R + 1;  |      1  |                            |
   231  |             R = R + 1;  |      1  |                            |
   234  |         R = R + chunk;  |     66  |                            |
   237  |             R = R + 1;  |      1  |                            |
   240  |             R = R + 1;  |      1  |                            |
   243  |             R = R + 1;  |      1  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [138, 234, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [138, 234, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [138, 234, 106, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {170}; {202}; {42}
GroupID(2): {74,106,138,234}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 192])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 32 and 33 segment (index range: [194, 195])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 33 and 34 segment (index range: [197, 198])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 34 and 35 segment (index range: [200, 204])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 35 and 36 segment (index range: [206, 207])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 36 and 37 segment (index range: [209, 210])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 37 and 38 segment (index range: [212, 224])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 38 and 39 segment (index range: [226, 227])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 39 and 40 segment (index range: [229, 230])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 40 and 41 segment (index range: [232, 236])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 41 and 42 segment (index range: [238, 239])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 42 and 43 segment (index range: [241, 242])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 43 and 44 segment (index range: [244, 253])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |                            |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     51  |                            |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     72  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     11  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |                            |
   202  |         R = R + chunk;  |     29  |                            |                         2  |                            |
   205  |             R = R + 1;  |      1  |                        35  |                            |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |                            |
   234  |         R = R + chunk;  |     66  |                            |                            |                         0  |
   237  |             R = R + 1;  |      1  |                        41  |                            |                            |
   240  |             R = R + 1;  |      1  |                        42  |                            |                            |
   243  |             R = R + 1;  |      1  |                        43  |                            |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   254  |             R = R + 1;  |      1  |                        44  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(56, 184)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 0) || (i == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 1) || (i == 1))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-30 19:44:28,137 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:48:12,963 INFO     Done. Execution time: 224.82565355300903 seconds
2023-01-30 19:48:12,963 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-387005505715342051.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-208262656628851062.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8755819496214100262.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9182707566216339521.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6159077173313019924.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5044351030601549794.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3232809475808489075.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-624727494864445580.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2307313303886150436.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 8 1) (* 8 1 baseMessage)))` for variable `D2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 8 1) (* 8 1 baseMessage))) (= D2p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       true
       a!4
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 8 1) (* 8 1 baseMessage))) (= D2 0))))
  (and a!1 (or true (= D1 0)) (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    6)  (define-fun D1 () Int    (- 3))  (define-fun D2 () Int    (- 8))  (define-fun C2 () Int    0)  (define-fun C1 () Int    8)  (define-fun baseMessage () Int    15)  (define-fun D0p () Int    11)  (define-fun D1p () Int    15)  (define-fun D2p () Int    0)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `222.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1944-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1944-transparentAmortize-60s-mostPrecise-000-099.csv`

real	3m44.817s
user	6m44.146s
sys	0m4.817s

2023-01-30 19:48:12,964 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-30 19:48:12,964 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:49:19,578 INFO     Done. Execution time: 66.61413073539734 seconds
2023-01-30 19:49:19,579 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz7990186350496515077/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7990186350496515077/bin -o /tmp/qfuzz7990186350496515077/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7990186350496515077/bin
Found file /tmp/qfuzz7990186350496515077/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz7990186350496515077/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7990186350496515077/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7990186350496515077/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7990186350496515077/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz7990186350496515077/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 138380 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
11; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
16; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
18; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
21; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
27; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
34; /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 30, 37, 22, 5, 35, 12, 68, 47, 93, 62, 93, 91, 17, 6, 68, 45, 93, 93, 35, 77, 96, 98, 73, 33, 95, 23, 96, 47, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 66, 21, 46, 69, 89, 68, 10, 80, 89, 97, 94, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 84, 70, 84, 74, 90, 36, 20, 25, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 84, 66, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 10, 18, 82, 10, 32, 91, 70, 25, 90, 67, 57, 82, 10, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 89, 5, 77, 31, 89, 5, 77, 89, 5, 77, 35, 35, 35, 75, 98, 7, 35, 35, 35, 35, 35, 35, 35, 35, 35, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40, 51, 70, 74, 81, 44, 86, 18, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 52, 27, 75, 92, 99, 94, 34, 66, 99, 99, 48, 99, 99, 99, 99, 70, 99, 99, 99, 99, 99, 99, 99, 80, 54, 27, 75, 92, 93, 27, 75, 92, 99, 8, 34, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7990186350496515077/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_194919_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 62
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 92
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 65
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 57
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:49:19,579 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-30 19:49:19,579 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-30 19:49:28,113 INFO     Done. Execution time: 8.533282041549683 seconds
2023-01-30 19:49:28,113 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_194919_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_194919_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(62)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(92)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(58)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(65)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(57)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 62
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 92
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 70
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 16
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 58
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 65
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 57
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 1328):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |         62  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |         62  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |         62  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         62  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         62  |              |
    16  |        int className_ = className;  |         |    0  |            0  |         62  |          62  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |         62  |          61  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         62  |          61  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |         62  |          61  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |         62  |          61  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |         62  |          60  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         62  |          60  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |         62  |          60  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |         62  |          60  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |         62  |          59  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         62  |          59  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |         62  |          59  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |         62  |          59  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |         62  |          58  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         62  |          58  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |         62  |          58  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |         62  |          58  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |         62  |          57  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         62  |          57  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |         62  |          57  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |         62  |          57  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |         62  |          56  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         62  |          56  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |         62  |          56  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |         62  |          56  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |         62  |          55  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         62  |          55  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |         62  |          55  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |         62  |          55  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |         62  |          54  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         62  |          54  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |         62  |          54  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |         62  |          54  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |         62  |          53  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         62  |          53  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |         62  |          53  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |         62  |          53  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |         62  |          52  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         62  |          52  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |         62  |          52  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |         62  |          52  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |         62  |          51  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         62  |          51  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |         62  |          51  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |         62  |          51  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |         62  |          50  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         62  |          50  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |         62  |          50  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |         62  |          50  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |         62  |          49  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         62  |          49  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |         62  |          49  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |         62  |          49  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |         62  |          48  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         62  |          48  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |         62  |          48  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |         62  |          48  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |         62  |          47  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         62  |          47  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |         62  |          47  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |         62  |          47  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |         62  |          46  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         62  |          46  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |         62  |          46  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |         62  |          46  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |         62  |          45  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         62  |          45  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |         62  |          45  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |         62  |          45  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |         62  |          44  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         62  |          44  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |         62  |          44  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |         62  |          44  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |         62  |          43  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         62  |          43  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |         62  |          43  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |         62  |          43  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |         62  |          42  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         62  |          42  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |         62  |          42  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |         62  |          42  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |         62  |          41  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         62  |          41  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |         62  |          41  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |         62  |          41  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |         62  |          40  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         62  |          40  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |         62  |          40  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |         62  |          40  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |         62  |          39  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         62  |          39  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |         62  |          39  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |         62  |          39  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |         62  |          38  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         62  |          38  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |         62  |          38  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |         62  |          38  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |         62  |          37  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         62  |          37  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |         62  |          37  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |         62  |          37  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |         62  |          36  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         62  |          36  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |         62  |          36  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |         62  |          36  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |         62  |          35  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         62  |          35  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |         62  |          35  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |         62  |          35  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |         62  |          34  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         62  |          34  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |         62  |          34  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |         62  |          34  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |         62  |          33  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         62  |          33  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |         62  |          33  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |         62  |          33  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |         62  |          32  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         62  |          32  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |         62  |          32  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |         62  |          32  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |         62  |          31  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         62  |          31  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |         62  |          31  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |         62  |          31  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |         62  |          30  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         62  |          30  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |         62  |          30  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |         62  |          30  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |         62  |          29  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         62  |          29  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |         62  |          29  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |         62  |          29  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |         62  |          28  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         62  |          28  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |         62  |          28  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |         62  |          28  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |         62  |          27  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         62  |          27  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |         62  |          27  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |         62  |          27  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |         62  |          26  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         62  |          26  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |         62  |          26  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |         62  |          26  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |         62  |          25  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         62  |          25  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |         62  |          25  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |         62  |          25  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |         62  |          24  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         62  |          24  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |         62  |          24  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |         62  |          24  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |         62  |          23  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         62  |          23  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |         62  |          23  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |         62  |          23  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |         62  |          22  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         62  |          22  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |         62  |          22  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |         62  |          22  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |         62  |          21  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         62  |          21  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |         62  |          21  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |         62  |          21  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |         62  |          20  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         62  |          20  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |         62  |          20  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |         62  |          20  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |         62  |          19  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         62  |          19  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |         62  |          19  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |         62  |          19  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |         62  |          18  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         62  |          18  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |         62  |          18  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |         62  |          18  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |         62  |          17  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         62  |          17  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |         62  |          17  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |         62  |          17  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |         62  |          16  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         62  |          16  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |         62  |          16  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |         62  |          16  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |         62  |          15  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         62  |          15  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |         62  |          15  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |         62  |          15  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |         62  |          14  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         62  |          14  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |         62  |          14  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |         62  |          14  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |         62  |          13  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         62  |          13  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |         62  |          13  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |         62  |          13  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |         62  |          12  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         62  |          12  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |         62  |          12  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |         62  |          12  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |         62  |          11  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         62  |          11  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |         62  |          11  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |         62  |          11  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |         62  |          10  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         62  |          10  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |         62  |          10  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |         62  |          10  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |         62  |           9  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         62  |           9  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |         62  |           9  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |         62  |           9  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |         62  |           8  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         62  |           8  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |         62  |           8  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |         62  |           8  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |         62  |           7  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         62  |           7  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |         62  |           7  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |         62  |           7  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |         62  |           6  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         62  |           6  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |         62  |           6  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |         62  |           6  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |         62  |           5  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         62  |           5  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |         62  |           5  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |         62  |           5  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |         62  |           4  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         62  |           4  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |         62  |           4  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |         62  |           4  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |         62  |           3  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         62  |           3  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |         62  |           3  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |         62  |           3  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |         62  |           2  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         62  |           2  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |         62  |           2  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |         62  |           2  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |         62  |           1  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         62  |           1  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |         62  |           1  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |         62  |           1  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |         62  |           0  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         62  |           0  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |         62  |           0  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |         62  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 62 trace node indices: [645, 666, 582, 120, 1275, 1233, 288, 1254, 372, 1191, 57, 78, 834, 981, 687, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 393, 1002, 792, 1086, 1170, 750, 204, 498, 1107, 540, 477, 1149, 330, 1044, 267, 162, 939, 855, 414, 1317, 1023, 876, 99, 771, 813, 351, 246, 1212, 36, 183, 603, 918, 897, 960, 1065, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {1002}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {1023}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {1044}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {1065}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {1086}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {1107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {1128}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {1149}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {1170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {1191}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {1212}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {1233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {1254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {1275}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {1296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {1317}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {960}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {981}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(1024, 352, 730, 247, 142, 814, 898, 709, 436, 37, 184, 751, 1087, 289, 646, 121, 877, 793, 1255, 625, 583, 1234, 499, 1150, 1297, 1192, 457, 205, 541, 856, 562, 772, 919, 604, 520, 1171, 1213, 1066, 394, 226, 1003, 310, 331, 688, 1108, 1276, 961, 58, 667, 478, 1045, 835, 373, 268, 79, 415, 1129, 163, 982, 940, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-30 19:49:28,113 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:49:36,680 INFO     Done. Execution time: 8.566503286361694 seconds
2023-01-30 19:49:36,680 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1949-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1949-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.558s
user	0m18.815s
sys	0m2.516s

2023-01-30 19:49:36,681 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-30 19:49:36,681 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:50:43,316 INFO     Done. Execution time: 66.63518500328064 seconds
2023-01-30 19:50:43,317 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz8892487194899909574/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8892487194899909574/bin -o /tmp/qfuzz8892487194899909574/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8892487194899909574/bin
Found file /tmp/qfuzz8892487194899909574/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz8892487194899909574/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8892487194899909574/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8892487194899909574/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8892487194899909574/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz8892487194899909574/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 139011 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 34, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz8892487194899909574/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_195043_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:50:43,317 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-30 19:50:43,317 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-30 19:50:51,270 INFO     Done. Execution time: 7.952779769897461 seconds
2023-01-30 19:50:51,270 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_195043_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_195043_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-30 19:50:51,270 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:50:59,532 INFO     Done. Execution time: 8.261899948120117 seconds
2023-01-30 19:50:59,533 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1950-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1950-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.254s
user	0m18.689s
sys	0m2.307s

2023-01-30 19:50:59,533 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-30 19:50:59,533 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:52:06,696 INFO     Done. Execution time: 67.16235780715942 seconds
2023-01-30 19:52:06,696 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5970319308890453548/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5970319308890453548/bin -o /tmp/qfuzz5970319308890453548/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5970319308890453548/bin
Found file /tmp/qfuzz5970319308890453548/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5970319308890453548/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5970319308890453548/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5970319308890453548/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5970319308890453548/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz5970319308890453548/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 140227 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m140k to 140k us (average: 140k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
2; /tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5970319308890453548/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_195206_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:52:06,696 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-30 19:52:06,697 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-30 19:52:13,531 INFO     Done. Execution time: 6.833918333053589 seconds
2023-01-30 19:52:13,531 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_195206_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_195206_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

2023-01-30 19:52:13,531 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:52:21,332 INFO     Done. Execution time: 7.800934076309204 seconds
2023-01-30 19:52:21,333 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1952-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1952-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.791s
user	0m17.387s
sys	0m2.345s

2023-01-30 19:52:21,333 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-30 19:52:21,333 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:53:28,035 INFO     Done. Execution time: 66.70218992233276 seconds
2023-01-30 19:53:28,036 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz148900242728446212/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz148900242728446212/bin -o /tmp/qfuzz148900242728446212/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz148900242728446212/bin
Found file /tmp/qfuzz148900242728446212/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz148900242728446212/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz148900242728446212/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz148900242728446212/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz148900242728446212/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz148900242728446212/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz148900242728446212/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz148900242728446212/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 139169 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60, 94, 7, 77, 36, 36, 81, 50, 47, 58, 5, 86, 26, 19, 60, 37, 4, 30, 60, 37, 58, 61, 69, 6, 47, 43, 65, 75, 92, 99, 34, 72, 39, 36, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz148900242728446212/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_195327_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:53:28,036 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-30 19:53:28,036 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-30 19:53:35,419 INFO     Done. Execution time: 7.383141994476318 seconds
2023-01-30 19:53:35,420 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_195327_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_195327_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-30 19:53:35,420 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:53:44,472 INFO     Done. Execution time: 9.052243709564209 seconds
2023-01-30 19:53:44,473 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1953-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1953-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.043s
user	0m19.319s
sys	0m2.571s

2023-01-30 19:53:44,473 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-30 19:53:44,473 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:54:50,846 INFO     Done. Execution time: 66.37313270568848 seconds
2023-01-30 19:54:50,847 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz5646258438741926020/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5646258438741926020/bin -o /tmp/qfuzz5646258438741926020/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5646258438741926020/bin
Found file /tmp/qfuzz5646258438741926020/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz5646258438741926020/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5646258438741926020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5646258438741926020/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5646258438741926020/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz5646258438741926020/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 133262 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72, 72, 72, 58, 72, 75, 71, 71, 39, 71, 71, 71, 51, 38, 5, 38, 67, 4, 67, 67, 67, 67, 67, 67, 67, 67, 76, 67, 77, 79, 71, 71, 71, 75, 71, 71, 71, 83, 48, 71, 71, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5646258438741926020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_195450_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:54:50,847 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-30 19:54:50,847 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-30 19:54:58,669 INFO     Done. Execution time: 7.82239294052124 seconds
2023-01-30 19:54:58,670 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_195450_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_195450_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-30 19:54:58,670 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:55:09,077 INFO     Done. Execution time: 10.406426429748535 seconds
2023-01-30 19:55:09,077 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `7.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1955-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1955-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.397s
user	0m22.500s
sys	0m3.224s

2023-01-30 19:55:09,078 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-30 19:55:09,078 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:56:15,800 INFO     Done. Execution time: 66.72158718109131 seconds
2023-01-30 19:56:15,800 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz697525461179081878/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz697525461179081878/bin -o /tmp/qfuzz697525461179081878/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz697525461179081878/bin
Found file /tmp/qfuzz697525461179081878/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz697525461179081878/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz697525461179081878/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz697525461179081878/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz697525461179081878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz697525461179081878/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz697525461179081878/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz697525461179081878/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 128558 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 62, 70, 74, 81, 66, 4, 41, 85, 70, 25, 90, 67, 57, 42, 79, 77, 89, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz697525461179081878/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_195615_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:56:15,800 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-30 19:56:15,800 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-30 19:56:20,854 INFO     Done. Execution time: 5.05380916595459 seconds
2023-01-30 19:56:20,855 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_195615_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_195615_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-30 19:56:20,855 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:56:23,305 INFO     Done. Execution time: 2.44975209236145 seconds
2023-01-30 19:56:23,305 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1956-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1956-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.441s
user	0m4.399s
sys	0m0.283s

2023-01-30 19:56:23,305 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-30 19:56:23,305 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:57:29,476 INFO     Done. Execution time: 66.17061305046082 seconds
2023-01-30 19:57:29,476 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz1001250998651313184/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1001250998651313184/bin -o /tmp/qfuzz1001250998651313184/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1001250998651313184/bin
Found file /tmp/qfuzz1001250998651313184/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz1001250998651313184/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1001250998651313184/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1001250998651313184/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1001250998651313184/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz1001250998651313184/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 130460 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 29, 51, 21, 85, 48, 74, 13, 36, 13, 75, 6, 11, 100, 100, 68, 35, 4, 16, 99, 8, 6, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1001250998651313184/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_195729_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:57:29,477 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-30 19:57:29,477 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-30 19:57:38,813 INFO     Done. Execution time: 9.336329460144043 seconds
2023-01-30 19:57:38,814 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_195729_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_195729_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R1 = R1 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-30 19:57:38,814 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:57:51,134 INFO     Done. Execution time: 12.319676876068115 seconds
2023-01-30 19:57:51,134 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `10.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1957-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1957-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.312s
user	0m33.440s
sys	0m4.797s

2023-01-30 19:57:51,134 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-30 19:57:51,134 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 19:58:57,762 INFO     Done. Execution time: 66.62755107879639 seconds
2023-01-30 19:58:57,762 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz5982734840636819486/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5982734840636819486/bin -o /tmp/qfuzz5982734840636819486/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5982734840636819486/bin
Found file /tmp/qfuzz5982734840636819486/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz5982734840636819486/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5982734840636819486/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5982734840636819486/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5982734840636819486/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz5982734840636819486/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 132448 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz5982734840636819486/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_195857_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 19:58:57,763 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-30 19:58:57,763 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-30 19:59:06,177 INFO     Done. Execution time: 8.414280414581299 seconds
2023-01-30 19:59:06,178 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_195857_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_195857_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-30 19:59:06,178 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 19:59:15,985 INFO     Done. Execution time: 9.806748628616333 seconds
2023-01-30 19:59:15,985 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-1959-transparentAmortize-60s-mostPrecise/lang3-raw-0130-1959-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.796s
user	0m21.248s
sys	0m2.886s

2023-01-30 19:59:15,985 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-30 19:59:15,985 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:00:22,717 INFO     Done. Execution time: 66.73118209838867 seconds
2023-01-30 20:00:22,717 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz1314349972208246604/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1314349972208246604/bin -o /tmp/qfuzz1314349972208246604/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1314349972208246604/bin
Found file /tmp/qfuzz1314349972208246604/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz1314349972208246604/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1314349972208246604/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1314349972208246604/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1314349972208246604/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz1314349972208246604/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 135884 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 65, 82, 73, 6, 21, 52, 34, 32, 7, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1314349972208246604/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_200022_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:00:22,717 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-30 20:00:22,718 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-30 20:00:29,076 INFO     Done. Execution time: 6.358188629150391 seconds
2023-01-30 20:00:29,077 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_200022_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_200022_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-30 20:00:29,077 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:00:37,196 INFO     Done. Execution time: 8.119452238082886 seconds
2023-01-30 20:00:37,197 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2000-transparentAmortize-60s-mostPrecise/lang3-raw-0130-2000-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.111s
user	0m17.407s
sys	0m2.308s

2023-01-30 20:00:37,197 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-30 20:00:37,197 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:01:43,735 INFO     Done. Execution time: 66.53724503517151 seconds
2023-01-30 20:01:43,735 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz806149509628311083/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz806149509628311083/bin -o /tmp/qfuzz806149509628311083/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz806149509628311083/bin
Found file /tmp/qfuzz806149509628311083/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz806149509628311083/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz806149509628311083/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz806149509628311083/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz806149509628311083/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz806149509628311083/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz806149509628311083/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz806149509628311083/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 31, exec speed = 133116 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [35.00,43.00]
2; /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [0.00]
3; /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 8.00; [35.00,43.00]
4; /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 1; 0.00; [43.00]
16; /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(87, 10, 97, 35, 78, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 72, 32, 8, 78, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 27, 32, 16, 84, 40, 100, 56, 14, 83, 35, 13, 8, 13, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz806149509628311083/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_200143_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [10,97,35,78,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [72,32,8,78,17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,27,32,16,84]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [51,70,74,81,44,86,18]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:01:43,735 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-30 20:01:43,735 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-30 20:01:50,523 INFO     Done. Execution time: 6.78715443611145 seconds
2023-01-30 20:01:50,523 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_200143_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_200143_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [10,97,35,78,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [72,32,8,78,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,27,32,16,84])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [51,70,74,81,44,86,18])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [4,4,4,27,32,16,84]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [10,97,35,78,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [72,32,8,78,17]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [51,70,74,81,44,86,18]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 15):
                                                            
 Index  |   Commands   |  Costs  |  R  |  choices  |  str  |
------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |       []  |    2  |
    14  |     return;  |         |  0  |       []  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 73):
                                                                                                                           
 Index  |              Commands               |  Costs  |  R  |  choice  |      choices       |  i  |  str  |  strDigits  |
---------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [10,97,35,78,26]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [10,97,35,78,26]  |     |    2  |             |
    15  |  // mostPreciseBound(R <= str |...  |         |  0  |          |  [10,97,35,78,26]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [10,97,35,78,26]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [10,97,35,78,26]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [10,97,35,78,26]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [10,97,35,78,26]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      10  |  [10,97,35,78,26]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |      10  |  [10,97,35,78,26]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |      10  |  [10,97,35,78,26]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |      97  |  [10,97,35,78,26]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |      97  |  [10,97,35,78,26]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |      97  |  [10,97,35,78,26]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |      97  |  [10,97,35,78,26]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |      97  |  [10,97,35,78,26]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-30 20:01:50,523 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:02:15,211 INFO     Done. Execution time: 24.687711238861084 seconds
2023-01-30 20:02:15,211 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `22.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2001-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2001-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m24.680s
user	0m53.191s
sys	0m4.418s

2023-01-30 20:02:15,211 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-30 20:02:15,212 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:03:22,157 INFO     Done. Execution time: 66.94568657875061 seconds
2023-01-30 20:03:22,158 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz6114847114900231204/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6114847114900231204/bin -o /tmp/qfuzz6114847114900231204/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6114847114900231204/bin
Found file /tmp/qfuzz6114847114900231204/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz6114847114900231204/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6114847114900231204/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6114847114900231204/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6114847114900231204/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz6114847114900231204/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 134718 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6114847114900231204/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6114847114900231204/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6114847114900231204/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_200321_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:03:22,158 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-30 20:03:22,158 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-30 20:03:25,540 INFO     Done. Execution time: 3.3812901973724365 seconds
2023-01-30 20:03:25,540 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_200321_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_200321_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [57,51,70,74,81,44,86]
startIndex: 18
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                               
 Index  |   Commands   |  Costs  |  R  |          array           |  endIndex  |  startIndex  |
-----------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [57,51,70,74,81,44,86]  |         2  |          18  |
    48  |     return;  |         |  0  |  [57,51,70,74,81,44,86]  |         2  |          18  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-30 20:03:25,540 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:03:28,203 INFO     Done. Execution time: 2.662625789642334 seconds
2023-01-30 20:03:28,203 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2003-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2003-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.654s
user	0m4.804s
sys	0m0.286s

2023-01-30 20:03:28,203 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-30 20:03:28,203 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:04:35,091 INFO     Done. Execution time: 66.88710856437683 seconds
2023-01-30 20:04:35,091 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz3947728538250360866/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3947728538250360866/bin -o /tmp/qfuzz3947728538250360866/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3947728538250360866/bin
Found file /tmp/qfuzz3947728538250360866/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz3947728538250360866/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3947728538250360866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3947728538250360866/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3947728538250360866/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3947728538250360866/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 130807 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 80.00; [32.00,891.00,1031.00,1161.00,1411.00,1491.00,1631.00,1731.00]
2; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 21.00; [11.00,32.00,1441.00]
4; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 8; 60.00; [32.00,891.00,971.00,1031.00,1161.00,1411.00,1491.00,1731.00]
5; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 8; 100.00; [32.00,891.00,1031.00,1371.00,1491.00,1631.00,1731.00,1981.00]
9; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 8; 20.00; [32.00,91.00,511.00,531.00,871.00,1041.00,1071.00,1311.00]
12; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 8; 120.00; [32.00,251.00,871.00,1031.00,1151.00,1391.00,1531.00,1981.00]
18; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 8; 50.00; [32.00,91.00,231.00,631.00,711.00,1031.00,1111.00,1161.00]
21; /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 8; 130.00; [32.00,251.00,791.00,1031.00,1161.00,1411.00,1611.00,1811.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 39, 12, 90, 80, 74, 12, 90, 80, 30, 12, 13, 80, 30, 12, 91, 8, 19, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 55, 11, 35, 4, 31, 91, 67, 25, 11, 12, 90, 95, 85, 21, 46, 63, 89, 91, 41, 91, 86, 33, 11, 87)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(98, 12, 69, 76, 43, 57, 51, 51, 76, 51, 35, 5, 59, 77, 53, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(51, 53, 4, 65, 26, 43, 25, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(98, 51, 68, 74, 81, 44, 86, 18, 40, 82, 79, 38, 89, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 48, 44, 86, 18, 82, 83, 20, 89, 91, 54, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3947728538250360866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_200434_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,39,12,90,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,55,11,35,4,31]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [98,12,69,76,43,57,51]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [51,53,4,65,26,43,25]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [98,51,68,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,48,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:04:35,091 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-30 20:04:35,092 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-30 20:04:51,314 INFO     Done. Execution time: 16.221914768218994 seconds
2023-01-30 20:04:51,314 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_200434_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_200434_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,39,12,90,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([98,12,69,76,43,57,51])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,55,11,35,4,31])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([51,53,4,65,26,43,25])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([98,51,68,74,81,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,48,44,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,70,39,12,90,80]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,55,11,35,4,31]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [98,12,69,76,43,57,51]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [51,53,4,65,26,43,25]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [98,51,68,74,81,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,70,74,48,44,86]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,70,74,81,44,86]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                    
 Index  |   Commands   |  Costs  |  R  |  objects  |
----------------------------------------------------
     2  |  int R = 0;  |         |  0  |       []  |
    10  |     return;  |         |  0  |       []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects          |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [57,51,70,39,12,90,80]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [57,51,70,39,12,90,80]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [57,51,70,39,12,90,80]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [57,51,70,39,12,90,80]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [57,51,70,39,12,90,80]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [57,51,70,39,12,90,80]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     57  |  0  |  [57,51,70,39,12,90,80]  |
    22  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |  [57,51,70,39,12,90,80]  |
    26  |                         i = i + 1;  |         |   57  |     57  |  1  |  [57,51,70,39,12,90,80]  |
    32  |                         R = R + 1;  |      1  |   58  |     57  |  1  |  [57,51,70,39,12,90,80]  |
    35  |     chunk = arrayRead(objects, i);  |         |   58  |     51  |  1  |  [57,51,70,39,12,90,80]  |
    38  |                     R = R + chunk;  |     51  |  109  |     51  |  1  |  [57,51,70,39,12,90,80]  |
    42  |                         i = i + 1;  |         |  109  |     51  |  2  |  [57,51,70,39,12,90,80]  |
    43  |              resetPlaceHolder_1();  |         |  109  |     51  |  2  |  [57,51,70,39,12,90,80]  |
    49  |                         R = R + 1;  |      1  |  110  |     51  |  2  |  [57,51,70,39,12,90,80]  |
    52  |     chunk = arrayRead(objects, i);  |         |  110  |     70  |  2  |  [57,51,70,39,12,90,80]  |
    55  |                     R = R + chunk;  |     70  |  180  |     70  |  2  |  [57,51,70,39,12,90,80]  |
    59  |                         i = i + 1;  |         |  180  |     70  |  3  |  [57,51,70,39,12,90,80]  |
    60  |              resetPlaceHolder_1();  |         |  180  |     70  |  3  |  [57,51,70,39,12,90,80]  |
    66  |                         R = R + 1;  |      1  |  181  |     70  |  3  |  [57,51,70,39,12,90,80]  |
    69  |     chunk = arrayRead(objects, i);  |         |  181  |     39  |  3  |  [57,51,70,39,12,90,80]  |
    72  |                     R = R + chunk;  |     39  |  220  |     39  |  3  |  [57,51,70,39,12,90,80]  |
    76  |                         i = i + 1;  |         |  220  |     39  |  4  |  [57,51,70,39,12,90,80]  |
    77  |              resetPlaceHolder_1();  |         |  220  |     39  |  4  |  [57,51,70,39,12,90,80]  |
    83  |                         R = R + 1;  |      1  |  221  |     39  |  4  |  [57,51,70,39,12,90,80]  |
    86  |     chunk = arrayRead(objects, i);  |         |  221  |     12  |  4  |  [57,51,70,39,12,90,80]  |
    89  |                     R = R + chunk;  |     12  |  233  |     12  |  4  |  [57,51,70,39,12,90,80]  |
    93  |                         i = i + 1;  |         |  233  |     12  |  5  |  [57,51,70,39,12,90,80]  |
    94  |              resetPlaceHolder_1();  |         |  233  |     12  |  5  |  [57,51,70,39,12,90,80]  |
   100  |                         R = R + 1;  |      1  |  234  |     12  |  5  |  [57,51,70,39,12,90,80]  |
   103  |     chunk = arrayRead(objects, i);  |         |  234  |     90  |  5  |  [57,51,70,39,12,90,80]  |
   106  |                     R = R + chunk;  |     90  |  324  |     90  |  5  |  [57,51,70,39,12,90,80]  |
   110  |                         i = i + 1;  |         |  324  |     90  |  6  |  [57,51,70,39,12,90,80]  |
   111  |              resetPlaceHolder_1();  |         |  324  |     90  |  6  |  [57,51,70,39,12,90,80]  |
   117  |                         R = R + 1;  |      1  |  325  |     90  |  6  |  [57,51,70,39,12,90,80]  |
   120  |     chunk = arrayRead(objects, i);  |         |  325  |     80  |  6  |  [57,51,70,39,12,90,80]  |
   123  |                     R = R + chunk;  |     80  |  405  |     80  |  6  |  [57,51,70,39,12,90,80]  |
   127  |                         i = i + 1;  |         |  405  |     80  |  7  |  [57,51,70,39,12,90,80]  |
   128  |              resetPlaceHolder_1();  |         |  405  |     80  |  7  |  [57,51,70,39,12,90,80]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     57  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     51  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     70  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     39  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     12  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                         4  |
   106  |         R = R + chunk;  |     90  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                         5  |
   123  |         R = R + chunk;  |     80  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89,106,123}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     57  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |     51  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     70  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     39  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     12  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |
   106  |         R = R + chunk;  |     90  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |
   123  |         R = R + chunk;  |     80  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-30 20:04:51,314 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:05:08,617 INFO     Done. Execution time: 17.302311182022095 seconds
2023-01-30 20:05:08,617 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `14.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2004-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2004-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.294s
user	0m48.572s
sys	0m5.517s

2023-01-30 20:05:08,618 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-30 20:05:08,618 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:06:15,664 INFO     Done. Execution time: 67.0459656715393 seconds
2023-01-30 20:06:15,664 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz1272725503351279944/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1272725503351279944/bin -o /tmp/qfuzz1272725503351279944/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1272725503351279944/bin
Found file /tmp/qfuzz1272725503351279944/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz1272725503351279944/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1272725503351279944/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1272725503351279944/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1272725503351279944/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz1272725503351279944/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 145458 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m145k to 145k us (average: 145k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 80.00; [372.00,891.00,1031.00,1161.00,1411.00,1491.00,1631.00,1731.00]
2; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 8; 30.00; [931.00,1171.00,1291.00,1391.00,1612.00,1691.00,1801.00,1831.00]
5; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 8; 10.00; [471.00,1021.00,1031.00,1411.00,1491.00,1511.00,1572.00,1751.00]
6; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 8; 100.00; [372.00,891.00,1031.00,1161.00,1491.00,1631.00,1731.00,1991.00]
11; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 8; 30.00; [91.00,891.00,1092.00,1201.00,1231.00,1371.00,1631.00,1871.00]
23; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 8; 110.00; [351.00,471.00,651.00,772.00,1161.00,1271.00,1631.00,1791.00]
36; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta; 8; 119.00; [171.00,391.00,551.00,752.00,871.00,1181.00,1591.00,1731.00]
39; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 8; 130.00; [232.00,391.00,691.00,1031.00,1161.00,1291.00,1491.00,1811.00]
50; /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 8; 50.00; [91.00,372.00,891.00,1031.00,1161.00,1211.00,1411.00,1631.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 60, 81, 44, 4, 18, 82, 83, 20, 89, 91, 10, 5, 54, 19, 10, 12, 84, 61, 25, 77, 67, 57, 82, 19, 62, 89, 98, 10, 80, 9, 97, 62, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 90, 74, 64, 34, 19, 11, 80, 34, 19, 92, 92, 92, 92, 92, 11, 92, 92, 92, 92, 91, 82, 44, 77, 89, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 86, 8, 79, 19, 27, 43, 37, 27, 27, 27, 83, 94, 4, 80, 33, 20, 27, 34, 27, 27, 27, 32, 38, 23, 27, 26, 70, 4, 29, 44, 60, 61, 65, 4, 68, 16, 33, 93, 13, 86, 86, 86, 86, 83, 86, 86, 29, 42, 60, 78, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 23, 32, 17, 89, 63, 81, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59, 93, 81, 68, 4, 44, 61, 54, 56, 61, 97, 81, 34, 81, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 99, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 17, 53, 62, 41, 54, 46, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 51, 70, 75, 23, 74, 87, 78, 22, 77, 49, 13, 44, 95, 15, 9, 79, 75, 15, 63, 87, 78, 37, 77, 49, 13, 44, 95, 15, 74, 34, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 91, 84, 46, 69, 58, 64, 80, 80, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz1272725503351279944/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_200615_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,60,81,44,4], 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,90,74,64,34,19], 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,86,8,79,19,27,43], 37
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,23,32,17,89,63,81], 38
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59,93,81,68,4,44,61], 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,99,74,81,44,86], 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,51,70,75,23,74,87], 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,91,84,46,69,58,64], 80
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:06:15,665 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-30 20:06:15,665 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-30 20:06:31,433 INFO     Done. Execution time: 15.767573118209839 seconds
2023-01-30 20:06:31,433 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_200615_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_200615_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,60,81,44,4], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,90,74,64,34,19], 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,23,32,17,89,63,81], 38)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,86,8,79,19,27,43], 37)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59,93,81,68,4,44,61], 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,99,74,81,44,86], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,51,70,75,23,74,87], 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,91,84,46,69,58,64], 80)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,70,60,81,44,4]
separator: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,90,74,64,34,19]
separator: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [58,86,8,79,19,27,43]
separator: 37
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,23,32,17,89,63,81]
separator: 38
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [59,93,81,68,4,44,61]
separator: 54
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,99,74,81,44,86]
separator: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [50,51,70,75,23,74,87]
separator: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [89,91,84,46,69,58,64]
separator: 80
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [57,51,70,74,81,44,86]
separator: 18
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects         |  separator  |
-------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [57,51,70,60,81,44,4]  |         18  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [57,51,70,60,81,44,4]  |         18  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [57,51,70,60,81,44,4]  |         18  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [57,51,70,60,81,44,4]  |         18  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [57,51,70,60,81,44,4]  |         18  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [57,51,70,60,81,44,4]  |         18  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     57  |  0  |  [57,51,70,60,81,44,4]  |         18  |
    22  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |  [57,51,70,60,81,44,4]  |         18  |
    26  |                         i = i + 1;  |         |   57  |     57  |  1  |  [57,51,70,60,81,44,4]  |         18  |
    32  |                 R = R + separator;  |     18  |   75  |     57  |  1  |  [57,51,70,60,81,44,4]  |         18  |
    35  |     chunk = arrayRead(objects, i);  |         |   75  |     51  |  1  |  [57,51,70,60,81,44,4]  |         18  |
    38  |                     R = R + chunk;  |     51  |  126  |     51  |  1  |  [57,51,70,60,81,44,4]  |         18  |
    42  |                         i = i + 1;  |         |  126  |     51  |  2  |  [57,51,70,60,81,44,4]  |         18  |
    43  |              resetPlaceHolder_1();  |         |  126  |     51  |  2  |  [57,51,70,60,81,44,4]  |         18  |
    49  |                 R = R + separator;  |     18  |  144  |     51  |  2  |  [57,51,70,60,81,44,4]  |         18  |
    52  |     chunk = arrayRead(objects, i);  |         |  144  |     70  |  2  |  [57,51,70,60,81,44,4]  |         18  |
    55  |                     R = R + chunk;  |     70  |  214  |     70  |  2  |  [57,51,70,60,81,44,4]  |         18  |
    59  |                         i = i + 1;  |         |  214  |     70  |  3  |  [57,51,70,60,81,44,4]  |         18  |
    60  |              resetPlaceHolder_1();  |         |  214  |     70  |  3  |  [57,51,70,60,81,44,4]  |         18  |
    66  |                 R = R + separator;  |     18  |  232  |     70  |  3  |  [57,51,70,60,81,44,4]  |         18  |
    69  |     chunk = arrayRead(objects, i);  |         |  232  |     60  |  3  |  [57,51,70,60,81,44,4]  |         18  |
    72  |                     R = R + chunk;  |     60  |  292  |     60  |  3  |  [57,51,70,60,81,44,4]  |         18  |
    76  |                         i = i + 1;  |         |  292  |     60  |  4  |  [57,51,70,60,81,44,4]  |         18  |
    77  |              resetPlaceHolder_1();  |         |  292  |     60  |  4  |  [57,51,70,60,81,44,4]  |         18  |
    83  |                 R = R + separator;  |     18  |  310  |     60  |  4  |  [57,51,70,60,81,44,4]  |         18  |
    86  |     chunk = arrayRead(objects, i);  |         |  310  |     81  |  4  |  [57,51,70,60,81,44,4]  |         18  |
    89  |                     R = R + chunk;  |     81  |  391  |     81  |  4  |  [57,51,70,60,81,44,4]  |         18  |
    93  |                         i = i + 1;  |         |  391  |     81  |  5  |  [57,51,70,60,81,44,4]  |         18  |
    94  |              resetPlaceHolder_1();  |         |  391  |     81  |  5  |  [57,51,70,60,81,44,4]  |         18  |
   100  |                 R = R + separator;  |     18  |  409  |     81  |  5  |  [57,51,70,60,81,44,4]  |         18  |
   103  |     chunk = arrayRead(objects, i);  |         |  409  |     44  |  5  |  [57,51,70,60,81,44,4]  |         18  |
   106  |                     R = R + chunk;  |     44  |  453  |     44  |  5  |  [57,51,70,60,81,44,4]  |         18  |
   110  |                         i = i + 1;  |         |  453  |     44  |  6  |  [57,51,70,60,81,44,4]  |         18  |
   111  |              resetPlaceHolder_1();  |         |  453  |     44  |  6  |  [57,51,70,60,81,44,4]  |         18  |
   117  |                 R = R + separator;  |     18  |  471  |     44  |  6  |  [57,51,70,60,81,44,4]  |         18  |
   120  |     chunk = arrayRead(objects, i);  |         |  471  |      4  |  6  |  [57,51,70,60,81,44,4]  |         18  |
   123  |                     R = R + chunk;  |      4  |  475  |      4  |  6  |  [57,51,70,60,81,44,4]  |         18  |
   127  |                         i = i + 1;  |         |  475  |      4  |  7  |  [57,51,70,60,81,44,4]  |         18  |
   128  |              resetPlaceHolder_1();  |         |  475  |      4  |  7  |  [57,51,70,60,81,44,4]  |         18  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     57  |                            |
    32  |     R = R + separator;  |     18  |                         0  |
    38  |         R = R + chunk;  |     51  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     18  |                         1  |
    55  |         R = R + chunk;  |     70  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     18  |                         2  |
    72  |         R = R + chunk;  |     60  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     18  |                         3  |
    89  |         R = R + chunk;  |     81  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     18  |                         4  |
   106  |         R = R + chunk;  |     44  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     18  |                         5  |
   123  |         R = R + chunk;  |      4  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,72,106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,55,89,123}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [106, 89, 38, 22, 123, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89,106,123}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     57  |                            |                         0  |
    32  |     R = R + separator;  |     18  |                         0  |                            |
    38  |         R = R + chunk;  |     51  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     18  |                         1  |                            |
    55  |         R = R + chunk;  |     70  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     18  |                         2  |                            |
    72  |         R = R + chunk;  |     60  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     18  |                         3  |                            |
    89  |         R = R + chunk;  |     81  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     18  |                         4  |                            |
   106  |         R = R + chunk;  |     44  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     18  |                         5  |                            |
   123  |         R = R + chunk;  |      4  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-30 20:06:31,433 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:06:40,563 INFO     Done. Execution time: 9.130043268203735 seconds
2023-01-30 20:06:40,564 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2006-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2006-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.121s
user	0m19.068s
sys	0m1.923s

2023-01-30 20:06:40,564 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-30 20:06:40,564 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:07:47,078 INFO     Done. Execution time: 66.51402282714844 seconds
2023-01-30 20:07:47,079 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz3189774987962507380/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3189774987962507380/bin -o /tmp/qfuzz3189774987962507380/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3189774987962507380/bin
Found file /tmp/qfuzz3189774987962507380/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz3189774987962507380/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3189774987962507380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3189774987962507380/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3189774987962507380/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3189774987962507380/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 137906 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 10.00; [1164.00,1418.00,1638.00,1648.00]
2; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 4; 6.00; [98.00,104.00,1338.00,1488.00]
3; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 4; 30.00; [178.00,208.00,1164.00,1418.00]
5; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 4; 314.00; [178.00,1024.00,1338.00,1708.00]
11; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 4; 410.00; [208.00,618.00,1164.00,1618.00]
21; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 10.00; [118.00,184.00,1568.00,1578.00]
25; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 4; 234.00; [358.00,1164.00,1398.00,1688.00]
43; /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 4; 466.00; [208.00,698.00,1164.00,1638.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 34, 74, 81, 44, 86, 18, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 66, 17, 54, 69, 22, 82, 27, 84, 69, 10, 61, 61, 61, 61, 37, 83, 4, 47, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 34, 78, 78, 5, 4, 70, 47, 78, 78, 78, 78, 5, 42, 7, 10, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 80, 74, 30, 80, 53, 62, 10, 4, 16, 10, 12, 91, 35, 25, 90, 46, 57, 82, 79, 77, 89, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 57, 8, 74, 66, 36, 57, 40, 85, 60, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 8, 41, 54, 19, 10, 12, 91, 70, 25, 90, 67, 57, 82, 46, 77, 80, 7, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 66, 60, 4, 47, 4, 4, 74, 80, 51, 73, 93, 62, 36, 73, 32, 88, 93, 24, 56, 60, 56, 59, 10, 89, 97, 64, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3189774987962507380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_200746_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,34,74,81,44,86], 18, 10, 80
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,66,17,54,69,22,82], 27, 84, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,34,78,78,5,4,70], 47, 78, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,80,74,30,80,53], 62, 10, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,57,8,74,66,36,57], 40, 85, 60
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,8,41,54], 19, 10, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,66,60,4,47,4], 4, 74, 80
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18, 82, 83
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:07:47,079 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-30 20:07:47,079 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-30 20:07:57,158 INFO     Done. Execution time: 10.078471899032593 seconds
2023-01-30 20:07:57,158 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_200746_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_200746_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,34,74,81,44,86], 18, 10, 80)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,34,78,78,5,4,70], 47, 78, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,66,17,54,69,22,82], 27, 84, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,80,74,30,80,53], 62, 10, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,57,8,74,66,36,57], 40, 85, 60)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,66,60,4,47,4], 4, 74, 80)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,8,41,54], 19, 10, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18, 82, 83)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,34,74,81,44,86]
searchString: 18
replacement: 10
max: 80
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,66,17,54,69,22,82]
searchString: 27
replacement: 84
max: 69
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [8,34,78,78,5,4,70]
searchString: 47
replacement: 78
max: 78
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,80,74,30,80,53]
searchString: 62
replacement: 10
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [50,57,8,74,66,36,57]
searchString: 40
replacement: 85
max: 60
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,8,41,54]
searchString: 19
replacement: 10
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,4,66,60,4,47,4]
searchString: 4
replacement: 74
max: 80
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [57,51,70,74,81,44,86]
searchString: 18
replacement: 82
max: 83
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |           text           |
-----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     57  |  0  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    51  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    54  |               R = R + replacement;  |     10  |   67  |     57  |  0  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |   67  |     51  |  0  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    63  |                         i = i + 2;  |         |   67  |     51  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    64  |              resetPlaceHolder_1();  |         |   67  |     51  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    72  |        chunk = arrayRead(text, i);  |         |   67  |     34  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    75  |                     R = R + chunk;  |     34  |  101  |     34  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    78  |               R = R + replacement;  |     10  |  111  |     34  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  111  |     74  |  2  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    87  |                         i = i + 2;  |         |  111  |     74  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    88  |              resetPlaceHolder_1();  |         |  111  |     74  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    96  |        chunk = arrayRead(text, i);  |         |  111  |     81  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
    99  |                     R = R + chunk;  |     81  |  192  |     81  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
   102  |               R = R + replacement;  |     10  |  202  |     81  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
   107  |  chunk = arrayRead(text, (i + 1...  |         |  202  |     44  |  4  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
   111  |                         i = i + 2;  |         |  202  |     44  |  6  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
   112  |              resetPlaceHolder_1();  |         |  202  |     44  |  6  |   80  |           10  |            18  |  [57,51,34,74,81,44,86]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [78, 102, 54, 99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     57  |                            |
    54  |   R = R + replacement;  |     10  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |     34  |                            |
    78  |   R = R + replacement;  |     10  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     81  |                            |
   102  |   R = R + replacement;  |     10  |                         2  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [99, 75, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {54}; {78}
GroupID(1): {51,75,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     57  |                            |                         0  |
    54  |   R = R + replacement;  |     10  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |     34  |                            |                         0  |
    78  |   R = R + replacement;  |     10  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     81  |                            |                         0  |
   102  |   R = R + replacement;  |     10  |                         2  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64, 88)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-30 20:07:57,159 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:09:45,889 INFO     Done. Execution time: 108.73041892051697 seconds
2023-01-30 20:09:45,889 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8143300966825816670.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `106.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2007-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2007-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m48.723s
user	4m10.402s
sys	0m21.312s

2023-01-30 20:09:45,890 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-30 20:09:45,890 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:10:52,465 INFO     Done. Execution time: 66.57517981529236 seconds
2023-01-30 20:10:52,465 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz4718337123223280634/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4718337123223280634/bin -o /tmp/qfuzz4718337123223280634/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4718337123223280634/bin
Found file /tmp/qfuzz4718337123223280634/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz4718337123223280634/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4718337123223280634/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4718337123223280634/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4718337123223280634/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz4718337123223280634/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 116883 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m116k to 116k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 60, 4, 85, 27, 82, 91, 16, 68, 51, 50, 15, 32, 8, 34, 34, 34, 76, 92, 99, 8, 34, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz4718337123223280634/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_201052_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 60
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 51
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:10:52,466 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-30 20:10:52,466 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-30 20:11:00,566 INFO     Done. Execution time: 8.09997272491455 seconds
2023-01-30 20:11:00,566 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_201052_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_201052_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 60)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 51)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 60
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 51
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            60  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            60  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            60  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            60  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            60  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            60  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            60  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            60  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            60  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            60  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            60  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            60  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-30 20:11:00,566 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:11:27,647 INFO     Done. Execution time: 27.080846309661865 seconds
2023-01-30 20:11:27,648 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `24.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2011-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m27.071s
user	0m49.532s
sys	0m4.856s

2023-01-30 20:11:27,648 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 20:11:27,648 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:12:34,027 INFO     Done. Execution time: 66.3790032863617 seconds
2023-01-30 20:12:34,028 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz6205250243384748726/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6205250243384748726/bin -o /tmp/qfuzz6205250243384748726/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6205250243384748726/bin
Found file /tmp/qfuzz6205250243384748726/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz6205250243384748726/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6205250243384748726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6205250243384748726/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6205250243384748726/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz6205250243384748726/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 133889 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
9; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [1170.00]
12; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [1710.00]
17; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 2; 536.00; [1170.00,1706.00]
28; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 2; 1764.00; [166.00,1930.00]
59; /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta; 3; 234.00; [936.00,1170.00,1737.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 5, 4, 34, 20, 89, 18, 21, 46, 40, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 5, 50, 78, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 80, 80, 97, 57, 5, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 4, 82, 6, 5, 36, 4, 67, 35, 82, 14, 94, 89, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 61, 5, 70, 18, 48, 60, 4, 25, 26, 89, 4, 4, 4, 4, 4, 4, 4, 4, 4, 45, 42, 4, 4, 99, 66)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 49, 6, 6, 6, 6, 36, 57, 91, 66)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz6205250243384748726/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_201233_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 5, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,5,50,78,5,5,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,4,82], 6, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [84,61,5,70,18,48,60], 4, 25
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,5,6,6,6,6], 6, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 18, 82
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:12:34,028 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 20:12:34,029 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 20:12:43,359 INFO     Done. Execution time: 9.330547571182251 seconds
2023-01-30 20:12:43,360 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_201233_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_201233_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 5, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,5,50,78,5,5,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,4,82], 6, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([84,61,5,70,18,48,60], 4, 25)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,5,6,6,6,6], 6, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 18, 82)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [57,51,70,74,81,44,86]
isSeparator: 18
max: 82
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [57,51,70,74,81,44,86]
isSeparator: 5
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [95,5,50,78,5,5,5]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [57,51,70,74,81,4,82]
isSeparator: 6
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [84,61,5,70,18,48,60]
isSeparator: 4
max: 25
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [57,51,5,6,6,6,6]
isSeparator: 6
max: 6
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 29):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |           str            |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           18  |   82  |  [57,51,70,74,81,44,86]  |
    28  |     return;  |         |  0  |           18  |   82  |  [57,51,70,74,81,44,86]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 187):
                                                                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |           str            |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            5  |                    |    4  |                   |  [57,51,70,74,81,44,86]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            5  |                    |    4  |                   |  [57,51,70,74,81,44,86]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            5  |                    |    4  |                   |  [57,51,70,74,81,44,86]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            5  |                    |    4  |                   |  [57,51,70,74,81,44,86]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            5  |                    |    4  |                0  |  [57,51,70,74,81,44,86]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            5  |                    |    4  |                0  |  [57,51,70,74,81,44,86]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |     57  |  0  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    54  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    58  |                         i = i + 1;  |         |   57  |     57  |  1  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    59  |              resetPlaceHolder_1();  |         |   57  |     57  |  1  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    65  |         chunk = arrayRead(str, i);  |         |   57  |     51  |  1  |            5  |                 0  |    4  |                0  |  [57,51,70,74,81,44,86]  |
    76  |  numberOfStrings = numberOfStri...  |         |   57  |     51  |  1  |            5  |                 0  |    4  |                1  |  [57,51,70,74,81,44,86]  |
    80  |                         i = i + 1;  |         |   57  |     51  |  2  |            5  |                 0  |    4  |                1  |  [57,51,70,74,81,44,86]  |
    81  |              resetPlaceHolder_1();  |         |   57  |     51  |  2  |            5  |                 0  |    4  |                1  |  [57,51,70,74,81,44,86]  |
    87  |         chunk = arrayRead(str, i);  |         |   57  |     70  |  2  |            5  |                 0  |    4  |                1  |  [57,51,70,74,81,44,86]  |
    98  |  numberOfStrings = numberOfStri...  |         |   57  |     70  |  2  |            5  |                 0  |    4  |                2  |  [57,51,70,74,81,44,86]  |
   102  |                         i = i + 1;  |         |   57  |     70  |  3  |            5  |                 0  |    4  |                2  |  [57,51,70,74,81,44,86]  |
   103  |              resetPlaceHolder_1();  |         |   57  |     70  |  3  |            5  |                 0  |    4  |                2  |  [57,51,70,74,81,44,86]  |
   109  |         chunk = arrayRead(str, i);  |         |   57  |     74  |  3  |            5  |                 0  |    4  |                2  |  [57,51,70,74,81,44,86]  |
   120  |  numberOfStrings = numberOfStri...  |         |   57  |     74  |  3  |            5  |                 0  |    4  |                3  |  [57,51,70,74,81,44,86]  |
   124  |                         i = i + 1;  |         |   57  |     74  |  4  |            5  |                 0  |    4  |                3  |  [57,51,70,74,81,44,86]  |
   125  |              resetPlaceHolder_1();  |         |   57  |     74  |  4  |            5  |                 0  |    4  |                3  |  [57,51,70,74,81,44,86]  |
   131  |         chunk = arrayRead(str, i);  |         |   57  |     81  |  4  |            5  |                 0  |    4  |                3  |  [57,51,70,74,81,44,86]  |
   142  |  numberOfStrings = numberOfStri...  |         |   57  |     81  |  4  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   146  |                         i = i + 1;  |         |   57  |     81  |  5  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   147  |              resetPlaceHolder_1();  |         |   57  |     81  |  5  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   153  |         chunk = arrayRead(str, i);  |         |   57  |     44  |  5  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   160  |                     R = R + chunk;  |     44  |  101  |     44  |  5  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   164  |                         i = i + 1;  |         |  101  |     44  |  6  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   165  |                          continue;  |         |  101  |     44  |  6  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   171  |         chunk = arrayRead(str, i);  |         |  101  |     86  |  6  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   178  |                     R = R + chunk;  |     86  |  187  |     86  |  6  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   182  |                         i = i + 1;  |         |  187  |     86  |  7  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
   183  |                          continue;  |         |  187  |     86  |  7  |            5  |                 0  |    4  |                4  |  [57,51,70,74,81,44,86]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [54, 160, 178]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54,160,178}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     57  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     44  |                         0  |
   178  |         R = R + chunk;  |     86  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-30 20:12:43,360 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:14:45,544 INFO     Done. Execution time: 122.18406772613525 seconds
2023-01-30 20:14:45,544 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `119.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2012-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2012-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m2.175s
user	3m16.849s
sys	0m7.945s

2023-01-30 20:14:45,545 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-30 20:14:45,545 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:15:52,087 INFO     Done. Execution time: 66.54197072982788 seconds
2023-01-30 20:15:52,087 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2299650375920843424/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2299650375920843424/bin -o /tmp/qfuzz2299650375920843424/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2299650375920843424/bin
Found file /tmp/qfuzz2299650375920843424/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2299650375920843424/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2299650375920843424/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2299650375920843424/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2299650375920843424/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz2299650375920843424/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 130562 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2299650375920843424/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2299650375920843424/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz2299650375920843424/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_201551_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:15:52,087 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-30 20:15:52,088 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-30 20:15:55,343 INFO     Done. Execution time: 3.2547779083251953 seconds
2023-01-30 20:15:55,343 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_201551_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_201551_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-30 20:15:55,343 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:15:57,736 INFO     Done. Execution time: 2.392805814743042 seconds
2023-01-30 20:15:57,736 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2015-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.385s
user	0m4.176s
sys	0m0.302s

2023-01-30 20:15:57,736 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-30 20:15:57,737 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:17:04,267 INFO     Done. Execution time: 66.53043603897095 seconds
2023-01-30 20:17:04,268 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz254686953712273988/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz254686953712273988/bin -o /tmp/qfuzz254686953712273988/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz254686953712273988/bin
Found file /tmp/qfuzz254686953712273988/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz254686953712273988/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz254686953712273988/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz254686953712273988/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz254686953712273988/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz254686953712273988/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz254686953712273988/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz254686953712273988/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 133457 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz254686953712273988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz254686953712273988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz254686953712273988/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_201703_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 51, 70, false, 81
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:17:04,268 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-30 20:17:04,268 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-30 20:17:08,061 INFO     Done. Execution time: 3.7921149730682373 seconds
2023-01-30 20:17:08,061 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_201703_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_201703_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 51, 70, false, 81)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 70
separatorChars: 51
preserveAllTokens: false
choice: 81
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      81  |   70  |              false  |              51  |    2  |
    32  |     return;  |         |  0  |      81  |   70  |              false  |              51  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-30 20:17:08,061 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:17:10,857 INFO     Done. Execution time: 2.7955565452575684 seconds
2023-01-30 20:17:10,857 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2017-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.787s
user	0m5.061s
sys	0m0.358s

2023-01-30 20:17:10,858 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-30 20:17:10,858 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:18:17,733 INFO     Done. Execution time: 66.87554883956909 seconds
2023-01-30 20:18:17,734 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz7542388007886687340/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7542388007886687340/bin -o /tmp/qfuzz7542388007886687340/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7542388007886687340/bin
Found file /tmp/qfuzz7542388007886687340/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz7542388007886687340/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7542388007886687340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7542388007886687340/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7542388007886687340/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz7542388007886687340/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 136507 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 27, 8, 60, 21, 32, 28, 20, 43, 27, 75, 92, 8, 8, 34, 77, 21, 51, 13, 77, 21, 51, 13, 25, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7542388007886687340/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_201817_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:18:17,734 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-30 20:18:17,734 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-30 20:18:22,771 INFO     Done. Execution time: 5.036437034606934 seconds
2023-01-30 20:18:22,771 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_201817_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_201817_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-30 20:18:22,772 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:18:25,384 INFO     Done. Execution time: 2.612415313720703 seconds
2023-01-30 20:18:25,384 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2018-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-2018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.603s
user	0m4.611s
sys	0m0.262s

2023-01-30 20:18:25,385 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-30 20:18:25,385 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:19:32,142 INFO     Done. Execution time: 66.75744581222534 seconds
2023-01-30 20:19:32,143 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz3492390514608878897/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3492390514608878897/bin -o /tmp/qfuzz3492390514608878897/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3492390514608878897/bin
Found file /tmp/qfuzz3492390514608878897/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz3492390514608878897/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3492390514608878897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3492390514608878897/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3492390514608878897/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz3492390514608878897/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 130344 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 100.00; [1162.00,1418.00,1638.00,1738.00]
2; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 4.00; [98.00,102.00,558.00,1938.00]
3; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 4; 140.00; [138.00,362.00,598.00,738.00]
5; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 4; 220.00; [738.00,1162.00,1418.00,1638.00]
7; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 4; 96.00; [1162.00,1258.00,1638.00,1738.00]
8; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 4; 460.00; [178.00,638.00,1162.00,1738.00]
11; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 4; 160.00; [1162.00,1418.00,1638.00,1798.00]
22; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 104.00; [1058.00,1162.00,1418.00,1618.00]
45; /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 4; 464.00; [178.00,778.00,1438.00,1902.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 67, 71, 82, 8, 38, 38, 38, 38, 38, 4, 5, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 87, 52, 11, 80, 99, 62, 41, 54, 19, 10, 12, 91, 70, 54, 90, 67, 57, 82, 79, 77, 89, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 89, 18, 82, 83, 20, 89, 91, 21, 46, 69, 6, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 8, 4, 31, 44, 86, 8, 82, 83, 9, 89, 91, 5, 4, 35, 89, 68, 10, 70, 58, 97, 57, 63, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 62, 74, 81, 44, 86, 18, 82, 83, 20, 89, 33, 21, 46, 69, 53, 53, 41, 54, 19, 10, 7, 91, 70, 70, 28, 67, 57, 89, 68, 10, 80, 80, 97, 48, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 91, 36, 18, 82, 83, 20, 33, 91, 21, 46, 69, 89, 66, 80, 80, 97, 63, 67, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 74, 29, 19, 6, 83, 38, 36, 64, 51, 4, 83, 29, 80, 49, 41, 16, 73, 74, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 27, 17, 96, 22, 83, 83, 25, 70, 75, 41, 66, 43, 27, 26, 87, 25, 70, 75, 41, 66, 43, 27, 75, 92, 99, 9, 34, 13, 79, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz3492390514608878897/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_201931_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [94,67,71,82,8,38,38], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,87,52,11,80], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,89], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,8,4,31,44,86], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,62,74,81,44,86], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,91,36], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,74,29,19,6,83,38], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,27,17,96], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,51,70,74,81,44,86], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:19:32,143 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-30 20:19:32,143 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-30 20:19:42,108 INFO     Done. Execution time: 9.964371919631958 seconds
2023-01-30 20:19:42,108 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_201931_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_201931_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([94,67,71,82,8,38,38], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,89], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,8,4,31,44,86], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,87,52,11,80], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,62,74,81,44,86], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,91,36], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,74,29,19,6,83,38], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,27,17,96], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,51,70,74,81,44,86], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [94,67,71,82,8,38,38]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,70,87,52,11,80]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,70,74,81,44,89]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,8,4,31,44,86]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,62,74,81,44,86]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,70,74,81,91,36]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [17,74,29,19,6,83,38]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [4,4,4,4,27,17,96]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [57,51,70,74,81,44,86]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |        template         |
----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [94,67,71,82,8,38,38]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [94,67,71,82,8,38,38]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [94,67,71,82,8,38,38]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [94,67,71,82,8,38,38]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [94,67,71,82,8,38,38]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [94,67,71,82,8,38,38]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [94,67,71,82,8,38,38]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     94  |  0  |          0  |  [94,67,71,82,8,38,38]  |
    32  |                     R = R + chunk;  |     94  |   94  |     2  |     94  |  0  |          0  |  [94,67,71,82,8,38,38]  |
    36  |                         i = i + 1;  |         |   94  |     2  |     94  |  1  |          0  |  [94,67,71,82,8,38,38]  |
    44  |  separator = arrayRead(template...  |         |   94  |     2  |     94  |  1  |         67  |  [94,67,71,82,8,38,38]  |
    49  |  chunk = arrayRead(template, (i...  |         |   94  |     2  |     71  |  1  |         67  |  [94,67,71,82,8,38,38]  |
    52  |                     R = R + chunk;  |     71  |  165  |     2  |     71  |  1  |         67  |  [94,67,71,82,8,38,38]  |
    56  |                         i = i + 2;  |         |  165  |     2  |     71  |  3  |         67  |  [94,67,71,82,8,38,38]  |
    57  |              resetPlaceHolder_1();  |         |  165  |     2  |     71  |  3  |         67  |  [94,67,71,82,8,38,38]  |
    65  |  separator = arrayRead(template...  |         |  165  |     2  |     71  |  3  |         82  |  [94,67,71,82,8,38,38]  |
    70  |  chunk = arrayRead(template, (i...  |         |  165  |     2  |      8  |  3  |         82  |  [94,67,71,82,8,38,38]  |
    73  |                     R = R + chunk;  |      8  |  173  |     2  |      8  |  3  |         82  |  [94,67,71,82,8,38,38]  |
    77  |                         i = i + 2;  |         |  173  |     2  |      8  |  5  |         82  |  [94,67,71,82,8,38,38]  |
    78  |              resetPlaceHolder_1();  |         |  173  |     2  |      8  |  5  |         82  |  [94,67,71,82,8,38,38]  |
    86  |  separator = arrayRead(template...  |         |  173  |     2  |      8  |  5  |         38  |  [94,67,71,82,8,38,38]  |
    91  |  chunk = arrayRead(template, (i...  |         |  173  |     2  |     38  |  5  |         38  |  [94,67,71,82,8,38,38]  |
    94  |                     R = R + chunk;  |     38  |  211  |     2  |     38  |  5  |         38  |  [94,67,71,82,8,38,38]  |
    98  |                         i = i + 2;  |         |  211  |     2  |     38  |  7  |         38  |  [94,67,71,82,8,38,38]  |
    99  |              resetPlaceHolder_1();  |         |  211  |     2  |     38  |  7  |         38  |  [94,67,71,82,8,38,38]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [32, 52, 73, 94]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52,73,94}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     94  |                         0  |
    52  |         R = R + chunk;  |     71  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |      8  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |     38  |                         0  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-30 20:19:42,109 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:19:44,017 INFO     Done. Execution time: 1.9088082313537598 seconds
2023-01-30 20:19:44,018 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.900s
user	0m3.505s
sys	0m0.151s

2023-01-30 20:19:44,018 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-30 20:19:44,018 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:20:50,270 INFO     Done. Execution time: 66.25151872634888 seconds
2023-01-30 20:20:50,270 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz7741662937262504699/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7741662937262504699/bin -o /tmp/qfuzz7741662937262504699/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7741662937262504699/bin
Found file /tmp/qfuzz7741662937262504699/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz7741662937262504699/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7741662937262504699/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7741662937262504699/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7741662937262504699/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz7741662937262504699/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 134596 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [1154.00]
2; /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 1; 0.00; [94.00]
8; /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 1; 0.00; [354.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 79, 77, 17, 17, 17, 17, 23, 34, 78, 34, 33, 89, 85, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 27, 74, 76, 11, 57, 20, 54, 53, 25, 14, 36, 43, 8, 75, 92, 99, 8, 34, 13, 8, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz7741662937262504699/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_202050_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 17, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 57, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:20:50,270 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-30 20:20:50,270 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-30 20:20:56,164 INFO     Done. Execution time: 5.893440246582031 seconds
2023-01-30 20:20:56,164 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_202050_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_202050_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(17, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(57, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 17
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 4
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 57
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      17  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      17  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      17  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      17  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      17  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  17  |      17  |
    29  |                    R = R + string;  |     17  |  17  |      |          2  |  17  |      17  |
    31  |                    int i = string;  |         |  17  |  17  |          2  |  17  |      17  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     17  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-30 20:20:56,165 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:20:58,107 INFO     Done. Execution time: 1.942216396331787 seconds
2023-01-30 20:20:58,107 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.934s
user	0m3.517s
sys	0m0.225s

2023-01-30 20:20:58,108 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-30 20:20:58,108 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds`
2023-01-30 20:22:04,877 INFO     Done. Execution time: 66.76967859268188 seconds
2023-01-30 20:22:04,878 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 100 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz4244668883850106350/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4244668883850106350/bin -o /tmp/qfuzz4244668883850106350/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4244668883850106350/bin
Found file /tmp/qfuzz4244668883850106350/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz4244668883850106350/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4244668883850106350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4244668883850106350/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4244668883850106350/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds -o /tmp/qfuzz4244668883850106350/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 131942 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4244668883850106350/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4244668883850106350/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 100] from /tmp/qfuzz4244668883850106350/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 51, 70, 74, 81, 44, 86, 18, 82, 83, 20, 89, 91, 21, 46, 69, 89, 68, 10, 80, 80, 97, 57, 74, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_202204_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 57, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 20:22:04,878 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-30 20:22:04,878 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-30 20:22:08,560 INFO     Done. Execution time: 3.6812262535095215 seconds
2023-01-30 20:22:08,560 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_202204_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_202204_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(57, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 57
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |      57  |
    22  |     return;  |         |  0  |          2  |      57  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-30 20:22:08,560 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 20:22:11,242 INFO     Done. Execution time: 2.6812245845794678 seconds
2023-01-30 20:22:11,242 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-2022-transparentAmortize-60s-mostPrecise/guava-raw-0130-2022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.673s
user	0m4.638s
sys	0m0.356s

2023-01-30 20:22:11,243 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.575031042099,
    12.158388376235962,
    8.10906195640564
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.13854670524597,
    23.121662616729736,
    63.24789309501648
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.58790135383606,
    17.719860076904297,
    63.53309965133667
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    66.2195451259613,
    20.9772732257843,
    18.08371591567993
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    66.49909162521362,
    13.389156579971313,
    10.504178047180176
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": [
    66.74020266532898,
    11.977284908294678,
    174.0300371646881
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": [
    66.53536629676819,
    7.483335256576538,
    9.032238006591797
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.4590437412262,
    6.84720778465271,
    18.280375719070435
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.22781801223755,
    7.550723075866699,
    9.17375373840332
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.81180548667908,
    89.87111735343933,
    12.5436532497406
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    2.1005845069885254,
    2.1072628498077393,
    1.2029666900634766
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.37198281288147,
    5.957144260406494,
    19.30591583251953
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.58144068717957,
    3.461177110671997,
    2.4765238761901855
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.33600330352783,
    6.00401759147644,
    8.560551404953003
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.46141910552979,
    13.124116659164429,
    10.164844274520874
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.63085508346558,
    17.36632776260376,
    68.65824866294861
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    66.3627278804779,
    6.135922193527222,
    9.676833629608154
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    67.04050016403198,
    16.160118103027344,
    224.82565355300903
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.61413073539734,
    8.533282041549683,
    8.566503286361694
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.63518500328064,
    7.952779769897461,
    8.261899948120117
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    67.16235780715942,
    6.833918333053589,
    7.800934076309204
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.70218992233276,
    7.383141994476318,
    9.052243709564209
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.37313270568848,
    7.82239294052124,
    10.406426429748535
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.72158718109131,
    5.05380916595459,
    2.44975209236145
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.17061305046082,
    9.336329460144043,
    12.319676876068115
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.62755107879639,
    8.414280414581299,
    9.806748628616333
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.73118209838867,
    6.358188629150391,
    8.119452238082886
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.53724503517151,
    6.78715443611145,
    24.687711238861084
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.94568657875061,
    3.3812901973724365,
    2.662625789642334
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.88710856437683,
    16.221914768218994,
    17.302311182022095
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    67.0459656715393,
    15.767573118209839,
    9.130043268203735
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.51402282714844,
    10.078471899032593,
    108.73041892051697
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    66.57517981529236,
    8.09997272491455,
    27.080846309661865
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.3790032863617,
    9.330547571182251,
    122.18406772613525
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.54197072982788,
    3.2547779083251953,
    2.392805814743042
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.53043603897095,
    3.7921149730682373,
    2.7955565452575684
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    66.87554883956909,
    5.036437034606934,
    2.612415313720703
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.75744581222534,
    9.964371919631958,
    1.9088082313537598
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.25151872634888,
    5.893440246582031,
    1.942216396331787
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.76967859268188,
    3.6812262535095215,
    2.6812245845794678
  ]
}
2023-01-30 20:22:11,243 INFO     Total time elapsed: 4183.722350358963 seconds
2023-01-30 20:22:11,243 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-30 20:22:11,243 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 16,
  "stringutils": 9,
  "guava": 1
}
2023-01-30 20:22:11,243 INFO     Number of not verified programs: {
  "stac": 4,
  "lang3": 3,
  "stringutils": 1
}
2023-01-30 20:22:11,244 INFO     Number of unknown programs: {
  "lang3": 1,
  "guava": 2
}
2023-01-30 20:22:11,244 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 1
}
2023-01-30 20:22:11,245 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230130_17-56-48/qfuzz_00.json

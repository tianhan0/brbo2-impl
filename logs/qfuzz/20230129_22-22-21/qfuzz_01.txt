2023-01-30 05:19:10,740 INFO     Arguments:
2023-01-30 05:19:10,740 INFO     timeout	180
2023-01-30 05:19:10,740 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-30 05:19:10,740 INFO     samples	0
2023-01-30 05:19:10,740 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-30 05:19:10,740 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-30 05:19:10,740 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-30 05:19:10,740 INFO     dry	False
2023-01-30 05:19:10,740 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/qfuzz_01.txt
2023-01-30 05:19:10,740 INFO     mode	qfuzz
2023-01-30 05:19:10,740 INFO     version	master
2023-01-30 05:19:10,740 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
2023-01-30 05:19:10,740 INFO     min_int	4
2023-01-30 05:19:10,740 INFO     max_int	12
2023-01-30 05:19:10,740 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-30 05:19:10,745 INFO     Done. Execution time: 0.004080295562744141 seconds
2023-01-30 05:19:10,745 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "aa264def5ebbe5ecb500828e9794bc0f8c7ec57d"`
2023-01-30 05:19:10,749 INFO     Done. Execution time: 0.004305601119995117 seconds
2023-01-30 05:19:10,750 INFO     Build a new version: "aa264def5ebbe5ecb500828e9794bc0f8c7ec57d"
2023-01-30 05:19:10,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-30 05:19:22,623 INFO     Done. Execution time: 11.872906923294067 seconds
2023-01-30 05:19:22,623 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 37 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 5 s, completed Jan 30, 2023 5:19:22 AM

2023-01-30 05:19:22,628 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-30 05:19:22,628 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 05:22:28,717 INFO     Done. Execution time: 186.08899855613708 seconds
2023-01-30 05:22:28,717 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz6253599626981581567/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6253599626981581567/bin -o /tmp/qfuzz6253599626981581567/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6253599626981581567/bin
Found file /tmp/qfuzz6253599626981581567/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz6253599626981581567/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6253599626981581567/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6253599626981581567/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6253599626981581567/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz6253599626981581567/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 124984 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 30, exec speed = 107447 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m107k to 124k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 20.00; [95.00,115.00,135.00,164.00]
1; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 11.00; [95.00,124.00,135.00,155.00]
3; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 5; 9.00; [95.00,135.00,235.00,255.00,264.00]
4; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 5; 20.00; [95.00,155.00,175.00,195.00,264.00]
7; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 20.00; [95.00,115.00,155.00,175.00,224.00]
10; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 5; 20.00; [95.00,115.00,164.00,235.00,255.00]
17; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 5; 20.00; [115.00,164.00,195.00,235.00,255.00]
19; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 5; 29.00; [95.00,135.00,164.00,215.00,255.00]
21; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 3; 29.00; [15.00,235.00,264.00]
40; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta; 5; 31.00; [95.00,135.00,184.00,215.00,255.00]
101; /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta; 5; 40.00; [95.00,135.00,175.00,215.00,264.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 4, 10, 6, 8, 10, 5, 6, 12, 12, 10, 12, 4, 5, 10, 10, 9, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 12, 4, 6, 10, 7, 9, 7, 10, 4, 5, 7, 7, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 6, 10, 12, 9, 7, 10, 4, 10, 12, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 9, 11, 5, 12, 11, 4, 10, 7, 5, 5, 5, 10, 8, 5, 11, 4, 7, 6, 8, 8, 12, 11, 6, 5, 11, 4, 10, 4, 8, 9, 8, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 11, 4, 12, 12, 7, 8, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 8, 7, 4, 5, 4, 10, 4, 11, 5, 4, 4, 4, 4, 4, 4, 12, 8, 6, 6, 4, 4, 4, 4, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 7, 8, 4, 9, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 11, 4, 6, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6253599626981581567/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_052228_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,4,10,6,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,12,4,6,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,4,6,10,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,9,11,5,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,11,4,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,8,7,4,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,7,8,4,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,11,4,6,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 05:22:28,718 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-30 05:22:28,718 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-30 05:22:37,763 INFO     Done. Execution time: 9.044286251068115 seconds
2023-01-30 05:22:37,763 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_052228_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230130_052228_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,4,10,6,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,12,4,6,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,4,6,10,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,9,11,5,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,11,4,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,8,7,4,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,7,8,4,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,11,4,6,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,4,10,6,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [8,12,4,6,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,4,6,10,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,9,11,5,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,11,4,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,8,7,4,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,7,8,4,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,11,4,6,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [12]  |
    10  |     return;  |         |  0  |  [12]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 90):
                                                                                                  
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |      text       |
--------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [12,4,10,6,8]  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [12,4,10,6,8]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [12,4,10,6,8]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |  [12,4,10,6,8]  |
    14  |                     int chunk = 0;  |         |   0  |      0  |     |  [12,4,10,6,8]  |
    16  |                         int i = 0;  |         |   0  |      0  |  0  |  [12,4,10,6,8]  |
    22  |        chunk = arrayRead(text, i);  |         |   0  |     12  |  0  |  [12,4,10,6,8]  |
    25  |                     R = R + chunk;  |     12  |  12  |     12  |  0  |  [12,4,10,6,8]  |
    29  |                         i = i + 1;  |         |  12  |     12  |  1  |  [12,4,10,6,8]  |
    30  |              resetPlaceHolder_1();  |         |  12  |     12  |  1  |  [12,4,10,6,8]  |
    36  |        chunk = arrayRead(text, i);  |         |  12  |      4  |  1  |  [12,4,10,6,8]  |
    39  |                     R = R + chunk;  |      4  |  16  |      4  |  1  |  [12,4,10,6,8]  |
    43  |                         i = i + 1;  |         |  16  |      4  |  2  |  [12,4,10,6,8]  |
    44  |              resetPlaceHolder_1();  |         |  16  |      4  |  2  |  [12,4,10,6,8]  |
    50  |        chunk = arrayRead(text, i);  |         |  16  |     10  |  2  |  [12,4,10,6,8]  |
    53  |                     R = R + chunk;  |     10  |  26  |     10  |  2  |  [12,4,10,6,8]  |
    57  |                         i = i + 1;  |         |  26  |     10  |  3  |  [12,4,10,6,8]  |
    58  |              resetPlaceHolder_1();  |         |  26  |     10  |  3  |  [12,4,10,6,8]  |
    64  |        chunk = arrayRead(text, i);  |         |  26  |      6  |  3  |  [12,4,10,6,8]  |
    67  |                     R = R + chunk;  |      6  |  32  |      6  |  3  |  [12,4,10,6,8]  |
    71  |                         i = i + 1;  |         |  32  |      6  |  4  |  [12,4,10,6,8]  |
    72  |              resetPlaceHolder_1();  |         |  32  |      6  |  4  |  [12,4,10,6,8]  |
    78  |        chunk = arrayRead(text, i);  |         |  32  |      8  |  4  |  [12,4,10,6,8]  |
    81  |                     R = R + chunk;  |      8  |  40  |      8  |  4  |  [12,4,10,6,8]  |
    85  |                         i = i + 1;  |         |  40  |      8  |  5  |  [12,4,10,6,8]  |
    86  |              resetPlaceHolder_1();  |         |  40  |      8  |  5  |  [12,4,10,6,8]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 5 trace node indices: [25, 53, 81, 39, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [25, 53, 81, 39, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25,39}; {53,67}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(2, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25,39}; {53,67} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     12  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |      4  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     10  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |      6  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      8  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39}; {53,67}
GroupID(1): {81}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     12  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    39  |         R = R + chunk;  |      4  |                         0  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |                            |
    53  |         R = R + chunk;  |     10  |                         1  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |         R = R + chunk;  |      6  |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |      8  |                            |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(44)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    // reset R0
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
use R chunk -> if ((i < 3) || (i == 3))
{
  R0 = R0 + chunk;
}
else
{
  R1 = R1 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-30 05:22:37,763 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 05:23:21,436 INFO     Done. Execution time: 43.67267894744873 seconds
2023-01-30 05:23:21,436 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D0 = D0 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        if ((i < 2) || (i == 2))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       a!3
       (<= D0p (+ 0 (* 1 1 text)))
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    2)  (define-fun D1 () Int    6)  (define-fun text () Int    7)  (define-fun D0p () Int    1)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `41.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0522-transparentAmortize-60s-mostPrecise/stac-raw-0130-0522-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m43.666s
user	2m21.893s
sys	0m5.289s

2023-01-30 05:23:21,437 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-30 05:23:21,437 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 05:26:27,854 INFO     Done. Execution time: 186.41689252853394 seconds
2023-01-30 05:26:27,854 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2095655183378078010/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2095655183378078010/bin -o /tmp/qfuzz2095655183378078010/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2095655183378078010/bin
Found file /tmp/qfuzz2095655183378078010/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2095655183378078010/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2095655183378078010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2095655183378078010/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2095655183378078010/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2095655183378078010/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 134023 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 115329 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m115k to 134k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 6.00; [95.00,115.00,135.00,152.00,158.00,166.00]
1; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 6.00; [95.00,112.00,118.00,126.00,135.00,155.00]
3; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 6.00; [95.00,152.00,158.00,166.00,175.00,235.00]
4; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 6; 8.00; [92.00,158.00,166.00,175.00,195.00,235.00]
6; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+partition,+delta; 7; 3.00; [95.00,115.00,135.00,152.00,155.00,158.00,166.00]
7; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 3.00; [172.00,175.00,238.00,246.00]
9; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 7; 6.00; [95.00,115.00,135.00,158.00,166.00,172.00,195.00]
10; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 7; 8.00; [135.00,155.00,175.00,195.00,218.00,226.00,252.00]
13; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 7; 3.00; [95.00,115.00,132.00,135.00,158.00,166.00,235.00]
15; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4; 7; 3.00; [95.00,115.00,135.00,152.00,155.00,158.00,166.00]
32; /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 6; 3.00; [95.00,115.00,118.00,126.00,135.00,152.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 6, 5, 4, 8, 7, 7, 9, 5, 12, 10, 4, 8, 4, 10, 9, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 7, 4, 12, 7, 7, 10, 4, 5, 4, 5, 6, 12, 12, 4, 4, 5, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 6, 5, 4, 11, 6, 5, 4, 12, 7, 7, 9, 11, 6, 12, 5, 12, 4, 10, 6, 5, 9, 5, 7, 12, 11, 5, 4, 4, 5, 10, 10, 11, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 8, 7, 9, 6, 8, 12, 4, 10, 6, 9, 4, 5, 9, 10, 12, 6, 6, 8, 6, 6, 6, 7, 6, 11, 4, 6, 10, 4, 11, 7, 8, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 9, 6, 5, 4, 12, 8, 7, 9, 11, 8, 12, 6, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 8, 8, 8, 8, 9, 8, 8, 8, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 4, 7, 8, 7, 4, 10, 6, 8, 7, 5, 6, 12, 12, 10, 11, 4, 5, 10, 10, 9, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 8, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 11, 8, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2095655183378078010/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_052627_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,6,5,4], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,7,4], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,6,5,4], 2, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,8,7,9,6], 2, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,9,6,5,4], 2, 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,8,8,8,8], 2, 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,4,7], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,9,11,8], 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,11,8,4], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 2, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 05:26:27,854 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-30 05:26:27,854 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-30 05:26:40,251 INFO     Done. Execution time: 12.395894765853882 seconds
2023-01-30 05:26:40,251 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_052627_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230130_052627_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,6,5,4], 2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,7,4], 2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,8,7,9,6], 2, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,6,5,4], 2, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,9,6,5,4], 2, 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,8,8,8,8], 2, 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,4,7], 2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,9,11,8], 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,11,8,4], 2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 2, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 2, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,5,6,5,4]
templateds: 2
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,7,4]
templateds: 2
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,11,6,5,4]
templateds: 2
separator: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,8,7,9,6]
templateds: 2
separator: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,9,6,5,4]
templateds: 2
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [11,8,8,8,8]
templateds: 2
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,4,7]
templateds: 2
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,11,9,11,8]
templateds: 2
separator: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,11,11,8,4]
templateds: 2
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
templateds: 2
separator: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
templateds: 2
separator: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 208):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  j  |  separator  |  templateds  |     text      |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |     |          7  |           2  |  [5,5,6,5,4]  |
    26  |                      // int R = 0;  |         |   0  |         |     |     |          7  |           2  |  [5,5,6,5,4]  |
    27  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |     |          7  |           2  |  [5,5,6,5,4]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |     |          7  |           2  |  [5,5,6,5,4]  |
    30  |                     int chunk = 0;  |         |   0  |      0  |     |     |          7  |           2  |  [5,5,6,5,4]  |
    32  |                         int i = 0;  |         |   0  |      0  |  0  |     |          7  |           2  |  [5,5,6,5,4]  |
    37  |                         int j = 0;  |         |   0  |      0  |  0  |  0  |          7  |           2  |  [5,5,6,5,4]  |
    43  |        chunk = arrayRead(text, j);  |         |   0  |      5  |  0  |  0  |          7  |           2  |  [5,5,6,5,4]  |
    46  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |  0  |          7  |           2  |  [5,5,6,5,4]  |
    50  |                         j = j + 1;  |         |   5  |      5  |  0  |  1  |          7  |           2  |  [5,5,6,5,4]  |
    51  |              resetPlaceHolder_2();  |         |   5  |      5  |  0  |  1  |          7  |           2  |  [5,5,6,5,4]  |
    57  |        chunk = arrayRead(text, j);  |         |   5  |      5  |  0  |  1  |          7  |           2  |  [5,5,6,5,4]  |
    60  |                     R = R + chunk;  |      5  |  10  |      5  |  0  |  1  |          7  |           2  |  [5,5,6,5,4]  |
    64  |                         j = j + 1;  |         |  10  |      5  |  0  |  2  |          7  |           2  |  [5,5,6,5,4]  |
    65  |              resetPlaceHolder_2();  |         |  10  |      5  |  0  |  2  |          7  |           2  |  [5,5,6,5,4]  |
    71  |        chunk = arrayRead(text, j);  |         |  10  |      6  |  0  |  2  |          7  |           2  |  [5,5,6,5,4]  |
    74  |                     R = R + chunk;  |      6  |  16  |      6  |  0  |  2  |          7  |           2  |  [5,5,6,5,4]  |
    78  |                         j = j + 1;  |         |  16  |      6  |  0  |  3  |          7  |           2  |  [5,5,6,5,4]  |
    79  |              resetPlaceHolder_2();  |         |  16  |      6  |  0  |  3  |          7  |           2  |  [5,5,6,5,4]  |
    85  |        chunk = arrayRead(text, j);  |         |  16  |      5  |  0  |  3  |          7  |           2  |  [5,5,6,5,4]  |
    88  |                     R = R + chunk;  |      5  |  21  |      5  |  0  |  3  |          7  |           2  |  [5,5,6,5,4]  |
    92  |                         j = j + 1;  |         |  21  |      5  |  0  |  4  |          7  |           2  |  [5,5,6,5,4]  |
    93  |              resetPlaceHolder_2();  |         |  21  |      5  |  0  |  4  |          7  |           2  |  [5,5,6,5,4]  |
    99  |        chunk = arrayRead(text, j);  |         |  21  |      4  |  0  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   102  |                     R = R + chunk;  |      4  |  25  |      4  |  0  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   106  |                         j = j + 1;  |         |  25  |      4  |  0  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   107  |              resetPlaceHolder_2();  |         |  25  |      4  |  0  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   113  |                 R = R + separator;  |      7  |  32  |      4  |  0  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   117  |                         i = i + 1;  |         |  32  |      4  |  1  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   118  |              resetPlaceHolder_1();  |         |  32  |      4  |  1  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   123  |                         int j = 0;  |         |  32  |      4  |  1  |  0  |          7  |           2  |  [5,5,6,5,4]  |
   129  |        chunk = arrayRead(text, j);  |         |  32  |      5  |  1  |  0  |          7  |           2  |  [5,5,6,5,4]  |
   132  |                     R = R + chunk;  |      5  |  37  |      5  |  1  |  0  |          7  |           2  |  [5,5,6,5,4]  |
   136  |                         j = j + 1;  |         |  37  |      5  |  1  |  1  |          7  |           2  |  [5,5,6,5,4]  |
   137  |              resetPlaceHolder_2();  |         |  37  |      5  |  1  |  1  |          7  |           2  |  [5,5,6,5,4]  |
   143  |        chunk = arrayRead(text, j);  |         |  37  |      5  |  1  |  1  |          7  |           2  |  [5,5,6,5,4]  |
   146  |                     R = R + chunk;  |      5  |  42  |      5  |  1  |  1  |          7  |           2  |  [5,5,6,5,4]  |
   150  |                         j = j + 1;  |         |  42  |      5  |  1  |  2  |          7  |           2  |  [5,5,6,5,4]  |
   151  |              resetPlaceHolder_2();  |         |  42  |      5  |  1  |  2  |          7  |           2  |  [5,5,6,5,4]  |
   157  |        chunk = arrayRead(text, j);  |         |  42  |      6  |  1  |  2  |          7  |           2  |  [5,5,6,5,4]  |
   160  |                     R = R + chunk;  |      6  |  48  |      6  |  1  |  2  |          7  |           2  |  [5,5,6,5,4]  |
   164  |                         j = j + 1;  |         |  48  |      6  |  1  |  3  |          7  |           2  |  [5,5,6,5,4]  |
   165  |              resetPlaceHolder_2();  |         |  48  |      6  |  1  |  3  |          7  |           2  |  [5,5,6,5,4]  |
   171  |        chunk = arrayRead(text, j);  |         |  48  |      5  |  1  |  3  |          7  |           2  |  [5,5,6,5,4]  |
   174  |                     R = R + chunk;  |      5  |  53  |      5  |  1  |  3  |          7  |           2  |  [5,5,6,5,4]  |
   178  |                         j = j + 1;  |         |  53  |      5  |  1  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   179  |              resetPlaceHolder_2();  |         |  53  |      5  |  1  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   185  |        chunk = arrayRead(text, j);  |         |  53  |      4  |  1  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   188  |                     R = R + chunk;  |      4  |  57  |      4  |  1  |  4  |          7  |           2  |  [5,5,6,5,4]  |
   192  |                         j = j + 1;  |         |  57  |      4  |  1  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   193  |              resetPlaceHolder_2();  |         |  57  |      4  |  1  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   199  |                 R = R + separator;  |      7  |  64  |      4  |  1  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   203  |                         i = i + 1;  |         |  64  |      4  |  2  |  5  |          7  |           2  |  [5,5,6,5,4]  |
   204  |              resetPlaceHolder_1();  |         |  64  |      4  |  2  |  5  |          7  |           2  |  [5,5,6,5,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 12 trace node indices: [88, 174, 46, 132, 74, 60, 102, 160, 188, 113, 199, 146]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {199}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {199}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {199} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      5  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |      6  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      5  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      4  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   113  |     R = R + separator;  |      7  |                         0  |
   118  |  resetPlaceHolder_1();  |         |                            |
   132  |         R = R + chunk;  |      5  |                            |
   137  |  resetPlaceHolder_2();  |         |                            |
   146  |         R = R + chunk;  |      5  |                            |
   151  |  resetPlaceHolder_2();  |         |                            |
   160  |         R = R + chunk;  |      6  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      5  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |      4  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   199  |     R = R + separator;  |      7  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {146}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {132}; {146}; {174}; {46}; {60}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(1), Set(3), Set(0), Set(1), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {132}; {146}; {174}; {46}; {60}; {88} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      5  |                         1  |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |      6  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      5  |                         2  |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      4  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   113  |     R = R + separator;  |      7  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |
   132  |         R = R + chunk;  |      5  |                         3  |
   137  |  resetPlaceHolder_2();  |         |                            |
   146  |         R = R + chunk;  |      5  |                         4  |
   151  |  resetPlaceHolder_2();  |         |                            |
   160  |         R = R + chunk;  |      6  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      5  |                         5  |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |      4  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   199  |     R = R + separator;  |      7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {74}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [74, 102, 160, 188]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,188}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,188}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [74, 102, 160, 188]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,160,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [74, 102, 160, 188]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {199}
GroupID(1): {132}; {146}; {174}; {46}; {60}; {88}
GroupID(2): {74,102,160,188}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      5  |                            |                         1  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      5  |                            |                         2  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      4  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   113  |     R = R + separator;  |      7  |                         0  |                            |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   132  |         R = R + chunk;  |      5  |                            |                         3  |                            |
   137  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   146  |         R = R + chunk;  |      5  |                            |                         4  |                            |
   151  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      5  |                            |                         5  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |      4  |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   199  |     R = R + separator;  |      7  |                         1  |                            |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(118)
GroupID(1): Set(93, 137, 65, 151, 51)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 2) || (j == 2))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    if ((j < 3) || (j == 3))
    {
      // reset R1
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        // reset R1
      }
    }
  }
  // reset R0
}
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> if ((j < 1) || (j == 1))
{
  R1 = R1 + chunk;
}
else
{
  if ((j < 2) || (j == 2))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((j < 3) || (j == 3))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-30 05:26:40,251 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 05:53:25,478 INFO     Done. Execution time: 1605.2269797325134 seconds
2023-01-30 05:53:25,479 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {
          if ((j < 3) || (j == 3))
          {

          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 1) || (j == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {
          if ((j < 3) || (j == 3))
          {

          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5420993570400488322.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1631336415160134902.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2204747630592587205.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7091431780681091279.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3492696463031650821.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6536143477806411682.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8414137624559351720.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8180739845258749464.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4553785356754163286.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3186372403778713506.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8824632992058878627.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3053975892835375093.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8164197685535312857.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1) (* 1 1 templateds) (* 1 1 text)))` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-448816454365498639.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8256219708438737539.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-581660482158671311.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-904461062609304694.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-878166261320059352.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1458943524938694486.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4359558745353408151.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6420292365082661005.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8858700083496291923.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C2
    (+ 0
       (* 8 1)
       (* 1 (* 1 text))
       (* 8 (* 1 templateds templateds))
       (* 1 (* 1 separator) separator templateds)
       (* 8 (* 1 templateds templateds) templateds)
       (* 8 (* 1 separator) templateds templateds)
       (* 8 (* 1 separator) text templateds)
       (* 1 (* 1 text) templateds templateds)))` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1) (* 1 1 templateds) (* 1 1 text))) (= D2p 0))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       (<= D2p 0)
       a!4
       true
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1) (* 1 1 templateds) (* 1 1 text))) (= D2 0))))
  (and (or true (= D1 0)) a!1 (or true (= D0 0)))))
(assert (let ((a!1 (<= C2
               (+ 0
                  (* 8 1)
                  (* 1 (* 1 text))
                  (* 8 (* 1 templateds templateds))
                  (* 1 (* 1 separator) separator templateds)
                  (* 8 (* 1 templateds templateds) templateds)
                  (* 8 (* 1 separator) templateds templateds)
                  (* 8 (* 1 separator) text templateds)
                  (* 1 (* 1 text) templateds templateds)))))
  (and true
       (<= C0 1)
       (>= C62 0)
       (>= C6 0)
       (>= C35 0)
       (>= C51 0)
       (>= C24 0)
       (>= C13 0)
       (>= C46 0)
       (>= C1 0)
       (>= C57 0)
       (>= C31 0)
       (>= C20 0)
       (>= C40 0)
       (>= C27 0)
       (>= C52 0)
       (>= C42 0)
       (>= C8 0)
       (>= C17 0)
       (>= C63 0)
       (>= C7 0)
       (>= C12 0)
       (>= C23 0)
       (>= C38 0)
       (>= C28 0)
       (>= C39 0)
       (>= C45 0)
       (>= C16 0)
       (>= C56 0)
       (>= C34 0)
       (>= C30 0)
       (>= C0 0)
       (>= C49 0)
       (>= C41 0)
       (>= C53 0)
       (>= C64 0)
       (>= C18 0)
       (>= C11 0)
       (>= C58 0)
       (>= C9 0)
       (>= C60 0)
       (>= C55 0)
       (>= C15 0)
       (>= C26 0)
       (>= C44 0)
       (>= C4 0)
       (>= C29 0)
       (>= C37 0)
       (>= C59 0)
       (>= C22 0)
       (>= C19 0)
       (>= C48 0)
       (>= C33 0)
       (>= C3 0)
       (>= C43 0)
       (>= C25 0)
       (>= C36 0)
       (>= C50 0)
       (>= C14 0)
       (>= C5 0)
       (>= C54 0)
       (>= C61 0)
       (>= C10 0)
       (>= C2 0)
       (>= C47 0)
       (>= C21 0)
       (>= C32 0)
       true
       a!1)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun D0 () Int    4)  (define-fun D2 () Int    5)  (define-fun D1 () Int    4)  (define-fun C1 () Int    9)  (define-fun templateds () Int    5)  (define-fun text () Int    3)  (define-fun separator () Int    16)  (define-fun D0p () Int    6)  (define-fun D1p () Int    14)  (define-fun C0 () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `1602.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0526-transparentAmortize-60s-mostPrecise/stac-raw-0130-0526-transparentAmortize-60s-mostPrecise-000-099.csv`

real	26m45.218s
user	35m52.541s
sys	0m18.816s

2023-01-30 05:53:25,479 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-30 05:53:25,479 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 05:56:31,799 INFO     Done. Execution time: 186.31898188591003 seconds
2023-01-30 05:56:31,799 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz4100518920174564229/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4100518920174564229/bin -o /tmp/qfuzz4100518920174564229/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4100518920174564229/bin
Found file /tmp/qfuzz4100518920174564229/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz4100518920174564229/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4100518920174564229/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4100518920174564229/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4100518920174564229/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz4100518920174564229/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 130911 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 49, exec speed = 123509 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m123k to 130k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 4.00; [95.00,115.00,135.00,148.00,152.00,158.00,166.00]
2; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 6.00; [95.00,112.00,118.00,126.00,135.00,148.00,155.00]
3; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 7; 8.00; [115.00,135.00,148.00,158.00,166.00,232.00,255.00]
4; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 3.00; [188.00,192.00,195.00,198.00,206.00]
6; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta; 8; 3.00; [115.00,135.00,148.00,152.00,155.00,158.00,166.00,255.00]
8; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 8; 7.00; [88.00,95.00,135.00,152.00,175.00,215.00,238.00,246.00]
12; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 8; 3.00; [95.00,108.00,112.00,115.00,135.00,158.00,166.00,255.00]
15; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta; 8; 8.00; [95.00,115.00,132.00,158.00,166.00,195.00,208.00,255.00]
38; /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 8; 3.00; [95.00,98.00,106.00,155.00,168.00,172.00,215.00,255.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 7, 4, 12, 10, 6, 8, 8, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 9, 12, 5, 4, 12, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 6, 12, 5, 5, 5, 5, 5, 5, 6, 8, 5, 11, 4, 6, 6, 4, 6, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 6, 4, 10, 8, 8, 7, 4, 9, 11, 8, 12, 9, 4, 9, 11, 8, 12, 4, 6, 8, 7, 4, 12, 9, 5, 12, 4, 10, 7, 6, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 7, 6, 5, 12, 5, 7, 7, 8, 11, 4, 7, 9, 11, 5, 4, 4, 6, 4, 5, 6, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 12, 12, 11, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4100518920174564229/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_055631_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,7,4,12,10], 2, 8, 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,9,12,5,4], 2, 6, 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,4,6,12,5], 2, 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,6,4,10,8], 2, 7, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,7,6,5,12], 2, 7, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,9,9,9,9], 2, 9, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,12], 2, 11, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 2, 5, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 2, 7, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 05:56:31,799 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-30 05:56:31,800 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-30 05:56:45,813 INFO     Done. Execution time: 14.01337742805481 seconds
2023-01-30 05:56:45,813 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_055631_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230130_055631_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,7,4,12,10], 2, 8, 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,9,12,5,4], 2, 6, 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,4,6,12,5], 2, 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,6,4,10,8], 2, 7, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,7,6,5,12], 2, 7, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,9,9,9,9], 2, 9, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,12], 2, 11, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 2, 5, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 2, 7, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,7,4,12,10]
ts: 2
sep: 8
rep: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,9,12,5,4]
ts: 2
sep: 6
rep: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,4,6,12,5]
ts: 2
sep: 5
rep: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [11,6,4,10,8]
ts: 2
sep: 7
rep: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,7,6,5,12]
ts: 2
sep: 7
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [9,9,9,9,9]
ts: 2
sep: 9
rep: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,12]
ts: 2
sep: 11
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
ts: 2
sep: 5
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
ts: 2
sep: 7
rep: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 246):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |      text       |  ts  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |     |    8  |    8  |  [4,7,4,12,10]  |   2  |
    45  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |      4  |  0  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    54  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    57  |                       R = R + rep;  |      8  |   12  |      4  |  0  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    61  |                         j = j + 1;  |         |   12  |      4  |  0  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   12  |      4  |  0  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   12  |      7  |  0  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    71  |                     R = R + chunk;  |      7  |   19  |      7  |  0  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    74  |                       R = R + rep;  |      8  |   27  |      7  |  0  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    78  |                         j = j + 1;  |         |   27  |      7  |  0  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   27  |      7  |  0  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   27  |      4  |  0  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    88  |                     R = R + chunk;  |      4  |   31  |      4  |  0  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    91  |                       R = R + rep;  |      8  |   39  |      4  |  0  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    95  |                         j = j + 1;  |         |   39  |      4  |  0  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   39  |      4  |  0  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   39  |     12  |  0  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   105  |                     R = R + chunk;  |     12  |   51  |     12  |  0  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   108  |                       R = R + rep;  |      8  |   59  |     12  |  0  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   112  |                         j = j + 1;  |         |   59  |     12  |  0  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   113  |              resetPlaceHolder_2();  |         |   59  |     12  |  0  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |   59  |     10  |  0  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   122  |                     R = R + chunk;  |     10  |   69  |     10  |  0  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   125  |                       R = R + rep;  |      8  |   77  |     10  |  0  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   129  |                         j = j + 1;  |         |   77  |     10  |  0  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   130  |              resetPlaceHolder_2();  |         |   77  |     10  |  0  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   136  |                       R = R + sep;  |      8  |   85  |     10  |  0  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   140  |                         i = i + 1;  |         |   85  |     10  |  1  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   141  |              resetPlaceHolder_1();  |         |   85  |     10  |  1  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   146  |                         int j = 0;  |         |   85  |     10  |  1  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   152  |        chunk = arrayRead(text, j);  |         |   85  |      4  |  1  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   155  |                     R = R + chunk;  |      4  |   89  |      4  |  1  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   158  |                       R = R + rep;  |      8  |   97  |      4  |  1  |  0  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   162  |                         j = j + 1;  |         |   97  |      4  |  1  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   163  |              resetPlaceHolder_2();  |         |   97  |      4  |  1  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   169  |        chunk = arrayRead(text, j);  |         |   97  |      7  |  1  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   172  |                     R = R + chunk;  |      7  |  104  |      7  |  1  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   175  |                       R = R + rep;  |      8  |  112  |      7  |  1  |  1  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   179  |                         j = j + 1;  |         |  112  |      7  |  1  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   180  |              resetPlaceHolder_2();  |         |  112  |      7  |  1  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |  112  |      4  |  1  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   189  |                     R = R + chunk;  |      4  |  116  |      4  |  1  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   192  |                       R = R + rep;  |      8  |  124  |      4  |  1  |  2  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   196  |                         j = j + 1;  |         |  124  |      4  |  1  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  124  |      4  |  1  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  124  |     12  |  1  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   206  |                     R = R + chunk;  |     12  |  136  |     12  |  1  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   209  |                       R = R + rep;  |      8  |  144  |     12  |  1  |  3  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   213  |                         j = j + 1;  |         |  144  |     12  |  1  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  144  |     12  |  1  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  144  |     10  |  1  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   223  |                     R = R + chunk;  |     10  |  154  |     10  |  1  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   226  |                       R = R + rep;  |      8  |  162  |     10  |  1  |  4  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   230  |                         j = j + 1;  |         |  162  |     10  |  1  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  162  |     10  |  1  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   237  |                       R = R + sep;  |      8  |  170  |     10  |  1  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   241  |                         i = i + 1;  |         |  170  |     10  |  2  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
   242  |              resetPlaceHolder_1();  |         |  170  |     10  |  2  |  5  |    8  |    8  |  [4,7,4,12,10]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 22 trace node indices: [88, 125, 189, 57, 74, 206, 192, 237, 105, 71, 54, 172, 91, 155, 108, 223, 226, 209, 175, 158, 136, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {136}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {158}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {175}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {136}; {158}; {175}; {192}; {209}; {226}; {237}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {136}; {158}; {175}; {192}; {209}; {226}; {237}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |
    57  |           R = R + rep;  |      8  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      7  |                            |
    74  |           R = R + rep;  |      8  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      4  |                            |
    91  |           R = R + rep;  |      8  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     12  |                            |
   108  |           R = R + rep;  |      8  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     10  |                            |
   125  |           R = R + rep;  |      8  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   136  |           R = R + sep;  |      8  |                         5  |
   141  |  resetPlaceHolder_1();  |         |                            |
   155  |         R = R + chunk;  |      4  |                            |
   158  |           R = R + rep;  |      8  |                         6  |
   163  |  resetPlaceHolder_2();  |         |                            |
   172  |         R = R + chunk;  |      7  |                            |
   175  |           R = R + rep;  |      8  |                         7  |
   180  |  resetPlaceHolder_2();  |         |                            |
   189  |         R = R + chunk;  |      4  |                            |
   192  |           R = R + rep;  |      8  |                         8  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     12  |                            |
   209  |           R = R + rep;  |      8  |                         9  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     10  |                            |
   226  |           R = R + rep;  |      8  |                        10  |
   231  |  resetPlaceHolder_2();  |         |                            |
   237  |           R = R + sep;  |      8  |                        11  |
   242  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {155}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {155}; {189}; {54}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(2), Set(0), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {155}; {189}; {54}; {88} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                         0  |
    57  |           R = R + rep;  |      8  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |      7  |                            |
    74  |           R = R + rep;  |      8  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |      4  |                         1  |
    91  |           R = R + rep;  |      8  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     12  |                            |
   108  |           R = R + rep;  |      8  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     10  |                            |
   125  |           R = R + rep;  |      8  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   136  |           R = R + sep;  |      8  |                            |
   141  |  resetPlaceHolder_1();  |         |                            |
   155  |         R = R + chunk;  |      4  |                         2  |
   158  |           R = R + rep;  |      8  |                            |
   163  |  resetPlaceHolder_2();  |         |                            |
   172  |         R = R + chunk;  |      7  |                            |
   175  |           R = R + rep;  |      8  |                            |
   180  |  resetPlaceHolder_2();  |         |                            |
   189  |         R = R + chunk;  |      4  |                         3  |
   192  |           R = R + rep;  |      8  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     12  |                            |
   209  |           R = R + rep;  |      8  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     10  |                            |
   226  |           R = R + rep;  |      8  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   237  |           R = R + sep;  |      8  |                            |
   242  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {172}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {172}; {71}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [206, 105, 71, 172, 223, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,122}; {206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,122}; {206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {172,206}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {172,206}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {172,223}; {71,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {172,223}; {71,122}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [206, 105, 71, 172, 223, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {71,122,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {71,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {172,206,223}; {71,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3, 4), Set(1, 3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {172,206,223}; {71,105,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,122,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,122,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [206, 105, 71, 172, 223, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,122,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {122,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,122,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,122,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,122,172}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,122,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [206, 105, 71, 172, 223, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,122,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,122,172,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,105,122,172,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,122,172,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {136}; {158}; {175}; {192}; {209}; {226}; {237}; {57}; {74}; {91}
GroupID(1): {155}; {189}; {54}; {88}
GroupID(2): {71,105,122,172,206,223}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [58, 73])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [75, 90])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [92, 107])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [109, 124])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [126, 135])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [159, 174])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [176, 191])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [193, 208])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [210, 225])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [227, 236])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    57  |           R = R + rep;  |      8  |                         0  |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    71  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    74  |           R = R + rep;  |      8  |                         1  |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |      4  |                            |                         1  |                            |
    91  |           R = R + rep;  |      8  |                         2  |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   105  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   108  |           R = R + rep;  |      8  |                         3  |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   122  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   125  |           R = R + rep;  |      8  |                         4  |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   136  |           R = R + sep;  |      8  |                         5  |                            |                            |
   141  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   155  |         R = R + chunk;  |      4  |                            |                         2  |                            |
   158  |           R = R + rep;  |      8  |                         6  |                            |                            |
   163  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   172  |         R = R + chunk;  |      7  |                            |                            |                         0  |
   175  |           R = R + rep;  |      8  |                         7  |                            |                            |
   180  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   189  |         R = R + chunk;  |      4  |                            |                         3  |                            |
   192  |           R = R + rep;  |      8  |                         8  |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   206  |         R = R + chunk;  |     12  |                            |                            |                         0  |
   209  |           R = R + rep;  |      8  |                         9  |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   223  |         R = R + chunk;  |     10  |                            |                            |                         0  |
   226  |           R = R + rep;  |      8  |                        10  |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   237  |           R = R + sep;  |      8  |                        11  |                            |                            |
   242  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(141)
GroupID(1): Set(62, 96, 163)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 1) || (j == 1))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      // reset R1
    }
    else
    {
      if ((j < 3) || (j == 3))
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        // reset R1
      }
    }
  }
  // reset R0
}
use R chunk -> if ((j < 2) || (j == 2))
{
  if ((j < 0) || (j == 0))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((j < 1) || (j == 1))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
else
{
  R2 = R2 + chunk;
}
use R sep -> R0 = R0 + sep;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R rep -> R0 = R0 + rep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-30 05:56:45,814 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 05:59:12,995 INFO     Done. Execution time: 147.18061089515686 seconds
2023-01-30 05:59:12,995 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          if ((j < 0) || (j == 0))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 1) || (j == 1))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + sep;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          if ((j < 0) || (j == 0))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 1) || (j == 1))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            if ((j < 3) || (j == 3))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + sep;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8368630591394683821.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-696701000122488600.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2878442898227512508.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5263447234210508415.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6583193294084776588.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2339654895512834382.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4688982632793222915.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3170882266735971715.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (and (<= 0 (+ D1 a!1 D0 a!2 D2 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D0p 0))
       (<= D2p 0)
       (or true (= D2p 0)))))
(assert (and (or true (= D1 0)) (or true (= D0 0)) (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun D2 () Int    2)  (define-fun D0 () Int    (- 5))  (define-fun D1 () Int    2)  (define-fun C1 () Int    12)  (define-fun rep () Int    6)  (define-fun sep () Int    8)  (define-fun text () Int    8)  (define-fun ts () Int    1)  (define-fun D0p () Int    1)  (define-fun D1p () Int    6)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `145.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0556-transparentAmortize-60s-mostPrecise/stac-raw-0130-0556-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m27.174s
user	5m26.220s
sys	0m4.333s

2023-01-30 05:59:12,995 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-30 05:59:12,995 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:02:19,319 INFO     Done. Execution time: 186.32351446151733 seconds
2023-01-30 06:02:19,319 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz2396337302495409481/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2396337302495409481/bin -o /tmp/qfuzz2396337302495409481/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2396337302495409481/bin
Found file /tmp/qfuzz2396337302495409481/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz2396337302495409481/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2396337302495409481/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2396337302495409481/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2396337302495409481/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2396337302495409481/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 117663 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 125920 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m117k to 125k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 20.00; [95.00,115.00,135.00,165.00]
1; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 10.00; [95.00,125.00,135.00,155.00]
3; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 2; 70.00; [105.00,175.00]
4; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+partition,+delta; 5; 20.00; [95.00,115.00,135.00,165.00,255.00]
7; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 4; 20.00; [95.00,115.00,165.00,255.00]
10; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 10.00; [95.00,105.00,135.00,215.00,235.00]
24; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 10.00; [95.00,195.00,205.00]
61; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 5; 30.00; [95.00,135.00,175.00,205.00,255.00]
83; /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 4; 10.00; [95.00,175.00,225.00,235.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 11, 4, 8, 4, 11, 4, 11, 8, 4, 5, 5, 8, 10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 6, 8, 12, 4, 10, 12, 9, 11, 10, 4, 10, 7, 5, 5, 8, 4, 7, 9, 6, 8, 12, 4, 10, 12, 7, 11, 10, 4, 10, 7, 5, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 12, 9, 9, 4, 4, 4, 5, 6, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 10, 11, 6, 7, 12, 10, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 4, 5, 12, 7, 5, 7, 10, 11, 9, 6, 11, 7, 10, 8, 12, 4, 6, 10, 10, 9, 7, 7, 9, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 6, 5, 4, 12, 7, 5, 9, 6, 8, 12, 8, 6, 10, 12, 9, 9, 7, 7, 9, 10, 7, 7, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 12, 8, 8, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2396337302495409481/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_060219_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,11,4,8,4], 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,6,8,12,4], 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,12,9,9,4], 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,10,11,6], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,4,5,12], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,6,5,4,12], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,8,8,8,8], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:02:19,320 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-30 06:02:19,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-30 06:02:29,379 INFO     Done. Execution time: 10.059163331985474 seconds
2023-01-30 06:02:29,379 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_060219_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230130_060219_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,11,4,8,4], 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,6,8,12,4], 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,12,9,9,4], 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,10,11,6], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,4,5,12], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,6,5,4,12], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,8,8,8,8], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,11,4,8,4]
choice: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [9,6,8,12,4]
choice: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
choice: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
choice: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [9,12,9,9,4]
choice: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,4,10,11,6]
choice: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,4,5,12]
choice: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,6,5,4,12]
choice: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,8,8,8,8]
choice: 8
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 99):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  choice  |  chunk  |  i  |      text       |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      11  |         |     |  [10,11,4,8,4]  |
    10  |                      // int R = 0;  |         |   0  |      11  |         |     |  [10,11,4,8,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |      11  |         |     |  [10,11,4,8,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      11  |         |     |  [10,11,4,8,4]  |
    14  |                     int chunk = 0;  |         |   0  |      11  |      0  |     |  [10,11,4,8,4]  |
    25  |                         int i = 0;  |         |   0  |      11  |      0  |  0  |  [10,11,4,8,4]  |
    31  |        chunk = arrayRead(text, i);  |         |   0  |      11  |     10  |  0  |  [10,11,4,8,4]  |
    34  |                     R = R + chunk;  |     10  |  10  |      11  |     10  |  0  |  [10,11,4,8,4]  |
    38  |                         i = i + 1;  |         |  10  |      11  |     10  |  1  |  [10,11,4,8,4]  |
    39  |              resetPlaceHolder_1();  |         |  10  |      11  |     10  |  1  |  [10,11,4,8,4]  |
    45  |        chunk = arrayRead(text, i);  |         |  10  |      11  |     11  |  1  |  [10,11,4,8,4]  |
    48  |                     R = R + chunk;  |     11  |  21  |      11  |     11  |  1  |  [10,11,4,8,4]  |
    52  |                         i = i + 1;  |         |  21  |      11  |     11  |  2  |  [10,11,4,8,4]  |
    53  |              resetPlaceHolder_1();  |         |  21  |      11  |     11  |  2  |  [10,11,4,8,4]  |
    59  |        chunk = arrayRead(text, i);  |         |  21  |      11  |      4  |  2  |  [10,11,4,8,4]  |
    62  |                     R = R + chunk;  |      4  |  25  |      11  |      4  |  2  |  [10,11,4,8,4]  |
    66  |                         i = i + 1;  |         |  25  |      11  |      4  |  3  |  [10,11,4,8,4]  |
    67  |              resetPlaceHolder_1();  |         |  25  |      11  |      4  |  3  |  [10,11,4,8,4]  |
    73  |        chunk = arrayRead(text, i);  |         |  25  |      11  |      8  |  3  |  [10,11,4,8,4]  |
    76  |                     R = R + chunk;  |      8  |  33  |      11  |      8  |  3  |  [10,11,4,8,4]  |
    80  |                         i = i + 1;  |         |  33  |      11  |      8  |  4  |  [10,11,4,8,4]  |
    81  |              resetPlaceHolder_1();  |         |  33  |      11  |      8  |  4  |  [10,11,4,8,4]  |
    87  |        chunk = arrayRead(text, i);  |         |  33  |      11  |      4  |  4  |  [10,11,4,8,4]  |
    90  |                     R = R + chunk;  |      4  |  37  |      11  |      4  |  4  |  [10,11,4,8,4]  |
    94  |                         i = i + 1;  |         |  37  |      11  |      4  |  5  |  [10,11,4,8,4]  |
    95  |              resetPlaceHolder_1();  |         |  37  |      11  |      4  |  5  |  [10,11,4,8,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 5 trace node indices: [34, 76, 48, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {62}; {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {62}; {90} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     10  |                            |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |     11  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |      4  |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |      8  |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |      4  |                         1  |
    95  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [34, 76, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [34, 76, 48]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {62}; {90}
GroupID(1): {34,48,76}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |     10  |                            |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |         R = R + chunk;  |     11  |                            |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |         R = R + chunk;  |      4  |                         0  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |      8  |                            |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |      4  |                         1  |                            |
    95  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 99):
                                                                                                            
 Index  |              Commands               |  Costs  |  R   |  choice  |  chunk  |  j  |      text      |
------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |       4  |         |     |  [9,12,9,9,4]  |
    10  |                      // int R = 0;  |         |   0  |       4  |         |     |  [9,12,9,9,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |       4  |         |     |  [9,12,9,9,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |       4  |         |     |  [9,12,9,9,4]  |
    14  |                     int chunk = 0;  |         |   0  |       4  |      0  |     |  [9,12,9,9,4]  |
    25  |                         int j = 0;  |         |   0  |       4  |      0  |  0  |  [9,12,9,9,4]  |
    31  |        chunk = arrayRead(text, j);  |         |   0  |       4  |      9  |  0  |  [9,12,9,9,4]  |
    34  |                     R = R + chunk;  |      9  |   9  |       4  |      9  |  0  |  [9,12,9,9,4]  |
    38  |                         j = j + 1;  |         |   9  |       4  |      9  |  1  |  [9,12,9,9,4]  |
    39  |              resetPlaceHolder_2();  |         |   9  |       4  |      9  |  1  |  [9,12,9,9,4]  |
    45  |        chunk = arrayRead(text, j);  |         |   9  |       4  |     12  |  1  |  [9,12,9,9,4]  |
    48  |                     R = R + chunk;  |     12  |  21  |       4  |     12  |  1  |  [9,12,9,9,4]  |
    52  |                         j = j + 1;  |         |  21  |       4  |     12  |  2  |  [9,12,9,9,4]  |
    53  |              resetPlaceHolder_2();  |         |  21  |       4  |     12  |  2  |  [9,12,9,9,4]  |
    59  |        chunk = arrayRead(text, j);  |         |  21  |       4  |      9  |  2  |  [9,12,9,9,4]  |
    62  |                     R = R + chunk;  |      9  |  30  |       4  |      9  |  2  |  [9,12,9,9,4]  |
    66  |                         j = j + 1;  |         |  30  |       4  |      9  |  3  |  [9,12,9,9,4]  |
    67  |              resetPlaceHolder_2();  |         |  30  |       4  |      9  |  3  |  [9,12,9,9,4]  |
    73  |        chunk = arrayRead(text, j);  |         |  30  |       4  |      9  |  3  |  [9,12,9,9,4]  |
    76  |                     R = R + chunk;  |      9  |  39  |       4  |      9  |  3  |  [9,12,9,9,4]  |
    80  |                         j = j + 1;  |         |  39  |       4  |      9  |  4  |  [9,12,9,9,4]  |
    81  |              resetPlaceHolder_2();  |         |  39  |       4  |      9  |  4  |  [9,12,9,9,4]  |
    87  |        chunk = arrayRead(text, j);  |         |  39  |       4  |      4  |  4  |  [9,12,9,9,4]  |
    90  |                     R = R + chunk;  |      4  |  43  |       4  |      4  |  4  |  [9,12,9,9,4]  |
    94  |                         j = j + 1;  |         |  43  |       4  |      4  |  5  |  [9,12,9,9,4]  |
    95  |              resetPlaceHolder_2();  |         |  43  |       4  |      4  |  5  |  [9,12,9,9,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 5 trace node indices: [34, 76, 48, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {76}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {34}; {62}; {76}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(2), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {34}; {62}; {76} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |      9  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |     12  |                            |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |      9  |                         1  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |      9  |                         2  |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |      4  |                            |
    95  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [48, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}; {62}; {76}
GroupID(1): {48,90}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |      9  |                         0  |                            |
    39  |  resetPlaceHolder_2();  |         |                            |                            |
    48  |         R = R + chunk;  |     12  |                            |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |                            |
    62  |         R = R + chunk;  |      9  |                         1  |                            |
    67  |  resetPlaceHolder_2();  |         |                            |                            |
    76  |         R = R + chunk;  |      9  |                         2  |                            |
    81  |  resetPlaceHolder_2();  |         |                            |                            |
    90  |         R = R + chunk;  |      4  |                            |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39, 67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 3) || (j == 3))
{
  if ((j < 1) || (j == 1))
  {
    if ((j < 0) || (j == 0))
    {
      R0 = R0 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
  else
  {
    R0 = R0 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 2) || (i == 2))
  {
    R0 = R0 + chunk;
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R0 = R0 + chunk;
    }
  }
}
resetPlaceHolder_2(); -> {
  // reset R1
  if ((j < 1) || (j == 1))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 2) || (i == 2))
  {
    // reset R0
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-30 06:02:29,380 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:05:08,579 INFO     Done. Execution time: 159.19891095161438 seconds
2023-01-30 06:05:08,579 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 1) || (i == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
          else
          {

          }
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          if ((j < 1) || (j == 1))
          {
            if ((j < 0) || (j == 0))
            {
              D0 = D0 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
          else
          {
            D0 = D0 + chunk;
          }
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 1) || (i == 1))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D0 = D0 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
          else
          {

          }
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 3) || (j == 3))
        {
          if ((j < 1) || (j == 1))
          {
            if ((j < 0) || (j == 0))
            {
              D0 = D0 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
          else
          {
            D0 = D0 + chunk;
          }
        }
        else
        {
          D1 = D1 + chunk;
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    0)  (define-fun D0 () Int    6)  (define-fun text () Int    4)  (define-fun D0p () Int    2)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `157.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0602-transparentAmortize-60s-mostPrecise/stac-raw-0130-0602-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m39.192s
user	5m2.416s
sys	0m3.605s

2023-01-30 06:05:08,579 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-30 06:05:08,579 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:08:14,657 INFO     Done. Execution time: 186.07751488685608 seconds
2023-01-30 06:08:14,657 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2682461927006395469/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2682461927006395469/bin -o /tmp/qfuzz2682461927006395469/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2682461927006395469/bin
Found file /tmp/qfuzz2682461927006395469/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2682461927006395469/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2682461927006395469/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2682461927006395469/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2682461927006395469/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2682461927006395469/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 126432 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 41, exec speed = 119556 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m119k to 126k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 20.00; [95.00,115.00,135.00,162.00]
1; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 13.00; [95.00,122.00,135.00,155.00]
3; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta; 5; 7.00; [95.00,102.00,135.00,175.00,255.00]
4; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 5; 20.00; [95.00,115.00,155.00,182.00,255.00]
5; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 27.00; [15.00,235.00,262.00]
7; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 7.00; [155.00,162.00,175.00,195.00,235.00]
19; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 5; 13.00; [102.00,115.00,155.00,175.00,195.00]
25; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 13.00; [122.00,135.00,155.00,255.00]
40; /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 5; 33.00; [15.00,95.00,142.00,175.00,255.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 4, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 6, 6, 12, 7, 7, 12, 12, 11, 10, 10, 8, 10, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 5, 8, 7, 9, 4, 11, 7, 5, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 7, 9, 11, 8, 4, 11, 12, 6, 8, 8, 8, 12, 4, 9, 9, 9, 9, 5, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 11, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 12, 7, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 6, 4, 8, 12, 8, 8, 5, 5, 7, 10, 10, 6, 5, 9, 7, 11, 5, 7, 8, 4, 7, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2682461927006395469/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_060814_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,4,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,6,6,12,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,5,8,7,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,7,9,11,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,12,7,4,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,6,4,8,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:08:14,658 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-30 06:08:14,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-30 06:08:22,312 INFO     Done. Execution time: 7.654138565063477 seconds
2023-01-30 06:08:22,312 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_060814_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230130_060814_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,4,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,5,8,7,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,6,6,12,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,7,9,11,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,12,7,4,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,6,4,8,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [6,4,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,6,6,12,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,5,8,7,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,7,9,11,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [8,12,7,4,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,6,4,8,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [12]  |
    10  |     return;  |         |  0  |  [12]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 60):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  tag  |   text    |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |       |  [6,4,8]  |
    10  |                      // int R = 0;  |         |   0  |         |     |       |  [6,4,8]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |       |  [6,4,8]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |       |  [6,4,8]  |
    14  |                     int chunk = 0;  |         |   0  |      0  |     |       |  [6,4,8]  |
    16  |                       int tag = 0;  |         |   0  |      0  |     |    0  |  [6,4,8]  |
    18  |                         int i = 0;  |         |   0  |      0  |  0  |    0  |  [6,4,8]  |
    21  |        chunk = arrayRead(text, i);  |         |   0  |      6  |  0  |    0  |  [6,4,8]  |
    24  |                     R = R + chunk;  |      6  |   6  |      6  |  0  |    0  |  [6,4,8]  |
    28  |                         i = i + 1;  |         |   6  |      6  |  1  |    0  |  [6,4,8]  |
    34  |        chunk = arrayRead(text, i);  |         |   6  |      4  |  1  |    0  |  [6,4,8]  |
    37  |                     R = R + chunk;  |      4  |  10  |      4  |  1  |    0  |  [6,4,8]  |
    41  |                         i = i + 1;  |         |  10  |      4  |  2  |    0  |  [6,4,8]  |
    42  |              resetPlaceHolder_1();  |         |  10  |      4  |  2  |    0  |  [6,4,8]  |
    48  |        chunk = arrayRead(text, i);  |         |  10  |      8  |  2  |    0  |  [6,4,8]  |
    51  |                     R = R + chunk;  |      8  |  18  |      8  |  2  |    0  |  [6,4,8]  |
    55  |                         i = i + 1;  |         |  18  |      8  |  3  |    0  |  [6,4,8]  |
    56  |              resetPlaceHolder_1();  |         |  18  |      8  |  3  |    0  |  [6,4,8]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [24, 37, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [24, 37, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [24, 37, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |      6  |                         0  |
    37  |         R = R + chunk;  |      4  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |      8  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-30 06:08:22,313 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:08:30,190 INFO     Done. Execution time: 7.877332925796509 seconds
2023-01-30 06:08:30,190 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0608-transparentAmortize-60s-mostPrecise/stac-raw-0130-0608-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.871s
user	0m16.830s
sys	0m2.240s

2023-01-30 06:08:30,190 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-30 06:08:30,191 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:11:36,265 INFO     Done. Execution time: 186.0745391845703 seconds
2023-01-30 06:11:36,265 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz21227634197971393/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz21227634197971393/bin -o /tmp/qfuzz21227634197971393/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz21227634197971393/bin
Found file /tmp/qfuzz21227634197971393/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz21227634197971393/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz21227634197971393/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz21227634197971393/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz21227634197971393/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz21227634197971393/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz21227634197971393/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz21227634197971393/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 120393 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 40, exec speed = 120027 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,151.00]
1; /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [29.00,34.00,111.00]
3; /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,211.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz21227634197971393/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_061136_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 10, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:11:36,266 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-30 06:11:36,266 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-30 06:11:42,749 INFO     Done. Execution time: 6.483122110366821 seconds
2023-01-30 06:11:42,749 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_061136_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230130_061136_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(10, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 10
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 5
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 7
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   10  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   10  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   10  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   10  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   10  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   10  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   10  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   10  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       11  |  1  |   10  |      2  |
    41  |                       R = R + sep;  |     10  |  11  |       11  |  1  |   10  |      2  |
    45  |             builder = builder + 1;  |         |  11  |       12  |  1  |   10  |      2  |
    48  |                         R = R + 1;  |      1  |  12  |       12  |  1  |   10  |      2  |
    52  |                         i = i + 1;  |         |  12  |       12  |  2  |   10  |      2  |
    53  |              resetPlaceHolder_1();  |         |  12  |       12  |  2  |   10  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     10  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     10  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     10  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-30 06:11:42,749 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:11:57,022 INFO     Done. Execution time: 14.272077083587646 seconds
2023-01-30 06:11:57,022 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0611-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0611-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.266s
user	0m37.066s
sys	0m5.854s

2023-01-30 06:11:57,022 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-30 06:11:57,022 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:15:03,022 INFO     Done. Execution time: 185.99915671348572 seconds
2023-01-30 06:15:03,022 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz6161643410767078901/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6161643410767078901/bin -o /tmp/qfuzz6161643410767078901/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6161643410767078901/bin
Found file /tmp/qfuzz6161643410767078901/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz6161643410767078901/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6161643410767078901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6161643410767078901/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6161643410767078901/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz6161643410767078901/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 125209 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 34, exec speed = 122215 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m122k to 125k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
1; /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 3.00; [29.00,32.00,37.00]
3; /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 7, 12, 8, 4, 5, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6161643410767078901/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_061502_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:15:03,022 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-30 06:15:03,023 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-30 06:15:09,968 INFO     Done. Execution time: 6.94518780708313 seconds
2023-01-30 06:15:09,968 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_061502_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230130_061502_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-30 06:15:09,968 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:15:18,172 INFO     Done. Execution time: 8.20371389389038 seconds
2023-01-30 06:15:18,173 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0615-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0615-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.197s
user	0m17.671s
sys	0m2.481s

2023-01-30 06:15:18,173 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-30 06:15:18,173 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:18:24,167 INFO     Done. Execution time: 185.99356055259705 seconds
2023-01-30 06:18:24,167 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz8006586859369207120/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8006586859369207120/bin -o /tmp/qfuzz8006586859369207120/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8006586859369207120/bin
Found file /tmp/qfuzz8006586859369207120/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz8006586859369207120/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8006586859369207120/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8006586859369207120/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8006586859369207120/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8006586859369207120/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 127956 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 125096 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m125k to 127k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (35 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
4; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
7; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
10; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
13; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
16; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
18; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
22; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
29; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
52; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
56; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
61; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
62; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
64; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
66; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
70; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
79; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
90; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
106; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
129; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
132; /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000034,src:000000+000006,op:splice,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000034,src:000000+000006,op:splice,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:16
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000034,src:000000+000006,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 5, 5, 4, 12, 7, 6, 4, 12, 6, 10, 10, 6, 8, 10, 5, 6, 12, 12, 10, 11, 11, 12, 12, 11, 11, 5, 9, 6, 9, 11, 11, 11, 11, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 12, 12, 12, 12, 8, 12, 12, 12, 12, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 8, 10, 10, 9, 10, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 10, 7, 4, 9, 7, 10, 7, 10, 11, 4, 8, 8, 10, 7, 4, 9, 7, 10, 7, 10, 11, 4, 8, 7, 12, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 6, 5, 4, 6, 10, 12, 11, 11, 8, 8, 8, 9, 7, 6, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 12, 12, 12, 11, 12, 12, 12, 12, 8, 5, 12, 9, 9, 4, 11, 5, 5, 5, 6, 9, 11, 7, 10, 8, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 8, 9, 10, 6, 8, 11, 5, 6, 12, 12, 10, 11, 4, 9, 6, 8, 12, 9, 4, 6, 8, 5, 5, 6, 6, 7, 10, 11, 4, 5, 10, 10, 9, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 10, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 6, 9, 6, 6, 6, 6, 7, 12, 4, 10, 10, 6, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 8, 12, 7, 6, 8, 7, 6, 9, 11, 8, 10, 4, 8, 10, 12, 6, 7, 10, 4, 4, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 12, 8, 8, 6, 6, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 10, 10, 8, 4, 10, 12, 11, 12, 9, 4, 7, 11, 9, 5, 8, 7, 12, 8, 10, 10, 8, 9, 10, 12, 11, 11, 9, 10, 12, 9, 5, 9, 5, 4, 11, 5, 10, 10, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 9, 9, 6, 6, 10, 11, 10, 7, 4, 5, 8, 4, 6, 7, 8, 6, 8, 7, 11, 4, 5, 6, 8, 9, 5, 7, 12, 5, 8, 6, 8, 5, 5, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 8, 5, 4, 12, 7, 5, 9, 11, 8, 12, 4, 6, 10, 4, 11, 7, 10, 4, 10, 7, 8, 5, 4, 12, 9, 5, 9, 11, 8, 12, 4, 6, 10, 4, 4, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 7, 4, 12, 7, 7, 12, 10, 4, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 5, 10, 6, 4, 6, 10, 12, 9, 10, 4, 12, 4, 7, 10, 7, 7, 7, 11, 4, 10, 7, 7, 6, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 5, 8, 9, 12, 11, 8, 9, 9, 11, 10, 12, 5, 8, 8, 5, 11, 8, 12, 9, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 6, 5, 4, 4, 12, 7, 7, 9, 7, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 9, 8, 8, 4, 12, 7, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 6, 5, 10, 7, 7, 5, 6, 6, 7, 10, 4, 6, 10, 5, 7, 8, 10, 8, 4, 5, 10, 5, 6, 6, 12, 11, 9, 5, 7, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 8, 12, 4, 10, 6, 8, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 9, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 4, 11, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 9, 9, 7, 10, 4, 10, 7, 7, 5, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 10, 6, 8, 11, 5, 6, 12, 12, 10, 11, 4, 12, 5, 6, 5, 12, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 12, 11, 4, 10, 8, 11, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8006586859369207120/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_061823_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,5,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,12,12,12,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,8,10,10,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,7,7,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,10,7,4,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,4,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,12,12,12,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,8,9,10,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,10,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,6,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,8,12,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,12,8,8,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,10,10,8,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,9,9,6,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,8,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,7,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,5,10,6,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,5,8,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,6,5,4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,9,8,8,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,6,5,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,9,9,9,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,4,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,10,6,8,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:18:24,167 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-30 06:18:24,167 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-30 06:18:32,489 INFO     Done. Execution time: 8.32182765007019 seconds
2023-01-30 06:18:32,490 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_061823_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230130_061823_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 35 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,5,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,12,12,12,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,8,10,10,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,7,7,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,10,7,4,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,4,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 35 (22.86%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,12,12,12,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,8,9,10,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,10,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,6,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,8,12,7,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,10,10,8,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,9,9,6,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,8,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,12,8,8,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,7,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,5,10,6,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,9,8,8,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,6,5,4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,5,8,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,6,5,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,9,9,9,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,4,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,10,6,8,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 35)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 35 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,5,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [11,12,12,12,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [10,8,10,10,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [5,5,7,7,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8,10,7,4,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,4,6,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [12,12,12,12,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,8,9,10,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [8,10,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,6,6,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,8,12,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [6,12,8,8,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,10,10,8,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [11,9,9,6,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,11,8,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,6,7,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [6,5,10,6,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,11,5,8,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,6,5,4,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [6,9,8,8,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,11,6,5,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,6,5,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [9,9,9,9,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [11,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,6,4,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4,10,6,8,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,6,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 29 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 401):
                                                                                                      
 Index  |              Commands               |  Costs  |  R   |  entry  |  i  |  j  |    sorted     |
------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |     |  [7,5,5,5,4]  |
    10  |                      // int R = 0;  |         |   0  |         |     |     |  [7,5,5,5,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |     |  [7,5,5,5,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |     |  [7,5,5,5,4]  |
    14  |                     int entry = 0;  |         |   0  |      0  |     |     |  [7,5,5,5,4]  |
    16  |                         int i = 0;  |         |   0  |      0  |  0  |     |  [7,5,5,5,4]  |
    22  |      entry = arrayRead(sorted, i);  |         |   0  |      7  |  0  |     |  [7,5,5,5,4]  |
    24  |                         int j = 0;  |         |   0  |      7  |  0  |  0  |  [7,5,5,5,4]  |
    30  |                         R = R + 2;  |      2  |   2  |      7  |  0  |  0  |  [7,5,5,5,4]  |
    34  |                         j = j + 1;  |         |   2  |      7  |  0  |  1  |  [7,5,5,5,4]  |
    35  |              resetPlaceHolder_2();  |         |   2  |      7  |  0  |  1  |  [7,5,5,5,4]  |
    41  |                         R = R + 2;  |      2  |   4  |      7  |  0  |  1  |  [7,5,5,5,4]  |
    45  |                         j = j + 1;  |         |   4  |      7  |  0  |  2  |  [7,5,5,5,4]  |
    46  |              resetPlaceHolder_2();  |         |   4  |      7  |  0  |  2  |  [7,5,5,5,4]  |
    52  |                         R = R + 2;  |      2  |   6  |      7  |  0  |  2  |  [7,5,5,5,4]  |
    56  |                         j = j + 1;  |         |   6  |      7  |  0  |  3  |  [7,5,5,5,4]  |
    57  |              resetPlaceHolder_2();  |         |   6  |      7  |  0  |  3  |  [7,5,5,5,4]  |
    63  |                         R = R + 2;  |      2  |   8  |      7  |  0  |  3  |  [7,5,5,5,4]  |
    67  |                         j = j + 1;  |         |   8  |      7  |  0  |  4  |  [7,5,5,5,4]  |
    68  |              resetPlaceHolder_2();  |         |   8  |      7  |  0  |  4  |  [7,5,5,5,4]  |
    74  |                         R = R + 2;  |      2  |  10  |      7  |  0  |  4  |  [7,5,5,5,4]  |
    78  |                         j = j + 1;  |         |  10  |      7  |  0  |  5  |  [7,5,5,5,4]  |
    79  |              resetPlaceHolder_2();  |         |  10  |      7  |  0  |  5  |  [7,5,5,5,4]  |
    85  |                         R = R + 2;  |      2  |  12  |      7  |  0  |  5  |  [7,5,5,5,4]  |
    89  |                         j = j + 1;  |         |  12  |      7  |  0  |  6  |  [7,5,5,5,4]  |
    90  |              resetPlaceHolder_2();  |         |  12  |      7  |  0  |  6  |  [7,5,5,5,4]  |
    96  |                         R = R + 2;  |      2  |  14  |      7  |  0  |  6  |  [7,5,5,5,4]  |
   100  |                         j = j + 1;  |         |  14  |      7  |  0  |  7  |  [7,5,5,5,4]  |
   101  |              resetPlaceHolder_2();  |         |  14  |      7  |  0  |  7  |  [7,5,5,5,4]  |
   107  |                         R = R + 1;  |      1  |  15  |      7  |  0  |  7  |  [7,5,5,5,4]  |
   111  |                         i = i + 1;  |         |  15  |      7  |  1  |  7  |  [7,5,5,5,4]  |
   112  |              resetPlaceHolder_1();  |         |  15  |      7  |  1  |  7  |  [7,5,5,5,4]  |
   118  |      entry = arrayRead(sorted, i);  |         |  15  |      5  |  1  |  7  |  [7,5,5,5,4]  |
   120  |                         int j = 0;  |         |  15  |      5  |  1  |  0  |  [7,5,5,5,4]  |
   126  |                         R = R + 2;  |      2  |  17  |      5  |  1  |  0  |  [7,5,5,5,4]  |
   130  |                         j = j + 1;  |         |  17  |      5  |  1  |  1  |  [7,5,5,5,4]  |
   131  |              resetPlaceHolder_2();  |         |  17  |      5  |  1  |  1  |  [7,5,5,5,4]  |
   137  |                         R = R + 2;  |      2  |  19  |      5  |  1  |  1  |  [7,5,5,5,4]  |
   141  |                         j = j + 1;  |         |  19  |      5  |  1  |  2  |  [7,5,5,5,4]  |
   142  |              resetPlaceHolder_2();  |         |  19  |      5  |  1  |  2  |  [7,5,5,5,4]  |
   148  |                         R = R + 2;  |      2  |  21  |      5  |  1  |  2  |  [7,5,5,5,4]  |
   152  |                         j = j + 1;  |         |  21  |      5  |  1  |  3  |  [7,5,5,5,4]  |
   153  |              resetPlaceHolder_2();  |         |  21  |      5  |  1  |  3  |  [7,5,5,5,4]  |
   159  |                         R = R + 2;  |      2  |  23  |      5  |  1  |  3  |  [7,5,5,5,4]  |
   163  |                         j = j + 1;  |         |  23  |      5  |  1  |  4  |  [7,5,5,5,4]  |
   164  |              resetPlaceHolder_2();  |         |  23  |      5  |  1  |  4  |  [7,5,5,5,4]  |
   170  |                         R = R + 2;  |      2  |  25  |      5  |  1  |  4  |  [7,5,5,5,4]  |
   174  |                         j = j + 1;  |         |  25  |      5  |  1  |  5  |  [7,5,5,5,4]  |
   175  |              resetPlaceHolder_2();  |         |  25  |      5  |  1  |  5  |  [7,5,5,5,4]  |
   181  |                         R = R + 1;  |      1  |  26  |      5  |  1  |  5  |  [7,5,5,5,4]  |
   185  |                         i = i + 1;  |         |  26  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   186  |              resetPlaceHolder_1();  |         |  26  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   192  |      entry = arrayRead(sorted, i);  |         |  26  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   194  |                         int j = 0;  |         |  26  |      5  |  2  |  0  |  [7,5,5,5,4]  |
   200  |                         R = R + 2;  |      2  |  28  |      5  |  2  |  0  |  [7,5,5,5,4]  |
   204  |                         j = j + 1;  |         |  28  |      5  |  2  |  1  |  [7,5,5,5,4]  |
   205  |              resetPlaceHolder_2();  |         |  28  |      5  |  2  |  1  |  [7,5,5,5,4]  |
   211  |                         R = R + 2;  |      2  |  30  |      5  |  2  |  1  |  [7,5,5,5,4]  |
   215  |                         j = j + 1;  |         |  30  |      5  |  2  |  2  |  [7,5,5,5,4]  |
   216  |              resetPlaceHolder_2();  |         |  30  |      5  |  2  |  2  |  [7,5,5,5,4]  |
   222  |                         R = R + 2;  |      2  |  32  |      5  |  2  |  2  |  [7,5,5,5,4]  |
   226  |                         j = j + 1;  |         |  32  |      5  |  2  |  3  |  [7,5,5,5,4]  |
   227  |              resetPlaceHolder_2();  |         |  32  |      5  |  2  |  3  |  [7,5,5,5,4]  |
   233  |                         R = R + 2;  |      2  |  34  |      5  |  2  |  3  |  [7,5,5,5,4]  |
   237  |                         j = j + 1;  |         |  34  |      5  |  2  |  4  |  [7,5,5,5,4]  |
   238  |              resetPlaceHolder_2();  |         |  34  |      5  |  2  |  4  |  [7,5,5,5,4]  |
   244  |                         R = R + 2;  |      2  |  36  |      5  |  2  |  4  |  [7,5,5,5,4]  |
   248  |                         j = j + 1;  |         |  36  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   249  |              resetPlaceHolder_2();  |         |  36  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   255  |                         R = R + 1;  |      1  |  37  |      5  |  2  |  5  |  [7,5,5,5,4]  |
   259  |                         i = i + 1;  |         |  37  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   260  |              resetPlaceHolder_1();  |         |  37  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   266  |      entry = arrayRead(sorted, i);  |         |  37  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   268  |                         int j = 0;  |         |  37  |      5  |  3  |  0  |  [7,5,5,5,4]  |
   274  |                         R = R + 2;  |      2  |  39  |      5  |  3  |  0  |  [7,5,5,5,4]  |
   278  |                         j = j + 1;  |         |  39  |      5  |  3  |  1  |  [7,5,5,5,4]  |
   279  |              resetPlaceHolder_2();  |         |  39  |      5  |  3  |  1  |  [7,5,5,5,4]  |
   285  |                         R = R + 2;  |      2  |  41  |      5  |  3  |  1  |  [7,5,5,5,4]  |
   289  |                         j = j + 1;  |         |  41  |      5  |  3  |  2  |  [7,5,5,5,4]  |
   290  |              resetPlaceHolder_2();  |         |  41  |      5  |  3  |  2  |  [7,5,5,5,4]  |
   296  |                         R = R + 2;  |      2  |  43  |      5  |  3  |  2  |  [7,5,5,5,4]  |
   300  |                         j = j + 1;  |         |  43  |      5  |  3  |  3  |  [7,5,5,5,4]  |
   301  |              resetPlaceHolder_2();  |         |  43  |      5  |  3  |  3  |  [7,5,5,5,4]  |
   307  |                         R = R + 2;  |      2  |  45  |      5  |  3  |  3  |  [7,5,5,5,4]  |
   311  |                         j = j + 1;  |         |  45  |      5  |  3  |  4  |  [7,5,5,5,4]  |
   312  |              resetPlaceHolder_2();  |         |  45  |      5  |  3  |  4  |  [7,5,5,5,4]  |
   318  |                         R = R + 2;  |      2  |  47  |      5  |  3  |  4  |  [7,5,5,5,4]  |
   322  |                         j = j + 1;  |         |  47  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   323  |              resetPlaceHolder_2();  |         |  47  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   329  |                         R = R + 1;  |      1  |  48  |      5  |  3  |  5  |  [7,5,5,5,4]  |
   333  |                         i = i + 1;  |         |  48  |      5  |  4  |  5  |  [7,5,5,5,4]  |
   334  |              resetPlaceHolder_1();  |         |  48  |      5  |  4  |  5  |  [7,5,5,5,4]  |
   340  |      entry = arrayRead(sorted, i);  |         |  48  |      4  |  4  |  5  |  [7,5,5,5,4]  |
   342  |                         int j = 0;  |         |  48  |      4  |  4  |  0  |  [7,5,5,5,4]  |
   348  |                         R = R + 2;  |      2  |  50  |      4  |  4  |  0  |  [7,5,5,5,4]  |
   352  |                         j = j + 1;  |         |  50  |      4  |  4  |  1  |  [7,5,5,5,4]  |
   353  |              resetPlaceHolder_2();  |         |  50  |      4  |  4  |  1  |  [7,5,5,5,4]  |
   359  |                         R = R + 2;  |      2  |  52  |      4  |  4  |  1  |  [7,5,5,5,4]  |
   363  |                         j = j + 1;  |         |  52  |      4  |  4  |  2  |  [7,5,5,5,4]  |
   364  |              resetPlaceHolder_2();  |         |  52  |      4  |  4  |  2  |  [7,5,5,5,4]  |
   370  |                         R = R + 2;  |      2  |  54  |      4  |  4  |  2  |  [7,5,5,5,4]  |
   374  |                         j = j + 1;  |         |  54  |      4  |  4  |  3  |  [7,5,5,5,4]  |
   375  |              resetPlaceHolder_2();  |         |  54  |      4  |  4  |  3  |  [7,5,5,5,4]  |
   381  |                         R = R + 2;  |      2  |  56  |      4  |  4  |  3  |  [7,5,5,5,4]  |
   385  |                         j = j + 1;  |         |  56  |      4  |  4  |  4  |  [7,5,5,5,4]  |
   386  |              resetPlaceHolder_2();  |         |  56  |      4  |  4  |  4  |  [7,5,5,5,4]  |
   392  |                         R = R + 1;  |      1  |  57  |      4  |  4  |  4  |  [7,5,5,5,4]  |
   396  |                         i = i + 1;  |         |  57  |      4  |  5  |  4  |  [7,5,5,5,4]  |
   397  |              resetPlaceHolder_1();  |         |  57  |      4  |  5  |  4  |  [7,5,5,5,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 31 trace node indices: [170, 52, 211, 348, 74, 307, 233, 85, 381, 392, 137, 329, 285, 96, 41, 244, 148, 296, 181, 159, 274, 318, 255, 63, 370, 359, 30, 107, 126, 200, 222]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {181}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {255}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {329}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {392}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {181}; {255}; {329}; {392}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {181}; {255}; {329}; {392} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                            |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                            |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                            |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                            |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                            |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                            |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 1;  |      1  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
   126  |             R = R + 2;  |      2  |                            |
   131  |  resetPlaceHolder_2();  |         |                            |
   137  |             R = R + 2;  |      2  |                            |
   142  |  resetPlaceHolder_2();  |         |                            |
   148  |             R = R + 2;  |      2  |                            |
   153  |  resetPlaceHolder_2();  |         |                            |
   159  |             R = R + 2;  |      2  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |             R = R + 2;  |      2  |                            |
   175  |  resetPlaceHolder_2();  |         |                            |
   181  |             R = R + 1;  |      1  |                         1  |
   186  |  resetPlaceHolder_1();  |         |                            |
   200  |             R = R + 2;  |      2  |                            |
   205  |  resetPlaceHolder_2();  |         |                            |
   211  |             R = R + 2;  |      2  |                            |
   216  |  resetPlaceHolder_2();  |         |                            |
   222  |             R = R + 2;  |      2  |                            |
   227  |  resetPlaceHolder_2();  |         |                            |
   233  |             R = R + 2;  |      2  |                            |
   238  |  resetPlaceHolder_2();  |         |                            |
   244  |             R = R + 2;  |      2  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |             R = R + 1;  |      1  |                         2  |
   260  |  resetPlaceHolder_1();  |         |                            |
   274  |             R = R + 2;  |      2  |                            |
   279  |  resetPlaceHolder_2();  |         |                            |
   285  |             R = R + 2;  |      2  |                            |
   290  |  resetPlaceHolder_2();  |         |                            |
   296  |             R = R + 2;  |      2  |                            |
   301  |  resetPlaceHolder_2();  |         |                            |
   307  |             R = R + 2;  |      2  |                            |
   312  |  resetPlaceHolder_2();  |         |                            |
   318  |             R = R + 2;  |      2  |                            |
   323  |  resetPlaceHolder_2();  |         |                            |
   329  |             R = R + 1;  |      1  |                         3  |
   334  |  resetPlaceHolder_1();  |         |                            |
   348  |             R = R + 2;  |      2  |                            |
   353  |  resetPlaceHolder_2();  |         |                            |
   359  |             R = R + 2;  |      2  |                            |
   364  |  resetPlaceHolder_2();  |         |                            |
   370  |             R = R + 2;  |      2  |                            |
   375  |  resetPlaceHolder_2();  |         |                            |
   381  |             R = R + 2;  |      2  |                            |
   386  |  resetPlaceHolder_2();  |         |                            |
   392  |             R = R + 1;  |      1  |                         4  |
   397  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {126}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {137}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {148}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {200}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {222}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {285}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {30}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {307}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {318}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {348}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {359}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {370}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {381}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {41}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {52}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {63}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {85}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {126}; {137}; {148}; {159}; {170}; {200}; {211}; {222}; {233}; {244}; {274}; {285}; {296}; {307}; {30}; {318}; {348}; {359}; {370}; {381}; {41}; {52}; {63}; {74}; {85}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {126}; {137}; {148}; {159}; {170}; {200}; {211}; {222}; {233}; {244}; {274}; {285}; {296}; {307}; {30}; {318}; {348}; {359}; {370}; {381}; {41}; {52}; {63}; {74}; {85}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         2  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         3  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         4  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         5  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         6  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 1;  |      1  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   126  |             R = R + 2;  |      2  |                         7  |
   131  |  resetPlaceHolder_2();  |         |                            |
   137  |             R = R + 2;  |      2  |                         8  |
   142  |  resetPlaceHolder_2();  |         |                            |
   148  |             R = R + 2;  |      2  |                         9  |
   153  |  resetPlaceHolder_2();  |         |                            |
   159  |             R = R + 2;  |      2  |                        10  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |             R = R + 2;  |      2  |                        11  |
   175  |  resetPlaceHolder_2();  |         |                            |
   181  |             R = R + 1;  |      1  |                            |
   186  |  resetPlaceHolder_1();  |         |                            |
   200  |             R = R + 2;  |      2  |                        12  |
   205  |  resetPlaceHolder_2();  |         |                            |
   211  |             R = R + 2;  |      2  |                        13  |
   216  |  resetPlaceHolder_2();  |         |                            |
   222  |             R = R + 2;  |      2  |                        14  |
   227  |  resetPlaceHolder_2();  |         |                            |
   233  |             R = R + 2;  |      2  |                        15  |
   238  |  resetPlaceHolder_2();  |         |                            |
   244  |             R = R + 2;  |      2  |                        16  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |             R = R + 1;  |      1  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
   274  |             R = R + 2;  |      2  |                        17  |
   279  |  resetPlaceHolder_2();  |         |                            |
   285  |             R = R + 2;  |      2  |                        18  |
   290  |  resetPlaceHolder_2();  |         |                            |
   296  |             R = R + 2;  |      2  |                        19  |
   301  |  resetPlaceHolder_2();  |         |                            |
   307  |             R = R + 2;  |      2  |                        20  |
   312  |  resetPlaceHolder_2();  |         |                            |
   318  |             R = R + 2;  |      2  |                        21  |
   323  |  resetPlaceHolder_2();  |         |                            |
   329  |             R = R + 1;  |      1  |                            |
   334  |  resetPlaceHolder_1();  |         |                            |
   348  |             R = R + 2;  |      2  |                        22  |
   353  |  resetPlaceHolder_2();  |         |                            |
   359  |             R = R + 2;  |      2  |                        23  |
   364  |  resetPlaceHolder_2();  |         |                            |
   370  |             R = R + 2;  |      2  |                        24  |
   375  |  resetPlaceHolder_2();  |         |                            |
   381  |             R = R + 2;  |      2  |                        25  |
   386  |  resetPlaceHolder_2();  |         |                            |
   392  |             R = R + 1;  |      1  |                            |
   397  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {107}; {181}; {255}; {329}; {392}
GroupID(1): {126}; {137}; {148}; {159}; {170}; {200}; {211}; {222}; {233}; {244}; {274}; {285}; {296}; {307}; {30}; {318}; {348}; {359}; {370}; {381}; {41}; {52}; {63}; {74}; {85}; {96}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                            |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                            |                         1  |
    46  |  resetPlaceHolder_2();  |         |                            |                            |
    52  |             R = R + 2;  |      2  |                            |                         2  |
    57  |  resetPlaceHolder_2();  |         |                            |                            |
    63  |             R = R + 2;  |      2  |                            |                         3  |
    68  |  resetPlaceHolder_2();  |         |                            |                            |
    74  |             R = R + 2;  |      2  |                            |                         4  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |
    85  |             R = R + 2;  |      2  |                            |                         5  |
    90  |  resetPlaceHolder_2();  |         |                            |                            |
    96  |             R = R + 2;  |      2  |                            |                         6  |
   101  |  resetPlaceHolder_2();  |         |                            |                            |
   107  |             R = R + 1;  |      1  |                         0  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   126  |             R = R + 2;  |      2  |                            |                         7  |
   131  |  resetPlaceHolder_2();  |         |                            |                            |
   137  |             R = R + 2;  |      2  |                            |                         8  |
   142  |  resetPlaceHolder_2();  |         |                            |                            |
   148  |             R = R + 2;  |      2  |                            |                         9  |
   153  |  resetPlaceHolder_2();  |         |                            |                            |
   159  |             R = R + 2;  |      2  |                            |                        10  |
   164  |  resetPlaceHolder_2();  |         |                            |                            |
   170  |             R = R + 2;  |      2  |                            |                        11  |
   175  |  resetPlaceHolder_2();  |         |                            |                            |
   181  |             R = R + 1;  |      1  |                         1  |                            |
   186  |  resetPlaceHolder_1();  |         |                            |                            |
   200  |             R = R + 2;  |      2  |                            |                        12  |
   205  |  resetPlaceHolder_2();  |         |                            |                            |
   211  |             R = R + 2;  |      2  |                            |                        13  |
   216  |  resetPlaceHolder_2();  |         |                            |                            |
   222  |             R = R + 2;  |      2  |                            |                        14  |
   227  |  resetPlaceHolder_2();  |         |                            |                            |
   233  |             R = R + 2;  |      2  |                            |                        15  |
   238  |  resetPlaceHolder_2();  |         |                            |                            |
   244  |             R = R + 2;  |      2  |                            |                        16  |
   249  |  resetPlaceHolder_2();  |         |                            |                            |
   255  |             R = R + 1;  |      1  |                         2  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |
   274  |             R = R + 2;  |      2  |                            |                        17  |
   279  |  resetPlaceHolder_2();  |         |                            |                            |
   285  |             R = R + 2;  |      2  |                            |                        18  |
   290  |  resetPlaceHolder_2();  |         |                            |                            |
   296  |             R = R + 2;  |      2  |                            |                        19  |
   301  |  resetPlaceHolder_2();  |         |                            |                            |
   307  |             R = R + 2;  |      2  |                            |                        20  |
   312  |  resetPlaceHolder_2();  |         |                            |                            |
   318  |             R = R + 2;  |      2  |                            |                        21  |
   323  |  resetPlaceHolder_2();  |         |                            |                            |
   329  |             R = R + 1;  |      1  |                         3  |                            |
   334  |  resetPlaceHolder_1();  |         |                            |                            |
   348  |             R = R + 2;  |      2  |                            |                        22  |
   353  |  resetPlaceHolder_2();  |         |                            |                            |
   359  |             R = R + 2;  |      2  |                            |                        23  |
   364  |  resetPlaceHolder_2();  |         |                            |                            |
   370  |             R = R + 2;  |      2  |                            |                        24  |
   375  |  resetPlaceHolder_2();  |         |                            |                            |
   381  |             R = R + 2;  |      2  |                            |                        25  |
   386  |  resetPlaceHolder_2();  |         |                            |                            |
   392  |             R = R + 1;  |      1  |                         4  |                            |
   397  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(112, 186, 260, 334)
GroupID(1): Set(101, 249, 142, 153, 301, 46, 57, 216, 164, 238, 353, 312, 205, 279, 375, 323, 35, 175, 290, 79, 131, 68, 90, 227, 364)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [6]  |
    10  |     return;  |         |  0  |     [6]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R1 = R1 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-30 06:18:32,490 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:18:52,959 INFO     Done. Execution time: 20.468462705612183 seconds
2023-01-30 06:18:52,959 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * sorted) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (sorted + (2 * sorted))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D1 = D1 + 2;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * sorted) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (sorted + (2 * sorted))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D1 = D1 + 2;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 sorted)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 sorted)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ sorted (* 2 sorted))) (= a!1 (+ sorted (* 2 sorted)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `18.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0618-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0618-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.461s
user	1m2.436s
sys	0m5.105s

2023-01-30 06:18:52,959 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-30 06:18:52,960 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:18:54,710 INFO     Done. Execution time: 1.7497148513793945 seconds
2023-01-30 06:18:54,710 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-30 06:18:54,710 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-30 06:18:54,710 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-30 06:18:56,377 INFO     Done. Execution time: 1.6670196056365967 seconds
2023-01-30 06:18:56,377 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-30 06:18:56,377 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:18:57,368 INFO     Done. Execution time: 0.9903838634490967 seconds
2023-01-30 06:18:57,368 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.983s
user	0m1.561s
sys	0m0.114s

2023-01-30 06:18:57,368 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-30 06:18:57,368 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:22:03,275 INFO     Done. Execution time: 185.90667271614075 seconds
2023-01-30 06:22:03,275 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2647761335146128100/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2647761335146128100/bin -o /tmp/qfuzz2647761335146128100/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2647761335146128100/bin
Found file /tmp/qfuzz2647761335146128100/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2647761335146128100/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2647761335146128100/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2647761335146128100/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2647761335146128100/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2647761335146128100/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 38, exec speed = 125790 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 38, exec speed = 119101 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m119k to 125k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [53.00]
1; /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [53.00]
5; /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]
10; /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2
/tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 11, 10, 7, 12, 5, 4, 12, 7, 7, 11, 10, 4, 6, 10, 5, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 10, 11, 4, 12, 12, 10, 8, 8, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2647761335146128100/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_062203_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,11,10,7,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [10,11,4,12,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [7,4,7,6,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,6,5,4,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:22:03,276 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-30 06:22:03,276 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-30 06:22:08,385 INFO     Done. Execution time: 5.109079599380493 seconds
2023-01-30 06:22:08,385 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_062203_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230130_062203_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,11,10,7,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [10,11,4,12,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [7,4,7,6,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,6,5,4,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [7,4,7,6,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [5,6,5,4,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [5,11,10,7,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [10,11,4,12,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |   stopIndex    |
---------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [7,4,7,6,10]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [7,4,7,6,10]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [7,4,7,6,10]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [7,4,7,6,10]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [7,4,7,6,10]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [7,4,7,6,10]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [7,4,7,6,10]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [7,4,7,6,10]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [7,4,7,6,10]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [7,4,7,6,10]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |       4  |  1  |         1  |        2  |    1  |      1  |  [7,4,7,6,10]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |       4  |  1  |         1  |        2  |    2  |      1  |  [7,4,7,6,10]  |
    59  |  appendTo = appendTo + (pos - l...  |         |  0  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [7,4,7,6,10]  |
    64  |          R = R + (pos - lastHold);  |      1  |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [7,4,7,6,10]  |
    65  |                             break;  |         |  1  |         1  |       4  |  1  |         1  |        2  |    2  |      1  |  [7,4,7,6,10]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {64}
                                                                              
 Index  |          Commands           |  Costs  |  SegmentIDs in GroupID(0)  |
------------------------------------------------------------------------------
    64  |  R = R + (pos - lastHold);  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                           
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |    stopIndex     |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [5,11,10,7,12]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,11,10,7,12]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,11,10,7,12]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,11,10,7,12]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,11,10,7,12]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [5,11,10,7,12]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [5,11,10,7,12]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [5,11,10,7,12]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [5,11,10,7,12]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [5,11,10,7,12]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      11  |  1  |         1  |        2  |    1  |      1  |  [5,11,10,7,12]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      11  |  1  |         1  |        2  |    2  |      1  |  [5,11,10,7,12]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      11  |  2  |         1  |        2  |    2  |      1  |  [5,11,10,7,12]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      11  |  2  |         1  |        2  |    2  |      1  |  [5,11,10,7,12]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (pos - lastHold) -> R0 = R0 + (pos - lastHold);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-30 06:22:08,385 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:22:23,908 INFO     Done. Execution time: 15.52212905883789 seconds
2023-01-30 06:22:23,908 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `13.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0622-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0622-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.515s
user	0m27.891s
sys	0m3.436s

2023-01-30 06:22:23,908 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-30 06:22:23,908 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:25:29,729 INFO     Done. Execution time: 185.82057690620422 seconds
2023-01-30 06:25:29,729 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz1286937996062433653/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1286937996062433653/bin -o /tmp/qfuzz1286937996062433653/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1286937996062433653/bin
Found file /tmp/qfuzz1286937996062433653/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz1286937996062433653/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1286937996062433653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1286937996062433653/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1286937996062433653/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz1286937996062433653/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 117064 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 122028 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m117k to 122k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1286937996062433653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_062529_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7, 2, 6
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:25:29,730 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-30 06:25:29,730 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-30 06:25:34,109 INFO     Done. Execution time: 4.379318475723267 seconds
2023-01-30 06:25:34,109 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_062529_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230130_062529_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7, 2, 6)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 7
recursiveTypeIndexes: 2
d: 6
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                         
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d  |  recursiveTypeIndexes  |
-----------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |              5  |  4  |                     2  |
    32  |     return;  |         |  0  |              5  |  4  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-30 06:25:34,110 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:25:36,267 INFO     Done. Execution time: 2.1572887897491455 seconds
2023-01-30 06:25:36,267 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0625-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0625-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.151s
user	0m3.852s
sys	0m0.203s

2023-01-30 06:25:36,268 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-30 06:25:36,268 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:28:42,172 INFO     Done. Execution time: 185.90352201461792 seconds
2023-01-30 06:28:42,172 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz421590977810977352/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz421590977810977352/bin -o /tmp/qfuzz421590977810977352/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz421590977810977352/bin
Found file /tmp/qfuzz421590977810977352/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz421590977810977352/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz421590977810977352/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz421590977810977352/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz421590977810977352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz421590977810977352/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz421590977810977352/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz421590977810977352/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 112919 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 123445 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m112k to 123k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 5, 6, 9, 6, 12, 7, 4, 5, 5, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz421590977810977352/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_062841_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:28:42,172 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-30 06:28:42,172 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-30 06:28:48,179 INFO     Done. Execution time: 6.006420135498047 seconds
2023-01-30 06:28:48,179 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_062841_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230130_062841_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-30 06:28:48,179 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:28:55,620 INFO     Done. Execution time: 7.440866231918335 seconds
2023-01-30 06:28:55,620 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0628-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0628-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.434s
user	0m15.935s
sys	0m2.388s

2023-01-30 06:28:55,620 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-30 06:28:55,621 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:32:01,539 INFO     Done. Execution time: 185.91834568977356 seconds
2023-01-30 06:32:01,539 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6102415650723469517/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6102415650723469517/bin -o /tmp/qfuzz6102415650723469517/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6102415650723469517/bin
Found file /tmp/qfuzz6102415650723469517/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6102415650723469517/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6102415650723469517/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6102415650723469517/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6102415650723469517/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz6102415650723469517/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 129438 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 119725 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m119k to 129k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 20.00; [95.00,115.00,135.00,166.00]
1; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 9.00; [95.00,126.00,135.00,155.00]
3; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta; 5; 11.00; [115.00,155.00,166.00,215.00,255.00]
6; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 5; 11.00; [115.00,126.00,155.00,175.00,215.00]
7; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 2; 11.00; [255.00,266.00]
11; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 5; 20.00; [95.00,115.00,135.00,166.00,215.00]
16; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 4; 20.00; [115.00,135.00,166.00,255.00]
23; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 29.00; [15.00,146.00,175.00,255.00]
37; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 5; 31.00; [95.00,135.00,175.00,206.00,255.00]
165; /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:16,+delta; 5; 40.00; [15.00,95.00,146.00,195.00,235.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:16,+delta
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000009,src:000001+000008,op:splice,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 11, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 6, 8, 12, 4, 10, 12, 8, 4, 5, 12, 9, 9, 10, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 12, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 6, 12, 12, 7, 7, 9, 6, 8, 4, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 10, 6, 5, 4, 12, 7, 7, 9, 12, 8, 8, 8, 4, 5, 9, 7, 10, 5, 10, 7, 10, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 12, 12, 12, 12, 12, 12, 12, 12, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 5, 8, 10, 4, 10, 7, 8, 4, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 12, 5, 10, 7, 5, 7, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6102415650723469517/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_063201_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,11,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,6,8,12,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,12,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,6,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,10,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,12,12,12,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,5,8,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,12,5,10,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:32:01,540 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-30 06:32:01,540 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-30 06:32:09,318 INFO     Done. Execution time: 7.77779483795166 seconds
2023-01-30 06:32:09,318 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_063201_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230130_063201_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,11,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,6,8,12,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,12,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,6,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,10,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,12,12,12,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,5,8,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,12,5,10,7])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [6,11,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [9,6,8,12,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [6,12,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [7,5,6,6,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [7,10,6,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [12,12,12,12,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [5,7,5,8,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [7,12,5,10,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [7,5,6,5,4]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  chunk  |    diff    |  i  |  lhsBuilder  |  rhsBuilder  |
---------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |  [6,11,9]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |   0  |         |  [6,11,9]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |   0  |         |  [6,11,9]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |   0  |         |  [6,11,9]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |   0  |         |  [6,11,9]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |  [6,11,9]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |   0  |      0  |  [6,11,9]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |   0  |      0  |  [6,11,9]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |   0  |      6  |  [6,11,9]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |      6  |   6  |      6  |  [6,11,9]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   6  |      6  |  [6,11,9]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   6  |      6  |  [6,11,9]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   6  |     11  |  [6,11,9]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     11  |  17  |     11  |  [6,11,9]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  17  |     11  |  [6,11,9]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  17  |     11  |  [6,11,9]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  17  |      9  |  [6,11,9]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |      9  |  26  |      9  |  [6,11,9]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  26  |      9  |  [6,11,9]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  26  |      9  |  [6,11,9]  |  3  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 43, 57]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [29, 43, 57]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [29, 43, 57]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43,57}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |      6  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     11  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |      9  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-30 06:32:09,318 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:32:17,024 INFO     Done. Execution time: 7.705352067947388 seconds
2023-01-30 06:32:17,024 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0632-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0632-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.698s
user	0m17.004s
sys	0m2.285s

2023-01-30 06:32:17,024 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-30 06:32:17,024 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:35:23,023 INFO     Done. Execution time: 185.99889469146729 seconds
2023-01-30 06:35:23,024 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz8655759687069797211/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8655759687069797211/bin -o /tmp/qfuzz8655759687069797211/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8655759687069797211/bin
Found file /tmp/qfuzz8655759687069797211/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz8655759687069797211/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8655759687069797211/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8655759687069797211/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8655759687069797211/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8655759687069797211/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 126498 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 129681 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m126k to 129k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (12 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (12 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 13.00; [95.00,115.00,135.00,148.00,164.00,248.00]
2; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 11.00; [95.00,108.00,124.00,135.00,155.00,208.00]
3; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 7; 4.00; [88.00,95.00,115.00,124.00,128.00,155.00,255.00]
4; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 7; 7.00; [115.00,164.00,175.00,188.00,195.00,228.00,235.00]
6; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 6; 4.00; [95.00,115.00,155.00,164.00,168.00,188.00]
7; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 9.00; [115.00,135.00,155.00,208.00,228.00,255.00,264.00]
9; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 6; 7.00; [115.00,135.00,148.00,155.00,164.00,188.00]
12; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 7; 11.00; [88.00,115.00,135.00,164.00,175.00,208.00,255.00]
15; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 7; 13.00; [95.00,115.00,135.00,148.00,164.00,235.00,248.00]
20; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 6; 4.00; [95.00,128.00,135.00,164.00,168.00,255.00]
59; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 7; 7.00; [95.00,108.00,115.00,135.00,164.00,235.00,248.00]
76; /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4,+delta; 7; 20.00; [95.00,115.00,135.00,164.00,188.00,208.00,235.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 6, 5, 4, 10, 9, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 11, 6, 4, 12, 5, 7, 9, 5, 10, 4, 9, 12, 5, 5, 9, 7, 10, 4, 9, 4, 7, 12, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 6, 6, 12, 4, 8, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 5, 6, 10, 12, 9, 7, 9, 12, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 8, 12, 4, 10, 6, 8, 5, 6, 8, 12, 4, 8, 6, 12, 9, 10, 12, 11, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 7, 6, 5, 7, 7, 9, 11, 8, 6, 4, 10, 12, 9, 7, 10, 4, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 5, 6, 7, 12, 10, 11, 4, 5, 10, 10, 9, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 5, 7, 4, 8, 9, 4, 6, 8, 6, 11, 10, 5, 6, 12, 12, 7, 5, 8, 9, 11, 9, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 11, 8, 9, 5, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 12, 7, 5, 4, 6, 9, 7, 10, 4, 7, 9, 4, 12, 11, 8, 7, 4, 4, 4, 10, 7, 10, 12, 11, 12, 11, 7, 4, 7, 9, 4, 11, 4, 9, 6, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8655759687069797211/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_063522_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,6,5,4], 10, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,11,6,4], 12, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,6,6,12,4], 8, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,6,5,4], 12, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,8,12], 4, 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,7,6,5,7], 7, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,5,6,7,12], 10, 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,4,5,7,4], 8, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,11,8,9,5], 9, 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,4,12,7,5], 4, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:35:23,024 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-30 06:35:23,024 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-30 06:35:35,796 INFO     Done. Execution time: 12.77182388305664 seconds
2023-01-30 06:35:35,796 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_063522_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230130_063522_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,6,5,4], 10, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,11,6,4], 12, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,6,6,12,4], 8, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,6,5,4], 12, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,8,12], 4, 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,7,6,5,7], 7, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,5,6,7,12], 10, 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,4,5,7,4], 8, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,11,8,9,5], 9, 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,4,12,7,5], 4, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 12 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,11,6,5,4]
years: 10
months: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,5,11,6,4]
years: 12
months: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,6,6,12,4]
years: 8
months: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,11,6,5,4]
years: 12
months: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,5,6,8,12]
years: 4
months: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,7,6,5,7]
years: 7
months: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [12,5,6,7,12]
years: 10
months: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,4,5,7,4]
years: 8
months: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,11,8,9,5]
years: 9
months: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [5,4,12,7,5]
years: 4
months: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [5,7,4,7,6]
years: 10
months: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,5,6,5,4]
years: 12
months: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 136):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |     tokens     |  years  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       9  |  [7,11,6,5,4]  |     10  |
    26  |                      // int R = 0;  |         |    0  |         |     |       9  |  [7,11,6,5,4]  |     10  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       9  |  [7,11,6,5,4]  |     10  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       9  |  [7,11,6,5,4]  |     10  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |       9  |  [7,11,6,5,4]  |     10  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |       9  |  [7,11,6,5,4]  |     10  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |      7  |  0  |       9  |  [7,11,6,5,4]  |     10  |
    41  |                     R = R + chunk;  |      7  |    7  |      7  |  0  |       9  |  [7,11,6,5,4]  |     10  |
    44  |                     R = R + years;  |     10  |   17  |      7  |  0  |       9  |  [7,11,6,5,4]  |     10  |
    47  |                    R = R + months;  |      9  |   26  |      7  |  0  |       9  |  [7,11,6,5,4]  |     10  |
    51  |                         i = i + 1;  |         |   26  |      7  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    52  |              resetPlaceHolder_1();  |         |   26  |      7  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    58  |      chunk = arrayRead(tokens, i);  |         |   26  |     11  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    61  |                     R = R + chunk;  |     11  |   37  |     11  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    64  |                     R = R + years;  |     10  |   47  |     11  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    67  |                    R = R + months;  |      9  |   56  |     11  |  1  |       9  |  [7,11,6,5,4]  |     10  |
    71  |                         i = i + 1;  |         |   56  |     11  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    72  |              resetPlaceHolder_1();  |         |   56  |     11  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    78  |      chunk = arrayRead(tokens, i);  |         |   56  |      6  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    81  |                     R = R + chunk;  |      6  |   62  |      6  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    84  |                     R = R + years;  |     10  |   72  |      6  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    87  |                    R = R + months;  |      9  |   81  |      6  |  2  |       9  |  [7,11,6,5,4]  |     10  |
    91  |                         i = i + 1;  |         |   81  |      6  |  3  |       9  |  [7,11,6,5,4]  |     10  |
    92  |              resetPlaceHolder_1();  |         |   81  |      6  |  3  |       9  |  [7,11,6,5,4]  |     10  |
    98  |      chunk = arrayRead(tokens, i);  |         |   81  |      5  |  3  |       9  |  [7,11,6,5,4]  |     10  |
   101  |                     R = R + chunk;  |      5  |   86  |      5  |  3  |       9  |  [7,11,6,5,4]  |     10  |
   104  |                     R = R + years;  |     10  |   96  |      5  |  3  |       9  |  [7,11,6,5,4]  |     10  |
   107  |                    R = R + months;  |      9  |  105  |      5  |  3  |       9  |  [7,11,6,5,4]  |     10  |
   111  |                         i = i + 1;  |         |  105  |      5  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   112  |              resetPlaceHolder_1();  |         |  105  |      5  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   118  |      chunk = arrayRead(tokens, i);  |         |  105  |      4  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   121  |                     R = R + chunk;  |      4  |  109  |      4  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   124  |                     R = R + years;  |     10  |  119  |      4  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   127  |                    R = R + months;  |      9  |  128  |      4  |  4  |       9  |  [7,11,6,5,4]  |     10  |
   131  |                         i = i + 1;  |         |  128  |      4  |  5  |       9  |  [7,11,6,5,4]  |     10  |
   132  |              resetPlaceHolder_1();  |         |  128  |      4  |  5  |       9  |  [7,11,6,5,4]  |     10  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 15 trace node indices: [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |      7  |                            |
    44  |         R = R + years;  |     10  |                         0  |
    47  |        R = R + months;  |      9  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     11  |                            |
    64  |         R = R + years;  |     10  |                         1  |
    67  |        R = R + months;  |      9  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      6  |                            |
    84  |         R = R + years;  |     10  |                         2  |
    87  |        R = R + months;  |      9  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      5  |                            |
   104  |         R = R + years;  |     10  |                         3  |
   107  |        R = R + months;  |      9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |      4  |                            |
   124  |         R = R + years;  |     10  |                         4  |
   127  |        R = R + months;  |      9  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |      7  |                            |
    44  |         R = R + years;  |     10  |                            |
    47  |        R = R + months;  |      9  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     11  |                            |
    64  |         R = R + years;  |     10  |                            |
    67  |        R = R + months;  |      9  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      6  |                            |
    84  |         R = R + years;  |     10  |                            |
    87  |        R = R + months;  |      9  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |      5  |                            |
   104  |         R = R + years;  |     10  |                            |
   107  |        R = R + months;  |      9  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |      4  |                            |
   124  |         R = R + years;  |     10  |                            |
   127  |        R = R + months;  |      9  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81,101}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {41,61,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {61,81,101}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [101, 121, 61, 41, 81]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    44  |         R = R + years;  |     10  |                         0  |                            |                            |
    47  |        R = R + months;  |      9  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     11  |                            |                            |                         0  |
    64  |         R = R + years;  |     10  |                         1  |                            |                            |
    67  |        R = R + months;  |      9  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |      6  |                            |                            |                         0  |
    84  |         R = R + years;  |     10  |                         2  |                            |                            |
    87  |        R = R + months;  |      9  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   104  |         R = R + years;  |     10  |                         3  |                            |                            |
   107  |        R = R + months;  |      9  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |      4  |                            |                            |                         0  |
   124  |         R = R + years;  |     10  |                         4  |                            |                            |
   127  |        R = R + months;  |      9  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R years -> R0 = R0 + years;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
use R months -> R1 = R1 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-30 06:35:35,796 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:36:32,485 INFO     Done. Execution time: 56.68873929977417 seconds
2023-01-30 06:36:32,486 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `54.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0635-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0635-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m56.682s
user	2m54.225s
sys	0m17.819s

2023-01-30 06:36:32,486 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-30 06:36:32,486 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:39:38,548 INFO     Done. Execution time: 186.06137228012085 seconds
2023-01-30 06:39:38,548 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz2638610933195530160/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2638610933195530160/bin -o /tmp/qfuzz2638610933195530160/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2638610933195530160/bin
Found file /tmp/qfuzz2638610933195530160/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz2638610933195530160/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2638610933195530160/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2638610933195530160/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2638610933195530160/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2638610933195530160/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 126500 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 120636 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m120k to 126k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
1; /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 4.00; [30.00,34.00]
3; /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 6, 4, 5, 7, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2638610933195530160/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_063938_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:39:38,548 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-30 06:39:38,548 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-30 06:39:45,037 INFO     Done. Execution time: 6.488831996917725 seconds
2023-01-30 06:39:45,037 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_063938_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230130_063938_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-30 06:39:45,037 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:39:52,138 INFO     Done. Execution time: 7.1003947257995605 seconds
2023-01-30 06:39:52,138 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0639-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0639-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.094s
user	0m14.715s
sys	0m2.233s

2023-01-30 06:39:52,138 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-30 06:39:52,139 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:42:58,141 INFO     Done. Execution time: 186.0024609565735 seconds
2023-01-30 06:42:58,141 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz3323327737659411335/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3323327737659411335/bin -o /tmp/qfuzz3323327737659411335/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3323327737659411335/bin
Found file /tmp/qfuzz3323327737659411335/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz3323327737659411335/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3323327737659411335/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3323327737659411335/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3323327737659411335/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz3323327737659411335/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 108647 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 94, exec speed = 126025 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m108k to 126k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,128.00,148.00]
1; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,128.00,148.00]
2; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,188.00]
4; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 7; 1.00; [28.00,32.00,35.50,37.00,148.00,188.00,228.00]
5; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta; 9; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,128.00,148.00,248.00]
7; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 8; 1.00; [28.00,32.00,35.50,37.00,108.00,128.00,148.00,228.00]
40; /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,108.00,128.00,148.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 4, 6, 5, 4, 6, 10, 11, 4, 5, 10, 10, 9, 12, 5, 5, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 7, 5, 5, 11, 11, 5, 5, 10, 6, 10, 9, 5, 7, 12, 12, 8, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 12, 4, 5, 7, 10, 7, 7, 5, 12, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 9, 11, 9, 11, 5, 5, 5, 6, 11, 7, 8, 12, 6, 8, 9, 5, 7, 11, 8, 5, 5, 5, 4, 9, 8, 6, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3323327737659411335/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_064257_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,4,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,7,5,5,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,12,4,5,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,9,11,9,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:42:58,142 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-30 06:42:58,142 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-30 06:43:10,223 INFO     Done. Execution time: 12.08129096031189 seconds
2023-01-30 06:43:10,223 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_064257_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230130_064257_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,4,6,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,7,5,5,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,9,11,9,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,12,4,5,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [7,4,6,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [6,7,5,5,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [6,12,4,5,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [7,9,11,9,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [7,5,6,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [9]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 191):
                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  baseMessage  |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |  [7,4,6,5,4]  |          |         |     |
    11  |                    int buffer = 0;  |         |   0  |  [7,4,6,5,4]  |       0  |         |     |
    12  |                      // int R = 0;  |         |   0  |  [7,4,6,5,4]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |   0  |  [7,4,6,5,4]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |   0  |  [7,4,6,5,4]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |   1  |  [7,4,6,5,4]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |   2  |  [7,4,6,5,4]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |   2  |  [7,4,6,5,4]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |   2  |  [7,4,6,5,4]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |   2  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    33  |                         R = R + 1;  |      1  |   3  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    36  |                         R = R + 1;  |      1  |   4  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    39  |                         R = R + 1;  |      1  |   5  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    42  |                     R = R + chunk;  |      7  |  12  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    45  |                         R = R + 1;  |      1  |  13  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    48  |                         R = R + 1;  |      1  |  14  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    51  |                         R = R + 1;  |      1  |  15  |  [7,4,6,5,4]  |       0  |      7  |  0  |
    55  |                         i = i + 1;  |         |  15  |  [7,4,6,5,4]  |       0  |      7  |  1  |
    56  |              resetPlaceHolder_1();  |         |  15  |  [7,4,6,5,4]  |       0  |      7  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  15  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    65  |                         R = R + 1;  |      1  |  16  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    68  |                         R = R + 1;  |      1  |  17  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    71  |                         R = R + 1;  |      1  |  18  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    74  |                     R = R + chunk;  |      4  |  22  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    77  |                         R = R + 1;  |      1  |  23  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    80  |                         R = R + 1;  |      1  |  24  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    83  |                         R = R + 1;  |      1  |  25  |  [7,4,6,5,4]  |       0  |      4  |  1  |
    87  |                         i = i + 1;  |         |  25  |  [7,4,6,5,4]  |       0  |      4  |  2  |
    88  |              resetPlaceHolder_1();  |         |  25  |  [7,4,6,5,4]  |       0  |      4  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  25  |  [7,4,6,5,4]  |       0  |      6  |  2  |
    97  |                         R = R + 1;  |      1  |  26  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   100  |                         R = R + 1;  |      1  |  27  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   103  |                         R = R + 1;  |      1  |  28  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   106  |                     R = R + chunk;  |      6  |  34  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   109  |                         R = R + 1;  |      1  |  35  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   112  |                         R = R + 1;  |      1  |  36  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   115  |                         R = R + 1;  |      1  |  37  |  [7,4,6,5,4]  |       0  |      6  |  2  |
   119  |                         i = i + 1;  |         |  37  |  [7,4,6,5,4]  |       0  |      6  |  3  |
   120  |              resetPlaceHolder_1();  |         |  37  |  [7,4,6,5,4]  |       0  |      6  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  37  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   129  |                         R = R + 1;  |      1  |  38  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   132  |                         R = R + 1;  |      1  |  39  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   135  |                         R = R + 1;  |      1  |  40  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   138  |                     R = R + chunk;  |      5  |  45  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   141  |                         R = R + 1;  |      1  |  46  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   144  |                         R = R + 1;  |      1  |  47  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   147  |                         R = R + 1;  |      1  |  48  |  [7,4,6,5,4]  |       0  |      5  |  3  |
   151  |                         i = i + 1;  |         |  48  |  [7,4,6,5,4]  |       0  |      5  |  4  |
   152  |              resetPlaceHolder_1();  |         |  48  |  [7,4,6,5,4]  |       0  |      5  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  48  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   161  |                         R = R + 1;  |      1  |  49  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   164  |                         R = R + 1;  |      1  |  50  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   167  |                         R = R + 1;  |      1  |  51  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   170  |                     R = R + chunk;  |      4  |  55  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   173  |                         R = R + 1;  |      1  |  56  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   176  |                         R = R + 1;  |      1  |  57  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   179  |                         R = R + 1;  |      1  |  58  |  [7,4,6,5,4]  |       0  |      4  |  4  |
   183  |                         i = i + 1;  |         |  58  |  [7,4,6,5,4]  |       0  |      4  |  5  |
   184  |              resetPlaceHolder_1();  |         |  58  |  [7,4,6,5,4]  |       0  |      4  |  5  |
   190  |                         R = R + 1;  |      1  |  59  |  [7,4,6,5,4]  |       0  |      4  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 38 trace node indices: [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |      7  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |      4  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |      6  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |      5  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |      4  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |      7  |                            |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |      4  |                         0  |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |      6  |                            |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |      5  |                            |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |      4  |                         1  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [138, 42, 106]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [138, 42, 106]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {170}; {74}
GroupID(2): {42,106,138}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |      7  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |      6  |                            |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |      4  |                            |                         1  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(88)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                        
 Index  |   Commands   |  Costs  |  R  |  baseMessage  |
--------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          [9]  |
    10  |     return;  |         |  0  |          [9]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 2) || (i == 2))
  {
    if ((i < 1) || (i == 1))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    // reset R1
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 1) || (i == 1))
  {
    if ((i < 0) || (i == 0))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
  else
  {
    R2 = R2 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-30 06:43:10,225 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:45:00,193 INFO     Done. Execution time: 109.96772074699402 seconds
2023-01-30 06:45:00,193 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D2 = D2 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 2) || (i == 2))
      {
        if ((i < 1) || (i == 1))
        {

        }
        else
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
      }
      else
      {

      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8236808938062620941.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7598222644787547841.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 baseMessage)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 baseMessage)))` for variable `D2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 baseMessage))) (= D2p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p (+ 0 (* 1 1 baseMessage)))
       (or true (= D1p 0))
       (<= D0p 0)
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 baseMessage))) (= D2 0))))
  (and a!1 (or true (= D1 0)) (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    6)  (define-fun D1 () Int    6)  (define-fun D2 () Int    (- 2))  (define-fun baseMessage () Int    1)  (define-fun D1p () Int    1)  (define-fun C2 () Int    0)  (define-fun C1 () Int    1)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `108.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0643-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0643-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m49.960s
user	6m0.331s
sys	0m8.014s

2023-01-30 06:45:00,194 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-30 06:45:00,194 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:48:06,471 INFO     Done. Execution time: 186.27654266357422 seconds
2023-01-30 06:48:06,471 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz1575356991378517586/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1575356991378517586/bin -o /tmp/qfuzz1575356991378517586/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1575356991378517586/bin
Found file /tmp/qfuzz1575356991378517586/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz1575356991378517586/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1575356991378517586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1575356991378517586/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1575356991378517586/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz1575356991378517586/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 124941 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 122377 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #5 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
1; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 8, 8, 11, 11, 10, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 11, 10, 7, 9, 7, 11, 11, 5, 7, 11, 6, 7, 11, 9, 7, 12, 10, 8, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1575356991378517586/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_064806_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:48:06,471 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-30 06:48:06,471 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-30 06:48:12,969 INFO     Done. Execution time: 6.4978930950164795 seconds
2023-01-30 06:48:12,969 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_064806_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230130_064806_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 215):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |          9  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |          9  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |          9  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |          9  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |          9  |              |
    16  |        int className_ = className;  |         |   0  |            0  |          9  |           9  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |          9  |           8  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |          9  |           8  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |          9  |           8  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |          9  |           8  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |          9  |           7  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |          9  |           7  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |          9  |           7  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |          9  |           7  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |          9  |           6  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |          9  |           6  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |          9  |           6  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |          9  |           6  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |          9  |           5  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |          9  |           5  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |          9  |           5  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |          9  |           5  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |          9  |           4  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |          9  |           4  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |          9  |           4  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |          9  |           4  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |          9  |           3  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |          9  |           3  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |          9  |           3  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |          9  |           3  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |          9  |           2  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |          9  |           2  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |          9  |           2  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |          9  |           2  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |          9  |           1  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |          9  |           1  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |          9  |           1  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |          9  |           1  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |          9  |           0  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |          9  |           0  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |          9  |           0  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |          9  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 9 trace node indices: [120, 57, 78, 141, 204, 162, 99, 36, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {36}; {57}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {36}; {57}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {36}; {57}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(142, 37, 184, 121, 58, 79, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-30 06:48:12,969 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:48:20,382 INFO     Done. Execution time: 7.412456274032593 seconds
2023-01-30 06:48:20,382 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0648-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0648-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.406s
user	0m16.006s
sys	0m2.397s

2023-01-30 06:48:20,383 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-30 06:48:20,383 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:51:26,144 INFO     Done. Execution time: 185.7613275051117 seconds
2023-01-30 06:51:26,144 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz5393240302589906630/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5393240302589906630/bin -o /tmp/qfuzz5393240302589906630/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5393240302589906630/bin
Found file /tmp/qfuzz5393240302589906630/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz5393240302589906630/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5393240302589906630/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5393240302589906630/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5393240302589906630/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz5393240302589906630/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 119478 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 122423 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m119k to 122k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
1; /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 15.00; [18.00,33.50]
3; /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz5393240302589906630/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_065125_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:51:26,145 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-30 06:51:26,145 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-30 06:51:32,487 INFO     Done. Execution time: 6.341907024383545 seconds
2023-01-30 06:51:32,487 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_065125_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230130_065125_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-30 06:51:32,487 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:51:39,683 INFO     Done. Execution time: 7.195143699645996 seconds
2023-01-30 06:51:39,683 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0651-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0651-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.187s
user	0m15.618s
sys	0m2.116s

2023-01-30 06:51:39,683 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-30 06:51:39,683 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:54:45,799 INFO     Done. Execution time: 186.116352558136 seconds
2023-01-30 06:54:45,800 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz9200527760202221605/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9200527760202221605/bin -o /tmp/qfuzz9200527760202221605/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9200527760202221605/bin
Found file /tmp/qfuzz9200527760202221605/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz9200527760202221605/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9200527760202221605/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9200527760202221605/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9200527760202221605/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz9200527760202221605/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 123594 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 28, exec speed = 123639 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
1; /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 10.00; [31.00,41.00]
3; /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 5, 4, 4, 11, 12, 10, 5, 9, 9, 10, 12, 11, 9, 9, 9, 12, 10, 7, 11, 10, 7, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz9200527760202221605/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_065445_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:54:45,800 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-30 06:54:45,800 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-30 06:54:50,935 INFO     Done. Execution time: 5.1342127323150635 seconds
2023-01-30 06:54:50,935 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_065445_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230130_065445_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

2023-01-30 06:54:50,935 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:54:57,126 INFO     Done. Execution time: 6.190624237060547 seconds
2023-01-30 06:54:57,126 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0654-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0654-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.183s
user	0m13.690s
sys	0m1.839s

2023-01-30 06:54:57,126 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-30 06:54:57,126 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 06:58:03,152 INFO     Done. Execution time: 186.02588963508606 seconds
2023-01-30 06:58:03,153 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz7093173279134537931/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7093173279134537931/bin -o /tmp/qfuzz7093173279134537931/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7093173279134537931/bin
Found file /tmp/qfuzz7093173279134537931/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz7093173279134537931/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7093173279134537931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7093173279134537931/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7093173279134537931/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz7093173279134537931/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 127782 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 109485 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m109k to 127k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 11, 11, 4, 12, 6, 11, 8, 4, 8, 4, 4, 7, 11, 9, 9, 12, 10, 7, 8, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz7093173279134537931/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_065802_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 06:58:03,153 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-30 06:58:03,153 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-30 06:58:09,979 INFO     Done. Execution time: 6.825498342514038 seconds
2023-01-30 06:58:09,979 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_065802_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230130_065802_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-30 06:58:09,979 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 06:58:17,667 INFO     Done. Execution time: 7.68772292137146 seconds
2023-01-30 06:58:17,667 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0658-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0658-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.680s
user	0m16.170s
sys	0m2.365s

2023-01-30 06:58:17,668 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-30 06:58:17,668 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:01:23,764 INFO     Done. Execution time: 186.0957624912262 seconds
2023-01-30 07:01:23,764 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz3744612782617670974/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3744612782617670974/bin -o /tmp/qfuzz3744612782617670974/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3744612782617670974/bin
Found file /tmp/qfuzz3744612782617670974/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz3744612782617670974/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3744612782617670974/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3744612782617670974/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3744612782617670974/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz3744612782617670974/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 119335 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 121360 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 121k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 9, 10, 7, 8, 4, 5, 6, 12, 12, 10, 11, 9, 5, 10, 10, 11, 12, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3744612782617670974/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_070123_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:01:23,764 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-30 07:01:23,765 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-30 07:01:31,251 INFO     Done. Execution time: 7.486119747161865 seconds
2023-01-30 07:01:31,251 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_070123_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230130_070123_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-30 07:01:31,251 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:01:40,573 INFO     Done. Execution time: 9.321843147277832 seconds
2023-01-30 07:01:40,574 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0701-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0701-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.312s
user	0m19.490s
sys	0m2.693s

2023-01-30 07:01:40,574 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-30 07:01:40,574 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:04:46,969 INFO     Done. Execution time: 186.39461421966553 seconds
2023-01-30 07:04:46,969 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz3598350507389758827/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3598350507389758827/bin -o /tmp/qfuzz3598350507389758827/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3598350507389758827/bin
Found file /tmp/qfuzz3598350507389758827/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz3598350507389758827/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3598350507389758827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3598350507389758827/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3598350507389758827/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz3598350507389758827/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 127109 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 120139 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m120k to 127k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 4, 4, 11, 10, 4, 9, 12, 12, 9, 12, 11, 8, 10, 7, 11, 9, 7, 12, 10, 7, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz3598350507389758827/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_070446_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:04:46,969 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-30 07:04:46,970 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-30 07:04:51,192 INFO     Done. Execution time: 4.2222747802734375 seconds
2023-01-30 07:04:51,192 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_070446_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230130_070446_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-30 07:04:51,192 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:04:53,604 INFO     Done. Execution time: 2.411494731903076 seconds
2023-01-30 07:04:53,604 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0704-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0704-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.404s
user	0m4.331s
sys	0m0.203s

2023-01-30 07:04:53,605 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-30 07:04:53,605 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:07:59,836 INFO     Done. Execution time: 186.23110961914062 seconds
2023-01-30 07:07:59,836 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz1404610614692265753/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1404610614692265753/bin -o /tmp/qfuzz1404610614692265753/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1404610614692265753/bin
Found file /tmp/qfuzz1404610614692265753/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz1404610614692265753/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1404610614692265753/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1404610614692265753/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1404610614692265753/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz1404610614692265753/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 103968 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 114493 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m103k to 114k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
1; /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 11, 9, 5, 8, 7, 9, 7, 11, 12, 7, 12, 7, 11, 9, 7, 12, 10, 7, 6, 9, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1404610614692265753/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_070759_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:07:59,837 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-30 07:07:59,837 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-30 07:08:09,810 INFO     Done. Execution time: 9.97325873374939 seconds
2023-01-30 07:08:09,811 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_070759_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230130_070759_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-30 07:08:09,811 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:08:21,558 INFO     Done. Execution time: 11.746857404708862 seconds
2023-01-30 07:08:21,558 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0708-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0708-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.738s
user	0m31.061s
sys	0m4.536s

2023-01-30 07:08:21,558 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-30 07:08:21,559 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:11:27,984 INFO     Done. Execution time: 186.4253122806549 seconds
2023-01-30 07:11:27,984 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz6970894843696007531/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6970894843696007531/bin -o /tmp/qfuzz6970894843696007531/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6970894843696007531/bin
Found file /tmp/qfuzz6970894843696007531/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz6970894843696007531/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6970894843696007531/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6970894843696007531/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6970894843696007531/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz6970894843696007531/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 124258 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 126325 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m124k to 126k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 4, 8, 4, 11, 8, 8, 12, 12, 7, 10, 4, 4, 4, 6, 4, 4, 11, 11, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6970894843696007531/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_071127_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:11:27,985 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-30 07:11:27,985 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-30 07:11:36,309 INFO     Done. Execution time: 8.324311971664429 seconds
2023-01-30 07:11:36,309 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_071127_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230130_071127_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-30 07:11:36,310 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:11:46,044 INFO     Done. Execution time: 9.733577489852905 seconds
2023-01-30 07:11:46,044 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0711-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0711-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.726s
user	0m20.646s
sys	0m3.048s

2023-01-30 07:11:46,044 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-30 07:11:46,044 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:14:52,559 INFO     Done. Execution time: 186.5148410797119 seconds
2023-01-30 07:14:52,559 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz8970606619915359343/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8970606619915359343/bin -o /tmp/qfuzz8970606619915359343/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8970606619915359343/bin
Found file /tmp/qfuzz8970606619915359343/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz8970606619915359343/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8970606619915359343/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8970606619915359343/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8970606619915359343/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8970606619915359343/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 126768 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 128223 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m126k to 128k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8970606619915359343/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_071452_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:14:52,560 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-30 07:14:52,560 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-30 07:14:58,632 INFO     Done. Execution time: 6.072222471237183 seconds
2023-01-30 07:14:58,632 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_071452_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230130_071452_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-30 07:14:58,633 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:15:06,935 INFO     Done. Execution time: 8.302472352981567 seconds
2023-01-30 07:15:06,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0714-transparentAmortize-60s-mostPrecise/lang3-raw-0130-0714-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.294s
user	0m18.213s
sys	0m2.612s

2023-01-30 07:15:06,936 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-30 07:15:06,936 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:18:13,654 INFO     Done. Execution time: 186.7177734375 seconds
2023-01-30 07:18:13,654 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz40374826864474020/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz40374826864474020/bin -o /tmp/qfuzz40374826864474020/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz40374826864474020/bin
Found file /tmp/qfuzz40374826864474020/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz40374826864474020/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz40374826864474020/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz40374826864474020/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz40374826864474020/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz40374826864474020/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz40374826864474020/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz40374826864474020/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 114711 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 131937 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m114k to 131k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [49.00]
8; /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta; 2; 14.00; [35.00,49.00]
55; /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000004,src:000001+000000,op:splice,rep:2; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000004,src:000001+000000,op:splice,rep:2
/tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000004,src:000001+000000,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 11, 11, 12, 6, 10, 5, 7, 4, 10, 4, 6, 10, 10, 10, 12, 9, 7, 10, 4, 10, 7, 10, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 8, 11, 11, 6, 6, 8, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 5, 11, 5, 8, 11, 5, 6, 9, 6, 6, 5, 4, 6, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz40374826864474020/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_071813_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [11,11,12,6,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [8,11,11,6,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,11,5,8,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [7,4,7,6,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,6,5,4,12]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:18:13,655 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-30 07:18:13,655 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-30 07:18:20,372 INFO     Done. Execution time: 6.7172136306762695 seconds
2023-01-30 07:18:20,372 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_071813_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230130_071813_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [11,11,12,6,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,11,5,8,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [8,11,11,6,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [7,4,7,6,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,6,5,4,12])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [11,11,12,6,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [8,11,11,6,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [5,11,5,8,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [7,4,7,6,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [5,6,5,4,12]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 80):
                                                                                                                          
 Index  |              Commands               |  Costs  |  R  |  choice  |      choices      |  i  |  str  |  strDigits  |
--------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [11,11,12,6,10]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [11,11,12,6,10]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [11,11,12,6,10]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [11,11,12,6,10]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [11,11,12,6,10]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [11,11,12,6,10]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [11,11,12,6,10]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      11  |  [11,11,12,6,10]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |      11  |  [11,11,12,6,10]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |      11  |  [11,11,12,6,10]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |      11  |  [11,11,12,6,10]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |      11  |  [11,11,12,6,10]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |      11  |  [11,11,12,6,10]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |      11  |  [11,11,12,6,10]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |      11  |  [11,11,12,6,10]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |      11  |  [11,11,12,6,10]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |      11  |  [11,11,12,6,10]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 66):
                                                                                                                       
 Index  |              Commands               |  Costs  |  R  |  choice  |    choices     |  i  |  str  |  strDigits  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [7,4,7,6,10]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [7,4,7,6,10]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [7,4,7,6,10]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [7,4,7,6,10]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [7,4,7,6,10]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [7,4,7,6,10]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [7,4,7,6,10]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |       7  |  [7,4,7,6,10]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |       7  |  [7,4,7,6,10]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |       7  |  [7,4,7,6,10]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |       4  |  [7,4,7,6,10]  |  1  |    2  |          0  |
    61  |                         i = i + 1;  |         |  0  |       4  |  [7,4,7,6,10]  |  2  |    2  |          0  |
    62  |              resetPlaceHolder_1();  |         |  0  |       4  |  [7,4,7,6,10]  |  2  |    2  |          0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    42  |  resetPlaceHolder_1();  |         |
    62  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-30 07:18:20,373 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:18:43,602 INFO     Done. Execution time: 23.229386568069458 seconds
2023-01-30 07:18:43,602 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `21.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0718-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0718-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m23.222s
user	0m46.349s
sys	0m3.957s

2023-01-30 07:18:43,602 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-30 07:18:43,603 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:21:49,593 INFO     Done. Execution time: 185.99058032035828 seconds
2023-01-30 07:21:49,594 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz7185490095460441668/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7185490095460441668/bin -o /tmp/qfuzz7185490095460441668/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7185490095460441668/bin
Found file /tmp/qfuzz7185490095460441668/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz7185490095460441668/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7185490095460441668/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7185490095460441668/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7185490095460441668/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz7185490095460441668/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 128390 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 122354 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m122k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz7185490095460441668/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_072149_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:21:49,594 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-30 07:21:49,594 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-30 07:21:53,879 INFO     Done. Execution time: 4.284514427185059 seconds
2023-01-30 07:21:53,879 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_072149_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230130_072149_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [5,7,4,7,6]
startIndex: 10
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [7,5,6,5,4]
startIndex: 12
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                    
 Index  |   Commands   |  Costs  |  R  |     array     |  endIndex  |  startIndex  |
------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [5,7,4,7,6]  |         2  |          10  |
    48  |     return;  |         |  0  |  [5,7,4,7,6]  |         2  |          10  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-30 07:21:53,879 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:21:56,030 INFO     Done. Execution time: 2.150688886642456 seconds
2023-01-30 07:21:56,030 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0721-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0721-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.144s
user	0m3.802s
sys	0m0.219s

2023-01-30 07:21:56,030 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-30 07:21:56,031 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:25:02,396 INFO     Done. Execution time: 186.36533999443054 seconds
2023-01-30 07:25:02,396 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz2000039027473456206/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2000039027473456206/bin -o /tmp/qfuzz2000039027473456206/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2000039027473456206/bin
Found file /tmp/qfuzz2000039027473456206/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz2000039027473456206/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2000039027473456206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2000039027473456206/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2000039027473456206/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2000039027473456206/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 125111 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 125796 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 20.00; [32.00,91.00,111.00,131.00,161.00]
2; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 10.00; [32.00,91.00,121.00,131.00,151.00]
3; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 5; 10.00; [32.00,91.00,131.00,231.00,241.00]
4; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta; 6; 10.00; [32.00,131.00,151.00,161.00,171.00,191.00]
6; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 4; 21.00; [11.00,32.00,111.00,201.00]
11; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 6; 20.00; [32.00,91.00,111.00,161.00,211.00,251.00]
18; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 21.00; [11.00,32.00,111.00,181.00]
23; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 6; 10.00; [32.00,91.00,111.00,171.00,181.00,251.00]
27; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta; 6; 21.00; [11.00,32.00,111.00,151.00,201.00,251.00]
32; /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 6; 30.00; [32.00,91.00,131.00,181.00,211.00,251.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 4, 6, 10, 12, 9, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 5, 12, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 8, 12, 5, 4, 4, 8, 4, 12, 8, 8, 8, 4, 8, 8, 8, 8, 9, 7, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 10, 12, 4, 6, 5, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 6, 9, 8, 7, 5, 11, 4, 9, 9, 4, 6, 10, 12, 9, 7, 7, 9, 12, 10, 11, 9, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 6, 4, 4, 11, 4, 5, 12, 5, 10, 4, 4, 9, 6, 8, 8, 9, 4, 12, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2000039027473456206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_072502_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,4,6,10,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,5,12,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,8,12,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,10,12,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,6,9,8,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,6,4,4,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:25:02,397 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-30 07:25:02,397 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-30 07:25:13,230 INFO     Done. Execution time: 10.832852840423584 seconds
2023-01-30 07:25:13,230 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_072502_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230130_072502_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,4,6,10,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,5,12,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,8,12,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,10,12,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,6,9,8,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,6,4,4,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [8,4,6,10,12]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [9,5,12,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [8,8,12,5,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [8,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,5,10,12,4]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [9,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,6,9,8,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [11,6,4,4,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,7,4,7,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,5,6,5,4]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 98):
                                                                                                  
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |     objects     |
--------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [8,4,6,10,12]  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [8,4,6,10,12]  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [8,4,6,10,12]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |  [8,4,6,10,12]  |
    14  |                         int i = 0;  |         |   0  |         |  0  |  [8,4,6,10,12]  |
    16  |                     int chunk = 0;  |         |   0  |      0  |  0  |  [8,4,6,10,12]  |
    19  |     chunk = arrayRead(objects, i);  |         |   0  |      8  |  0  |  [8,4,6,10,12]  |
    22  |                     R = R + chunk;  |      8  |   8  |      8  |  0  |  [8,4,6,10,12]  |
    26  |                         i = i + 1;  |         |   8  |      8  |  1  |  [8,4,6,10,12]  |
    32  |                         R = R + 1;  |      1  |   9  |      8  |  1  |  [8,4,6,10,12]  |
    35  |     chunk = arrayRead(objects, i);  |         |   9  |      4  |  1  |  [8,4,6,10,12]  |
    38  |                     R = R + chunk;  |      4  |  13  |      4  |  1  |  [8,4,6,10,12]  |
    42  |                         i = i + 1;  |         |  13  |      4  |  2  |  [8,4,6,10,12]  |
    43  |              resetPlaceHolder_1();  |         |  13  |      4  |  2  |  [8,4,6,10,12]  |
    49  |                         R = R + 1;  |      1  |  14  |      4  |  2  |  [8,4,6,10,12]  |
    52  |     chunk = arrayRead(objects, i);  |         |  14  |      6  |  2  |  [8,4,6,10,12]  |
    55  |                     R = R + chunk;  |      6  |  20  |      6  |  2  |  [8,4,6,10,12]  |
    59  |                         i = i + 1;  |         |  20  |      6  |  3  |  [8,4,6,10,12]  |
    60  |              resetPlaceHolder_1();  |         |  20  |      6  |  3  |  [8,4,6,10,12]  |
    66  |                         R = R + 1;  |      1  |  21  |      6  |  3  |  [8,4,6,10,12]  |
    69  |     chunk = arrayRead(objects, i);  |         |  21  |     10  |  3  |  [8,4,6,10,12]  |
    72  |                     R = R + chunk;  |     10  |  31  |     10  |  3  |  [8,4,6,10,12]  |
    76  |                         i = i + 1;  |         |  31  |     10  |  4  |  [8,4,6,10,12]  |
    77  |              resetPlaceHolder_1();  |         |  31  |     10  |  4  |  [8,4,6,10,12]  |
    83  |                         R = R + 1;  |      1  |  32  |     10  |  4  |  [8,4,6,10,12]  |
    86  |     chunk = arrayRead(objects, i);  |         |  32  |     12  |  4  |  [8,4,6,10,12]  |
    89  |                     R = R + chunk;  |     12  |  44  |     12  |  4  |  [8,4,6,10,12]  |
    93  |                         i = i + 1;  |         |  44  |     12  |  5  |  [8,4,6,10,12]  |
    94  |              resetPlaceHolder_1();  |         |  44  |     12  |  5  |  [8,4,6,10,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 9 trace node indices: [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      8  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |      4  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |      6  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     10  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     12  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,72}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,72}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,55,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,55,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {38,72,89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [89, 38, 22, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      8  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |      4  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |      6  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     10  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     12  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-30 07:25:13,230 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:25:26,098 INFO     Done. Execution time: 12.867847204208374 seconds
2023-01-30 07:25:26,099 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `11.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0725-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0725-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.861s
user	0m35.456s
sys	0m4.665s

2023-01-30 07:25:26,099 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-30 07:25:26,099 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:28:32,120 INFO     Done. Execution time: 186.02136540412903 seconds
2023-01-30 07:28:32,121 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz8771300114538214266/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8771300114538214266/bin -o /tmp/qfuzz8771300114538214266/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8771300114538214266/bin
Found file /tmp/qfuzz8771300114538214266/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz8771300114538214266/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8771300114538214266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8771300114538214266/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8771300114538214266/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8771300114538214266/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 123209 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 121251 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m121k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (8 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 20.00; [91.00,111.00,131.00,161.00,252.00]
1; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 10.00; [91.00,121.00,131.00,151.00,212.00]
3; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 4; 10.00; [91.00,101.00,171.50,191.00]
4; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta; 6; 20.00; [91.00,111.00,131.00,172.00,231.00,261.00]
9; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 10.00; [111.00,121.00,171.50]
16; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 6; 9.00; [111.00,131.00,152.00,161.00,191.00,231.00]
19; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 5; 9.00; [111.00,131.00,171.50,181.00,191.00]
152; /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000007,src:000001+000005,op:splice,rep:4,+delta; 6; 21.00; [91.00,121.00,151.00,191.00,212.00,251.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000007,src:000001+000005,op:splice,rep:4,+delta
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000007,src:000001+000005,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 12, 9, 10, 5, 7, 11, 9, 5, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 9, 5, 8, 6, 8, 5, 7, 6, 6, 8, 8, 5, 11, 7, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 11, 9, 7, 8, 11, 11, 9, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 8, 5, 8, 5, 8, 11, 10, 4, 8, 5, 8, 9, 9, 10, 11, 9, 5, 8, 9, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 4, 5, 11, 6, 8, 4, 4, 4, 4, 4, 6, 6, 8, 4, 4, 4, 4, 4, 6, 11, 4, 4, 7, 4, 11, 4, 4, 7, 4, 4, 7, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 9, 8, 9, 8, 10, 6, 4, 12, 10, 10, 4, 6, 9, 8, 10, 7, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8771300114538214266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_072831_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,12,9], 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,9,5,8,6], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,11,9], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,8,5,8,5], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,4,5,11,6], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,9,8,9], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:28:32,121 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-30 07:28:32,121 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-30 07:28:42,918 INFO     Done. Execution time: 10.797040224075317 seconds
2023-01-30 07:28:42,919 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_072831_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230130_072831_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,12,9], 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,9,5,8,6], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,11,9], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,8,5,8,5], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,9,8,9], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,4,5,11,6], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,7,4,12,9]
separator: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [8,9,5,8,6]
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,5,6,11,9]
separator: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,8,5,8,5]
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [12,4,5,11,6]
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [4,4,9,8,9]
separator: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [5,7,4,7,6]
separator: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [7,5,6,5,4]
separator: 12
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 98):
                                                                                                               
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |    objects     |  separator  |
---------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |  [5,7,4,12,9]  |         10  |
    10  |                      // int R = 0;  |         |   0  |         |     |  [5,7,4,12,9]  |         10  |
    11  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |  [5,7,4,12,9]  |         10  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |  [5,7,4,12,9]  |         10  |
    14  |                         int i = 0;  |         |   0  |         |  0  |  [5,7,4,12,9]  |         10  |
    16  |                     int chunk = 0;  |         |   0  |      0  |  0  |  [5,7,4,12,9]  |         10  |
    19  |     chunk = arrayRead(objects, i);  |         |   0  |      5  |  0  |  [5,7,4,12,9]  |         10  |
    22  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |  [5,7,4,12,9]  |         10  |
    26  |                         i = i + 1;  |         |   5  |      5  |  1  |  [5,7,4,12,9]  |         10  |
    32  |                 R = R + separator;  |     10  |  15  |      5  |  1  |  [5,7,4,12,9]  |         10  |
    35  |     chunk = arrayRead(objects, i);  |         |  15  |      7  |  1  |  [5,7,4,12,9]  |         10  |
    38  |                     R = R + chunk;  |      7  |  22  |      7  |  1  |  [5,7,4,12,9]  |         10  |
    42  |                         i = i + 1;  |         |  22  |      7  |  2  |  [5,7,4,12,9]  |         10  |
    43  |              resetPlaceHolder_1();  |         |  22  |      7  |  2  |  [5,7,4,12,9]  |         10  |
    49  |                 R = R + separator;  |     10  |  32  |      7  |  2  |  [5,7,4,12,9]  |         10  |
    52  |     chunk = arrayRead(objects, i);  |         |  32  |      4  |  2  |  [5,7,4,12,9]  |         10  |
    55  |                     R = R + chunk;  |      4  |  36  |      4  |  2  |  [5,7,4,12,9]  |         10  |
    59  |                         i = i + 1;  |         |  36  |      4  |  3  |  [5,7,4,12,9]  |         10  |
    60  |              resetPlaceHolder_1();  |         |  36  |      4  |  3  |  [5,7,4,12,9]  |         10  |
    66  |                 R = R + separator;  |     10  |  46  |      4  |  3  |  [5,7,4,12,9]  |         10  |
    69  |     chunk = arrayRead(objects, i);  |         |  46  |     12  |  3  |  [5,7,4,12,9]  |         10  |
    72  |                     R = R + chunk;  |     12  |  58  |     12  |  3  |  [5,7,4,12,9]  |         10  |
    76  |                         i = i + 1;  |         |  58  |     12  |  4  |  [5,7,4,12,9]  |         10  |
    77  |              resetPlaceHolder_1();  |         |  58  |     12  |  4  |  [5,7,4,12,9]  |         10  |
    83  |                 R = R + separator;  |     10  |  68  |     12  |  4  |  [5,7,4,12,9]  |         10  |
    86  |     chunk = arrayRead(objects, i);  |         |  68  |      9  |  4  |  [5,7,4,12,9]  |         10  |
    89  |                     R = R + chunk;  |      9  |  77  |      9  |  4  |  [5,7,4,12,9]  |         10  |
    93  |                         i = i + 1;  |         |  77  |      9  |  5  |  [5,7,4,12,9]  |         10  |
    94  |              resetPlaceHolder_1();  |         |  77  |      9  |  5  |  [5,7,4,12,9]  |         10  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 9 trace node indices: [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |
    32  |     R = R + separator;  |     10  |                         0  |
    38  |         R = R + chunk;  |      7  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     10  |                         1  |
    55  |         R = R + chunk;  |      4  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     10  |                         2  |
    72  |         R = R + chunk;  |     12  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     10  |                         3  |
    89  |         R = R + chunk;  |      9  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {22,38,89}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,55,72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [89, 38, 22, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |      5  |                            |                         0  |
    32  |     R = R + separator;  |     10  |                         0  |                            |
    38  |         R = R + chunk;  |      7  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     10  |                         1  |                            |
    55  |         R = R + chunk;  |      4  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     10  |                         2  |                            |
    72  |         R = R + chunk;  |     12  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     10  |                         3  |                            |
    89  |         R = R + chunk;  |      9  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-30 07:28:42,919 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:28:50,647 INFO     Done. Execution time: 7.728408336639404 seconds
2023-01-30 07:28:50,648 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0728-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0728-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.721s
user	0m15.505s
sys	0m1.652s

2023-01-30 07:28:50,648 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-30 07:28:50,648 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:31:56,746 INFO     Done. Execution time: 186.09798192977905 seconds
2023-01-30 07:31:56,746 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz102785578519545621/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz102785578519545621/bin -o /tmp/qfuzz102785578519545621/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz102785578519545621/bin
Found file /tmp/qfuzz102785578519545621/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz102785578519545621/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz102785578519545621/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz102785578519545621/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz102785578519545621/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz102785578519545621/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz102785578519545621/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz102785578519545621/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 124129 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 121792 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m121k to 124k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 10.00; [138.00,148.00,164.00]
1; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 10.00; [98.00,108.00,124.00]
3; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 3; 64.00; [98.00,164.00,228.00]
4; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 3; 6.00; [138.00,144.00,248.00]
7; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 3; 86.00; [88.00,178.00,264.00]
9; /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 4.00; [124.00,128.00,158.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 7, 10, 10, 8, 6, 12, 4, 5, 5, 5, 9, 12, 5, 5, 5, 4, 5, 5, 10, 10, 11, 6, 12, 4, 11, 10, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 12, 8, 11, 12, 4, 4, 5, 7, 7, 10, 8, 7, 7, 4, 4, 10, 9, 11, 8, 7, 7, 4, 9, 10, 7, 7, 10, 8, 7, 7, 4, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 8, 6, 10, 10, 8, 12, 10, 12, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 8, 4, 4, 4, 12, 11, 11, 7, 4, 11, 6, 12, 12, 10, 12, 9, 11, 6, 7, 6, 8, 4, 9, 6, 8, 9, 4, 10, 6, 8, 11, 6, 4, 6, 10, 12, 9, 9, 9, 8, 9, 9, 12, 12, 8, 8, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz102785578519545621/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_073156_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,7,10,10], 8, 6, 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,12,8,11,12], 4, 4, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,8,6,10,10], 8, 12, 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,8,4,4,4], 12, 11, 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10, 5, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12, 7, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:31:56,747 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-30 07:31:56,747 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-30 07:32:04,515 INFO     Done. Execution time: 7.767778396606445 seconds
2023-01-30 07:32:04,515 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_073156_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230130_073156_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,7,10,10], 8, 6, 12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,12,8,11,12], 4, 4, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,8,6,10,10], 8, 12, 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,8,4,4,4], 12, 11, 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10, 5, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12, 7, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,5,7,10,10]
searchString: 8
replacement: 6
max: 12
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [12,12,8,11,12]
searchString: 4
replacement: 4
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [6,8,6,10,10]
searchString: 8
replacement: 12
max: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,8,4,4,4]
searchString: 12
replacement: 11
max: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [5,7,4,7,6]
searchString: 10
replacement: 5
max: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,5,6,5,4]
searchString: 12
replacement: 7
max: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 94):
                                                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  max  |  replacement  |  searchString  |      text       |
-------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |   12  |            6  |             8  |  [5,5,7,10,10]  |
    34  |                      // int R = 0;  |         |   0  |         |     |   12  |            6  |             8  |  [5,5,7,10,10]  |
    35  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |   12  |            6  |             8  |  [5,5,7,10,10]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |   12  |            6  |             8  |  [5,5,7,10,10]  |
    38  |                     int chunk = 0;  |         |   0  |      0  |     |   12  |            6  |             8  |  [5,5,7,10,10]  |
    40  |                         int i = 0;  |         |   0  |      0  |  0  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    48  |        chunk = arrayRead(text, i);  |         |   0  |      5  |  0  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    51  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    54  |               R = R + replacement;  |      6  |  11  |      5  |  0  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  11  |      5  |  0  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    63  |                         i = i + 2;  |         |  11  |      5  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    64  |              resetPlaceHolder_1();  |         |  11  |      5  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    72  |        chunk = arrayRead(text, i);  |         |  11  |      7  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    75  |                     R = R + chunk;  |      7  |  18  |      7  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    78  |               R = R + replacement;  |      6  |  24  |      7  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  24  |     10  |  2  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    87  |                         i = i + 2;  |         |  24  |     10  |  4  |   12  |            6  |             8  |  [5,5,7,10,10]  |
    88  |              resetPlaceHolder_1();  |         |  24  |     10  |  4  |   12  |            6  |             8  |  [5,5,7,10,10]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |      5  |                            |
    54  |   R = R + replacement;  |      6  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      7  |                            |
    78  |   R = R + replacement;  |      6  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |      5  |                            |                         0  |
    54  |   R = R + replacement;  |      6  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      7  |                            |                         0  |
    78  |   R = R + replacement;  |      6  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-30 07:32:04,515 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:33:28,672 INFO     Done. Execution time: 84.15694212913513 seconds
2023-01-30 07:33:28,672 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8640999689665864926.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `82.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0732-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0732-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m24.150s
user	3m11.035s
sys	0m17.943s

2023-01-30 07:33:28,673 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-30 07:33:28,673 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:36:34,973 INFO     Done. Execution time: 186.30041217803955 seconds
2023-01-30 07:36:34,974 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz6576610597336037354/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6576610597336037354/bin -o /tmp/qfuzz6576610597336037354/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6576610597336037354/bin
Found file /tmp/qfuzz6576610597336037354/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz6576610597336037354/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6576610597336037354/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6576610597336037354/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6576610597336037354/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz6576610597336037354/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 124800 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 122569 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m122k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
1; /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [32.00,40.00]
3; /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 8, 11, 5, 8, 8, 12, 11, 11, 11, 11, 11, 11, 11, 12, 10, 10, 4, 8, 7, 6, 9, 8, 10, 7, 11, 8, 9, 7, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz6576610597336037354/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_073634_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 5
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:36:34,974 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-30 07:36:34,974 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-30 07:36:41,421 INFO     Done. Execution time: 6.4467103481292725 seconds
2023-01-30 07:36:41,421 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_073634_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230130_073634_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 5)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 5
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             4  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |             4  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             4  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             4  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |             4  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |             4  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |             4  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |             4  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |             4  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |             4  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |             4  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |             4  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-30 07:36:41,421 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:37:01,395 INFO     Done. Execution time: 19.97388219833374 seconds
2023-01-30 07:37:01,396 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `18.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0736-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0736-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.967s
user	0m36.240s
sys	0m3.867s

2023-01-30 07:37:01,396 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 07:37:01,396 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:40:07,307 INFO     Done. Execution time: 185.91031098365784 seconds
2023-01-30 07:40:07,307 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz4969725359842573280/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4969725359842573280/bin -o /tmp/qfuzz4969725359842573280/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4969725359842573280/bin
Found file /tmp/qfuzz4969725359842573280/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz4969725359842573280/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4969725359842573280/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4969725359842573280/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4969725359842573280/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz4969725359842573280/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 117562 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 107815 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m107k to 117k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [170.00]
21; /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32; 1; 0.00; [210.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
/tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 5, 6, 5, 4, 4, 10, 5, 8, 11, 4, 7, 12, 11, 8, 10, 9, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 4, 7, 7, 9, 11, 8, 12, 4, 6, 10, 8, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4969725359842573280/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_074007_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,5,6,5,4], 4, 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 4, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 10, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 12, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:40:07,307 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 07:40:07,307 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-30 07:40:12,748 INFO     Done. Execution time: 5.440904140472412 seconds
2023-01-30 07:40:12,748 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_074007_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230130_074007_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,5,6,5,4], 4, 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 10, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 4, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 12, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [5,7,4,7,6]
isSeparator: 10
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [7,5,6,5,4]
isSeparator: 12
max: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [9,5,6,5,4]
isSeparator: 4
max: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [7,5,6,5,4]
isSeparator: 4
max: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 29):
                                                                                
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |      str      |
--------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           10  |    5  |  [5,7,4,7,6]  |
    28  |     return;  |         |  0  |           10  |    5  |  [5,7,4,7,6]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 151):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |      str      |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |     |            4  |                    |   10  |                   |  [9,5,6,5,4]  |
    28  |                      // int R = 0;  |         |  0  |         |     |            4  |                    |   10  |                   |  [9,5,6,5,4]  |
    29  |  // mostPreciseBound(R <= array...  |         |  0  |         |     |            4  |                    |   10  |                   |  [9,5,6,5,4]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |     |            4  |                    |   10  |                   |  [9,5,6,5,4]  |
    32  |           int numberOfStrings = 0;  |         |  0  |         |     |            4  |                    |   10  |                0  |  [9,5,6,5,4]  |
    34  |                     int chunk = 0;  |         |  0  |      0  |     |            4  |                    |   10  |                0  |  [9,5,6,5,4]  |
    36  |          int isSeparatorChunk = 0;  |         |  0  |      0  |     |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    38  |                         int i = 0;  |         |  0  |      0  |  0  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    44  |         chunk = arrayRead(str, i);  |         |  0  |      9  |  0  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    54  |                     R = R + chunk;  |      9  |  9  |      9  |  0  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    58  |                         i = i + 1;  |         |  9  |      9  |  1  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    59  |              resetPlaceHolder_1();  |         |  9  |      9  |  1  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    65  |         chunk = arrayRead(str, i);  |         |  9  |      5  |  1  |            4  |                 0  |   10  |                0  |  [9,5,6,5,4]  |
    76  |  numberOfStrings = numberOfStri...  |         |  9  |      5  |  1  |            4  |                 0  |   10  |                1  |  [9,5,6,5,4]  |
    80  |                         i = i + 1;  |         |  9  |      5  |  2  |            4  |                 0  |   10  |                1  |  [9,5,6,5,4]  |
    81  |              resetPlaceHolder_1();  |         |  9  |      5  |  2  |            4  |                 0  |   10  |                1  |  [9,5,6,5,4]  |
    87  |         chunk = arrayRead(str, i);  |         |  9  |      6  |  2  |            4  |                 0  |   10  |                1  |  [9,5,6,5,4]  |
    98  |  numberOfStrings = numberOfStri...  |         |  9  |      6  |  2  |            4  |                 0  |   10  |                2  |  [9,5,6,5,4]  |
   102  |                         i = i + 1;  |         |  9  |      6  |  3  |            4  |                 0  |   10  |                2  |  [9,5,6,5,4]  |
   103  |              resetPlaceHolder_1();  |         |  9  |      6  |  3  |            4  |                 0  |   10  |                2  |  [9,5,6,5,4]  |
   109  |         chunk = arrayRead(str, i);  |         |  9  |      5  |  3  |            4  |                 0  |   10  |                2  |  [9,5,6,5,4]  |
   120  |  numberOfStrings = numberOfStri...  |         |  9  |      5  |  3  |            4  |                 0  |   10  |                3  |  [9,5,6,5,4]  |
   124  |                         i = i + 1;  |         |  9  |      5  |  4  |            4  |                 0  |   10  |                3  |  [9,5,6,5,4]  |
   125  |              resetPlaceHolder_1();  |         |  9  |      5  |  4  |            4  |                 0  |   10  |                3  |  [9,5,6,5,4]  |
   131  |         chunk = arrayRead(str, i);  |         |  9  |      4  |  4  |            4  |                 0  |   10  |                3  |  [9,5,6,5,4]  |
   142  |  numberOfStrings = numberOfStri...  |         |  9  |      4  |  4  |            4  |                 0  |   10  |                4  |  [9,5,6,5,4]  |
   146  |                         i = i + 1;  |         |  9  |      4  |  5  |            4  |                 0  |   10  |                4  |  [9,5,6,5,4]  |
   147  |              resetPlaceHolder_1();  |         |  9  |      4  |  5  |            4  |                 0  |   10  |                4  |  [9,5,6,5,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      9  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-30 07:40:12,749 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:40:14,357 INFO     Done. Execution time: 1.608623743057251 seconds
2023-01-30 07:40:14,358 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.602s
user	0m2.811s
sys	0m0.168s

2023-01-30 07:40:14,358 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-30 07:40:14,358 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:43:20,270 INFO     Done. Execution time: 185.9119336605072 seconds
2023-01-30 07:43:20,270 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz2808239851605688494/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2808239851605688494/bin -o /tmp/qfuzz2808239851605688494/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2808239851605688494/bin
Found file /tmp/qfuzz2808239851605688494/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz2808239851605688494/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2808239851605688494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2808239851605688494/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2808239851605688494/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz2808239851605688494/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 121366 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 43, exec speed = 120926 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m120k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]
1; /tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz2808239851605688494/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_074320_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:43:20,270 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-30 07:43:20,270 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-30 07:43:24,101 INFO     Done. Execution time: 3.8307840824127197 seconds
2023-01-30 07:43:24,102 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_074320_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230130_074320_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-30 07:43:24,102 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:43:26,126 INFO     Done. Execution time: 2.0237696170806885 seconds
2023-01-30 07:43:26,126 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0743-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0743-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.017s
user	0m3.657s
sys	0m0.219s

2023-01-30 07:43:26,126 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-30 07:43:26,126 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:46:32,309 INFO     Done. Execution time: 186.18245196342468 seconds
2023-01-30 07:46:32,309 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz5219824497563718053/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5219824497563718053/bin -o /tmp/qfuzz5219824497563718053/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5219824497563718053/bin
Found file /tmp/qfuzz5219824497563718053/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz5219824497563718053/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5219824497563718053/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5219824497563718053/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5219824497563718053/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz5219824497563718053/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 120764 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 119576 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m119k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz5219824497563718053/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_074632_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 7, 4, false, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 5, 6, false, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:46:32,309 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-30 07:46:32,310 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-30 07:46:36,183 INFO     Done. Execution time: 3.8731746673583984 seconds
2023-01-30 07:46:36,183 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_074632_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230130_074632_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 7, 4, false, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 5, 6, false, 4)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choice: 6
preserveAllTokens: false
max: 4
separatorChars: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choice: 4
preserveAllTokens: false
max: 6
separatorChars: 5
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |       6  |    4  |              false  |               7  |    2  |
    32  |     return;  |         |  0  |       6  |    4  |              false  |               7  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-30 07:46:36,183 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:46:38,209 INFO     Done. Execution time: 2.0252957344055176 seconds
2023-01-30 07:46:38,209 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0746-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0746-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.019s
user	0m3.600s
sys	0m0.252s

2023-01-30 07:46:38,209 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-30 07:46:38,209 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:49:44,343 INFO     Done. Execution time: 186.13333535194397 seconds
2023-01-30 07:49:44,343 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz1322872431287275962/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1322872431287275962/bin -o /tmp/qfuzz1322872431287275962/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1322872431287275962/bin
Found file /tmp/qfuzz1322872431287275962/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz1322872431287275962/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1322872431287275962/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1322872431287275962/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1322872431287275962/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz1322872431287275962/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 115956 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 124007 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m115k to 124k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 5, 8, 11, 6, 7, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz1322872431287275962/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_074944_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:49:44,343 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-30 07:49:44,343 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-30 07:49:48,326 INFO     Done. Execution time: 3.9828121662139893 seconds
2023-01-30 07:49:48,327 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_074944_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230130_074944_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-30 07:49:48,327 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:49:50,249 INFO     Done. Execution time: 1.9221665859222412 seconds
2023-01-30 07:49:50,249 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0749-transparentAmortize-60s-mostPrecise/stringutils-raw-0130-0749-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.915s
user	0m3.394s
sys	0m0.173s

2023-01-30 07:49:50,250 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-30 07:49:50,250 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:52:56,296 INFO     Done. Execution time: 186.04639601707458 seconds
2023-01-30 07:52:56,296 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz8975906627262679019/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8975906627262679019/bin -o /tmp/qfuzz8975906627262679019/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8975906627262679019/bin
Found file /tmp/qfuzz8975906627262679019/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz8975906627262679019/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8975906627262679019/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8975906627262679019/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8975906627262679019/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8975906627262679019/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 121344 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 123804 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m121k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 24.00; [98.00,138.00,162.00]
1; /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 16.00; [98.00,122.00,138.00]
3; /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 3; 40.00; [98.00,138.00,202.00]
5; /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 3; 64.00; [98.00,162.00,238.00]
151; /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+delta; 3; 76.00; [98.00,182.00,258.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+delta
/tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 6, 4, 12, 12, 12, 12, 4, 11, 4, 12, 7, 12, 12, 11, 8, 6, 4, 6, 12, 12, 12, 11, 4, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 11, 5, 4, 5, 7, 7, 9, 11, 10, 7, 4, 6, 10, 4, 12, 7, 10, 12, 10, 7, 7, 10, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 11, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8975906627262679019/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_075256_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,6,4,12,12], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,11,5,4], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,5,6,5,4], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,7,4,7,6], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,6,5,4], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:52:56,297 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-30 07:52:56,297 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-30 07:53:05,116 INFO     Done. Execution time: 8.81843376159668 seconds
2023-01-30 07:53:05,116 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_075256_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230130_075256_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,6,4,12,12], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,5,6,5,4], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,11,5,4], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,7,4,7,6], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,6,5,4], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [8,6,4,12,12]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [7,5,11,5,4]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [9,5,6,5,4]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [5,7,4,7,6]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [7,5,6,5,4]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 87):
                                                                                                                         
 Index  |              Commands               |  Costs  |  R   |  args  |  chunk  |  i  |  separator  |    template     |
-------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |     2  |         |     |             |  [8,6,4,12,12]  |
    18  |                      // int R = 0;  |         |   0  |     2  |         |     |             |  [8,6,4,12,12]  |
    19  |  // mostPreciseBound(R <= array...  |         |   0  |     2  |         |     |             |  [8,6,4,12,12]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |   0  |     2  |         |     |             |  [8,6,4,12,12]  |
    22  |                     int chunk = 0;  |         |   0  |     2  |      0  |     |             |  [8,6,4,12,12]  |
    24  |                 int separator = 0;  |         |   0  |     2  |      0  |     |          0  |  [8,6,4,12,12]  |
    26  |                         int i = 0;  |         |   0  |     2  |      0  |  0  |          0  |  [8,6,4,12,12]  |
    29  |  chunk = arrayRead(template, i)...  |         |   0  |     2  |      8  |  0  |          0  |  [8,6,4,12,12]  |
    32  |                     R = R + chunk;  |      8  |   8  |     2  |      8  |  0  |          0  |  [8,6,4,12,12]  |
    36  |                         i = i + 1;  |         |   8  |     2  |      8  |  1  |          0  |  [8,6,4,12,12]  |
    44  |  separator = arrayRead(template...  |         |   8  |     2  |      8  |  1  |          6  |  [8,6,4,12,12]  |
    49  |  chunk = arrayRead(template, (i...  |         |   8  |     2  |      4  |  1  |          6  |  [8,6,4,12,12]  |
    52  |                     R = R + chunk;  |      4  |  12  |     2  |      4  |  1  |          6  |  [8,6,4,12,12]  |
    56  |                         i = i + 2;  |         |  12  |     2  |      4  |  3  |          6  |  [8,6,4,12,12]  |
    57  |              resetPlaceHolder_1();  |         |  12  |     2  |      4  |  3  |          6  |  [8,6,4,12,12]  |
    65  |  separator = arrayRead(template...  |         |  12  |     2  |      4  |  3  |         12  |  [8,6,4,12,12]  |
    70  |  chunk = arrayRead(template, (i...  |         |  12  |     2  |     12  |  3  |         12  |  [8,6,4,12,12]  |
    73  |                     R = R + chunk;  |     12  |  24  |     2  |     12  |  3  |         12  |  [8,6,4,12,12]  |
    77  |                         i = i + 2;  |         |  24  |     2  |     12  |  5  |         12  |  [8,6,4,12,12]  |
    78  |              resetPlaceHolder_1();  |         |  24  |     2  |     12  |  5  |         12  |  [8,6,4,12,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |      8  |                         0  |
    52  |         R = R + chunk;  |      4  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     12  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-30 07:53:05,116 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:53:06,934 INFO     Done. Execution time: 1.8178670406341553 seconds
2023-01-30 07:53:06,934 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.811s
user	0m3.200s
sys	0m0.196s

2023-01-30 07:53:06,934 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-30 07:53:06,935 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:56:13,012 INFO     Done. Execution time: 186.07697343826294 seconds
2023-01-30 07:56:13,012 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz4634938692729178072/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4634938692729178072/bin -o /tmp/qfuzz4634938692729178072/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4634938692729178072/bin
Found file /tmp/qfuzz4634938692729178072/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz4634938692729178072/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4634938692729178072/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4634938692729178072/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4634938692729178072/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz4634938692729178072/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 122834 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 125893 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m122k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [154.00]
1; /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [114.00]
3; /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 1; 0.00; [194.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 9, 4, 4, 11, 5, 8, 4, 12, 12, 4, 11, 10, 8, 8, 7, 4, 5, 4, 12, 10, 7, 6, 9, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz4634938692729178072/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_075612_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 9, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:56:13,012 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-30 07:56:13,012 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-30 07:56:17,942 INFO     Done. Execution time: 4.9299867153167725 seconds
2023-01-30 07:56:17,943 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_075612_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230130_075612_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(9, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 9
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 5
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 7
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       9  |
    19  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       9  |
    20  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       9  |
    21  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       9  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       9  |
    26  |                  sb = sb + string;  |         |  0  |     |          2  |   9  |       9  |
    29  |                    R = R + string;  |      9  |  9  |     |          2  |   9  |       9  |
    31  |                    int i = string;  |         |  9  |  9  |          2  |   9  |       9  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |      9  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-30 07:56:17,943 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:56:19,681 INFO     Done. Execution time: 1.7382357120513916 seconds
2023-01-30 07:56:19,681 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.731s
user	0m3.134s
sys	0m0.196s

2023-01-30 07:56:19,682 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-30 07:56:19,682 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds`
2023-01-30 07:59:25,535 INFO     Done. Execution time: 185.8527810573578 seconds
2023-01-30 07:59:25,535 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 12 --min-int 4 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz8369991660550822316/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8369991660550822316/bin -o /tmp/qfuzz8369991660550822316/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8369991660550822316/bin
Found file /tmp/qfuzz8369991660550822316/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz8369991660550822316/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8369991660550822316/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8369991660550822316/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8369991660550822316/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds -o /tmp/qfuzz8369991660550822316/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 115708 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 7, exec speed = 123174 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m115k to 123k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 7, 4, 7, 6, 10, 5, 7, 4, 10, 4, 6, 10, 7, 4, 6, 12, 9, 12, 7, 8, 12, 8, 6, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 12] from /tmp/qfuzz8369991660550822316/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 6, 5, 4, 12, 7, 7, 9, 11, 8, 12, 4, 6, 10, 12, 9, 7, 10, 4, 10, 7, 7, 5, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_075925_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-30 07:59:25,535 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-30 07:59:25,535 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-30 07:59:29,501 INFO     Done. Execution time: 3.9659953117370605 seconds
2023-01-30 07:59:29,502 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_075925_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230130_075925_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 5
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 7
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |       5  |
    22  |     return;  |         |  0  |          2  |       5  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-30 07:59:29,502 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-30 07:59:31,559 INFO     Done. Execution time: 2.057033061981201 seconds
2023-01-30 07:59:31,559 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0130-0759-transparentAmortize-60s-mostPrecise/guava-raw-0130-0759-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.049s
user	0m3.635s
sys	0m0.231s

2023-01-30 07:59:31,560 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    186.08899855613708,
    9.044286251068115,
    43.67267894744873
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    186.41689252853394,
    12.395894765853882,
    1605.2269797325134
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    186.31898188591003,
    14.01337742805481,
    147.18061089515686
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    186.32351446151733,
    10.059163331985474,
    159.19891095161438
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    186.07751488685608,
    7.654138565063477,
    7.877332925796509
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    186.0745391845703,
    6.483122110366821,
    14.272077083587646
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    185.99915671348572,
    6.94518780708313,
    8.20371389389038
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    185.99356055259705,
    8.32182765007019,
    20.468462705612183
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.7497148513793945,
    1.6670196056365967,
    0.9903838634490967
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    185.90667271614075,
    5.109079599380493,
    15.52212905883789
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    185.82057690620422,
    4.379318475723267,
    2.1572887897491455
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    185.90352201461792,
    6.006420135498047,
    7.440866231918335
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    185.91834568977356,
    7.77779483795166,
    7.705352067947388
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    185.99889469146729,
    12.77182388305664,
    56.68873929977417
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    186.06137228012085,
    6.488831996917725,
    7.1003947257995605
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    186.0024609565735,
    12.08129096031189,
    109.96772074699402
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    186.27654266357422,
    6.4978930950164795,
    7.412456274032593
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    185.7613275051117,
    6.341907024383545,
    7.195143699645996
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    186.116352558136,
    5.1342127323150635,
    6.190624237060547
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    186.02588963508606,
    6.825498342514038,
    7.68772292137146
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    186.0957624912262,
    7.486119747161865,
    9.321843147277832
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    186.39461421966553,
    4.2222747802734375,
    2.411494731903076
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    186.23110961914062,
    9.97325873374939,
    11.746857404708862
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    186.4253122806549,
    8.324311971664429,
    9.733577489852905
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    186.5148410797119,
    6.072222471237183,
    8.302472352981567
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    186.7177734375,
    6.7172136306762695,
    23.229386568069458
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    185.99058032035828,
    4.284514427185059,
    2.150688886642456
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    186.36533999443054,
    10.832852840423584,
    12.867847204208374
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    186.02136540412903,
    10.797040224075317,
    7.728408336639404
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    186.09798192977905,
    7.767778396606445,
    84.15694212913513
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    186.30041217803955,
    6.4467103481292725,
    19.97388219833374
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    185.91031098365784,
    5.440904140472412,
    1.608623743057251
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    185.9119336605072,
    3.8307840824127197,
    2.0237696170806885
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    186.18245196342468,
    3.8731746673583984,
    2.0252957344055176
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    186.13333535194397,
    3.9828121662139893,
    1.9221665859222412
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    186.04639601707458,
    8.81843376159668,
    1.8178670406341553
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    186.07697343826294,
    4.9299867153167725,
    1.7382357120513916
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    185.8527810573578,
    3.9659953117370605,
    2.057033061981201
  ]
}
2023-01-30 07:59:31,560 INFO     Total time elapsed: 9608.844564676285 seconds
2023-01-30 07:59:31,560 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-30 07:59:31,560 INFO     Number of verified programs: {
  "stac": 1,
  "lang3": 17,
  "stringutils": 8,
  "guava": 1
}
2023-01-30 07:59:31,560 INFO     Number of not verified programs: {
  "stac": 4,
  "lang3": 2,
  "stringutils": 1
}
2023-01-30 07:59:31,560 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-30 07:59:31,560 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 1
}
2023-01-30 07:59:31,561 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230129_22-22-21/qfuzz_01.json

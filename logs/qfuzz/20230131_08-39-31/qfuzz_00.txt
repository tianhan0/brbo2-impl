2023-01-31 11:26:09,355 INFO     Arguments:
2023-01-31 11:26:09,355 INFO     timeout	180
2023-01-31 11:26:09,355 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-31 11:26:09,355 INFO     samples	0
2023-01-31 11:26:09,355 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-31 11:26:09,355 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-31 11:26:09,355 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-31 11:26:09,355 INFO     dry	False
2023-01-31 11:26:09,355 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/qfuzz_00.txt
2023-01-31 11:26:09,355 INFO     mode	qfuzz
2023-01-31 11:26:09,355 INFO     version	master
2023-01-31 11:26:09,355 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
2023-01-31 11:26:09,355 INFO     min_int	1
2023-01-31 11:26:09,355 INFO     max_int	50
2023-01-31 11:26:09,355 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-31 11:26:09,360 INFO     Done. Execution time: 0.004754781723022461 seconds
2023-01-31 11:26:09,360 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "a46acaaae36a654d9e52218d239766824b4c902a"`
2023-01-31 11:26:09,365 INFO     Done. Execution time: 0.00445246696472168 seconds
2023-01-31 11:26:09,365 INFO     Build a new version: "a46acaaae36a654d9e52218d239766824b4c902a"
2023-01-31 11:26:09,365 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-31 11:26:20,864 INFO     Done. Execution time: 11.49830436706543 seconds
2023-01-31 11:26:20,864 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 5 s, completed Jan 31, 2023 11:26:20 AM

2023-01-31 11:26:20,870 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 11:26:20,871 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:29:26,963 INFO     Done. Execution time: 186.09190773963928 seconds
2023-01-31 11:29:26,963 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz1977968337797171191/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1977968337797171191/bin -o /tmp/qfuzz1977968337797171191/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1977968337797171191/bin
Found file /tmp/qfuzz1977968337797171191/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz1977968337797171191/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1977968337797171191/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1977968337797171191/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1977968337797171191/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz1977968337797171191/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 127979 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (11 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #7 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 29.00; [35.00,115.00,475.00,575.00,604.00,855.00,1015.00]
2; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta; 7; 40.00; [35.00,115.00,155.00,475.00,604.00,735.00,855.00]
3; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 7; 20.00; [35.00,75.00,95.00,235.00,335.00,604.00,655.00]
4; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 7; 49.00; [475.00,555.00,604.00,655.00,755.00,855.00,1015.00]
6; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 29.00; [15.00,955.00,984.00]
7; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 5; 20.00; [55.00,335.00,355.00,375.00,884.00]
10; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 29.00; [115.00,535.00,575.00,604.00,675.00,855.00,1015.00]
13; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 7; 60.00; [35.00,284.00,555.00,655.00,735.00,895.00,955.00]
18; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta; 7; 80.00; [164.00,275.00,435.00,575.00,695.00,835.00,915.00]
33; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32; 4; 9.00; [115.00,735.00,955.00,964.00]
54; /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta; 7; 100.00; [35.00,235.00,375.00,475.00,604.00,855.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 11, 50, 42, 23, 18, 1, 23, 20, 7, 7, 30, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 46, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 5, 47, 36, 36, 36, 36, 31, 8, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 34, 13, 28, 19, 45, 21, 41, 35, 40, 9, 17, 36, 32, 8, 20, 47, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 32, 36, 27, 44, 47, 1, 30, 27, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 26, 28, 33, 23, 20, 7, 7, 29, 5, 24, 27, 14, 50, 32, 28, 14, 50, 34, 40, 34, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 2, 17, 2, 2, 18, 16, 30, 2, 2, 2, 2, 2, 2, 44, 2, 2, 2, 16, 12, 8, 12, 2, 2, 39, 1, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 27, 50, 42, 23, 37, 32, 23, 40, 13, 7, 29, 5, 28, 27, 41, 12, 13, 28, 14, 32, 34, 40, 34, 50, 2, 27, 35, 27, 42, 45, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 1, 3, 16, 4, 32, 11, 38, 13, 26, 1, 16, 11, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 36, 42, 23, 7, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1977968337797171191/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_112926_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,11,50,42,23,18,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,5,47,36,36,36,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,34,13,28,19,45,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,32,36,27,44,47,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,26,28,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,2,17,2,2,18,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,27,50,42,23,37,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,1,3,16,4,32,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,36,42,23,7,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:29:26,963 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 11:29:26,964 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 11:29:38,124 INFO     Done. Execution time: 11.160414218902588 seconds
2023-01-31 11:29:38,125 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_112926_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_112926_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,11,50,42,23,18,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,5,47,36,36,36,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,34,13,28,19,45,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,32,36,27,44,47,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,26,28,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,2,17,2,2,18,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,27,50,42,23,37,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,1,3,16,4,32,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,36,42,23,7,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,11,50,42,23,18,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [47,5,47,36,36,36,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,34,13,28,19,45,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [13,32,36,27,44,47,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,26,28,33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [43,2,17,2,2,18,16]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [48,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,27,50,42,23,37,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,1,3,16,4,32,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,36,42,23,7,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [29,11,50,42,23,18,1]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [29,11,50,42,23,18,1]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [29,11,50,42,23,18,1]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [29,11,50,42,23,18,1]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [29,11,50,42,23,18,1]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [29,11,50,42,23,18,1]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     29  |  0  |  [29,11,50,42,23,18,1]  |
    25  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |  [29,11,50,42,23,18,1]  |
    29  |                         i = i + 1;  |         |   29  |     29  |  1  |  [29,11,50,42,23,18,1]  |
    30  |              resetPlaceHolder_1();  |         |   29  |     29  |  1  |  [29,11,50,42,23,18,1]  |
    36  |        chunk = arrayRead(text, i);  |         |   29  |     11  |  1  |  [29,11,50,42,23,18,1]  |
    39  |                     R = R + chunk;  |     11  |   40  |     11  |  1  |  [29,11,50,42,23,18,1]  |
    43  |                         i = i + 1;  |         |   40  |     11  |  2  |  [29,11,50,42,23,18,1]  |
    44  |              resetPlaceHolder_1();  |         |   40  |     11  |  2  |  [29,11,50,42,23,18,1]  |
    50  |        chunk = arrayRead(text, i);  |         |   40  |     50  |  2  |  [29,11,50,42,23,18,1]  |
    53  |                     R = R + chunk;  |     50  |   90  |     50  |  2  |  [29,11,50,42,23,18,1]  |
    57  |                         i = i + 1;  |         |   90  |     50  |  3  |  [29,11,50,42,23,18,1]  |
    58  |              resetPlaceHolder_1();  |         |   90  |     50  |  3  |  [29,11,50,42,23,18,1]  |
    64  |        chunk = arrayRead(text, i);  |         |   90  |     42  |  3  |  [29,11,50,42,23,18,1]  |
    67  |                     R = R + chunk;  |     42  |  132  |     42  |  3  |  [29,11,50,42,23,18,1]  |
    71  |                         i = i + 1;  |         |  132  |     42  |  4  |  [29,11,50,42,23,18,1]  |
    72  |              resetPlaceHolder_1();  |         |  132  |     42  |  4  |  [29,11,50,42,23,18,1]  |
    78  |        chunk = arrayRead(text, i);  |         |  132  |     23  |  4  |  [29,11,50,42,23,18,1]  |
    81  |                     R = R + chunk;  |     23  |  155  |     23  |  4  |  [29,11,50,42,23,18,1]  |
    85  |                         i = i + 1;  |         |  155  |     23  |  5  |  [29,11,50,42,23,18,1]  |
    86  |              resetPlaceHolder_1();  |         |  155  |     23  |  5  |  [29,11,50,42,23,18,1]  |
    92  |        chunk = arrayRead(text, i);  |         |  155  |     18  |  5  |  [29,11,50,42,23,18,1]  |
    95  |                     R = R + chunk;  |     18  |  173  |     18  |  5  |  [29,11,50,42,23,18,1]  |
    99  |                         i = i + 1;  |         |  173  |     18  |  6  |  [29,11,50,42,23,18,1]  |
   100  |              resetPlaceHolder_1();  |         |  173  |     18  |  6  |  [29,11,50,42,23,18,1]  |
   106  |        chunk = arrayRead(text, i);  |         |  173  |      1  |  6  |  [29,11,50,42,23,18,1]  |
   109  |                     R = R + chunk;  |      1  |  174  |      1  |  6  |  [29,11,50,42,23,18,1]  |
   113  |                         i = i + 1;  |         |  174  |      1  |  7  |  [29,11,50,42,23,18,1]  |
   114  |              resetPlaceHolder_1();  |         |  174  |      1  |  7  |  [29,11,50,42,23,18,1]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     29  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     11  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     50  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     42  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     23  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     18  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |      1  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 11:29:38,125 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:29:46,289 INFO     Done. Execution time: 8.164510488510132 seconds
2023-01-31 11:29:46,290 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1129-transparentAmortize-60s-mostPrecise/stac-raw-0131-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.157s
user	0m18.201s
sys	0m2.233s

2023-01-31 11:29:46,290 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 11:29:46,290 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:32:52,569 INFO     Done. Execution time: 186.2786557674408 seconds
2023-01-31 11:32:52,569 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz2058862588300028264/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2058862588300028264/bin -o /tmp/qfuzz2058862588300028264/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2058862588300028264/bin
Found file /tmp/qfuzz2058862588300028264/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz2058862588300028264/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2058862588300028264/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2058862588300028264/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2058862588300028264/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz2058862588300028264/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 127223 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 8.00; [35.00,115.00,412.00,475.00,575.00,598.00,606.00,855.00,1015.00]
2; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 7; 3.00; [35.00,38.00,46.00,335.00,755.00,1012.00,1015.00]
6; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 9; 3.00; [55.00,115.00,135.00,232.00,235.00,598.00,606.00,735.00,975.00]
9; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 9; 3.00; [35.00,38.00,46.00,92.00,115.00,255.00,395.00,475.00,575.00]
18; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 9; 3.00; [32.00,35.00,218.00,226.00,475.00,575.00,855.00,955.00,995.00]
25; /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 9; 8.00; [115.00,412.00,475.00,575.00,598.00,606.00,835.00,855.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 41, 23, 20, 7, 7, 29, 5, 48, 27, 41, 24, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 49, 47, 42, 23, 28, 1, 35, 1, 28, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 5, 12, 19, 23, 28, 1, 2, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 36, 6, 2, 48, 11, 35, 11, 22, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 16, 1, 37, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 43, 9, 47, 7, 5, 10, 30, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2058862588300028264/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_113252_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,41], 2, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,49,47,42,23,28,1], 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,5,12,19,23,28,1], 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,36,6,2,48,11], 2, 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,16,1,37,50,50], 2, 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:32:52,569 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 11:32:52,570 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 11:33:07,752 INFO     Done. Execution time: 15.18215036392212 seconds
2023-01-31 11:33:07,752 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_113252_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_113252_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,41], 2, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,49,47,42,23,28,1], 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,5,12,19,23,28,1], 2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,36,6,2,48,11], 2, 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,16,1,37,50,50], 2, 50)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,41]
templateds: 2
separator: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,49,47,42,23,28,1]
templateds: 2
separator: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,5,12,19,23,28,1]
templateds: 2
separator: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,36,6,2,48,11]
templateds: 2
separator: 11
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,1,16,1,37,50,50]
templateds: 2
separator: 50
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
templateds: 2
separator: 20
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |          text           |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |         20  |           2  |  [29,5,50,42,23,28,41]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |     29  |  0  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    46  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    50  |                         j = j + 1;  |         |   29  |     29  |  0  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    51  |              resetPlaceHolder_2();  |         |   29  |     29  |  0  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    57  |        chunk = arrayRead(text, j);  |         |   29  |      5  |  0  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    60  |                     R = R + chunk;  |      5  |   34  |      5  |  0  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    64  |                         j = j + 1;  |         |   34  |      5  |  0  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    65  |              resetPlaceHolder_2();  |         |   34  |      5  |  0  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    71  |        chunk = arrayRead(text, j);  |         |   34  |     50  |  0  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    74  |                     R = R + chunk;  |     50  |   84  |     50  |  0  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    78  |                         j = j + 1;  |         |   84  |     50  |  0  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    79  |              resetPlaceHolder_2();  |         |   84  |     50  |  0  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    85  |        chunk = arrayRead(text, j);  |         |   84  |     42  |  0  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    88  |                     R = R + chunk;  |     42  |  126  |     42  |  0  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    92  |                         j = j + 1;  |         |  126  |     42  |  0  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    93  |              resetPlaceHolder_2();  |         |  126  |     42  |  0  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
    99  |        chunk = arrayRead(text, j);  |         |  126  |     23  |  0  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   102  |                     R = R + chunk;  |     23  |  149  |     23  |  0  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   106  |                         j = j + 1;  |         |  149  |     23  |  0  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   107  |              resetPlaceHolder_2();  |         |  149  |     23  |  0  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   113  |        chunk = arrayRead(text, j);  |         |  149  |     28  |  0  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   116  |                     R = R + chunk;  |     28  |  177  |     28  |  0  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   120  |                         j = j + 1;  |         |  177  |     28  |  0  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   121  |              resetPlaceHolder_2();  |         |  177  |     28  |  0  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   127  |        chunk = arrayRead(text, j);  |         |  177  |     41  |  0  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   130  |                     R = R + chunk;  |     41  |  218  |     41  |  0  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   134  |                         j = j + 1;  |         |  218  |     41  |  0  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   135  |              resetPlaceHolder_2();  |         |  218  |     41  |  0  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   141  |                 R = R + separator;  |     20  |  238  |     41  |  0  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   145  |                         i = i + 1;  |         |  238  |     41  |  1  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   146  |              resetPlaceHolder_1();  |         |  238  |     41  |  1  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   151  |                         int j = 0;  |         |  238  |     41  |  1  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   157  |        chunk = arrayRead(text, j);  |         |  238  |     29  |  1  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   160  |                     R = R + chunk;  |     29  |  267  |     29  |  1  |  0  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   164  |                         j = j + 1;  |         |  267  |     29  |  1  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   165  |              resetPlaceHolder_2();  |         |  267  |     29  |  1  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   171  |        chunk = arrayRead(text, j);  |         |  267  |      5  |  1  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   174  |                     R = R + chunk;  |      5  |  272  |      5  |  1  |  1  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   178  |                         j = j + 1;  |         |  272  |      5  |  1  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   179  |              resetPlaceHolder_2();  |         |  272  |      5  |  1  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   185  |        chunk = arrayRead(text, j);  |         |  272  |     50  |  1  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   188  |                     R = R + chunk;  |     50  |  322  |     50  |  1  |  2  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   192  |                         j = j + 1;  |         |  322  |     50  |  1  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   193  |              resetPlaceHolder_2();  |         |  322  |     50  |  1  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   199  |        chunk = arrayRead(text, j);  |         |  322  |     42  |  1  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   202  |                     R = R + chunk;  |     42  |  364  |     42  |  1  |  3  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   206  |                         j = j + 1;  |         |  364  |     42  |  1  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   207  |              resetPlaceHolder_2();  |         |  364  |     42  |  1  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   213  |        chunk = arrayRead(text, j);  |         |  364  |     23  |  1  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   216  |                     R = R + chunk;  |     23  |  387  |     23  |  1  |  4  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   220  |                         j = j + 1;  |         |  387  |     23  |  1  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   221  |              resetPlaceHolder_2();  |         |  387  |     23  |  1  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   227  |        chunk = arrayRead(text, j);  |         |  387  |     28  |  1  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   230  |                     R = R + chunk;  |     28  |  415  |     28  |  1  |  5  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   234  |                         j = j + 1;  |         |  415  |     28  |  1  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   235  |              resetPlaceHolder_2();  |         |  415  |     28  |  1  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   241  |        chunk = arrayRead(text, j);  |         |  415  |     41  |  1  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   244  |                     R = R + chunk;  |     41  |  456  |     41  |  1  |  6  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   248  |                         j = j + 1;  |         |  456  |     41  |  1  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   249  |              resetPlaceHolder_2();  |         |  456  |     41  |  1  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   255  |                 R = R + separator;  |     20  |  476  |     41  |  1  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   259  |                         i = i + 1;  |         |  476  |     41  |  2  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
   260  |              resetPlaceHolder_1();  |         |  476  |     41  |  2  |  7  |         20  |           2  |  [29,5,50,42,23,28,41]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 8 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102}; {216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {141}; {255}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {141}; {255} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     29  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      5  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     50  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     23  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     28  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     41  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     20  |                         0  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     29  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      5  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     50  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     42  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     23  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     28  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     41  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     20  |                         1  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 14 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {116,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 5), Set(4, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,116}; {216,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 6), Set(4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {102,130}; {216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,216}; {46,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(1, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,216}; {60,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,216}; {74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,216}; {88,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 6), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 6), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 5), Set(0, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,230}; {46,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {160,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130,160}; {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {160,244}; {46,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(6, 0), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 6), Set(0, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {160,244}; {46,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {130,160}; {202,230}; {88,116} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |     29  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |      5  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     50  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |     23  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     28  |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     41  |                         1  |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |     20  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     29  |                         1  |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |      5  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     50  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     42  |                         2  |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |     23  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     28  |                         2  |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     41  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |     20  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188}; {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 8 trace node indices: [174, 46, 216, 74, 60, 102, 188, 244]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 15 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,188,216}; {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 4), Set(1, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,188,216}; {60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 6 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 8 trace node indices: [174, 46, 216, 74, 60, 102, 188, 244]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 18 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 6 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {60,74,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {74,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 6 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 8 trace node indices: [174, 46, 216, 74, 60, 102, 188, 244]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 15 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,102,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 6 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {46,60,74,102,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46,60,74,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {46,74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {46,74,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 8 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,74,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,74,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 8 trace node indices: [174, 46, 216, 74, 60, 102, 188, 244]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,174,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,60,74,102,174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,60,74,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,174,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,174,188,216}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {46,74,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {46,74,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 6)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 8 trace node indices: [174, 46, 216, 74, 60, 102, 188, 244]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,102,174,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,174,188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,60,74,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 7)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {46,60,74,102,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {46,74,102,174,188,216,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {141}; {255}
GroupID(1): {130,160}; {202,230}; {88,116}
GroupID(2): {46,60,74,102,174,188,216,244}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |     29  |                            |                            |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |      5  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     50  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     42  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |     23  |                            |                            |                         0  |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     28  |                            |                         0  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     41  |                            |                         1  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |     20  |                         0  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |     29  |                            |                         1  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     50  |                            |                            |                         0  |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     42  |                            |                         2  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |     23  |                            |                            |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     28  |                            |                         2  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     41  |                            |                            |                         0  |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |     20  |                         1  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(121, 165)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> if ((j < 2) || (j == 2))
{
  if ((j < 0) || (j == 0))
  {
    if ((i < 0) || (i == 0))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
  else
  {
    R2 = R2 + chunk;
  }
}
else
{
  if ((j < 3) || (j == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((j < 4) || (j == 4))
    {
      R2 = R2 + chunk;
    }
    else
    {
      if ((i < 0) || (i == 0))
      {
        R1 = R1 + chunk;
      }
      else
      {
        if ((j < 5) || (j == 5))
        {
          R1 = R1 + chunk;
        }
        else
        {
          R2 = R2 + chunk;
        }
      }
    }
  }
}
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 1) || (j == 1))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R1
    }
    else
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
  }
  else
  {
    if ((j < 5) || (j == 5))
    {
      // reset R1
    }
    else
    {
      if ((j < 6) || (j == 6))
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
      else
      {
        // reset R1
      }
    }
  }
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 11:33:07,753 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:34:10,182 INFO     Done. Execution time: 62.42883634567261 seconds
2023-01-31 11:34:10,182 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          if ((j < 0) || (j == 0))
          {
            if ((i < 0) || (i == 0))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        else
        {
          if ((j < 3) || (j == 3))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((i < 0) || (i == 0))
              {
                D1 = D1 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D1p = D1;
            D1 = 0;
            C1 = C1 + 1;
          }
        }
        else
        {
          if ((j < 5) || (j == 5))
          {

          }
          else
          {
            if ((j < 6) || (j == 6))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          if ((j < 0) || (j == 0))
          {
            if ((i < 0) || (i == 0))
            {
              D2 = D2 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        else
        {
          if ((j < 3) || (j == 3))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((j < 4) || (j == 4))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((i < 0) || (i == 0))
              {
                D1 = D1 + chunk;
              }
              else
              {
                if ((j < 5) || (j == 5))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  D2 = D2 + chunk;
                }
              }
            }
          }
        }
        j = j + 1;
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D1p = D1;
            D1 = 0;
            C1 = C1 + 1;
          }
        }
        else
        {
          if ((j < 5) || (j == 5))
          {

          }
          else
          {
            if ((j < 6) || (j == 6))
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
            else
            {

            }
          }
        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1257856379664429075.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2475950793185964940.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5082832147076162569.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3064232570130799888.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1963104734336490620.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8855667302802846059.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8929738723000822727.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4662271989629272002.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6227706702783038747.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    6)  (define-fun D2 () Int    3)  (define-fun D1 () Int    (- 7))  (define-fun C2 () Int    14)  (define-fun C1 () Int    1)  (define-fun templateds () Int    14)  (define-fun text () Int    7)  (define-fun separator () Int    7)  (define-fun D0p () Int    8)  (define-fun D2p () Int    15)  (define-fun D1p () Int    9)  (define-fun C0 () Int    1)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1133-transparentAmortize-60s-mostPrecise/stac-raw-0131-1133-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.422s
user	4m1.881s
sys	0m2.691s

2023-01-31 11:34:10,182 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 11:34:10,182 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:37:16,281 INFO     Done. Execution time: 186.09865188598633 seconds
2023-01-31 11:37:16,281 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz2594632358524868665/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2594632358524868665/bin -o /tmp/qfuzz2594632358524868665/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2594632358524868665/bin
Found file /tmp/qfuzz2594632358524868665/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz2594632358524868665/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2594632358524868665/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2594632358524868665/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2594632358524868665/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz2594632358524868665/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 49, exec speed = 131918 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m49 to 49 bits (average: 49.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 8.00; [35.00,115.00,148.00,412.00,475.00,575.00,598.00,606.00,855.00,1015.00]
2; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 10; 8.00; [35.00,115.00,148.00,412.00,438.00,446.00,575.00,675.00,855.00,1015.00]
3; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 7; 3.00; [75.00,95.00,612.00,615.00,618.00,626.00,688.00]
8; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 10; 6.00; [35.00,115.00,148.00,475.00,575.00,598.00,606.00,612.00,855.00,1015.00]
18; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 10; 3.00; [52.00,175.00,235.00,238.00,246.00,368.00,455.00,775.00,815.00,915.00]
21; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 9; 8.00; [35.00,115.00,148.00,412.00,475.00,575.00,598.00,606.00,1015.00]
31; /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 10; 8.00; [95.00,235.00,275.00,295.00,568.00,598.00,606.00,775.00,855.00,892.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 14, 42, 38, 13, 4, 11, 37, 44, 28, 47, 28, 7, 12, 28, 14, 2, 34, 29, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 50, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 7, 41, 36, 32, 28, 14, 46, 34, 40, 34, 12, 22, 5, 34, 13, 28, 37, 24, 30, 4, 2, 27, 19, 22, 21, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 11, 38, 45, 22, 40, 8, 34, 2, 18, 11, 11, 30, 39, 11, 11, 7, 34, 5, 2, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 21, 30, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 30, 30, 3, 4, 30, 30, 30, 30, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 5, 50, 42, 33, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2594632358524868665/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_113716_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,14,42,38,13,4,11], 2, 44, 28
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,50,23,28,1], 2, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,11,38,45,22,40,8], 2, 2, 18
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2, 30, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,30,30,3,4,30,30], 2, 30, 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,5,50,42,33,28,1], 2, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:37:16,282 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 11:37:16,282 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 11:37:29,955 INFO     Done. Execution time: 13.672568082809448 seconds
2023-01-31 11:37:29,955 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_113716_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_113716_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,14,42,38,13,4,11], 2, 44, 28)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,50,23,28,1], 2, 20, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,11,38,45,22,40,8], 2, 2, 18)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2, 30, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,30,30,3,4,30,30], 2, 30, 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2, 20, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,5,50,42,33,28,1], 2, 20, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,14,42,38,13,4,11]
ts: 2
sep: 44
rep: 28
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,50,23,28,1]
ts: 2
sep: 20
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [11,11,38,45,22,40,8]
ts: 2
sep: 2
rep: 18
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
ts: 2
sep: 30
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [30,30,30,3,4,30,30]
ts: 2
sep: 30
rep: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [21,5,50,42,33,28,1]
ts: 2
sep: 20
rep: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
ts: 2
sep: 20
rep: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |          text           |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |     |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    45  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |     29  |  0  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    54  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    57  |                       R = R + rep;  |     28  |   57  |     29  |  0  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    61  |                         j = j + 1;  |         |   57  |     29  |  0  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   57  |     29  |  0  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   57  |     14  |  0  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    71  |                     R = R + chunk;  |     14  |   71  |     14  |  0  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    74  |                       R = R + rep;  |     28  |   99  |     14  |  0  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    78  |                         j = j + 1;  |         |   99  |     14  |  0  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   99  |     14  |  0  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   99  |     42  |  0  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    88  |                     R = R + chunk;  |     42  |  141  |     42  |  0  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    91  |                       R = R + rep;  |     28  |  169  |     42  |  0  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    95  |                         j = j + 1;  |         |  169  |     42  |  0  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
    96  |              resetPlaceHolder_2();  |         |  169  |     42  |  0  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |  169  |     38  |  0  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   105  |                     R = R + chunk;  |     38  |  207  |     38  |  0  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   108  |                       R = R + rep;  |     28  |  235  |     38  |  0  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   112  |                         j = j + 1;  |         |  235  |     38  |  0  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   113  |              resetPlaceHolder_2();  |         |  235  |     38  |  0  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |  235  |     13  |  0  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   122  |                     R = R + chunk;  |     13  |  248  |     13  |  0  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   125  |                       R = R + rep;  |     28  |  276  |     13  |  0  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   129  |                         j = j + 1;  |         |  276  |     13  |  0  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   130  |              resetPlaceHolder_2();  |         |  276  |     13  |  0  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |  276  |      4  |  0  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   139  |                     R = R + chunk;  |      4  |  280  |      4  |  0  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   142  |                       R = R + rep;  |     28  |  308  |      4  |  0  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   146  |                         j = j + 1;  |         |  308  |      4  |  0  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   147  |              resetPlaceHolder_2();  |         |  308  |      4  |  0  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |  308  |     11  |  0  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   156  |                     R = R + chunk;  |     11  |  319  |     11  |  0  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   159  |                       R = R + rep;  |     28  |  347  |     11  |  0  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   163  |                         j = j + 1;  |         |  347  |     11  |  0  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   164  |              resetPlaceHolder_2();  |         |  347  |     11  |  0  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   170  |                       R = R + sep;  |     44  |  391  |     11  |  0  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   174  |                         i = i + 1;  |         |  391  |     11  |  1  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   175  |              resetPlaceHolder_1();  |         |  391  |     11  |  1  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   180  |                         int j = 0;  |         |  391  |     11  |  1  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |  391  |     29  |  1  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   189  |                     R = R + chunk;  |     29  |  420  |     29  |  1  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   192  |                       R = R + rep;  |     28  |  448  |     29  |  1  |  0  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   196  |                         j = j + 1;  |         |  448  |     29  |  1  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  448  |     29  |  1  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  448  |     14  |  1  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   206  |                     R = R + chunk;  |     14  |  462  |     14  |  1  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   209  |                       R = R + rep;  |     28  |  490  |     14  |  1  |  1  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   213  |                         j = j + 1;  |         |  490  |     14  |  1  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  490  |     14  |  1  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  490  |     42  |  1  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   223  |                     R = R + chunk;  |     42  |  532  |     42  |  1  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   226  |                       R = R + rep;  |     28  |  560  |     42  |  1  |  2  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   230  |                         j = j + 1;  |         |  560  |     42  |  1  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  560  |     42  |  1  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  560  |     38  |  1  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   240  |                     R = R + chunk;  |     38  |  598  |     38  |  1  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   243  |                       R = R + rep;  |     28  |  626  |     38  |  1  |  3  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   247  |                         j = j + 1;  |         |  626  |     38  |  1  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  626  |     38  |  1  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  626  |     13  |  1  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   257  |                     R = R + chunk;  |     13  |  639  |     13  |  1  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   260  |                       R = R + rep;  |     28  |  667  |     13  |  1  |  4  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   264  |                         j = j + 1;  |         |  667  |     13  |  1  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  667  |     13  |  1  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  667  |      4  |  1  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   274  |                     R = R + chunk;  |      4  |  671  |      4  |  1  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   277  |                       R = R + rep;  |     28  |  699  |      4  |  1  |  5  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   281  |                         j = j + 1;  |         |  699  |      4  |  1  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  699  |      4  |  1  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  699  |     11  |  1  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   291  |                     R = R + chunk;  |     11  |  710  |     11  |  1  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   294  |                       R = R + rep;  |     28  |  738  |     11  |  1  |  6  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   298  |                         j = j + 1;  |         |  738  |     11  |  1  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  738  |     11  |  1  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   305  |                       R = R + sep;  |     44  |  782  |     11  |  1  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   309  |                         i = i + 1;  |         |  782  |     11  |  2  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  782  |     11  |  2  |  7  |   28  |   44  |  [29,14,42,38,13,4,11]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                            |
    57  |           R = R + rep;  |     28  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     14  |                            |
    74  |           R = R + rep;  |     28  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                            |
    91  |           R = R + rep;  |     28  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     38  |                            |
   108  |           R = R + rep;  |     28  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     13  |                            |
   125  |           R = R + rep;  |     28  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |      4  |                            |
   142  |           R = R + rep;  |     28  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     11  |                            |
   159  |           R = R + rep;  |     28  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     44  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     29  |                            |
   192  |           R = R + rep;  |     28  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     14  |                            |
   209  |           R = R + rep;  |     28  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     42  |                            |
   226  |           R = R + rep;  |     28  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     38  |                            |
   243  |           R = R + rep;  |     28  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     13  |                            |
   260  |           R = R + rep;  |     28  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |      4  |                            |
   277  |           R = R + rep;  |     28  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     11  |                            |
   294  |           R = R + rep;  |     28  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     44  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {122}; {257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {170}; {305}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {170}; {305} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                            |
    57  |           R = R + rep;  |     28  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     14  |                            |
    74  |           R = R + rep;  |     28  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                            |
    91  |           R = R + rep;  |     28  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     38  |                            |
   108  |           R = R + rep;  |     28  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     13  |                            |
   125  |           R = R + rep;  |     28  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |      4  |                            |
   142  |           R = R + rep;  |     28  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     11  |                            |
   159  |           R = R + rep;  |     28  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     44  |                         0  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     29  |                            |
   192  |           R = R + rep;  |     28  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     14  |                            |
   209  |           R = R + rep;  |     28  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     42  |                            |
   226  |           R = R + rep;  |     28  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     38  |                            |
   243  |           R = R + rep;  |     28  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     13  |                            |
   260  |           R = R + rep;  |     28  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |      4  |                            |
   277  |           R = R + rep;  |     28  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     11  |                            |
   294  |           R = R + rep;  |     28  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     44  |                         1  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {189}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 14 trace node indices: [88, 257, 189, 206, 156, 105, 291, 71, 54, 274, 240, 223, 139, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 20 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(3, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,122}; {240,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {122,189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {189,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {54,122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {54,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122,189}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {105,139}; {189,257}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {139,240}; {54,122}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4, 0), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(5, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {122,189}; {240,274} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                            |
    57  |           R = R + rep;  |     28  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     14  |                            |
    74  |           R = R + rep;  |     28  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                            |
    91  |           R = R + rep;  |     28  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     38  |                            |
   108  |           R = R + rep;  |     28  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     13  |                         0  |
   125  |           R = R + rep;  |     28  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |      4  |                            |
   142  |           R = R + rep;  |     28  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     11  |                            |
   159  |           R = R + rep;  |     28  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     44  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     29  |                         0  |
   192  |           R = R + rep;  |     28  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     14  |                            |
   209  |           R = R + rep;  |     28  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     42  |                            |
   226  |           R = R + rep;  |     28  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     38  |                         1  |
   243  |           R = R + rep;  |     28  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     13  |                            |
   260  |           R = R + rep;  |     28  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |      4  |                         1  |
   277  |           R = R + rep;  |     28  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     11  |                            |
   294  |           R = R + rep;  |     28  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     44  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,291}; {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 6), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,291}; {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,291}; {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 6), Set(2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223,291}; {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 19-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223}; {71,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2), Set(1, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223}; {71,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 10 trace node indices: [88, 257, 206, 156, 105, 291, 71, 54, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 34 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,139,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {54,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54,223,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,88,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,206,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,105,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,139,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,88,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 7-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,105,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 8-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 9-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,223,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,105,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 9-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 10-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,206,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,139,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 10-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 11-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {54,71,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,139,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 11-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 12-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {139,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 12-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 13-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,139,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 13-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 14-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,223,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,257}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 14-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 15-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,206,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,88,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,156,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,206,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 15-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206,223,291}; {71,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 2, 6), Set(1, 2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206,223,291}; {71,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 16-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,206,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {206,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {71,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 16-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 17-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,206,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,156,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 17-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 18-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156,223,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {223,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {88,257,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 18-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223,257,291}; {71,105,206}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(2, 4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {223,257,291}; {71,105,206} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                            |
    57  |           R = R + rep;  |     28  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     14  |                         0  |
    74  |           R = R + rep;  |     28  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     42  |                            |
    91  |           R = R + rep;  |     28  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     38  |                         0  |
   108  |           R = R + rep;  |     28  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |     13  |                            |
   125  |           R = R + rep;  |     28  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |      4  |                            |
   142  |           R = R + rep;  |     28  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     11  |                            |
   159  |           R = R + rep;  |     28  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |     44  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |     29  |                            |
   192  |           R = R + rep;  |     28  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     14  |                         0  |
   209  |           R = R + rep;  |     28  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     42  |                         1  |
   226  |           R = R + rep;  |     28  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     38  |                            |
   243  |           R = R + rep;  |     28  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |     13  |                         1  |
   260  |           R = R + rep;  |     28  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |      4  |                            |
   277  |           R = R + rep;  |     28  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     11  |                         1  |
   294  |           R = R + rep;  |     28  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |     44  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 19-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 20-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 21-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 22-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 23-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 24-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 25-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 26-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 27-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 28-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54,88,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 29-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 30-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 31-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 32-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 33-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [88, 156, 54, 139]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(4): {54,88,139,156}
GroupID(1): {170}; {305}
GroupID(3): {223,257,291}; {71,105,206}
GroupID(2): {122,189}; {240,274}
                                                                                                                                                                                              
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |  SegmentIDs in GroupID(4)  |
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                            |                            |                            |                            |                         0  |
    57  |           R = R + rep;  |     28  |                         0  |                            |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     14  |                            |                            |                            |                         0  |                            |
    74  |           R = R + rep;  |     28  |                         1  |                            |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     42  |                            |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     28  |                         2  |                            |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     38  |                            |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     28  |                         3  |                            |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   122  |         R = R + chunk;  |     13  |                            |                            |                         0  |                            |                            |
   125  |           R = R + rep;  |     28  |                         4  |                            |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   139  |         R = R + chunk;  |      4  |                            |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     28  |                         5  |                            |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     11  |                            |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     28  |                         6  |                            |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   170  |           R = R + sep;  |     44  |                            |                         0  |                            |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |                            |
   189  |         R = R + chunk;  |     29  |                            |                            |                         0  |                            |                            |
   192  |           R = R + rep;  |     28  |                         7  |                            |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     14  |                            |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     28  |                         8  |                            |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     42  |                            |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     28  |                         9  |                            |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     38  |                            |                            |                         1  |                            |                            |
   243  |           R = R + rep;  |     28  |                        10  |                            |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   257  |         R = R + chunk;  |     13  |                            |                            |                            |                         1  |                            |
   260  |           R = R + rep;  |     28  |                        11  |                            |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   274  |         R = R + chunk;  |      4  |                            |                            |                         1  |                            |                            |
   277  |           R = R + rep;  |     28  |                        12  |                            |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     11  |                            |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     28  |                        13  |                            |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |                            |
   305  |           R = R + sep;  |     44  |                            |                         1  |                            |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(4): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(4): Set()
GroupID(1): Set(175)
GroupID(3): Set(214)
GroupID(2): Set(197)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R4
  if ((j < 2) || (j == 2))
  {
    if ((j < 1) || (j == 1))
    {
      // reset R3
    }
    else
    {
      if ((i < 0) || (i == 0))
      {
        // reset R3
      }
      else
      {
        if (S3 < R3)
        {
          S3 = R3;
        }
        else
        {
          ;
        }
        R3 = 0;
        C3 = C3 + 1;
      }
    }
  }
  else
  {
    // reset R3
  }
  if ((j < 1) || (j == 1))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R2
    }
    else
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
  }
  else
  {
    // reset R2
  }
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R sep -> R1 = R1 + sep;
use R rep -> R0 = R0 + rep;
use R chunk -> if ((i < 0) || (i == 0))
{
  if ((j < 4) || (j == 4))
  {
    if ((j < 3) || (j == 3))
    {
      if ((j < 0) || (j == 0))
      {
        R4 = R4 + chunk;
      }
      else
      {
        if ((j < 1) || (j == 1))
        {
          R3 = R3 + chunk;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {
            R4 = R4 + chunk;
          }
          else
          {
            R3 = R3 + chunk;
          }
        }
      }
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
  else
  {
    R4 = R4 + chunk;
  }
}
else
{
  if ((j < 0) || (j == 0))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      R3 = R3 + chunk;
    }
    else
    {
      if ((j < 3) || (j == 3))
      {
        R2 = R2 + chunk;
      }
      else
      {
        if ((j < 4) || (j == 4))
        {
          R3 = R3 + chunk;
        }
        else
        {
          if ((j < 5) || (j == 5))
          {
            R2 = R2 + chunk;
          }
          else
          {
            R3 = R3 + chunk;
          }
        }
      }
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 11:37:29,955 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:38:32,939 INFO     Done. Execution time: 62.98366451263428 seconds
2023-01-31 11:38:32,939 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D4 = 0),List()) -> DeltaCounterPair(D4,C4), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int C4 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int D4 = 0;
    int D4p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          if ((j < 4) || (j == 4))
          {
            if ((j < 3) || (j == 3))
            {
              if ((j < 0) || (j == 0))
              {
                D4 = D4 + chunk;
              }
              else
              {
                if ((j < 1) || (j == 1))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 2) || (j == 2))
                  {
                    D4 = D4 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            D4 = D4 + chunk;
          }
        }
        else
        {
          if ((j < 0) || (j == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 3) || (j == 3))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 4) || (j == 4))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 5) || (j == 5))
                  {
                    D2 = D2 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D3p = D3;
              D3 = 0;
              C3 = C3 + 1;
            }
          }
        }
        else
        {

        }
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int C4 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int D4 = 0;
    int D4p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) + (D4 + (D4p * (C4 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          if ((j < 4) || (j == 4))
          {
            if ((j < 3) || (j == 3))
            {
              if ((j < 0) || (j == 0))
              {
                D4 = D4 + chunk;
              }
              else
              {
                if ((j < 1) || (j == 1))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 2) || (j == 2))
                  {
                    D4 = D4 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
            }
            else
            {
              D2 = D2 + chunk;
            }
          }
          else
          {
            D4 = D4 + chunk;
          }
        }
        else
        {
          if ((j < 0) || (j == 0))
          {
            D2 = D2 + chunk;
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 3) || (j == 3))
              {
                D2 = D2 + chunk;
              }
              else
              {
                if ((j < 4) || (j == 4))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 5) || (j == 5))
                  {
                    D2 = D2 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D3p = D3;
              D3 = 0;
              C3 = C3 + 1;
            }
          }
        }
        else
        {

        }
        if ((j < 1) || (j == 1))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            D2p = D2;
            D2 = 0;
            C2 = C2 + 1;
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D4`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D4` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C4` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5964904206236236239.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5913099795583187149.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8954856622455428526.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8564485494385226237.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D4`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5259624420837904027.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4543719591270212342.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5369233566804811757.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D4p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7067440984111163289.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3875509893228665803.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3293280333142358926.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C4`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-547434162514629048.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-753623567728296155.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1438702670094105612.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8222035857302546671.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8093277656337619616.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C4 1) 0) (- C4 1) 0) D4p))
      (a!4 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!5 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D2 a!1 D0 a!2 D4 a!3 D3 a!4 D1 a!5)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun D4p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C4 () Int)
(declare-fun D4 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C72 () Int)
(declare-fun C100 () Int)
(declare-fun C105 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C111 () Int)
(declare-fun C61 () Int)
(declare-fun C95 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C109 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C91 () Int)
(declare-fun C43 () Int)
(declare-fun C106 () Int)
(declare-fun C110 () Int)
(declare-fun C33 () Int)
(declare-fun C89 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C97 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C96 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C92 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C93 () Int)
(declare-fun C53 () Int)
(declare-fun C107 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C88 () Int)
(declare-fun C99 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C102 () Int)
(declare-fun C85 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C86 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C103 () Int)
(declare-fun C98 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C112 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C87 () Int)
(declare-fun C84 () Int)
(declare-fun C104 () Int)
(declare-fun C101 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C108 () Int)
(declare-fun C13 () Int)
(declare-fun C90 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C94 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (>= D4p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C4 1) 0) (- C4 1) 0) D4p))
      (a!4 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!5 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D2 a!1 D0 a!2 D4 a!3 D3 a!4 D1 a!5))
       true
       (or true (= D3p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D4p 0))
       true
       (or true (= D1p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D4 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C94 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C90 0)
     (>= C13 0)
     (>= C108 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C101 0)
     (>= C104 0)
     (>= C84 0)
     (>= C87 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C112 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C98 0)
     (>= C103 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C86 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C85 0)
     (>= C102 0)
     (>= C30 0)
     (>= C70 0)
     (>= C99 0)
     (>= C88 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C107 0)
     (>= C53 0)
     (>= C93 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C92 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C96 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C97 0)
     (>= C19 0)
     (>= C48 0)
     (>= C89 0)
     (>= C33 0)
     (>= C110 0)
     (>= C106 0)
     (>= C3 0)
     (>= C43 0)
     (>= C91 0)
     (>= C25 0)
     (>= C36 0)
     (>= C109 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C95 0)
     (>= C61 0)
     (>= C111 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C105 0)
     (>= C100 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    5)  (define-fun D3 () Int    (- 5))  (define-fun D4 () Int    5)  (define-fun D0 () Int    6)  (define-fun D2 () Int    7)  (define-fun C2 () Int    5)  (define-fun C4 () Int    5)  (define-fun C1 () Int    9)  (define-fun C3 () Int    2)  (define-fun rep () Int    1)  (define-fun sep () Int    5)  (define-fun text () Int    8)  (define-fun ts () Int    5)  (define-fun D3p () Int    0)  (define-fun D2p () Int    11)  (define-fun D4p () Int    1)  (define-fun D0p () Int    3)  (define-fun D1p () Int    7)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C100 () Int    0)  (define-fun C105 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C111 () Int    0)  (define-fun C61 () Int    0)  (define-fun C95 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C109 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C91 () Int    0)  (define-fun C43 () Int    0)  (define-fun C106 () Int    0)  (define-fun C110 () Int    0)  (define-fun C33 () Int    0)  (define-fun C89 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C97 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C96 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C92 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C93 () Int    0)  (define-fun C53 () Int    0)  (define-fun C107 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C88 () Int    0)  (define-fun C99 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C102 () Int    0)  (define-fun C85 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C86 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C103 () Int    0)  (define-fun C98 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C112 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C87 () Int    0)  (define-fun C84 () Int    0)  (define-fun C104 () Int    0)  (define-fun C101 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C108 () Int    0)  (define-fun C13 () Int    0)  (define-fun C90 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C94 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1))
              D4
              (* D4p (- C4 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `61.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1137-transparentAmortize-60s-mostPrecise/stac-raw-0131-1137-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.977s
user	4m2.542s
sys	0m4.191s

2023-01-31 11:38:32,940 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:38:32,940 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:41:38,986 INFO     Done. Execution time: 186.0457625389099 seconds
2023-01-31 11:41:38,986 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz7687749612357257218/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7687749612357257218/bin -o /tmp/qfuzz7687749612357257218/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7687749612357257218/bin
Found file /tmp/qfuzz7687749612357257218/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz7687749612357257218/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7687749612357257218/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7687749612357257218/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7687749612357257218/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz7687749612357257218/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 130263 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 30.00; [35.00,115.00,475.00,575.00,605.00,855.00,1015.00]
2; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta; 7; 40.00; [115.00,355.00,475.00,515.00,605.00,855.00,1015.00]
4; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 20.00; [35.00,55.00,115.00,555.00,605.00,1015.00]
6; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 6; 60.00; [365.00,555.00,615.00,755.00,835.00,995.00]
7; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov; 7; 20.00; [55.00,145.00,175.00,195.00,215.00,315.00,415.00]
9; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 7; 30.00; [115.00,275.00,515.00,575.00,605.00,955.00,1015.00]
18; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 7; 80.00; [35.00,115.00,515.00,605.00,755.00,855.00,1015.00]
19; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 7; 20.00; [195.00,295.00,325.00,475.00,695.00,715.00,815.00]
23; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 7; 100.00; [115.00,215.00,315.00,435.00,605.00,755.00,935.00]
118; /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000009,src:000001+000005,op:splice,rep:8,+delta; 7; 120.00; [115.00,235.00,355.00,475.00,625.00,855.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000009,src:000001+000005,op:splice,rep:8,+delta
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000009,src:000001+000005,op:splice,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 5, 50, 42, 23, 11, 17, 47, 24, 7, 45, 29, 5, 48, 40, 47, 46, 21, 41, 14, 24, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 9, 41, 17, 19, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 37, 15, 46, 21, 10, 16, 34, 9, 17, 36, 4, 41, 40, 42, 23, 28, 31, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 40, 35, 34, 14, 9, 23, 20, 21, 41, 35, 34, 14, 20, 22, 21, 41, 35, 34, 14, 20, 22, 3, 12, 20, 41, 3, 12, 20, 41, 23, 20, 21, 41, 35, 34, 14, 9, 23, 20, 7, 41, 26, 40, 50, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 37, 1, 25, 46, 34, 28, 34, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 13, 47, 28, 25, 4, 24, 7, 7, 29, 5, 48, 40, 47, 46, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 9, 8, 20, 10, 15, 2, 7, 50, 36, 23, 28, 1, 23, 20, 5, 7, 30, 4, 48, 27, 41, 36, 38, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 27, 37, 49, 30, 49, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 2, 1, 2, 27, 15, 46, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 25, 17, 10, 2, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7687749612357257218/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_114138_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,5,50,42,23,11,17], 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,37,15,46,21,10], 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,40,35,34,14,9,23], 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,37,1,25], 46
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,13,47,28,25], 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,9,8,20,10,15,2], 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,2,1,2,27], 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,25,17], 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:41:38,986 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:41:38,986 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 11:41:54,023 INFO     Done. Execution time: 15.036548852920532 seconds
2023-01-31 11:41:54,023 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_114138_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_114138_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,5,50,42,23,11,17], 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,37,15,46,21,10], 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,40,35,34,14,9,23], 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,37,1,25], 46)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,13,47,28,25], 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,9,8,20,10,15,2], 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,2,1,2,27], 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,25,17], 10)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [30,5,50,42,23,11,17]
choice: 47
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,37,15,46,21,10]
choice: 16
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [15,40,35,34,14,9,23]
choice: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,37,1,25]
choice: 46
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,2,1,2,27]
choice: 15
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,25,17]
choice: 10
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
choice: 23
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,13,47,28,25]
choice: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [6,9,8,20,10,15,2]
choice: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      47  |         |     |  [30,5,50,42,23,11,17]  |
    10  |                      // int R = 0;  |         |    0  |      47  |         |     |  [30,5,50,42,23,11,17]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      47  |         |     |  [30,5,50,42,23,11,17]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      47  |         |     |  [30,5,50,42,23,11,17]  |
    14  |                     int chunk = 0;  |         |    0  |      47  |      0  |     |  [30,5,50,42,23,11,17]  |
    25  |                         int i = 0;  |         |    0  |      47  |      0  |  0  |  [30,5,50,42,23,11,17]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      47  |     30  |  0  |  [30,5,50,42,23,11,17]  |
    34  |                     R = R + chunk;  |     30  |   30  |      47  |     30  |  0  |  [30,5,50,42,23,11,17]  |
    38  |                         i = i + 1;  |         |   30  |      47  |     30  |  1  |  [30,5,50,42,23,11,17]  |
    39  |              resetPlaceHolder_1();  |         |   30  |      47  |     30  |  1  |  [30,5,50,42,23,11,17]  |
    45  |        chunk = arrayRead(text, i);  |         |   30  |      47  |      5  |  1  |  [30,5,50,42,23,11,17]  |
    48  |                     R = R + chunk;  |      5  |   35  |      47  |      5  |  1  |  [30,5,50,42,23,11,17]  |
    52  |                         i = i + 1;  |         |   35  |      47  |      5  |  2  |  [30,5,50,42,23,11,17]  |
    53  |              resetPlaceHolder_1();  |         |   35  |      47  |      5  |  2  |  [30,5,50,42,23,11,17]  |
    59  |        chunk = arrayRead(text, i);  |         |   35  |      47  |     50  |  2  |  [30,5,50,42,23,11,17]  |
    62  |                     R = R + chunk;  |     50  |   85  |      47  |     50  |  2  |  [30,5,50,42,23,11,17]  |
    66  |                         i = i + 1;  |         |   85  |      47  |     50  |  3  |  [30,5,50,42,23,11,17]  |
    67  |              resetPlaceHolder_1();  |         |   85  |      47  |     50  |  3  |  [30,5,50,42,23,11,17]  |
    73  |        chunk = arrayRead(text, i);  |         |   85  |      47  |     42  |  3  |  [30,5,50,42,23,11,17]  |
    76  |                     R = R + chunk;  |     42  |  127  |      47  |     42  |  3  |  [30,5,50,42,23,11,17]  |
    80  |                         i = i + 1;  |         |  127  |      47  |     42  |  4  |  [30,5,50,42,23,11,17]  |
    81  |              resetPlaceHolder_1();  |         |  127  |      47  |     42  |  4  |  [30,5,50,42,23,11,17]  |
    87  |        chunk = arrayRead(text, i);  |         |  127  |      47  |     23  |  4  |  [30,5,50,42,23,11,17]  |
    90  |                     R = R + chunk;  |     23  |  150  |      47  |     23  |  4  |  [30,5,50,42,23,11,17]  |
    94  |                         i = i + 1;  |         |  150  |      47  |     23  |  5  |  [30,5,50,42,23,11,17]  |
    95  |              resetPlaceHolder_1();  |         |  150  |      47  |     23  |  5  |  [30,5,50,42,23,11,17]  |
   101  |        chunk = arrayRead(text, i);  |         |  150  |      47  |     11  |  5  |  [30,5,50,42,23,11,17]  |
   104  |                     R = R + chunk;  |     11  |  161  |      47  |     11  |  5  |  [30,5,50,42,23,11,17]  |
   108  |                         i = i + 1;  |         |  161  |      47  |     11  |  6  |  [30,5,50,42,23,11,17]  |
   109  |              resetPlaceHolder_1();  |         |  161  |      47  |     11  |  6  |  [30,5,50,42,23,11,17]  |
   115  |        chunk = arrayRead(text, i);  |         |  161  |      47  |     17  |  6  |  [30,5,50,42,23,11,17]  |
   118  |                     R = R + chunk;  |     17  |  178  |      47  |     17  |  6  |  [30,5,50,42,23,11,17]  |
   122  |                         i = i + 1;  |         |  178  |      47  |     17  |  7  |  [30,5,50,42,23,11,17]  |
   123  |              resetPlaceHolder_1();  |         |  178  |      47  |     17  |  7  |  [30,5,50,42,23,11,17]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104,118}; {48,90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 4), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104,118}; {48,90} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     30  |                            |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |      5  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     50  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     42  |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |     23  |                         0  |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     11  |                         1  |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     17  |                         1  |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [34, 76, 62]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104,118}; {48,90}
GroupID(1): {34,62,76}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |     30  |                            |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |         R = R + chunk;  |      5  |                         0  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |         R = R + chunk;  |     50  |                            |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     42  |                            |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |     23  |                         0  |                            |
    95  |  resetPlaceHolder_1();  |         |                            |                            |
   104  |         R = R + chunk;  |     11  |                         1  |                            |
   109  |  resetPlaceHolder_1();  |         |                            |                            |
   118  |         R = R + chunk;  |     17  |                         1  |                            |
   123  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(95)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |          text           |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       4  |         |     |  [29,5,50,13,47,28,25]  |
    10  |                      // int R = 0;  |         |    0  |       4  |         |     |  [29,5,50,13,47,28,25]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       4  |         |     |  [29,5,50,13,47,28,25]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       4  |         |     |  [29,5,50,13,47,28,25]  |
    14  |                     int chunk = 0;  |         |    0  |       4  |      0  |     |  [29,5,50,13,47,28,25]  |
    25  |                         int j = 0;  |         |    0  |       4  |      0  |  0  |  [29,5,50,13,47,28,25]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       4  |     29  |  0  |  [29,5,50,13,47,28,25]  |
    34  |                     R = R + chunk;  |     29  |   29  |       4  |     29  |  0  |  [29,5,50,13,47,28,25]  |
    38  |                         j = j + 1;  |         |   29  |       4  |     29  |  1  |  [29,5,50,13,47,28,25]  |
    39  |              resetPlaceHolder_2();  |         |   29  |       4  |     29  |  1  |  [29,5,50,13,47,28,25]  |
    45  |        chunk = arrayRead(text, j);  |         |   29  |       4  |      5  |  1  |  [29,5,50,13,47,28,25]  |
    48  |                     R = R + chunk;  |      5  |   34  |       4  |      5  |  1  |  [29,5,50,13,47,28,25]  |
    52  |                         j = j + 1;  |         |   34  |       4  |      5  |  2  |  [29,5,50,13,47,28,25]  |
    53  |              resetPlaceHolder_2();  |         |   34  |       4  |      5  |  2  |  [29,5,50,13,47,28,25]  |
    59  |        chunk = arrayRead(text, j);  |         |   34  |       4  |     50  |  2  |  [29,5,50,13,47,28,25]  |
    62  |                     R = R + chunk;  |     50  |   84  |       4  |     50  |  2  |  [29,5,50,13,47,28,25]  |
    66  |                         j = j + 1;  |         |   84  |       4  |     50  |  3  |  [29,5,50,13,47,28,25]  |
    67  |              resetPlaceHolder_2();  |         |   84  |       4  |     50  |  3  |  [29,5,50,13,47,28,25]  |
    73  |        chunk = arrayRead(text, j);  |         |   84  |       4  |     13  |  3  |  [29,5,50,13,47,28,25]  |
    76  |                     R = R + chunk;  |     13  |   97  |       4  |     13  |  3  |  [29,5,50,13,47,28,25]  |
    80  |                         j = j + 1;  |         |   97  |       4  |     13  |  4  |  [29,5,50,13,47,28,25]  |
    81  |              resetPlaceHolder_2();  |         |   97  |       4  |     13  |  4  |  [29,5,50,13,47,28,25]  |
    87  |        chunk = arrayRead(text, j);  |         |   97  |       4  |     47  |  4  |  [29,5,50,13,47,28,25]  |
    90  |                     R = R + chunk;  |     47  |  144  |       4  |     47  |  4  |  [29,5,50,13,47,28,25]  |
    94  |                         j = j + 1;  |         |  144  |       4  |     47  |  5  |  [29,5,50,13,47,28,25]  |
    95  |              resetPlaceHolder_2();  |         |  144  |       4  |     47  |  5  |  [29,5,50,13,47,28,25]  |
   101  |        chunk = arrayRead(text, j);  |         |  144  |       4  |     28  |  5  |  [29,5,50,13,47,28,25]  |
   104  |                     R = R + chunk;  |     28  |  172  |       4  |     28  |  5  |  [29,5,50,13,47,28,25]  |
   108  |                         j = j + 1;  |         |  172  |       4  |     28  |  6  |  [29,5,50,13,47,28,25]  |
   109  |              resetPlaceHolder_2();  |         |  172  |       4  |     28  |  6  |  [29,5,50,13,47,28,25]  |
   115  |        chunk = arrayRead(text, j);  |         |  172  |       4  |     25  |  6  |  [29,5,50,13,47,28,25]  |
   118  |                     R = R + chunk;  |     25  |  197  |       4  |     25  |  6  |  [29,5,50,13,47,28,25]  |
   122  |                         j = j + 1;  |         |  197  |       4  |     25  |  7  |  [29,5,50,13,47,28,25]  |
   123  |              resetPlaceHolder_2();  |         |  197  |       4  |     25  |  7  |  [29,5,50,13,47,28,25]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {34,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {48,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {34,48,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {34,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {48,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34,48,62,76,118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {34,48,76,90,104}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34,48,62,76,90,104,118}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |     29  |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |      5  |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     50  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     13  |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |     47  |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     28  |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     25  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 4) || (i == 4))
  {
    // reset R0
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
    else
    {
      // reset R0
    }
  }
}
resetPlaceHolder_2(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 1) || (i == 1))
  {
    if ((i < 0) || (i == 0))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R0 = R0 + chunk;
    }
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  R0 = R0 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 11:41:54,024 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:43:52,049 INFO     Done. Execution time: 118.0249605178833 seconds
2023-01-31 11:43:52,049 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 3) || (i == 3))
        {
          if ((i < 1) || (i == 1))
          {
            if ((i < 0) || (i == 0))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        i = i + 1;
        if ((i < 4) || (i == 4))
        {

        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
          else
          {

          }
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 3) || (i == 3))
        {
          if ((i < 1) || (i == 1))
          {
            if ((i < 0) || (i == 0))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        i = i + 1;
        if ((i < 4) || (i == 4))
        {

        }
        else
        {
          if ((i < 5) || (i == 5))
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
          else
          {

          }
        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        j = j + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 choice) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       (<= D0p (+ 0 (* 1 1 choice) (* 1 1 text)))
       (or true (= D0p 0))
       (<= D1p 0)
       a!3)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and (or true (= D0 0)) a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    (- 4))  (define-fun D0 () Int    7)  (define-fun choice () Int    14)  (define-fun text () Int    2)  (define-fun D0p () Int    1)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `116.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1141-transparentAmortize-60s-mostPrecise/stac-raw-0131-1141-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m58.016s
user	6m8.493s
sys	0m5.768s

2023-01-31 11:43:52,049 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 11:43:52,050 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:46:58,105 INFO     Done. Execution time: 186.05522060394287 seconds
2023-01-31 11:46:58,105 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz8832279213516193943/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8832279213516193943/bin -o /tmp/qfuzz8832279213516193943/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8832279213516193943/bin
Found file /tmp/qfuzz8832279213516193943/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz8832279213516193943/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8832279213516193943/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8832279213516193943/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8832279213516193943/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8832279213516193943/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 131634 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 27.00; [35.00,115.00,475.00,575.00,602.00,855.00,1015.00]
2; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 7; 20.00; [35.00,275.00,355.00,522.00,575.00,955.00,975.00]
3; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 7; 13.00; [115.00,475.00,575.00,675.00,842.00,855.00,1015.00]
5; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 7; 33.00; [35.00,155.00,315.00,415.00,522.00,555.00,855.00]
7; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 7; 60.00; [95.00,162.00,375.00,535.00,615.00,835.00,895.00]
9; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 80.00; [35.00,115.00,282.00,475.00,575.00,855.00,1015.00]
34; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 5; 47.00; [55.00,215.00,595.00,835.00,882.00]
43; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 7; 80.00; [35.00,115.00,475.00,602.00,695.00,855.00,1015.00]
66; /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 7; 113.00; [35.00,315.00,475.00,602.00,715.00,835.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 41, 50, 15, 23, 1, 19, 35, 37, 1, 33, 46, 5, 41, 2, 15, 23, 1, 5, 35, 37, 1, 15, 46, 29, 41, 29, 37, 34, 33, 18, 46, 34, 1, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 34, 1, 1, 20, 1, 7, 30, 5, 48, 42, 1, 36, 32, 28, 14, 46, 34, 40, 34, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 10, 29, 2, 41, 41, 41, 10, 29, 2, 41, 41, 41, 10, 41, 41, 36, 6, 3, 34, 12, 7, 22, 41, 41, 36, 11, 41, 41, 41, 5, 40, 25, 41, 41, 41, 35, 41, 41, 10, 11, 11, 47, 6, 48, 50, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 5, 50, 42, 23, 28, 1, 23, 4, 7, 7, 29, 5, 48, 25, 41, 36, 32, 28, 14, 46, 19, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 44, 26, 30, 4, 18, 41, 29, 46, 14, 30, 4, 18, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 1, 7, 15, 27, 42, 20, 35, 15, 27, 42, 20, 30, 35, 5, 35, 35, 19, 35, 35, 35, 35, 35, 35, 35, 16, 11, 10, 42, 50, 41, 39, 17, 45, 44, 44, 44, 44, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 5, 50, 42, 23, 28, 33, 5, 48, 8, 41, 36, 24, 3, 25, 20, 7, 30, 29, 5, 48, 27, 41, 36, 24, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 48, 1, 47, 13, 28, 17, 41, 5, 2, 25, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8832279213516193943/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_114657_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,41,50,15,23,1,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,34,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,10,29,2,41,41,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,44,26,30,4,18,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,1,7,15,27,42,20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,5,50,42,23,28,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,48,1,47,13,28,17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:46:58,106 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 11:46:58,106 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 11:47:09,863 INFO     Done. Execution time: 11.756820440292358 seconds
2023-01-31 11:47:09,863 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_114657_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_114657_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,41,50,15,23,1,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,34,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,10,29,2,41,41,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,5,50,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,44,26,30,4,18,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,1,7,15,27,42,20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,5,50,42,23,28,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,48,1,47,13,28,17])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,41,50,15,23,1,19]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,34,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [43,10,29,2,41,41,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [13,5,50,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,44,26,30,4,18,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [25,1,7,15,27,42,20]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [41,5,50,42,23,28,33]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [25,48,1,47,13,28,17]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text           |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [29,41,50,15,23,1,19]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [29,41,50,15,23,1,19]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [29,41,50,15,23,1,19]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [29,41,50,15,23,1,19]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [29,41,50,15,23,1,19]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [29,41,50,15,23,1,19]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [29,41,50,15,23,1,19]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     29  |  0  |    0  |  [29,41,50,15,23,1,19]  |
    24  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |    0  |  [29,41,50,15,23,1,19]  |
    28  |                         i = i + 1;  |         |   29  |     29  |  1  |    0  |  [29,41,50,15,23,1,19]  |
    34  |        chunk = arrayRead(text, i);  |         |   29  |     41  |  1  |    0  |  [29,41,50,15,23,1,19]  |
    37  |                     R = R + chunk;  |     41  |   70  |     41  |  1  |    0  |  [29,41,50,15,23,1,19]  |
    41  |                         i = i + 1;  |         |   70  |     41  |  2  |    0  |  [29,41,50,15,23,1,19]  |
    42  |              resetPlaceHolder_1();  |         |   70  |     41  |  2  |    0  |  [29,41,50,15,23,1,19]  |
    48  |        chunk = arrayRead(text, i);  |         |   70  |     50  |  2  |    0  |  [29,41,50,15,23,1,19]  |
    51  |                     R = R + chunk;  |     50  |  120  |     50  |  2  |    0  |  [29,41,50,15,23,1,19]  |
    55  |                         i = i + 1;  |         |  120  |     50  |  3  |    0  |  [29,41,50,15,23,1,19]  |
    56  |              resetPlaceHolder_1();  |         |  120  |     50  |  3  |    0  |  [29,41,50,15,23,1,19]  |
    62  |        chunk = arrayRead(text, i);  |         |  120  |     15  |  3  |    0  |  [29,41,50,15,23,1,19]  |
    65  |                     R = R + chunk;  |     15  |  135  |     15  |  3  |    0  |  [29,41,50,15,23,1,19]  |
    69  |                         i = i + 1;  |         |  135  |     15  |  4  |    0  |  [29,41,50,15,23,1,19]  |
    70  |              resetPlaceHolder_1();  |         |  135  |     15  |  4  |    0  |  [29,41,50,15,23,1,19]  |
    76  |        chunk = arrayRead(text, i);  |         |  135  |     23  |  4  |    0  |  [29,41,50,15,23,1,19]  |
    79  |                     R = R + chunk;  |     23  |  158  |     23  |  4  |    0  |  [29,41,50,15,23,1,19]  |
    83  |                         i = i + 1;  |         |  158  |     23  |  5  |    0  |  [29,41,50,15,23,1,19]  |
    84  |              resetPlaceHolder_1();  |         |  158  |     23  |  5  |    0  |  [29,41,50,15,23,1,19]  |
    90  |        chunk = arrayRead(text, i);  |         |  158  |      1  |  5  |    0  |  [29,41,50,15,23,1,19]  |
    93  |                     R = R + chunk;  |      1  |  159  |      1  |  5  |    0  |  [29,41,50,15,23,1,19]  |
    97  |                         i = i + 1;  |         |  159  |      1  |  6  |    0  |  [29,41,50,15,23,1,19]  |
    98  |              resetPlaceHolder_1();  |         |  159  |      1  |  6  |    0  |  [29,41,50,15,23,1,19]  |
   104  |        chunk = arrayRead(text, i);  |         |  159  |     19  |  6  |    0  |  [29,41,50,15,23,1,19]  |
   107  |                     R = R + chunk;  |     19  |  178  |     19  |  6  |    0  |  [29,41,50,15,23,1,19]  |
   111  |                         i = i + 1;  |         |  178  |     19  |  7  |    0  |  [29,41,50,15,23,1,19]  |
   112  |              resetPlaceHolder_1();  |         |  178  |     19  |  7  |    0  |  [29,41,50,15,23,1,19]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,65,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,51,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,65,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,51,65,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24,37,51,65,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {24,51,65,79,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24,37,51,65,79,93,107}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     29  |                         0  |
    37  |         R = R + chunk;  |     41  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     50  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     15  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     23  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |      1  |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |     19  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 11:47:09,863 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:47:17,341 INFO     Done. Execution time: 7.477851152420044 seconds
2023-01-31 11:47:17,342 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1147-transparentAmortize-60s-mostPrecise/stac-raw-0131-1147-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.470s
user	0m16.126s
sys	0m2.142s

2023-01-31 11:47:17,342 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:47:17,342 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:50:23,315 INFO     Done. Execution time: 185.97302103042603 seconds
2023-01-31 11:50:23,315 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz1286699554965393853/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1286699554965393853/bin -o /tmp/qfuzz1286699554965393853/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1286699554965393853/bin
Found file /tmp/qfuzz1286699554965393853/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz1286699554965393853/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1286699554965393853/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1286699554965393853/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1286699554965393853/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz1286699554965393853/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 124725 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (11 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 8; 7.00; [28.00,35.00,115.00,475.00,575.00,604.00,855.00,1015.00]
2; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 13.00; [15.00,28.00,924.00]
3; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 8; 7.00; [28.00,35.00,115.00,475.00,575.00,604.00,855.00,995.00]
4; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 8; 9.00; [28.00,155.00,164.00,235.00,275.00,575.00,755.00,1015.00]
5; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 7; 9.00; [28.00,115.00,595.00,604.00,855.00,995.00,1015.00]
6; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 8; 20.00; [28.00,95.00,435.00,495.00,575.00,604.00,755.00,775.00]
9; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta; 8; 49.00; [28.00,235.00,475.00,555.00,604.00,655.00,735.00,835.00]
12; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 6; 7.00; [28.00,35.00,275.00,284.00,315.00,835.00]
16; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 8; 60.00; [28.00,115.00,295.00,475.00,535.00,604.00,855.00,1015.00]
28; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 7; 7.00; [28.00,35.00,44.00,155.00,395.00,715.00,895.00]
82; /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta; 8; 87.00; [28.00,115.00,255.00,384.00,475.00,575.00,835.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 41, 50, 12, 23, 28, 5, 24, 30, 4, 2, 27, 15, 46, 21, 48, 21, 1, 23, 20, 30, 30, 32, 30, 30, 30, 16, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 35, 7, 19, 1, 44, 1, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 26, 14, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 1, 13, 13, 13, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 41, 11, 27, 23, 36, 32, 28, 30, 8, 28, 40, 18, 26, 36, 46, 30, 9, 37, 1, 26, 30, 41, 41, 18, 24, 48, 46, 48, 32, 34, 20, 5, 16, 26, 7, 46, 46, 30, 21, 1, 43, 26, 30, 34, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 4, 38, 21, 28, 37, 24, 19, 29, 35, 7, 34, 21, 28, 37, 24, 19, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 42, 50, 42, 49, 29, 5, 48, 27, 41, 7, 38, 30, 31, 11, 31, 31, 4, 48, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 7, 50, 13, 28, 37, 11, 4, 42, 22, 7, 34, 13, 28, 37, 10, 30, 23, 36, 2, 5, 34, 44, 28, 37, 28, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 30, 42, 26, 29, 5, 36, 32, 28, 14, 46, 34, 25, 48, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 49, 42, 23, 28, 1, 13, 43, 7, 7, 29, 5, 48, 1, 41, 36, 32, 28, 14, 32, 26, 40, 20, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1286699554965393853/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_115023_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,41,50,12,23,28,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,35,7,19,1,44,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,26,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,1,13,13,13,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,41,11,27,23,36,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,4,38,21,28,37,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,42,50,42,49,29,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,7,50,13,28,37,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,49,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:50:23,316 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:50:23,316 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 11:50:35,591 INFO     Done. Execution time: 12.275388956069946 seconds
2023-01-31 11:50:35,592 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_115023_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_115023_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,41,50,12,23,28,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,35,7,19,1,44,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,26,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([13,1,13,13,13,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,41,11,27,23,36,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,4,38,21,28,37,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,42,50,42,49,29,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,49,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,7,50,13,28,37,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [18,41,50,12,23,28,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,35,7,19,1,44,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,26,14]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [13,1,13,13,13,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,41,11,27,23,36,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,4,38,21,28,37,24]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,42,50,42,49,29,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [7,7,50,13,28,37,11]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,49,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |    []  |
    10  |     return;  |         |  0  |    []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [18,41,50,12,23,28,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [18,41,50,12,23,28,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [18,41,50,12,23,28,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [18,41,50,12,23,28,5]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [18,41,50,12,23,28,5]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [18,41,50,12,23,28,5]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |     18  |  0  |  [18,41,50,12,23,28,5]  |
    25  |                     R = R + chunk;  |     18  |   18  |     18  |  0  |  [18,41,50,12,23,28,5]  |
    28  |                         R = R + 1;  |      1  |   19  |     18  |  0  |  [18,41,50,12,23,28,5]  |
    32  |                         i = i + 1;  |         |   19  |     18  |  1  |  [18,41,50,12,23,28,5]  |
    33  |              resetPlaceHolder_1();  |         |   19  |     18  |  1  |  [18,41,50,12,23,28,5]  |
    39  |        chunk = arrayRead(text, i);  |         |   19  |     41  |  1  |  [18,41,50,12,23,28,5]  |
    42  |                     R = R + chunk;  |     41  |   60  |     41  |  1  |  [18,41,50,12,23,28,5]  |
    45  |                         R = R + 1;  |      1  |   61  |     41  |  1  |  [18,41,50,12,23,28,5]  |
    49  |                         i = i + 1;  |         |   61  |     41  |  2  |  [18,41,50,12,23,28,5]  |
    50  |              resetPlaceHolder_1();  |         |   61  |     41  |  2  |  [18,41,50,12,23,28,5]  |
    56  |        chunk = arrayRead(text, i);  |         |   61  |     50  |  2  |  [18,41,50,12,23,28,5]  |
    59  |                     R = R + chunk;  |     50  |  111  |     50  |  2  |  [18,41,50,12,23,28,5]  |
    62  |                         R = R + 1;  |      1  |  112  |     50  |  2  |  [18,41,50,12,23,28,5]  |
    66  |                         i = i + 1;  |         |  112  |     50  |  3  |  [18,41,50,12,23,28,5]  |
    67  |              resetPlaceHolder_1();  |         |  112  |     50  |  3  |  [18,41,50,12,23,28,5]  |
    73  |        chunk = arrayRead(text, i);  |         |  112  |     12  |  3  |  [18,41,50,12,23,28,5]  |
    76  |                     R = R + chunk;  |     12  |  124  |     12  |  3  |  [18,41,50,12,23,28,5]  |
    79  |                         R = R + 1;  |      1  |  125  |     12  |  3  |  [18,41,50,12,23,28,5]  |
    83  |                         i = i + 1;  |         |  125  |     12  |  4  |  [18,41,50,12,23,28,5]  |
    84  |              resetPlaceHolder_1();  |         |  125  |     12  |  4  |  [18,41,50,12,23,28,5]  |
    90  |        chunk = arrayRead(text, i);  |         |  125  |     23  |  4  |  [18,41,50,12,23,28,5]  |
    93  |                     R = R + chunk;  |     23  |  148  |     23  |  4  |  [18,41,50,12,23,28,5]  |
    96  |                         R = R + 1;  |      1  |  149  |     23  |  4  |  [18,41,50,12,23,28,5]  |
   100  |                         i = i + 1;  |         |  149  |     23  |  5  |  [18,41,50,12,23,28,5]  |
   101  |              resetPlaceHolder_1();  |         |  149  |     23  |  5  |  [18,41,50,12,23,28,5]  |
   107  |        chunk = arrayRead(text, i);  |         |  149  |     28  |  5  |  [18,41,50,12,23,28,5]  |
   110  |                     R = R + chunk;  |     28  |  177  |     28  |  5  |  [18,41,50,12,23,28,5]  |
   113  |                         R = R + 1;  |      1  |  178  |     28  |  5  |  [18,41,50,12,23,28,5]  |
   117  |                         i = i + 1;  |         |  178  |     28  |  6  |  [18,41,50,12,23,28,5]  |
   118  |              resetPlaceHolder_1();  |         |  178  |     28  |  6  |  [18,41,50,12,23,28,5]  |
   124  |        chunk = arrayRead(text, i);  |         |  178  |      5  |  6  |  [18,41,50,12,23,28,5]  |
   127  |                     R = R + chunk;  |      5  |  183  |      5  |  6  |  [18,41,50,12,23,28,5]  |
   130  |                         R = R + 1;  |      1  |  184  |      5  |  6  |  [18,41,50,12,23,28,5]  |
   134  |                         i = i + 1;  |         |  184  |      5  |  7  |  [18,41,50,12,23,28,5]  |
   135  |              resetPlaceHolder_1();  |         |  184  |      5  |  7  |  [18,41,50,12,23,28,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |     18  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     41  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     50  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     12  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     23  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     28  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |      5  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,76,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,76,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,76,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,76,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,59,76,93,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {42,59,76,93,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [42, 25, 110, 93, 59, 76, 127]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25,42,59,76,93,110,127}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |     18  |                            |                         0  |
    28  |             R = R + 1;  |      1  |                         0  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |
    42  |         R = R + chunk;  |     41  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |
    59  |         R = R + chunk;  |     50  |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     12  |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     23  |                            |                         0  |
    96  |             R = R + 1;  |      1  |                         4  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |
   110  |         R = R + chunk;  |     28  |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
   127  |         R = R + chunk;  |      5  |                            |                         0  |
   130  |             R = R + 1;  |      1  |                         6  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 11:50:35,592 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:50:48,204 INFO     Done. Execution time: 12.612167835235596 seconds
2023-01-31 11:50:48,205 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + text)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `10.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1150-transparentAmortize-60s-mostPrecise/stac-raw-0131-1150-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.605s
user	0m34.285s
sys	0m4.226s

2023-01-31 11:50:48,205 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:50:48,205 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:53:54,214 INFO     Done. Execution time: 186.00919818878174 seconds
2023-01-31 11:53:54,215 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz7686097598614695645/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7686097598614695645/bin -o /tmp/qfuzz7686097598614695645/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7686097598614695645/bin
Found file /tmp/qfuzz7686097598614695645/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz7686097598614695645/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7686097598614695645/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7686097598614695645/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7686097598614695645/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz7686097598614695645/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 30, exec speed = 134383 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m30 to 30 bits (average: 30.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (10 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #5 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 29.00; [35.00,115.00,475.00,575.00,604.00,855.00,1015.00]
2; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 69.00; [15.00,84.00]
5; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 2; 349.00; [15.00,364.00]
6; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 7; 51.00; [104.00,155.00,555.00,675.00,815.00,895.00,995.00]
8; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta; 7; 80.00; [115.00,455.00,575.00,655.00,784.00,875.00,955.00]
16; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 6; 29.00; [115.00,475.00,575.00,604.00,855.00,1015.00]
19; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 29.00; [35.00,115.00,475.00,575.00,604.00,755.00,855.00]
37; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 29.00; [15.00,44.00,315.00,515.00]
42; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta; 7; 91.00; [115.00,275.00,475.00,604.00,695.00,855.00,1015.00]
128; /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000009,src:000003+000008,op:splice,rep:2,+delta; 7; 100.00; [104.00,275.00,555.00,695.00,795.00,895.00,995.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000009,src:000003+000008,op:splice,rep:2,+delta
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000009,src:000003+000008,op:splice,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 49, 27, 44, 39, 34, 13, 28, 36, 28, 1, 23, 20, 41, 35, 29, 47, 37, 36, 1, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 34, 13, 28, 37, 28, 1, 23, 20, 41, 35, 29, 47, 37, 36, 1, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 37, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 42, 41, 2, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 23, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 36, 32, 28, 14, 46, 50, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 5, 22, 32, 43, 28, 47, 25, 12, 1, 6, 17, 1, 1, 18, 47, 36, 41, 12, 7, 6, 2, 7, 23, 24, 50, 32, 37, 14, 40, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 49, 27, 33, 7, 44, 40, 27, 1, 31, 41, 7, 7, 29, 1, 23, 17, 7, 7, 41, 23, 7, 21, 47, 23, 23, 49, 5, 23, 23, 23, 9, 45, 23, 23, 17, 41, 35, 34, 19, 17, 42, 18, 27, 45, 9, 31, 41, 7, 7, 29, 17, 22, 32, 28, 17, 6, 26, 25, 2, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7686097598614695645/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_115354_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,49,27,44,39,34,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,34,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,37,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,23,50,42,23,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,5,22,32,43,28,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,49,27,33,7,44,40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:53:54,215 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:53:54,215 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 11:54:06,056 INFO     Done. Execution time: 11.841211080551147 seconds
2023-01-31 11:54:06,056 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_115354_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_115354_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,49,27,44,39,34,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,34,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,37,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,23,50,42,23,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,5,22,32,43,28,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,49,27,33,7,44,40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 10 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,49,27,44,39,34,13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,34,13]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,37,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,23,50,42,23,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [38,5,22,32,43,28,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [4,49,27,33,7,44,40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  text  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [17]  |
    10  |     return;  |         |  0  |  [17]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text           |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [4,49,27,44,39,34,13]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [4,49,27,44,39,34,13]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [4,49,27,44,39,34,13]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [4,49,27,44,39,34,13]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [4,49,27,44,39,34,13]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [4,49,27,44,39,34,13]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |      4  |  0  |  [4,49,27,44,39,34,13]  |
    25  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  [4,49,27,44,39,34,13]  |
    29  |                         i = i + 1;  |         |    4  |      4  |  1  |  [4,49,27,44,39,34,13]  |
    30  |              resetPlaceHolder_1();  |         |    4  |      4  |  1  |  [4,49,27,44,39,34,13]  |
    36  |        chunk = arrayRead(text, i);  |         |    4  |     49  |  1  |  [4,49,27,44,39,34,13]  |
    39  |                     R = R + chunk;  |     49  |   53  |     49  |  1  |  [4,49,27,44,39,34,13]  |
    43  |                         i = i + 1;  |         |   53  |     49  |  2  |  [4,49,27,44,39,34,13]  |
    44  |              resetPlaceHolder_1();  |         |   53  |     49  |  2  |  [4,49,27,44,39,34,13]  |
    50  |        chunk = arrayRead(text, i);  |         |   53  |     27  |  2  |  [4,49,27,44,39,34,13]  |
    53  |                     R = R + chunk;  |     27  |   80  |     27  |  2  |  [4,49,27,44,39,34,13]  |
    57  |                         i = i + 1;  |         |   80  |     27  |  3  |  [4,49,27,44,39,34,13]  |
    58  |              resetPlaceHolder_1();  |         |   80  |     27  |  3  |  [4,49,27,44,39,34,13]  |
    64  |        chunk = arrayRead(text, i);  |         |   80  |     44  |  3  |  [4,49,27,44,39,34,13]  |
    67  |                     R = R + chunk;  |     44  |  124  |     44  |  3  |  [4,49,27,44,39,34,13]  |
    71  |                         i = i + 1;  |         |  124  |     44  |  4  |  [4,49,27,44,39,34,13]  |
    72  |              resetPlaceHolder_1();  |         |  124  |     44  |  4  |  [4,49,27,44,39,34,13]  |
    78  |        chunk = arrayRead(text, i);  |         |  124  |     39  |  4  |  [4,49,27,44,39,34,13]  |
    81  |                     R = R + chunk;  |     39  |  163  |     39  |  4  |  [4,49,27,44,39,34,13]  |
    85  |                         i = i + 1;  |         |  163  |     39  |  5  |  [4,49,27,44,39,34,13]  |
    86  |              resetPlaceHolder_1();  |         |  163  |     39  |  5  |  [4,49,27,44,39,34,13]  |
    92  |        chunk = arrayRead(text, i);  |         |  163  |     34  |  5  |  [4,49,27,44,39,34,13]  |
    95  |                     R = R + chunk;  |     34  |  197  |     34  |  5  |  [4,49,27,44,39,34,13]  |
    99  |                         i = i + 1;  |         |  197  |     34  |  6  |  [4,49,27,44,39,34,13]  |
   100  |              resetPlaceHolder_1();  |         |  197  |     34  |  6  |  [4,49,27,44,39,34,13]  |
   106  |        chunk = arrayRead(text, i);  |         |  197  |     13  |  6  |  [4,49,27,44,39,34,13]  |
   109  |                     R = R + chunk;  |     13  |  210  |     13  |  6  |  [4,49,27,44,39,34,13]  |
   113  |                         i = i + 1;  |         |  210  |     13  |  7  |  [4,49,27,44,39,34,13]  |
   114  |              resetPlaceHolder_1();  |         |  210  |     13  |  7  |  [4,49,27,44,39,34,13]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,67,81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,53,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25,39,53,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {25,53,67,81,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25,39,53,67,81,95,109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |      4  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     49  |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     27  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     44  |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     39  |                         0  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     34  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     13  |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 11:54:06,057 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:54:13,604 INFO     Done. Execution time: 7.547623872756958 seconds
2023-01-31 11:54:13,605 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1154-transparentAmortize-60s-mostPrecise/stac-raw-0131-1154-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.540s
user	0m16.591s
sys	0m2.350s

2023-01-31 11:54:13,605 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 11:54:13,605 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 11:57:19,620 INFO     Done. Execution time: 186.01476526260376 seconds
2023-01-31 11:57:19,620 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz4586883524031813536/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4586883524031813536/bin -o /tmp/qfuzz4586883524031813536/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4586883524031813536/bin
Found file /tmp/qfuzz4586883524031813536/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz4586883524031813536/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4586883524031813536/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4586883524031813536/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4586883524031813536/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4586883524031813536/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 126080 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,591.00]
2; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 2.00; [29.00,31.00,34.00]
3; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,611.00]
5; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,591.00]
7; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,411.00]
9; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 3; 5.00; [29.00,34.00,891.00]
15; /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,831.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 12, 29, 32, 15, 13, 50, 23, 19, 8, 8, 8, 8, 8, 8, 2, 14, 9, 13, 7, 39, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 19, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 37, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 30, 28, 14, 46, 20, 8, 7, 46, 13, 28, 37, 24, 30, 4, 2, 27, 47, 49, 21, 43, 35, 34, 9, 17, 36, 6, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 21, 37, 7, 2, 46, 35, 15, 30, 9, 12, 9, 9, 41, 9, 8, 9, 17, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 5, 16, 41, 43, 10, 3, 40, 1, 46, 20, 22, 30, 5, 21, 23, 46, 30, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4586883524031813536/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_115719_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 20, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 30, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 11:57:19,621 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 11:57:19,621 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 11:57:26,293 INFO     Done. Execution time: 6.67234468460083 seconds
2023-01-31 11:57:26,293 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_115719_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_115719_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(20, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(30, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 41
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 44
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 20
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 29
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 30
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 1
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 29
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   41  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   41  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   41  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   41  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   41  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   41  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   41  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   41  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       42  |  1  |   41  |      2  |
    41  |                       R = R + sep;  |     41  |  42  |       42  |  1  |   41  |      2  |
    45  |             builder = builder + 1;  |         |  42  |       43  |  1  |   41  |      2  |
    48  |                         R = R + 1;  |      1  |  43  |       43  |  1  |   41  |      2  |
    52  |                         i = i + 1;  |         |  43  |       43  |  2  |   41  |      2  |
    53  |              resetPlaceHolder_1();  |         |  43  |       43  |  2  |   41  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     41  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     41  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 11:57:26,294 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 11:57:40,895 INFO     Done. Execution time: 14.601040124893188 seconds
2023-01-31 11:57:40,895 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1157-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1157-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.594s
user	0m38.210s
sys	0m5.702s

2023-01-31 11:57:40,895 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 11:57:40,895 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:00:47,224 INFO     Done. Execution time: 186.3289511203766 seconds
2023-01-31 12:00:47,225 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz3582122453819628987/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3582122453819628987/bin -o /tmp/qfuzz3582122453819628987/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3582122453819628987/bin
Found file /tmp/qfuzz3582122453819628987/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz3582122453819628987/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3582122453819628987/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3582122453819628987/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3582122453819628987/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3582122453819628987/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 125303 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 1, 28, 44, 44, 6, 17, 44, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3582122453819628987/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_120046_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:00:47,225 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 12:00:47,225 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 12:00:53,703 INFO     Done. Execution time: 6.47786808013916 seconds
2023-01-31 12:00:53,703 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_120046_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_120046_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 12:00:53,704 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:01:01,262 INFO     Done. Execution time: 7.558599948883057 seconds
2023-01-31 12:01:01,263 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1200-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1200-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.551s
user	0m16.005s
sys	0m2.155s

2023-01-31 12:01:01,263 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 12:01:01,263 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:04:07,668 INFO     Done. Execution time: 186.40435314178467 seconds
2023-01-31 12:04:07,668 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz5272309821789412443/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5272309821789412443/bin -o /tmp/qfuzz5272309821789412443/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5272309821789412443/bin
Found file /tmp/qfuzz5272309821789412443/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz5272309821789412443/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5272309821789412443/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5272309821789412443/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5272309821789412443/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz5272309821789412443/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 142861 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m142k to 142k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
5; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
11; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
12; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
18; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
19; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
21; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
22; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
29; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
31; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
34; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
36; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
39; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
42; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
45; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
47; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
49; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
51; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
53; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128; 3; 8.00; [30.00,38.00,66.00]
55; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
57; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
63; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
64; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
66; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
68; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
72; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
74; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
77; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
82; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
88; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
91; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
94; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:16; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
100; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
104; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
116; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
119; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
123; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
131; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:32; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
136; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
142; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000054,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
144; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000055,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
152; /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000056,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000056,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000055,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000054,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:2
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:2
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000056,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000055,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 42, 50, 42, 23, 28, 1, 23, 20, 28, 25, 45, 28, 1, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 34, 21, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000054,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 28, 37, 24, 1, 23, 20, 7, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000053,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 32, 24, 8, 8, 23, 36, 22, 42, 34, 35, 8, 8, 8, 8, 4, 34, 28, 14, 30, 17, 26, 28, 8, 13, 4, 29, 10, 34, 14, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000052,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 42, 2, 19, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000051,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000050,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 8, 35, 35, 41, 35, 35, 35, 35, 34, 36, 36, 36, 36, 36, 36, 36, 36, 16, 36, 29, 1, 44, 36, 42, 13, 28, 14, 8, 37, 11, 22, 33, 49, 25, 11, 21, 1, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000049,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 40, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 20, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000048,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000047,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 32, 30, 16, 35, 21, 41, 35, 39, 28, 1, 8, 29, 3, 8, 35, 34, 9, 49, 3, 36, 32, 12, 14, 46, 50, 25, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000046,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 47, 1, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000045,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000044,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 46, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000043,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 8, 50, 48, 46, 8, 45, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000042,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 2, 1, 30, 23, 28, 41, 7, 29, 5, 48, 27, 41, 17, 1, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000041,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 49, 7, 49, 7, 7, 7, 7, 7, 7, 7, 21, 7, 9, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 11, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000040,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 26, 7, 29, 5, 1, 19, 19, 19, 31, 47, 19, 19, 19, 19, 19, 23, 19, 15, 14, 21, 42, 2, 30, 47, 23, 28, 28, 14, 9, 29, 2, 12, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000039,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 29, 29, 29, 29, 29, 29, 29, 17, 34, 29, 28, 41, 24, 30, 4, 2, 27, 15, 46, 13, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 43, 32, 28, 26, 30, 34, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 13, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 48, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 3, 5, 48, 27, 22, 36, 32, 28, 14, 34, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 3, 42, 23, 28, 1, 23, 30, 4, 2, 4, 40, 9, 15, 46, 21, 41, 36, 21, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 32, 50, 42, 23, 12, 48, 20, 50, 42, 23, 28, 48, 27, 41, 14, 32, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 1, 50, 42, 36, 32, 32, 14, 46, 24, 19, 1, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 36, 32, 9, 37, 3, 3, 15, 1, 34, 41, 4, 44, 19, 34, 13, 28, 26, 34, 34, 34, 34, 34, 34, 34, 27, 13, 14, 2, 17, 36, 4, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 5, 2, 2, 19, 31, 41, 19, 30, 1, 27, 26, 25, 43, 1, 24, 43, 1, 25, 10, 41, 25, 35, 41, 41, 41, 37, 13, 26, 26, 19, 16, 36, 1, 46, 38, 46, 18, 39, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 49, 42, 37, 24, 21, 41, 35, 34, 7, 7, 7, 7, 7, 7, 7, 9, 34, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 34, 40, 34, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 5, 50, 42, 35, 46, 1, 23, 2, 18, 21, 29, 49, 20, 27, 23, 9, 48, 32, 40, 20, 1, 4, 9, 4, 15, 23, 2, 18, 33, 29, 49, 20, 27, 37, 9, 48, 32, 40, 20, 1, 5, 18, 21, 7, 1, 3, 3, 26, 3, 21, 3, 23, 23, 18, 33, 3, 23, 3, 3, 12, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 25, 10, 15, 16, 28, 15, 18, 29, 24, 11, 3, 1, 18, 43, 31, 35, 50, 2, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 44, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 12, 38, 28, 14, 17, 34, 40, 36, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 47, 50, 42, 23, 28, 1, 23, 21, 15, 46, 36, 45, 35, 34, 7, 17, 36, 4, 24, 30, 4, 2, 27, 15, 46, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 18, 20, 50, 20, 21, 34, 34, 49, 34, 8, 21, 2, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 3, 38, 1, 23, 32, 10, 1, 23, 32, 7, 26, 29, 5, 17, 26, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 12, 50, 50, 48, 48, 41, 38, 3, 30, 29, 15, 48, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 17, 42, 49, 13, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 16, 27, 14, 46, 16, 16, 34, 2, 27, 15, 46, 21, 29, 5, 15, 27, 41, 10, 32, 3, 1, 46, 16, 16, 34, 2, 27, 15, 46, 21, 41, 35, 34, 9, 17, 7, 20, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 37, 44, 7, 44, 2, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 17, 35, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 5, 5, 5, 5, 5, 5, 10, 7, 7, 29, 5, 48, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 30, 42, 10, 2, 1, 8, 47, 32, 22, 15, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 41, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 41, 36, 32, 28, 14, 30, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 15, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 8, 28, 43, 44, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 2, 18, 21, 17, 23, 10, 49, 7, 49, 7, 9, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 27, 28, 1, 23, 20, 30, 4, 4, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 27, 17, 22, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 47, 34, 49, 23, 35, 35, 35, 50, 7, 2, 5, 5, 7, 29, 6, 28, 3, 21, 7, 3, 29, 1, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 1, 27, 13, 13, 29, 45, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5272309821789412443/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_120407_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [2]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,42,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,28,37,24,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,32,24,8,8,23,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,42,2,19,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,8,35,35,41,35,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,32,30,16,35,21,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,47,1,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,5,1,1,1,1,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,46,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,8,50,48,46,8,45]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,2,1,30,23,28,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,49,7,49,7,7,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,26,7,29,5,1,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,29,29,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,43,32,28,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,13,21]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,48,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,3,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,32,50,42,23,12,48]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,1,50,42,36,32,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,36,32,9]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,5,2,2,19,31,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,49,42,37,24,21,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,5,50,42,35,46,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,25,10,15,16,28,15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,44,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,4,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,47,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,18,20,50,20,21,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,3,38,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,12,50,50,48,48,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,17,42,49,13,2]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,16,27,14,46,16,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,37,44,7,44,2,44]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,5,5,5,5,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,30,42,10,2,1,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,41,3,3,3]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,15,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,2,18,21,17,23,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,27,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,27,17,22,27]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,47,34,49,23,35,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [31,1,27,13,13,29,45]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:04:07,668 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 12:04:07,668 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 12:04:21,165 INFO     Done. Execution time: 13.497124195098877 seconds
2023-01-31 12:04:21,166 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_120407_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_120407_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([2])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 57 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,42,50,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,28,37,24,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,32,24,8,8,23,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,42,2,19,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,8,35,35,41,35,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 57 (14.04%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,32,30,16,35,21,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,47,1,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,5,1,1,1,1,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,46,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,8,50,48,46,8,45])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,2,1,30,23,28,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,49,7,49,7,7,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,26,7,29,5,1,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 57 (28.07%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,29,29,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,13,21])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,48,50,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,3,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,43,32,28,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,32,50,42,23,12,48])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,1,50,42,36,32,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,36,32,9])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,5,2,2,19,31,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,49,42,37,24,21,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,5,50,42,35,46,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,25,10,15,16,28,15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,44,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,4,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,47,50,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,18,20,50,20,21,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,3,38,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,12,50,50,48,48,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,17,42,49,13,2])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,16,27,14,46,16,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,37,44,7,44,2,44])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,5,5,5,5,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 45 / 57 (78.95%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,41,3,3,3])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,30,42,10,2,1,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,15,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,2,18,21,17,23,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,27,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,27,17,22,27])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,47,34,49,23,35,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([31,1,27,13,13,29,45])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 57)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 57 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [2]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,42,50,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,28,37,24,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [43,32,24,8,8,23,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [36,42,2,19,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,8,35,35,41,35,35]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,23,28,40]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [34,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [48,32,30,16,35,21,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,47,1,22]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [48,5,1,1,1,1,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,46,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [16,8,50,48,46,8,45]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,2,1,30,23,28,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,49,7,49,7,7,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,26,7,29,5,1,19]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,29,29,29]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,43,32,28,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [26,13,21]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,48,50,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,3,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [10,32,50,42,23,12,48]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,1,50,42,36,32,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,36,32,9]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [11,5,2,2,19,31,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,49,42,37,24,21,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [45,5,50,42,35,46,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [43,25,10,15,16,28,15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,44,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,4,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,47,50,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [3,18,20,50,20,21,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,3,38,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [28,12,50,50,48,48,41]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [30,17,42,49,13,2]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [31,16,27,14,46,16,16]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [16,37,44,7,44,2,44]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,5,5,5,5,5]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,30,42,10,2,1,8]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,41,3,3,3]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,15,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,2,18,21,17,23,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,27,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [25,27,17,22,27]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,47,34,49,23,35,35]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [31,1,27,13,13,29,45]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |     [2]  |
    10  |     return;  |         |  0  |     [2]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 46 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 2518):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [29,42,50,42,23,28,1]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [29,42,50,42,23,28,1]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [29,42,50,42,23,28,1]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [29,42,50,42,23,28,1]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [29,42,50,42,23,28,1]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [29,42,50,42,23,28,1]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |     29  |  0  |      |  [29,42,50,42,23,28,1]  |
    24  |                         int j = 0;  |         |    0  |     29  |  0  |   0  |  [29,42,50,42,23,28,1]  |
    30  |                         R = R + 2;  |      2  |    2  |     29  |  0  |   0  |  [29,42,50,42,23,28,1]  |
    34  |                         j = j + 1;  |         |    2  |     29  |  0  |   1  |  [29,42,50,42,23,28,1]  |
    35  |              resetPlaceHolder_2();  |         |    2  |     29  |  0  |   1  |  [29,42,50,42,23,28,1]  |
    41  |                         R = R + 2;  |      2  |    4  |     29  |  0  |   1  |  [29,42,50,42,23,28,1]  |
    45  |                         j = j + 1;  |         |    4  |     29  |  0  |   2  |  [29,42,50,42,23,28,1]  |
    46  |              resetPlaceHolder_2();  |         |    4  |     29  |  0  |   2  |  [29,42,50,42,23,28,1]  |
    52  |                         R = R + 2;  |      2  |    6  |     29  |  0  |   2  |  [29,42,50,42,23,28,1]  |
    56  |                         j = j + 1;  |         |    6  |     29  |  0  |   3  |  [29,42,50,42,23,28,1]  |
    57  |              resetPlaceHolder_2();  |         |    6  |     29  |  0  |   3  |  [29,42,50,42,23,28,1]  |
    63  |                         R = R + 2;  |      2  |    8  |     29  |  0  |   3  |  [29,42,50,42,23,28,1]  |
    67  |                         j = j + 1;  |         |    8  |     29  |  0  |   4  |  [29,42,50,42,23,28,1]  |
    68  |              resetPlaceHolder_2();  |         |    8  |     29  |  0  |   4  |  [29,42,50,42,23,28,1]  |
    74  |                         R = R + 2;  |      2  |   10  |     29  |  0  |   4  |  [29,42,50,42,23,28,1]  |
    78  |                         j = j + 1;  |         |   10  |     29  |  0  |   5  |  [29,42,50,42,23,28,1]  |
    79  |              resetPlaceHolder_2();  |         |   10  |     29  |  0  |   5  |  [29,42,50,42,23,28,1]  |
    85  |                         R = R + 2;  |      2  |   12  |     29  |  0  |   5  |  [29,42,50,42,23,28,1]  |
    89  |                         j = j + 1;  |         |   12  |     29  |  0  |   6  |  [29,42,50,42,23,28,1]  |
    90  |              resetPlaceHolder_2();  |         |   12  |     29  |  0  |   6  |  [29,42,50,42,23,28,1]  |
    96  |                         R = R + 2;  |      2  |   14  |     29  |  0  |   6  |  [29,42,50,42,23,28,1]  |
   100  |                         j = j + 1;  |         |   14  |     29  |  0  |   7  |  [29,42,50,42,23,28,1]  |
   101  |              resetPlaceHolder_2();  |         |   14  |     29  |  0  |   7  |  [29,42,50,42,23,28,1]  |
   107  |                         R = R + 2;  |      2  |   16  |     29  |  0  |   7  |  [29,42,50,42,23,28,1]  |
   111  |                         j = j + 1;  |         |   16  |     29  |  0  |   8  |  [29,42,50,42,23,28,1]  |
   112  |              resetPlaceHolder_2();  |         |   16  |     29  |  0  |   8  |  [29,42,50,42,23,28,1]  |
   118  |                         R = R + 2;  |      2  |   18  |     29  |  0  |   8  |  [29,42,50,42,23,28,1]  |
   122  |                         j = j + 1;  |         |   18  |     29  |  0  |   9  |  [29,42,50,42,23,28,1]  |
   123  |              resetPlaceHolder_2();  |         |   18  |     29  |  0  |   9  |  [29,42,50,42,23,28,1]  |
   129  |                         R = R + 2;  |      2  |   20  |     29  |  0  |   9  |  [29,42,50,42,23,28,1]  |
   133  |                         j = j + 1;  |         |   20  |     29  |  0  |  10  |  [29,42,50,42,23,28,1]  |
   134  |              resetPlaceHolder_2();  |         |   20  |     29  |  0  |  10  |  [29,42,50,42,23,28,1]  |
   140  |                         R = R + 2;  |      2  |   22  |     29  |  0  |  10  |  [29,42,50,42,23,28,1]  |
   144  |                         j = j + 1;  |         |   22  |     29  |  0  |  11  |  [29,42,50,42,23,28,1]  |
   145  |              resetPlaceHolder_2();  |         |   22  |     29  |  0  |  11  |  [29,42,50,42,23,28,1]  |
   151  |                         R = R + 2;  |      2  |   24  |     29  |  0  |  11  |  [29,42,50,42,23,28,1]  |
   155  |                         j = j + 1;  |         |   24  |     29  |  0  |  12  |  [29,42,50,42,23,28,1]  |
   156  |              resetPlaceHolder_2();  |         |   24  |     29  |  0  |  12  |  [29,42,50,42,23,28,1]  |
   162  |                         R = R + 2;  |      2  |   26  |     29  |  0  |  12  |  [29,42,50,42,23,28,1]  |
   166  |                         j = j + 1;  |         |   26  |     29  |  0  |  13  |  [29,42,50,42,23,28,1]  |
   167  |              resetPlaceHolder_2();  |         |   26  |     29  |  0  |  13  |  [29,42,50,42,23,28,1]  |
   173  |                         R = R + 2;  |      2  |   28  |     29  |  0  |  13  |  [29,42,50,42,23,28,1]  |
   177  |                         j = j + 1;  |         |   28  |     29  |  0  |  14  |  [29,42,50,42,23,28,1]  |
   178  |              resetPlaceHolder_2();  |         |   28  |     29  |  0  |  14  |  [29,42,50,42,23,28,1]  |
   184  |                         R = R + 2;  |      2  |   30  |     29  |  0  |  14  |  [29,42,50,42,23,28,1]  |
   188  |                         j = j + 1;  |         |   30  |     29  |  0  |  15  |  [29,42,50,42,23,28,1]  |
   189  |              resetPlaceHolder_2();  |         |   30  |     29  |  0  |  15  |  [29,42,50,42,23,28,1]  |
   195  |                         R = R + 2;  |      2  |   32  |     29  |  0  |  15  |  [29,42,50,42,23,28,1]  |
   199  |                         j = j + 1;  |         |   32  |     29  |  0  |  16  |  [29,42,50,42,23,28,1]  |
   200  |              resetPlaceHolder_2();  |         |   32  |     29  |  0  |  16  |  [29,42,50,42,23,28,1]  |
   206  |                         R = R + 2;  |      2  |   34  |     29  |  0  |  16  |  [29,42,50,42,23,28,1]  |
   210  |                         j = j + 1;  |         |   34  |     29  |  0  |  17  |  [29,42,50,42,23,28,1]  |
   211  |              resetPlaceHolder_2();  |         |   34  |     29  |  0  |  17  |  [29,42,50,42,23,28,1]  |
   217  |                         R = R + 2;  |      2  |   36  |     29  |  0  |  17  |  [29,42,50,42,23,28,1]  |
   221  |                         j = j + 1;  |         |   36  |     29  |  0  |  18  |  [29,42,50,42,23,28,1]  |
   222  |              resetPlaceHolder_2();  |         |   36  |     29  |  0  |  18  |  [29,42,50,42,23,28,1]  |
   228  |                         R = R + 2;  |      2  |   38  |     29  |  0  |  18  |  [29,42,50,42,23,28,1]  |
   232  |                         j = j + 1;  |         |   38  |     29  |  0  |  19  |  [29,42,50,42,23,28,1]  |
   233  |              resetPlaceHolder_2();  |         |   38  |     29  |  0  |  19  |  [29,42,50,42,23,28,1]  |
   239  |                         R = R + 2;  |      2  |   40  |     29  |  0  |  19  |  [29,42,50,42,23,28,1]  |
   243  |                         j = j + 1;  |         |   40  |     29  |  0  |  20  |  [29,42,50,42,23,28,1]  |
   244  |              resetPlaceHolder_2();  |         |   40  |     29  |  0  |  20  |  [29,42,50,42,23,28,1]  |
   250  |                         R = R + 2;  |      2  |   42  |     29  |  0  |  20  |  [29,42,50,42,23,28,1]  |
   254  |                         j = j + 1;  |         |   42  |     29  |  0  |  21  |  [29,42,50,42,23,28,1]  |
   255  |              resetPlaceHolder_2();  |         |   42  |     29  |  0  |  21  |  [29,42,50,42,23,28,1]  |
   261  |                         R = R + 2;  |      2  |   44  |     29  |  0  |  21  |  [29,42,50,42,23,28,1]  |
   265  |                         j = j + 1;  |         |   44  |     29  |  0  |  22  |  [29,42,50,42,23,28,1]  |
   266  |              resetPlaceHolder_2();  |         |   44  |     29  |  0  |  22  |  [29,42,50,42,23,28,1]  |
   272  |                         R = R + 2;  |      2  |   46  |     29  |  0  |  22  |  [29,42,50,42,23,28,1]  |
   276  |                         j = j + 1;  |         |   46  |     29  |  0  |  23  |  [29,42,50,42,23,28,1]  |
   277  |              resetPlaceHolder_2();  |         |   46  |     29  |  0  |  23  |  [29,42,50,42,23,28,1]  |
   283  |                         R = R + 2;  |      2  |   48  |     29  |  0  |  23  |  [29,42,50,42,23,28,1]  |
   287  |                         j = j + 1;  |         |   48  |     29  |  0  |  24  |  [29,42,50,42,23,28,1]  |
   288  |              resetPlaceHolder_2();  |         |   48  |     29  |  0  |  24  |  [29,42,50,42,23,28,1]  |
   294  |                         R = R + 2;  |      2  |   50  |     29  |  0  |  24  |  [29,42,50,42,23,28,1]  |
   298  |                         j = j + 1;  |         |   50  |     29  |  0  |  25  |  [29,42,50,42,23,28,1]  |
   299  |              resetPlaceHolder_2();  |         |   50  |     29  |  0  |  25  |  [29,42,50,42,23,28,1]  |
   305  |                         R = R + 2;  |      2  |   52  |     29  |  0  |  25  |  [29,42,50,42,23,28,1]  |
   309  |                         j = j + 1;  |         |   52  |     29  |  0  |  26  |  [29,42,50,42,23,28,1]  |
   310  |              resetPlaceHolder_2();  |         |   52  |     29  |  0  |  26  |  [29,42,50,42,23,28,1]  |
   316  |                         R = R + 2;  |      2  |   54  |     29  |  0  |  26  |  [29,42,50,42,23,28,1]  |
   320  |                         j = j + 1;  |         |   54  |     29  |  0  |  27  |  [29,42,50,42,23,28,1]  |
   321  |              resetPlaceHolder_2();  |         |   54  |     29  |  0  |  27  |  [29,42,50,42,23,28,1]  |
   327  |                         R = R + 2;  |      2  |   56  |     29  |  0  |  27  |  [29,42,50,42,23,28,1]  |
   331  |                         j = j + 1;  |         |   56  |     29  |  0  |  28  |  [29,42,50,42,23,28,1]  |
   332  |              resetPlaceHolder_2();  |         |   56  |     29  |  0  |  28  |  [29,42,50,42,23,28,1]  |
   338  |                         R = R + 2;  |      2  |   58  |     29  |  0  |  28  |  [29,42,50,42,23,28,1]  |
   342  |                         j = j + 1;  |         |   58  |     29  |  0  |  29  |  [29,42,50,42,23,28,1]  |
   343  |              resetPlaceHolder_2();  |         |   58  |     29  |  0  |  29  |  [29,42,50,42,23,28,1]  |
   349  |                         R = R + 1;  |      1  |   59  |     29  |  0  |  29  |  [29,42,50,42,23,28,1]  |
   353  |                         i = i + 1;  |         |   59  |     29  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   354  |              resetPlaceHolder_1();  |         |   59  |     29  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   360  |      entry = arrayRead(sorted, i);  |         |   59  |     42  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   362  |                         int j = 0;  |         |   59  |     42  |  1  |   0  |  [29,42,50,42,23,28,1]  |
   368  |                         R = R + 2;  |      2  |   61  |     42  |  1  |   0  |  [29,42,50,42,23,28,1]  |
   372  |                         j = j + 1;  |         |   61  |     42  |  1  |   1  |  [29,42,50,42,23,28,1]  |
   373  |              resetPlaceHolder_2();  |         |   61  |     42  |  1  |   1  |  [29,42,50,42,23,28,1]  |
   379  |                         R = R + 2;  |      2  |   63  |     42  |  1  |   1  |  [29,42,50,42,23,28,1]  |
   383  |                         j = j + 1;  |         |   63  |     42  |  1  |   2  |  [29,42,50,42,23,28,1]  |
   384  |              resetPlaceHolder_2();  |         |   63  |     42  |  1  |   2  |  [29,42,50,42,23,28,1]  |
   390  |                         R = R + 2;  |      2  |   65  |     42  |  1  |   2  |  [29,42,50,42,23,28,1]  |
   394  |                         j = j + 1;  |         |   65  |     42  |  1  |   3  |  [29,42,50,42,23,28,1]  |
   395  |              resetPlaceHolder_2();  |         |   65  |     42  |  1  |   3  |  [29,42,50,42,23,28,1]  |
   401  |                         R = R + 2;  |      2  |   67  |     42  |  1  |   3  |  [29,42,50,42,23,28,1]  |
   405  |                         j = j + 1;  |         |   67  |     42  |  1  |   4  |  [29,42,50,42,23,28,1]  |
   406  |              resetPlaceHolder_2();  |         |   67  |     42  |  1  |   4  |  [29,42,50,42,23,28,1]  |
   412  |                         R = R + 2;  |      2  |   69  |     42  |  1  |   4  |  [29,42,50,42,23,28,1]  |
   416  |                         j = j + 1;  |         |   69  |     42  |  1  |   5  |  [29,42,50,42,23,28,1]  |
   417  |              resetPlaceHolder_2();  |         |   69  |     42  |  1  |   5  |  [29,42,50,42,23,28,1]  |
   423  |                         R = R + 2;  |      2  |   71  |     42  |  1  |   5  |  [29,42,50,42,23,28,1]  |
   427  |                         j = j + 1;  |         |   71  |     42  |  1  |   6  |  [29,42,50,42,23,28,1]  |
   428  |              resetPlaceHolder_2();  |         |   71  |     42  |  1  |   6  |  [29,42,50,42,23,28,1]  |
   434  |                         R = R + 2;  |      2  |   73  |     42  |  1  |   6  |  [29,42,50,42,23,28,1]  |
   438  |                         j = j + 1;  |         |   73  |     42  |  1  |   7  |  [29,42,50,42,23,28,1]  |
   439  |              resetPlaceHolder_2();  |         |   73  |     42  |  1  |   7  |  [29,42,50,42,23,28,1]  |
   445  |                         R = R + 2;  |      2  |   75  |     42  |  1  |   7  |  [29,42,50,42,23,28,1]  |
   449  |                         j = j + 1;  |         |   75  |     42  |  1  |   8  |  [29,42,50,42,23,28,1]  |
   450  |              resetPlaceHolder_2();  |         |   75  |     42  |  1  |   8  |  [29,42,50,42,23,28,1]  |
   456  |                         R = R + 2;  |      2  |   77  |     42  |  1  |   8  |  [29,42,50,42,23,28,1]  |
   460  |                         j = j + 1;  |         |   77  |     42  |  1  |   9  |  [29,42,50,42,23,28,1]  |
   461  |              resetPlaceHolder_2();  |         |   77  |     42  |  1  |   9  |  [29,42,50,42,23,28,1]  |
   467  |                         R = R + 2;  |      2  |   79  |     42  |  1  |   9  |  [29,42,50,42,23,28,1]  |
   471  |                         j = j + 1;  |         |   79  |     42  |  1  |  10  |  [29,42,50,42,23,28,1]  |
   472  |              resetPlaceHolder_2();  |         |   79  |     42  |  1  |  10  |  [29,42,50,42,23,28,1]  |
   478  |                         R = R + 2;  |      2  |   81  |     42  |  1  |  10  |  [29,42,50,42,23,28,1]  |
   482  |                         j = j + 1;  |         |   81  |     42  |  1  |  11  |  [29,42,50,42,23,28,1]  |
   483  |              resetPlaceHolder_2();  |         |   81  |     42  |  1  |  11  |  [29,42,50,42,23,28,1]  |
   489  |                         R = R + 2;  |      2  |   83  |     42  |  1  |  11  |  [29,42,50,42,23,28,1]  |
   493  |                         j = j + 1;  |         |   83  |     42  |  1  |  12  |  [29,42,50,42,23,28,1]  |
   494  |              resetPlaceHolder_2();  |         |   83  |     42  |  1  |  12  |  [29,42,50,42,23,28,1]  |
   500  |                         R = R + 2;  |      2  |   85  |     42  |  1  |  12  |  [29,42,50,42,23,28,1]  |
   504  |                         j = j + 1;  |         |   85  |     42  |  1  |  13  |  [29,42,50,42,23,28,1]  |
   505  |              resetPlaceHolder_2();  |         |   85  |     42  |  1  |  13  |  [29,42,50,42,23,28,1]  |
   511  |                         R = R + 2;  |      2  |   87  |     42  |  1  |  13  |  [29,42,50,42,23,28,1]  |
   515  |                         j = j + 1;  |         |   87  |     42  |  1  |  14  |  [29,42,50,42,23,28,1]  |
   516  |              resetPlaceHolder_2();  |         |   87  |     42  |  1  |  14  |  [29,42,50,42,23,28,1]  |
   522  |                         R = R + 2;  |      2  |   89  |     42  |  1  |  14  |  [29,42,50,42,23,28,1]  |
   526  |                         j = j + 1;  |         |   89  |     42  |  1  |  15  |  [29,42,50,42,23,28,1]  |
   527  |              resetPlaceHolder_2();  |         |   89  |     42  |  1  |  15  |  [29,42,50,42,23,28,1]  |
   533  |                         R = R + 2;  |      2  |   91  |     42  |  1  |  15  |  [29,42,50,42,23,28,1]  |
   537  |                         j = j + 1;  |         |   91  |     42  |  1  |  16  |  [29,42,50,42,23,28,1]  |
   538  |              resetPlaceHolder_2();  |         |   91  |     42  |  1  |  16  |  [29,42,50,42,23,28,1]  |
   544  |                         R = R + 2;  |      2  |   93  |     42  |  1  |  16  |  [29,42,50,42,23,28,1]  |
   548  |                         j = j + 1;  |         |   93  |     42  |  1  |  17  |  [29,42,50,42,23,28,1]  |
   549  |              resetPlaceHolder_2();  |         |   93  |     42  |  1  |  17  |  [29,42,50,42,23,28,1]  |
   555  |                         R = R + 2;  |      2  |   95  |     42  |  1  |  17  |  [29,42,50,42,23,28,1]  |
   559  |                         j = j + 1;  |         |   95  |     42  |  1  |  18  |  [29,42,50,42,23,28,1]  |
   560  |              resetPlaceHolder_2();  |         |   95  |     42  |  1  |  18  |  [29,42,50,42,23,28,1]  |
   566  |                         R = R + 2;  |      2  |   97  |     42  |  1  |  18  |  [29,42,50,42,23,28,1]  |
   570  |                         j = j + 1;  |         |   97  |     42  |  1  |  19  |  [29,42,50,42,23,28,1]  |
   571  |              resetPlaceHolder_2();  |         |   97  |     42  |  1  |  19  |  [29,42,50,42,23,28,1]  |
   577  |                         R = R + 2;  |      2  |   99  |     42  |  1  |  19  |  [29,42,50,42,23,28,1]  |
   581  |                         j = j + 1;  |         |   99  |     42  |  1  |  20  |  [29,42,50,42,23,28,1]  |
   582  |              resetPlaceHolder_2();  |         |   99  |     42  |  1  |  20  |  [29,42,50,42,23,28,1]  |
   588  |                         R = R + 2;  |      2  |  101  |     42  |  1  |  20  |  [29,42,50,42,23,28,1]  |
   592  |                         j = j + 1;  |         |  101  |     42  |  1  |  21  |  [29,42,50,42,23,28,1]  |
   593  |              resetPlaceHolder_2();  |         |  101  |     42  |  1  |  21  |  [29,42,50,42,23,28,1]  |
   599  |                         R = R + 2;  |      2  |  103  |     42  |  1  |  21  |  [29,42,50,42,23,28,1]  |
   603  |                         j = j + 1;  |         |  103  |     42  |  1  |  22  |  [29,42,50,42,23,28,1]  |
   604  |              resetPlaceHolder_2();  |         |  103  |     42  |  1  |  22  |  [29,42,50,42,23,28,1]  |
   610  |                         R = R + 2;  |      2  |  105  |     42  |  1  |  22  |  [29,42,50,42,23,28,1]  |
   614  |                         j = j + 1;  |         |  105  |     42  |  1  |  23  |  [29,42,50,42,23,28,1]  |
   615  |              resetPlaceHolder_2();  |         |  105  |     42  |  1  |  23  |  [29,42,50,42,23,28,1]  |
   621  |                         R = R + 2;  |      2  |  107  |     42  |  1  |  23  |  [29,42,50,42,23,28,1]  |
   625  |                         j = j + 1;  |         |  107  |     42  |  1  |  24  |  [29,42,50,42,23,28,1]  |
   626  |              resetPlaceHolder_2();  |         |  107  |     42  |  1  |  24  |  [29,42,50,42,23,28,1]  |
   632  |                         R = R + 2;  |      2  |  109  |     42  |  1  |  24  |  [29,42,50,42,23,28,1]  |
   636  |                         j = j + 1;  |         |  109  |     42  |  1  |  25  |  [29,42,50,42,23,28,1]  |
   637  |              resetPlaceHolder_2();  |         |  109  |     42  |  1  |  25  |  [29,42,50,42,23,28,1]  |
   643  |                         R = R + 2;  |      2  |  111  |     42  |  1  |  25  |  [29,42,50,42,23,28,1]  |
   647  |                         j = j + 1;  |         |  111  |     42  |  1  |  26  |  [29,42,50,42,23,28,1]  |
   648  |              resetPlaceHolder_2();  |         |  111  |     42  |  1  |  26  |  [29,42,50,42,23,28,1]  |
   654  |                         R = R + 2;  |      2  |  113  |     42  |  1  |  26  |  [29,42,50,42,23,28,1]  |
   658  |                         j = j + 1;  |         |  113  |     42  |  1  |  27  |  [29,42,50,42,23,28,1]  |
   659  |              resetPlaceHolder_2();  |         |  113  |     42  |  1  |  27  |  [29,42,50,42,23,28,1]  |
   665  |                         R = R + 2;  |      2  |  115  |     42  |  1  |  27  |  [29,42,50,42,23,28,1]  |
   669  |                         j = j + 1;  |         |  115  |     42  |  1  |  28  |  [29,42,50,42,23,28,1]  |
   670  |              resetPlaceHolder_2();  |         |  115  |     42  |  1  |  28  |  [29,42,50,42,23,28,1]  |
   676  |                         R = R + 2;  |      2  |  117  |     42  |  1  |  28  |  [29,42,50,42,23,28,1]  |
   680  |                         j = j + 1;  |         |  117  |     42  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   681  |              resetPlaceHolder_2();  |         |  117  |     42  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   687  |                         R = R + 2;  |      2  |  119  |     42  |  1  |  29  |  [29,42,50,42,23,28,1]  |
   691  |                         j = j + 1;  |         |  119  |     42  |  1  |  30  |  [29,42,50,42,23,28,1]  |
   692  |              resetPlaceHolder_2();  |         |  119  |     42  |  1  |  30  |  [29,42,50,42,23,28,1]  |
   698  |                         R = R + 2;  |      2  |  121  |     42  |  1  |  30  |  [29,42,50,42,23,28,1]  |
   702  |                         j = j + 1;  |         |  121  |     42  |  1  |  31  |  [29,42,50,42,23,28,1]  |
   703  |              resetPlaceHolder_2();  |         |  121  |     42  |  1  |  31  |  [29,42,50,42,23,28,1]  |
   709  |                         R = R + 2;  |      2  |  123  |     42  |  1  |  31  |  [29,42,50,42,23,28,1]  |
   713  |                         j = j + 1;  |         |  123  |     42  |  1  |  32  |  [29,42,50,42,23,28,1]  |
   714  |              resetPlaceHolder_2();  |         |  123  |     42  |  1  |  32  |  [29,42,50,42,23,28,1]  |
   720  |                         R = R + 2;  |      2  |  125  |     42  |  1  |  32  |  [29,42,50,42,23,28,1]  |
   724  |                         j = j + 1;  |         |  125  |     42  |  1  |  33  |  [29,42,50,42,23,28,1]  |
   725  |              resetPlaceHolder_2();  |         |  125  |     42  |  1  |  33  |  [29,42,50,42,23,28,1]  |
   731  |                         R = R + 2;  |      2  |  127  |     42  |  1  |  33  |  [29,42,50,42,23,28,1]  |
   735  |                         j = j + 1;  |         |  127  |     42  |  1  |  34  |  [29,42,50,42,23,28,1]  |
   736  |              resetPlaceHolder_2();  |         |  127  |     42  |  1  |  34  |  [29,42,50,42,23,28,1]  |
   742  |                         R = R + 2;  |      2  |  129  |     42  |  1  |  34  |  [29,42,50,42,23,28,1]  |
   746  |                         j = j + 1;  |         |  129  |     42  |  1  |  35  |  [29,42,50,42,23,28,1]  |
   747  |              resetPlaceHolder_2();  |         |  129  |     42  |  1  |  35  |  [29,42,50,42,23,28,1]  |
   753  |                         R = R + 2;  |      2  |  131  |     42  |  1  |  35  |  [29,42,50,42,23,28,1]  |
   757  |                         j = j + 1;  |         |  131  |     42  |  1  |  36  |  [29,42,50,42,23,28,1]  |
   758  |              resetPlaceHolder_2();  |         |  131  |     42  |  1  |  36  |  [29,42,50,42,23,28,1]  |
   764  |                         R = R + 2;  |      2  |  133  |     42  |  1  |  36  |  [29,42,50,42,23,28,1]  |
   768  |                         j = j + 1;  |         |  133  |     42  |  1  |  37  |  [29,42,50,42,23,28,1]  |
   769  |              resetPlaceHolder_2();  |         |  133  |     42  |  1  |  37  |  [29,42,50,42,23,28,1]  |
   775  |                         R = R + 2;  |      2  |  135  |     42  |  1  |  37  |  [29,42,50,42,23,28,1]  |
   779  |                         j = j + 1;  |         |  135  |     42  |  1  |  38  |  [29,42,50,42,23,28,1]  |
   780  |              resetPlaceHolder_2();  |         |  135  |     42  |  1  |  38  |  [29,42,50,42,23,28,1]  |
   786  |                         R = R + 2;  |      2  |  137  |     42  |  1  |  38  |  [29,42,50,42,23,28,1]  |
   790  |                         j = j + 1;  |         |  137  |     42  |  1  |  39  |  [29,42,50,42,23,28,1]  |
   791  |              resetPlaceHolder_2();  |         |  137  |     42  |  1  |  39  |  [29,42,50,42,23,28,1]  |
   797  |                         R = R + 2;  |      2  |  139  |     42  |  1  |  39  |  [29,42,50,42,23,28,1]  |
   801  |                         j = j + 1;  |         |  139  |     42  |  1  |  40  |  [29,42,50,42,23,28,1]  |
   802  |              resetPlaceHolder_2();  |         |  139  |     42  |  1  |  40  |  [29,42,50,42,23,28,1]  |
   808  |                         R = R + 2;  |      2  |  141  |     42  |  1  |  40  |  [29,42,50,42,23,28,1]  |
   812  |                         j = j + 1;  |         |  141  |     42  |  1  |  41  |  [29,42,50,42,23,28,1]  |
   813  |              resetPlaceHolder_2();  |         |  141  |     42  |  1  |  41  |  [29,42,50,42,23,28,1]  |
   819  |                         R = R + 2;  |      2  |  143  |     42  |  1  |  41  |  [29,42,50,42,23,28,1]  |
   823  |                         j = j + 1;  |         |  143  |     42  |  1  |  42  |  [29,42,50,42,23,28,1]  |
   824  |              resetPlaceHolder_2();  |         |  143  |     42  |  1  |  42  |  [29,42,50,42,23,28,1]  |
   830  |                         R = R + 1;  |      1  |  144  |     42  |  1  |  42  |  [29,42,50,42,23,28,1]  |
   834  |                         i = i + 1;  |         |  144  |     42  |  2  |  42  |  [29,42,50,42,23,28,1]  |
   835  |              resetPlaceHolder_1();  |         |  144  |     42  |  2  |  42  |  [29,42,50,42,23,28,1]  |
   841  |      entry = arrayRead(sorted, i);  |         |  144  |     50  |  2  |  42  |  [29,42,50,42,23,28,1]  |
   843  |                         int j = 0;  |         |  144  |     50  |  2  |   0  |  [29,42,50,42,23,28,1]  |
   849  |                         R = R + 2;  |      2  |  146  |     50  |  2  |   0  |  [29,42,50,42,23,28,1]  |
   853  |                         j = j + 1;  |         |  146  |     50  |  2  |   1  |  [29,42,50,42,23,28,1]  |
   854  |              resetPlaceHolder_2();  |         |  146  |     50  |  2  |   1  |  [29,42,50,42,23,28,1]  |
   860  |                         R = R + 2;  |      2  |  148  |     50  |  2  |   1  |  [29,42,50,42,23,28,1]  |
   864  |                         j = j + 1;  |         |  148  |     50  |  2  |   2  |  [29,42,50,42,23,28,1]  |
   865  |              resetPlaceHolder_2();  |         |  148  |     50  |  2  |   2  |  [29,42,50,42,23,28,1]  |
   871  |                         R = R + 2;  |      2  |  150  |     50  |  2  |   2  |  [29,42,50,42,23,28,1]  |
   875  |                         j = j + 1;  |         |  150  |     50  |  2  |   3  |  [29,42,50,42,23,28,1]  |
   876  |              resetPlaceHolder_2();  |         |  150  |     50  |  2  |   3  |  [29,42,50,42,23,28,1]  |
   882  |                         R = R + 2;  |      2  |  152  |     50  |  2  |   3  |  [29,42,50,42,23,28,1]  |
   886  |                         j = j + 1;  |         |  152  |     50  |  2  |   4  |  [29,42,50,42,23,28,1]  |
   887  |              resetPlaceHolder_2();  |         |  152  |     50  |  2  |   4  |  [29,42,50,42,23,28,1]  |
   893  |                         R = R + 2;  |      2  |  154  |     50  |  2  |   4  |  [29,42,50,42,23,28,1]  |
   897  |                         j = j + 1;  |         |  154  |     50  |  2  |   5  |  [29,42,50,42,23,28,1]  |
   898  |              resetPlaceHolder_2();  |         |  154  |     50  |  2  |   5  |  [29,42,50,42,23,28,1]  |
   904  |                         R = R + 2;  |      2  |  156  |     50  |  2  |   5  |  [29,42,50,42,23,28,1]  |
   908  |                         j = j + 1;  |         |  156  |     50  |  2  |   6  |  [29,42,50,42,23,28,1]  |
   909  |              resetPlaceHolder_2();  |         |  156  |     50  |  2  |   6  |  [29,42,50,42,23,28,1]  |
   915  |                         R = R + 2;  |      2  |  158  |     50  |  2  |   6  |  [29,42,50,42,23,28,1]  |
   919  |                         j = j + 1;  |         |  158  |     50  |  2  |   7  |  [29,42,50,42,23,28,1]  |
   920  |              resetPlaceHolder_2();  |         |  158  |     50  |  2  |   7  |  [29,42,50,42,23,28,1]  |
   926  |                         R = R + 2;  |      2  |  160  |     50  |  2  |   7  |  [29,42,50,42,23,28,1]  |
   930  |                         j = j + 1;  |         |  160  |     50  |  2  |   8  |  [29,42,50,42,23,28,1]  |
   931  |              resetPlaceHolder_2();  |         |  160  |     50  |  2  |   8  |  [29,42,50,42,23,28,1]  |
   937  |                         R = R + 2;  |      2  |  162  |     50  |  2  |   8  |  [29,42,50,42,23,28,1]  |
   941  |                         j = j + 1;  |         |  162  |     50  |  2  |   9  |  [29,42,50,42,23,28,1]  |
   942  |              resetPlaceHolder_2();  |         |  162  |     50  |  2  |   9  |  [29,42,50,42,23,28,1]  |
   948  |                         R = R + 2;  |      2  |  164  |     50  |  2  |   9  |  [29,42,50,42,23,28,1]  |
   952  |                         j = j + 1;  |         |  164  |     50  |  2  |  10  |  [29,42,50,42,23,28,1]  |
   953  |              resetPlaceHolder_2();  |         |  164  |     50  |  2  |  10  |  [29,42,50,42,23,28,1]  |
   959  |                         R = R + 2;  |      2  |  166  |     50  |  2  |  10  |  [29,42,50,42,23,28,1]  |
   963  |                         j = j + 1;  |         |  166  |     50  |  2  |  11  |  [29,42,50,42,23,28,1]  |
   964  |              resetPlaceHolder_2();  |         |  166  |     50  |  2  |  11  |  [29,42,50,42,23,28,1]  |
   970  |                         R = R + 2;  |      2  |  168  |     50  |  2  |  11  |  [29,42,50,42,23,28,1]  |
   974  |                         j = j + 1;  |         |  168  |     50  |  2  |  12  |  [29,42,50,42,23,28,1]  |
   975  |              resetPlaceHolder_2();  |         |  168  |     50  |  2  |  12  |  [29,42,50,42,23,28,1]  |
   981  |                         R = R + 2;  |      2  |  170  |     50  |  2  |  12  |  [29,42,50,42,23,28,1]  |
   985  |                         j = j + 1;  |         |  170  |     50  |  2  |  13  |  [29,42,50,42,23,28,1]  |
   986  |              resetPlaceHolder_2();  |         |  170  |     50  |  2  |  13  |  [29,42,50,42,23,28,1]  |
   992  |                         R = R + 2;  |      2  |  172  |     50  |  2  |  13  |  [29,42,50,42,23,28,1]  |
   996  |                         j = j + 1;  |         |  172  |     50  |  2  |  14  |  [29,42,50,42,23,28,1]  |
   997  |              resetPlaceHolder_2();  |         |  172  |     50  |  2  |  14  |  [29,42,50,42,23,28,1]  |
  1003  |                         R = R + 2;  |      2  |  174  |     50  |  2  |  14  |  [29,42,50,42,23,28,1]  |
  1007  |                         j = j + 1;  |         |  174  |     50  |  2  |  15  |  [29,42,50,42,23,28,1]  |
  1008  |              resetPlaceHolder_2();  |         |  174  |     50  |  2  |  15  |  [29,42,50,42,23,28,1]  |
  1014  |                         R = R + 2;  |      2  |  176  |     50  |  2  |  15  |  [29,42,50,42,23,28,1]  |
  1018  |                         j = j + 1;  |         |  176  |     50  |  2  |  16  |  [29,42,50,42,23,28,1]  |
  1019  |              resetPlaceHolder_2();  |         |  176  |     50  |  2  |  16  |  [29,42,50,42,23,28,1]  |
  1025  |                         R = R + 2;  |      2  |  178  |     50  |  2  |  16  |  [29,42,50,42,23,28,1]  |
  1029  |                         j = j + 1;  |         |  178  |     50  |  2  |  17  |  [29,42,50,42,23,28,1]  |
  1030  |              resetPlaceHolder_2();  |         |  178  |     50  |  2  |  17  |  [29,42,50,42,23,28,1]  |
  1036  |                         R = R + 2;  |      2  |  180  |     50  |  2  |  17  |  [29,42,50,42,23,28,1]  |
  1040  |                         j = j + 1;  |         |  180  |     50  |  2  |  18  |  [29,42,50,42,23,28,1]  |
  1041  |              resetPlaceHolder_2();  |         |  180  |     50  |  2  |  18  |  [29,42,50,42,23,28,1]  |
  1047  |                         R = R + 2;  |      2  |  182  |     50  |  2  |  18  |  [29,42,50,42,23,28,1]  |
  1051  |                         j = j + 1;  |         |  182  |     50  |  2  |  19  |  [29,42,50,42,23,28,1]  |
  1052  |              resetPlaceHolder_2();  |         |  182  |     50  |  2  |  19  |  [29,42,50,42,23,28,1]  |
  1058  |                         R = R + 2;  |      2  |  184  |     50  |  2  |  19  |  [29,42,50,42,23,28,1]  |
  1062  |                         j = j + 1;  |         |  184  |     50  |  2  |  20  |  [29,42,50,42,23,28,1]  |
  1063  |              resetPlaceHolder_2();  |         |  184  |     50  |  2  |  20  |  [29,42,50,42,23,28,1]  |
  1069  |                         R = R + 2;  |      2  |  186  |     50  |  2  |  20  |  [29,42,50,42,23,28,1]  |
  1073  |                         j = j + 1;  |         |  186  |     50  |  2  |  21  |  [29,42,50,42,23,28,1]  |
  1074  |              resetPlaceHolder_2();  |         |  186  |     50  |  2  |  21  |  [29,42,50,42,23,28,1]  |
  1080  |                         R = R + 2;  |      2  |  188  |     50  |  2  |  21  |  [29,42,50,42,23,28,1]  |
  1084  |                         j = j + 1;  |         |  188  |     50  |  2  |  22  |  [29,42,50,42,23,28,1]  |
  1085  |              resetPlaceHolder_2();  |         |  188  |     50  |  2  |  22  |  [29,42,50,42,23,28,1]  |
  1091  |                         R = R + 2;  |      2  |  190  |     50  |  2  |  22  |  [29,42,50,42,23,28,1]  |
  1095  |                         j = j + 1;  |         |  190  |     50  |  2  |  23  |  [29,42,50,42,23,28,1]  |
  1096  |              resetPlaceHolder_2();  |         |  190  |     50  |  2  |  23  |  [29,42,50,42,23,28,1]  |
  1102  |                         R = R + 2;  |      2  |  192  |     50  |  2  |  23  |  [29,42,50,42,23,28,1]  |
  1106  |                         j = j + 1;  |         |  192  |     50  |  2  |  24  |  [29,42,50,42,23,28,1]  |
  1107  |              resetPlaceHolder_2();  |         |  192  |     50  |  2  |  24  |  [29,42,50,42,23,28,1]  |
  1113  |                         R = R + 2;  |      2  |  194  |     50  |  2  |  24  |  [29,42,50,42,23,28,1]  |
  1117  |                         j = j + 1;  |         |  194  |     50  |  2  |  25  |  [29,42,50,42,23,28,1]  |
  1118  |              resetPlaceHolder_2();  |         |  194  |     50  |  2  |  25  |  [29,42,50,42,23,28,1]  |
  1124  |                         R = R + 2;  |      2  |  196  |     50  |  2  |  25  |  [29,42,50,42,23,28,1]  |
  1128  |                         j = j + 1;  |         |  196  |     50  |  2  |  26  |  [29,42,50,42,23,28,1]  |
  1129  |              resetPlaceHolder_2();  |         |  196  |     50  |  2  |  26  |  [29,42,50,42,23,28,1]  |
  1135  |                         R = R + 2;  |      2  |  198  |     50  |  2  |  26  |  [29,42,50,42,23,28,1]  |
  1139  |                         j = j + 1;  |         |  198  |     50  |  2  |  27  |  [29,42,50,42,23,28,1]  |
  1140  |              resetPlaceHolder_2();  |         |  198  |     50  |  2  |  27  |  [29,42,50,42,23,28,1]  |
  1146  |                         R = R + 2;  |      2  |  200  |     50  |  2  |  27  |  [29,42,50,42,23,28,1]  |
  1150  |                         j = j + 1;  |         |  200  |     50  |  2  |  28  |  [29,42,50,42,23,28,1]  |
  1151  |              resetPlaceHolder_2();  |         |  200  |     50  |  2  |  28  |  [29,42,50,42,23,28,1]  |
  1157  |                         R = R + 2;  |      2  |  202  |     50  |  2  |  28  |  [29,42,50,42,23,28,1]  |
  1161  |                         j = j + 1;  |         |  202  |     50  |  2  |  29  |  [29,42,50,42,23,28,1]  |
  1162  |              resetPlaceHolder_2();  |         |  202  |     50  |  2  |  29  |  [29,42,50,42,23,28,1]  |
  1168  |                         R = R + 2;  |      2  |  204  |     50  |  2  |  29  |  [29,42,50,42,23,28,1]  |
  1172  |                         j = j + 1;  |         |  204  |     50  |  2  |  30  |  [29,42,50,42,23,28,1]  |
  1173  |              resetPlaceHolder_2();  |         |  204  |     50  |  2  |  30  |  [29,42,50,42,23,28,1]  |
  1179  |                         R = R + 2;  |      2  |  206  |     50  |  2  |  30  |  [29,42,50,42,23,28,1]  |
  1183  |                         j = j + 1;  |         |  206  |     50  |  2  |  31  |  [29,42,50,42,23,28,1]  |
  1184  |              resetPlaceHolder_2();  |         |  206  |     50  |  2  |  31  |  [29,42,50,42,23,28,1]  |
  1190  |                         R = R + 2;  |      2  |  208  |     50  |  2  |  31  |  [29,42,50,42,23,28,1]  |
  1194  |                         j = j + 1;  |         |  208  |     50  |  2  |  32  |  [29,42,50,42,23,28,1]  |
  1195  |              resetPlaceHolder_2();  |         |  208  |     50  |  2  |  32  |  [29,42,50,42,23,28,1]  |
  1201  |                         R = R + 2;  |      2  |  210  |     50  |  2  |  32  |  [29,42,50,42,23,28,1]  |
  1205  |                         j = j + 1;  |         |  210  |     50  |  2  |  33  |  [29,42,50,42,23,28,1]  |
  1206  |              resetPlaceHolder_2();  |         |  210  |     50  |  2  |  33  |  [29,42,50,42,23,28,1]  |
  1212  |                         R = R + 2;  |      2  |  212  |     50  |  2  |  33  |  [29,42,50,42,23,28,1]  |
  1216  |                         j = j + 1;  |         |  212  |     50  |  2  |  34  |  [29,42,50,42,23,28,1]  |
  1217  |              resetPlaceHolder_2();  |         |  212  |     50  |  2  |  34  |  [29,42,50,42,23,28,1]  |
  1223  |                         R = R + 2;  |      2  |  214  |     50  |  2  |  34  |  [29,42,50,42,23,28,1]  |
  1227  |                         j = j + 1;  |         |  214  |     50  |  2  |  35  |  [29,42,50,42,23,28,1]  |
  1228  |              resetPlaceHolder_2();  |         |  214  |     50  |  2  |  35  |  [29,42,50,42,23,28,1]  |
  1234  |                         R = R + 2;  |      2  |  216  |     50  |  2  |  35  |  [29,42,50,42,23,28,1]  |
  1238  |                         j = j + 1;  |         |  216  |     50  |  2  |  36  |  [29,42,50,42,23,28,1]  |
  1239  |              resetPlaceHolder_2();  |         |  216  |     50  |  2  |  36  |  [29,42,50,42,23,28,1]  |
  1245  |                         R = R + 2;  |      2  |  218  |     50  |  2  |  36  |  [29,42,50,42,23,28,1]  |
  1249  |                         j = j + 1;  |         |  218  |     50  |  2  |  37  |  [29,42,50,42,23,28,1]  |
  1250  |              resetPlaceHolder_2();  |         |  218  |     50  |  2  |  37  |  [29,42,50,42,23,28,1]  |
  1256  |                         R = R + 2;  |      2  |  220  |     50  |  2  |  37  |  [29,42,50,42,23,28,1]  |
  1260  |                         j = j + 1;  |         |  220  |     50  |  2  |  38  |  [29,42,50,42,23,28,1]  |
  1261  |              resetPlaceHolder_2();  |         |  220  |     50  |  2  |  38  |  [29,42,50,42,23,28,1]  |
  1267  |                         R = R + 2;  |      2  |  222  |     50  |  2  |  38  |  [29,42,50,42,23,28,1]  |
  1271  |                         j = j + 1;  |         |  222  |     50  |  2  |  39  |  [29,42,50,42,23,28,1]  |
  1272  |              resetPlaceHolder_2();  |         |  222  |     50  |  2  |  39  |  [29,42,50,42,23,28,1]  |
  1278  |                         R = R + 2;  |      2  |  224  |     50  |  2  |  39  |  [29,42,50,42,23,28,1]  |
  1282  |                         j = j + 1;  |         |  224  |     50  |  2  |  40  |  [29,42,50,42,23,28,1]  |
  1283  |              resetPlaceHolder_2();  |         |  224  |     50  |  2  |  40  |  [29,42,50,42,23,28,1]  |
  1289  |                         R = R + 2;  |      2  |  226  |     50  |  2  |  40  |  [29,42,50,42,23,28,1]  |
  1293  |                         j = j + 1;  |         |  226  |     50  |  2  |  41  |  [29,42,50,42,23,28,1]  |
  1294  |              resetPlaceHolder_2();  |         |  226  |     50  |  2  |  41  |  [29,42,50,42,23,28,1]  |
  1300  |                         R = R + 2;  |      2  |  228  |     50  |  2  |  41  |  [29,42,50,42,23,28,1]  |
  1304  |                         j = j + 1;  |         |  228  |     50  |  2  |  42  |  [29,42,50,42,23,28,1]  |
  1305  |              resetPlaceHolder_2();  |         |  228  |     50  |  2  |  42  |  [29,42,50,42,23,28,1]  |
  1311  |                         R = R + 2;  |      2  |  230  |     50  |  2  |  42  |  [29,42,50,42,23,28,1]  |
  1315  |                         j = j + 1;  |         |  230  |     50  |  2  |  43  |  [29,42,50,42,23,28,1]  |
  1316  |              resetPlaceHolder_2();  |         |  230  |     50  |  2  |  43  |  [29,42,50,42,23,28,1]  |
  1322  |                         R = R + 2;  |      2  |  232  |     50  |  2  |  43  |  [29,42,50,42,23,28,1]  |
  1326  |                         j = j + 1;  |         |  232  |     50  |  2  |  44  |  [29,42,50,42,23,28,1]  |
  1327  |              resetPlaceHolder_2();  |         |  232  |     50  |  2  |  44  |  [29,42,50,42,23,28,1]  |
  1333  |                         R = R + 2;  |      2  |  234  |     50  |  2  |  44  |  [29,42,50,42,23,28,1]  |
  1337  |                         j = j + 1;  |         |  234  |     50  |  2  |  45  |  [29,42,50,42,23,28,1]  |
  1338  |              resetPlaceHolder_2();  |         |  234  |     50  |  2  |  45  |  [29,42,50,42,23,28,1]  |
  1344  |                         R = R + 2;  |      2  |  236  |     50  |  2  |  45  |  [29,42,50,42,23,28,1]  |
  1348  |                         j = j + 1;  |         |  236  |     50  |  2  |  46  |  [29,42,50,42,23,28,1]  |
  1349  |              resetPlaceHolder_2();  |         |  236  |     50  |  2  |  46  |  [29,42,50,42,23,28,1]  |
  1355  |                         R = R + 2;  |      2  |  238  |     50  |  2  |  46  |  [29,42,50,42,23,28,1]  |
  1359  |                         j = j + 1;  |         |  238  |     50  |  2  |  47  |  [29,42,50,42,23,28,1]  |
  1360  |              resetPlaceHolder_2();  |         |  238  |     50  |  2  |  47  |  [29,42,50,42,23,28,1]  |
  1366  |                         R = R + 2;  |      2  |  240  |     50  |  2  |  47  |  [29,42,50,42,23,28,1]  |
  1370  |                         j = j + 1;  |         |  240  |     50  |  2  |  48  |  [29,42,50,42,23,28,1]  |
  1371  |              resetPlaceHolder_2();  |         |  240  |     50  |  2  |  48  |  [29,42,50,42,23,28,1]  |
  1377  |                         R = R + 2;  |      2  |  242  |     50  |  2  |  48  |  [29,42,50,42,23,28,1]  |
  1381  |                         j = j + 1;  |         |  242  |     50  |  2  |  49  |  [29,42,50,42,23,28,1]  |
  1382  |              resetPlaceHolder_2();  |         |  242  |     50  |  2  |  49  |  [29,42,50,42,23,28,1]  |
  1388  |                         R = R + 2;  |      2  |  244  |     50  |  2  |  49  |  [29,42,50,42,23,28,1]  |
  1392  |                         j = j + 1;  |         |  244  |     50  |  2  |  50  |  [29,42,50,42,23,28,1]  |
  1393  |              resetPlaceHolder_2();  |         |  244  |     50  |  2  |  50  |  [29,42,50,42,23,28,1]  |
  1399  |                         R = R + 1;  |      1  |  245  |     50  |  2  |  50  |  [29,42,50,42,23,28,1]  |
  1403  |                         i = i + 1;  |         |  245  |     50  |  3  |  50  |  [29,42,50,42,23,28,1]  |
  1404  |              resetPlaceHolder_1();  |         |  245  |     50  |  3  |  50  |  [29,42,50,42,23,28,1]  |
  1410  |      entry = arrayRead(sorted, i);  |         |  245  |     42  |  3  |  50  |  [29,42,50,42,23,28,1]  |
  1412  |                         int j = 0;  |         |  245  |     42  |  3  |   0  |  [29,42,50,42,23,28,1]  |
  1418  |                         R = R + 2;  |      2  |  247  |     42  |  3  |   0  |  [29,42,50,42,23,28,1]  |
  1422  |                         j = j + 1;  |         |  247  |     42  |  3  |   1  |  [29,42,50,42,23,28,1]  |
  1423  |              resetPlaceHolder_2();  |         |  247  |     42  |  3  |   1  |  [29,42,50,42,23,28,1]  |
  1429  |                         R = R + 2;  |      2  |  249  |     42  |  3  |   1  |  [29,42,50,42,23,28,1]  |
  1433  |                         j = j + 1;  |         |  249  |     42  |  3  |   2  |  [29,42,50,42,23,28,1]  |
  1434  |              resetPlaceHolder_2();  |         |  249  |     42  |  3  |   2  |  [29,42,50,42,23,28,1]  |
  1440  |                         R = R + 2;  |      2  |  251  |     42  |  3  |   2  |  [29,42,50,42,23,28,1]  |
  1444  |                         j = j + 1;  |         |  251  |     42  |  3  |   3  |  [29,42,50,42,23,28,1]  |
  1445  |              resetPlaceHolder_2();  |         |  251  |     42  |  3  |   3  |  [29,42,50,42,23,28,1]  |
  1451  |                         R = R + 2;  |      2  |  253  |     42  |  3  |   3  |  [29,42,50,42,23,28,1]  |
  1455  |                         j = j + 1;  |         |  253  |     42  |  3  |   4  |  [29,42,50,42,23,28,1]  |
  1456  |              resetPlaceHolder_2();  |         |  253  |     42  |  3  |   4  |  [29,42,50,42,23,28,1]  |
  1462  |                         R = R + 2;  |      2  |  255  |     42  |  3  |   4  |  [29,42,50,42,23,28,1]  |
  1466  |                         j = j + 1;  |         |  255  |     42  |  3  |   5  |  [29,42,50,42,23,28,1]  |
  1467  |              resetPlaceHolder_2();  |         |  255  |     42  |  3  |   5  |  [29,42,50,42,23,28,1]  |
  1473  |                         R = R + 2;  |      2  |  257  |     42  |  3  |   5  |  [29,42,50,42,23,28,1]  |
  1477  |                         j = j + 1;  |         |  257  |     42  |  3  |   6  |  [29,42,50,42,23,28,1]  |
  1478  |              resetPlaceHolder_2();  |         |  257  |     42  |  3  |   6  |  [29,42,50,42,23,28,1]  |
  1484  |                         R = R + 2;  |      2  |  259  |     42  |  3  |   6  |  [29,42,50,42,23,28,1]  |
  1488  |                         j = j + 1;  |         |  259  |     42  |  3  |   7  |  [29,42,50,42,23,28,1]  |
  1489  |              resetPlaceHolder_2();  |         |  259  |     42  |  3  |   7  |  [29,42,50,42,23,28,1]  |
  1495  |                         R = R + 2;  |      2  |  261  |     42  |  3  |   7  |  [29,42,50,42,23,28,1]  |
  1499  |                         j = j + 1;  |         |  261  |     42  |  3  |   8  |  [29,42,50,42,23,28,1]  |
  1500  |              resetPlaceHolder_2();  |         |  261  |     42  |  3  |   8  |  [29,42,50,42,23,28,1]  |
  1506  |                         R = R + 2;  |      2  |  263  |     42  |  3  |   8  |  [29,42,50,42,23,28,1]  |
  1510  |                         j = j + 1;  |         |  263  |     42  |  3  |   9  |  [29,42,50,42,23,28,1]  |
  1511  |              resetPlaceHolder_2();  |         |  263  |     42  |  3  |   9  |  [29,42,50,42,23,28,1]  |
  1517  |                         R = R + 2;  |      2  |  265  |     42  |  3  |   9  |  [29,42,50,42,23,28,1]  |
  1521  |                         j = j + 1;  |         |  265  |     42  |  3  |  10  |  [29,42,50,42,23,28,1]  |
  1522  |              resetPlaceHolder_2();  |         |  265  |     42  |  3  |  10  |  [29,42,50,42,23,28,1]  |
  1528  |                         R = R + 2;  |      2  |  267  |     42  |  3  |  10  |  [29,42,50,42,23,28,1]  |
  1532  |                         j = j + 1;  |         |  267  |     42  |  3  |  11  |  [29,42,50,42,23,28,1]  |
  1533  |              resetPlaceHolder_2();  |         |  267  |     42  |  3  |  11  |  [29,42,50,42,23,28,1]  |
  1539  |                         R = R + 2;  |      2  |  269  |     42  |  3  |  11  |  [29,42,50,42,23,28,1]  |
  1543  |                         j = j + 1;  |         |  269  |     42  |  3  |  12  |  [29,42,50,42,23,28,1]  |
  1544  |              resetPlaceHolder_2();  |         |  269  |     42  |  3  |  12  |  [29,42,50,42,23,28,1]  |
  1550  |                         R = R + 2;  |      2  |  271  |     42  |  3  |  12  |  [29,42,50,42,23,28,1]  |
  1554  |                         j = j + 1;  |         |  271  |     42  |  3  |  13  |  [29,42,50,42,23,28,1]  |
  1555  |              resetPlaceHolder_2();  |         |  271  |     42  |  3  |  13  |  [29,42,50,42,23,28,1]  |
  1561  |                         R = R + 2;  |      2  |  273  |     42  |  3  |  13  |  [29,42,50,42,23,28,1]  |
  1565  |                         j = j + 1;  |         |  273  |     42  |  3  |  14  |  [29,42,50,42,23,28,1]  |
  1566  |              resetPlaceHolder_2();  |         |  273  |     42  |  3  |  14  |  [29,42,50,42,23,28,1]  |
  1572  |                         R = R + 2;  |      2  |  275  |     42  |  3  |  14  |  [29,42,50,42,23,28,1]  |
  1576  |                         j = j + 1;  |         |  275  |     42  |  3  |  15  |  [29,42,50,42,23,28,1]  |
  1577  |              resetPlaceHolder_2();  |         |  275  |     42  |  3  |  15  |  [29,42,50,42,23,28,1]  |
  1583  |                         R = R + 2;  |      2  |  277  |     42  |  3  |  15  |  [29,42,50,42,23,28,1]  |
  1587  |                         j = j + 1;  |         |  277  |     42  |  3  |  16  |  [29,42,50,42,23,28,1]  |
  1588  |              resetPlaceHolder_2();  |         |  277  |     42  |  3  |  16  |  [29,42,50,42,23,28,1]  |
  1594  |                         R = R + 2;  |      2  |  279  |     42  |  3  |  16  |  [29,42,50,42,23,28,1]  |
  1598  |                         j = j + 1;  |         |  279  |     42  |  3  |  17  |  [29,42,50,42,23,28,1]  |
  1599  |              resetPlaceHolder_2();  |         |  279  |     42  |  3  |  17  |  [29,42,50,42,23,28,1]  |
  1605  |                         R = R + 2;  |      2  |  281  |     42  |  3  |  17  |  [29,42,50,42,23,28,1]  |
  1609  |                         j = j + 1;  |         |  281  |     42  |  3  |  18  |  [29,42,50,42,23,28,1]  |
  1610  |              resetPlaceHolder_2();  |         |  281  |     42  |  3  |  18  |  [29,42,50,42,23,28,1]  |
  1616  |                         R = R + 2;  |      2  |  283  |     42  |  3  |  18  |  [29,42,50,42,23,28,1]  |
  1620  |                         j = j + 1;  |         |  283  |     42  |  3  |  19  |  [29,42,50,42,23,28,1]  |
  1621  |              resetPlaceHolder_2();  |         |  283  |     42  |  3  |  19  |  [29,42,50,42,23,28,1]  |
  1627  |                         R = R + 2;  |      2  |  285  |     42  |  3  |  19  |  [29,42,50,42,23,28,1]  |
  1631  |                         j = j + 1;  |         |  285  |     42  |  3  |  20  |  [29,42,50,42,23,28,1]  |
  1632  |              resetPlaceHolder_2();  |         |  285  |     42  |  3  |  20  |  [29,42,50,42,23,28,1]  |
  1638  |                         R = R + 2;  |      2  |  287  |     42  |  3  |  20  |  [29,42,50,42,23,28,1]  |
  1642  |                         j = j + 1;  |         |  287  |     42  |  3  |  21  |  [29,42,50,42,23,28,1]  |
  1643  |              resetPlaceHolder_2();  |         |  287  |     42  |  3  |  21  |  [29,42,50,42,23,28,1]  |
  1649  |                         R = R + 2;  |      2  |  289  |     42  |  3  |  21  |  [29,42,50,42,23,28,1]  |
  1653  |                         j = j + 1;  |         |  289  |     42  |  3  |  22  |  [29,42,50,42,23,28,1]  |
  1654  |              resetPlaceHolder_2();  |         |  289  |     42  |  3  |  22  |  [29,42,50,42,23,28,1]  |
  1660  |                         R = R + 2;  |      2  |  291  |     42  |  3  |  22  |  [29,42,50,42,23,28,1]  |
  1664  |                         j = j + 1;  |         |  291  |     42  |  3  |  23  |  [29,42,50,42,23,28,1]  |
  1665  |              resetPlaceHolder_2();  |         |  291  |     42  |  3  |  23  |  [29,42,50,42,23,28,1]  |
  1671  |                         R = R + 2;  |      2  |  293  |     42  |  3  |  23  |  [29,42,50,42,23,28,1]  |
  1675  |                         j = j + 1;  |         |  293  |     42  |  3  |  24  |  [29,42,50,42,23,28,1]  |
  1676  |              resetPlaceHolder_2();  |         |  293  |     42  |  3  |  24  |  [29,42,50,42,23,28,1]  |
  1682  |                         R = R + 2;  |      2  |  295  |     42  |  3  |  24  |  [29,42,50,42,23,28,1]  |
  1686  |                         j = j + 1;  |         |  295  |     42  |  3  |  25  |  [29,42,50,42,23,28,1]  |
  1687  |              resetPlaceHolder_2();  |         |  295  |     42  |  3  |  25  |  [29,42,50,42,23,28,1]  |
  1693  |                         R = R + 2;  |      2  |  297  |     42  |  3  |  25  |  [29,42,50,42,23,28,1]  |
  1697  |                         j = j + 1;  |         |  297  |     42  |  3  |  26  |  [29,42,50,42,23,28,1]  |
  1698  |              resetPlaceHolder_2();  |         |  297  |     42  |  3  |  26  |  [29,42,50,42,23,28,1]  |
  1704  |                         R = R + 2;  |      2  |  299  |     42  |  3  |  26  |  [29,42,50,42,23,28,1]  |
  1708  |                         j = j + 1;  |         |  299  |     42  |  3  |  27  |  [29,42,50,42,23,28,1]  |
  1709  |              resetPlaceHolder_2();  |         |  299  |     42  |  3  |  27  |  [29,42,50,42,23,28,1]  |
  1715  |                         R = R + 2;  |      2  |  301  |     42  |  3  |  27  |  [29,42,50,42,23,28,1]  |
  1719  |                         j = j + 1;  |         |  301  |     42  |  3  |  28  |  [29,42,50,42,23,28,1]  |
  1720  |              resetPlaceHolder_2();  |         |  301  |     42  |  3  |  28  |  [29,42,50,42,23,28,1]  |
  1726  |                         R = R + 2;  |      2  |  303  |     42  |  3  |  28  |  [29,42,50,42,23,28,1]  |
  1730  |                         j = j + 1;  |         |  303  |     42  |  3  |  29  |  [29,42,50,42,23,28,1]  |
  1731  |              resetPlaceHolder_2();  |         |  303  |     42  |  3  |  29  |  [29,42,50,42,23,28,1]  |
  1737  |                         R = R + 2;  |      2  |  305  |     42  |  3  |  29  |  [29,42,50,42,23,28,1]  |
  1741  |                         j = j + 1;  |         |  305  |     42  |  3  |  30  |  [29,42,50,42,23,28,1]  |
  1742  |              resetPlaceHolder_2();  |         |  305  |     42  |  3  |  30  |  [29,42,50,42,23,28,1]  |
  1748  |                         R = R + 2;  |      2  |  307  |     42  |  3  |  30  |  [29,42,50,42,23,28,1]  |
  1752  |                         j = j + 1;  |         |  307  |     42  |  3  |  31  |  [29,42,50,42,23,28,1]  |
  1753  |              resetPlaceHolder_2();  |         |  307  |     42  |  3  |  31  |  [29,42,50,42,23,28,1]  |
  1759  |                         R = R + 2;  |      2  |  309  |     42  |  3  |  31  |  [29,42,50,42,23,28,1]  |
  1763  |                         j = j + 1;  |         |  309  |     42  |  3  |  32  |  [29,42,50,42,23,28,1]  |
  1764  |              resetPlaceHolder_2();  |         |  309  |     42  |  3  |  32  |  [29,42,50,42,23,28,1]  |
  1770  |                         R = R + 2;  |      2  |  311  |     42  |  3  |  32  |  [29,42,50,42,23,28,1]  |
  1774  |                         j = j + 1;  |         |  311  |     42  |  3  |  33  |  [29,42,50,42,23,28,1]  |
  1775  |              resetPlaceHolder_2();  |         |  311  |     42  |  3  |  33  |  [29,42,50,42,23,28,1]  |
  1781  |                         R = R + 2;  |      2  |  313  |     42  |  3  |  33  |  [29,42,50,42,23,28,1]  |
  1785  |                         j = j + 1;  |         |  313  |     42  |  3  |  34  |  [29,42,50,42,23,28,1]  |
  1786  |              resetPlaceHolder_2();  |         |  313  |     42  |  3  |  34  |  [29,42,50,42,23,28,1]  |
  1792  |                         R = R + 2;  |      2  |  315  |     42  |  3  |  34  |  [29,42,50,42,23,28,1]  |
  1796  |                         j = j + 1;  |         |  315  |     42  |  3  |  35  |  [29,42,50,42,23,28,1]  |
  1797  |              resetPlaceHolder_2();  |         |  315  |     42  |  3  |  35  |  [29,42,50,42,23,28,1]  |
  1803  |                         R = R + 2;  |      2  |  317  |     42  |  3  |  35  |  [29,42,50,42,23,28,1]  |
  1807  |                         j = j + 1;  |         |  317  |     42  |  3  |  36  |  [29,42,50,42,23,28,1]  |
  1808  |              resetPlaceHolder_2();  |         |  317  |     42  |  3  |  36  |  [29,42,50,42,23,28,1]  |
  1814  |                         R = R + 2;  |      2  |  319  |     42  |  3  |  36  |  [29,42,50,42,23,28,1]  |
  1818  |                         j = j + 1;  |         |  319  |     42  |  3  |  37  |  [29,42,50,42,23,28,1]  |
  1819  |              resetPlaceHolder_2();  |         |  319  |     42  |  3  |  37  |  [29,42,50,42,23,28,1]  |
  1825  |                         R = R + 2;  |      2  |  321  |     42  |  3  |  37  |  [29,42,50,42,23,28,1]  |
  1829  |                         j = j + 1;  |         |  321  |     42  |  3  |  38  |  [29,42,50,42,23,28,1]  |
  1830  |              resetPlaceHolder_2();  |         |  321  |     42  |  3  |  38  |  [29,42,50,42,23,28,1]  |
  1836  |                         R = R + 2;  |      2  |  323  |     42  |  3  |  38  |  [29,42,50,42,23,28,1]  |
  1840  |                         j = j + 1;  |         |  323  |     42  |  3  |  39  |  [29,42,50,42,23,28,1]  |
  1841  |              resetPlaceHolder_2();  |         |  323  |     42  |  3  |  39  |  [29,42,50,42,23,28,1]  |
  1847  |                         R = R + 2;  |      2  |  325  |     42  |  3  |  39  |  [29,42,50,42,23,28,1]  |
  1851  |                         j = j + 1;  |         |  325  |     42  |  3  |  40  |  [29,42,50,42,23,28,1]  |
  1852  |              resetPlaceHolder_2();  |         |  325  |     42  |  3  |  40  |  [29,42,50,42,23,28,1]  |
  1858  |                         R = R + 2;  |      2  |  327  |     42  |  3  |  40  |  [29,42,50,42,23,28,1]  |
  1862  |                         j = j + 1;  |         |  327  |     42  |  3  |  41  |  [29,42,50,42,23,28,1]  |
  1863  |              resetPlaceHolder_2();  |         |  327  |     42  |  3  |  41  |  [29,42,50,42,23,28,1]  |
  1869  |                         R = R + 2;  |      2  |  329  |     42  |  3  |  41  |  [29,42,50,42,23,28,1]  |
  1873  |                         j = j + 1;  |         |  329  |     42  |  3  |  42  |  [29,42,50,42,23,28,1]  |
  1874  |              resetPlaceHolder_2();  |         |  329  |     42  |  3  |  42  |  [29,42,50,42,23,28,1]  |
  1880  |                         R = R + 1;  |      1  |  330  |     42  |  3  |  42  |  [29,42,50,42,23,28,1]  |
  1884  |                         i = i + 1;  |         |  330  |     42  |  4  |  42  |  [29,42,50,42,23,28,1]  |
  1885  |              resetPlaceHolder_1();  |         |  330  |     42  |  4  |  42  |  [29,42,50,42,23,28,1]  |
  1891  |      entry = arrayRead(sorted, i);  |         |  330  |     23  |  4  |  42  |  [29,42,50,42,23,28,1]  |
  1893  |                         int j = 0;  |         |  330  |     23  |  4  |   0  |  [29,42,50,42,23,28,1]  |
  1899  |                         R = R + 2;  |      2  |  332  |     23  |  4  |   0  |  [29,42,50,42,23,28,1]  |
  1903  |                         j = j + 1;  |         |  332  |     23  |  4  |   1  |  [29,42,50,42,23,28,1]  |
  1904  |              resetPlaceHolder_2();  |         |  332  |     23  |  4  |   1  |  [29,42,50,42,23,28,1]  |
  1910  |                         R = R + 2;  |      2  |  334  |     23  |  4  |   1  |  [29,42,50,42,23,28,1]  |
  1914  |                         j = j + 1;  |         |  334  |     23  |  4  |   2  |  [29,42,50,42,23,28,1]  |
  1915  |              resetPlaceHolder_2();  |         |  334  |     23  |  4  |   2  |  [29,42,50,42,23,28,1]  |
  1921  |                         R = R + 2;  |      2  |  336  |     23  |  4  |   2  |  [29,42,50,42,23,28,1]  |
  1925  |                         j = j + 1;  |         |  336  |     23  |  4  |   3  |  [29,42,50,42,23,28,1]  |
  1926  |              resetPlaceHolder_2();  |         |  336  |     23  |  4  |   3  |  [29,42,50,42,23,28,1]  |
  1932  |                         R = R + 2;  |      2  |  338  |     23  |  4  |   3  |  [29,42,50,42,23,28,1]  |
  1936  |                         j = j + 1;  |         |  338  |     23  |  4  |   4  |  [29,42,50,42,23,28,1]  |
  1937  |              resetPlaceHolder_2();  |         |  338  |     23  |  4  |   4  |  [29,42,50,42,23,28,1]  |
  1943  |                         R = R + 2;  |      2  |  340  |     23  |  4  |   4  |  [29,42,50,42,23,28,1]  |
  1947  |                         j = j + 1;  |         |  340  |     23  |  4  |   5  |  [29,42,50,42,23,28,1]  |
  1948  |              resetPlaceHolder_2();  |         |  340  |     23  |  4  |   5  |  [29,42,50,42,23,28,1]  |
  1954  |                         R = R + 2;  |      2  |  342  |     23  |  4  |   5  |  [29,42,50,42,23,28,1]  |
  1958  |                         j = j + 1;  |         |  342  |     23  |  4  |   6  |  [29,42,50,42,23,28,1]  |
  1959  |              resetPlaceHolder_2();  |         |  342  |     23  |  4  |   6  |  [29,42,50,42,23,28,1]  |
  1965  |                         R = R + 2;  |      2  |  344  |     23  |  4  |   6  |  [29,42,50,42,23,28,1]  |
  1969  |                         j = j + 1;  |         |  344  |     23  |  4  |   7  |  [29,42,50,42,23,28,1]  |
  1970  |              resetPlaceHolder_2();  |         |  344  |     23  |  4  |   7  |  [29,42,50,42,23,28,1]  |
  1976  |                         R = R + 2;  |      2  |  346  |     23  |  4  |   7  |  [29,42,50,42,23,28,1]  |
  1980  |                         j = j + 1;  |         |  346  |     23  |  4  |   8  |  [29,42,50,42,23,28,1]  |
  1981  |              resetPlaceHolder_2();  |         |  346  |     23  |  4  |   8  |  [29,42,50,42,23,28,1]  |
  1987  |                         R = R + 2;  |      2  |  348  |     23  |  4  |   8  |  [29,42,50,42,23,28,1]  |
  1991  |                         j = j + 1;  |         |  348  |     23  |  4  |   9  |  [29,42,50,42,23,28,1]  |
  1992  |              resetPlaceHolder_2();  |         |  348  |     23  |  4  |   9  |  [29,42,50,42,23,28,1]  |
  1998  |                         R = R + 2;  |      2  |  350  |     23  |  4  |   9  |  [29,42,50,42,23,28,1]  |
  2002  |                         j = j + 1;  |         |  350  |     23  |  4  |  10  |  [29,42,50,42,23,28,1]  |
  2003  |              resetPlaceHolder_2();  |         |  350  |     23  |  4  |  10  |  [29,42,50,42,23,28,1]  |
  2009  |                         R = R + 2;  |      2  |  352  |     23  |  4  |  10  |  [29,42,50,42,23,28,1]  |
  2013  |                         j = j + 1;  |         |  352  |     23  |  4  |  11  |  [29,42,50,42,23,28,1]  |
  2014  |              resetPlaceHolder_2();  |         |  352  |     23  |  4  |  11  |  [29,42,50,42,23,28,1]  |
  2020  |                         R = R + 2;  |      2  |  354  |     23  |  4  |  11  |  [29,42,50,42,23,28,1]  |
  2024  |                         j = j + 1;  |         |  354  |     23  |  4  |  12  |  [29,42,50,42,23,28,1]  |
  2025  |              resetPlaceHolder_2();  |         |  354  |     23  |  4  |  12  |  [29,42,50,42,23,28,1]  |
  2031  |                         R = R + 2;  |      2  |  356  |     23  |  4  |  12  |  [29,42,50,42,23,28,1]  |
  2035  |                         j = j + 1;  |         |  356  |     23  |  4  |  13  |  [29,42,50,42,23,28,1]  |
  2036  |              resetPlaceHolder_2();  |         |  356  |     23  |  4  |  13  |  [29,42,50,42,23,28,1]  |
  2042  |                         R = R + 2;  |      2  |  358  |     23  |  4  |  13  |  [29,42,50,42,23,28,1]  |
  2046  |                         j = j + 1;  |         |  358  |     23  |  4  |  14  |  [29,42,50,42,23,28,1]  |
  2047  |              resetPlaceHolder_2();  |         |  358  |     23  |  4  |  14  |  [29,42,50,42,23,28,1]  |
  2053  |                         R = R + 2;  |      2  |  360  |     23  |  4  |  14  |  [29,42,50,42,23,28,1]  |
  2057  |                         j = j + 1;  |         |  360  |     23  |  4  |  15  |  [29,42,50,42,23,28,1]  |
  2058  |              resetPlaceHolder_2();  |         |  360  |     23  |  4  |  15  |  [29,42,50,42,23,28,1]  |
  2064  |                         R = R + 2;  |      2  |  362  |     23  |  4  |  15  |  [29,42,50,42,23,28,1]  |
  2068  |                         j = j + 1;  |         |  362  |     23  |  4  |  16  |  [29,42,50,42,23,28,1]  |
  2069  |              resetPlaceHolder_2();  |         |  362  |     23  |  4  |  16  |  [29,42,50,42,23,28,1]  |
  2075  |                         R = R + 2;  |      2  |  364  |     23  |  4  |  16  |  [29,42,50,42,23,28,1]  |
  2079  |                         j = j + 1;  |         |  364  |     23  |  4  |  17  |  [29,42,50,42,23,28,1]  |
  2080  |              resetPlaceHolder_2();  |         |  364  |     23  |  4  |  17  |  [29,42,50,42,23,28,1]  |
  2086  |                         R = R + 2;  |      2  |  366  |     23  |  4  |  17  |  [29,42,50,42,23,28,1]  |
  2090  |                         j = j + 1;  |         |  366  |     23  |  4  |  18  |  [29,42,50,42,23,28,1]  |
  2091  |              resetPlaceHolder_2();  |         |  366  |     23  |  4  |  18  |  [29,42,50,42,23,28,1]  |
  2097  |                         R = R + 2;  |      2  |  368  |     23  |  4  |  18  |  [29,42,50,42,23,28,1]  |
  2101  |                         j = j + 1;  |         |  368  |     23  |  4  |  19  |  [29,42,50,42,23,28,1]  |
  2102  |              resetPlaceHolder_2();  |         |  368  |     23  |  4  |  19  |  [29,42,50,42,23,28,1]  |
  2108  |                         R = R + 2;  |      2  |  370  |     23  |  4  |  19  |  [29,42,50,42,23,28,1]  |
  2112  |                         j = j + 1;  |         |  370  |     23  |  4  |  20  |  [29,42,50,42,23,28,1]  |
  2113  |              resetPlaceHolder_2();  |         |  370  |     23  |  4  |  20  |  [29,42,50,42,23,28,1]  |
  2119  |                         R = R + 2;  |      2  |  372  |     23  |  4  |  20  |  [29,42,50,42,23,28,1]  |
  2123  |                         j = j + 1;  |         |  372  |     23  |  4  |  21  |  [29,42,50,42,23,28,1]  |
  2124  |              resetPlaceHolder_2();  |         |  372  |     23  |  4  |  21  |  [29,42,50,42,23,28,1]  |
  2130  |                         R = R + 2;  |      2  |  374  |     23  |  4  |  21  |  [29,42,50,42,23,28,1]  |
  2134  |                         j = j + 1;  |         |  374  |     23  |  4  |  22  |  [29,42,50,42,23,28,1]  |
  2135  |              resetPlaceHolder_2();  |         |  374  |     23  |  4  |  22  |  [29,42,50,42,23,28,1]  |
  2141  |                         R = R + 2;  |      2  |  376  |     23  |  4  |  22  |  [29,42,50,42,23,28,1]  |
  2145  |                         j = j + 1;  |         |  376  |     23  |  4  |  23  |  [29,42,50,42,23,28,1]  |
  2146  |              resetPlaceHolder_2();  |         |  376  |     23  |  4  |  23  |  [29,42,50,42,23,28,1]  |
  2152  |                         R = R + 1;  |      1  |  377  |     23  |  4  |  23  |  [29,42,50,42,23,28,1]  |
  2156  |                         i = i + 1;  |         |  377  |     23  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2157  |              resetPlaceHolder_1();  |         |  377  |     23  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2163  |      entry = arrayRead(sorted, i);  |         |  377  |     28  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2165  |                         int j = 0;  |         |  377  |     28  |  5  |   0  |  [29,42,50,42,23,28,1]  |
  2171  |                         R = R + 2;  |      2  |  379  |     28  |  5  |   0  |  [29,42,50,42,23,28,1]  |
  2175  |                         j = j + 1;  |         |  379  |     28  |  5  |   1  |  [29,42,50,42,23,28,1]  |
  2176  |              resetPlaceHolder_2();  |         |  379  |     28  |  5  |   1  |  [29,42,50,42,23,28,1]  |
  2182  |                         R = R + 2;  |      2  |  381  |     28  |  5  |   1  |  [29,42,50,42,23,28,1]  |
  2186  |                         j = j + 1;  |         |  381  |     28  |  5  |   2  |  [29,42,50,42,23,28,1]  |
  2187  |              resetPlaceHolder_2();  |         |  381  |     28  |  5  |   2  |  [29,42,50,42,23,28,1]  |
  2193  |                         R = R + 2;  |      2  |  383  |     28  |  5  |   2  |  [29,42,50,42,23,28,1]  |
  2197  |                         j = j + 1;  |         |  383  |     28  |  5  |   3  |  [29,42,50,42,23,28,1]  |
  2198  |              resetPlaceHolder_2();  |         |  383  |     28  |  5  |   3  |  [29,42,50,42,23,28,1]  |
  2204  |                         R = R + 2;  |      2  |  385  |     28  |  5  |   3  |  [29,42,50,42,23,28,1]  |
  2208  |                         j = j + 1;  |         |  385  |     28  |  5  |   4  |  [29,42,50,42,23,28,1]  |
  2209  |              resetPlaceHolder_2();  |         |  385  |     28  |  5  |   4  |  [29,42,50,42,23,28,1]  |
  2215  |                         R = R + 2;  |      2  |  387  |     28  |  5  |   4  |  [29,42,50,42,23,28,1]  |
  2219  |                         j = j + 1;  |         |  387  |     28  |  5  |   5  |  [29,42,50,42,23,28,1]  |
  2220  |              resetPlaceHolder_2();  |         |  387  |     28  |  5  |   5  |  [29,42,50,42,23,28,1]  |
  2226  |                         R = R + 2;  |      2  |  389  |     28  |  5  |   5  |  [29,42,50,42,23,28,1]  |
  2230  |                         j = j + 1;  |         |  389  |     28  |  5  |   6  |  [29,42,50,42,23,28,1]  |
  2231  |              resetPlaceHolder_2();  |         |  389  |     28  |  5  |   6  |  [29,42,50,42,23,28,1]  |
  2237  |                         R = R + 2;  |      2  |  391  |     28  |  5  |   6  |  [29,42,50,42,23,28,1]  |
  2241  |                         j = j + 1;  |         |  391  |     28  |  5  |   7  |  [29,42,50,42,23,28,1]  |
  2242  |              resetPlaceHolder_2();  |         |  391  |     28  |  5  |   7  |  [29,42,50,42,23,28,1]  |
  2248  |                         R = R + 2;  |      2  |  393  |     28  |  5  |   7  |  [29,42,50,42,23,28,1]  |
  2252  |                         j = j + 1;  |         |  393  |     28  |  5  |   8  |  [29,42,50,42,23,28,1]  |
  2253  |              resetPlaceHolder_2();  |         |  393  |     28  |  5  |   8  |  [29,42,50,42,23,28,1]  |
  2259  |                         R = R + 2;  |      2  |  395  |     28  |  5  |   8  |  [29,42,50,42,23,28,1]  |
  2263  |                         j = j + 1;  |         |  395  |     28  |  5  |   9  |  [29,42,50,42,23,28,1]  |
  2264  |              resetPlaceHolder_2();  |         |  395  |     28  |  5  |   9  |  [29,42,50,42,23,28,1]  |
  2270  |                         R = R + 2;  |      2  |  397  |     28  |  5  |   9  |  [29,42,50,42,23,28,1]  |
  2274  |                         j = j + 1;  |         |  397  |     28  |  5  |  10  |  [29,42,50,42,23,28,1]  |
  2275  |              resetPlaceHolder_2();  |         |  397  |     28  |  5  |  10  |  [29,42,50,42,23,28,1]  |
  2281  |                         R = R + 2;  |      2  |  399  |     28  |  5  |  10  |  [29,42,50,42,23,28,1]  |
  2285  |                         j = j + 1;  |         |  399  |     28  |  5  |  11  |  [29,42,50,42,23,28,1]  |
  2286  |              resetPlaceHolder_2();  |         |  399  |     28  |  5  |  11  |  [29,42,50,42,23,28,1]  |
  2292  |                         R = R + 2;  |      2  |  401  |     28  |  5  |  11  |  [29,42,50,42,23,28,1]  |
  2296  |                         j = j + 1;  |         |  401  |     28  |  5  |  12  |  [29,42,50,42,23,28,1]  |
  2297  |              resetPlaceHolder_2();  |         |  401  |     28  |  5  |  12  |  [29,42,50,42,23,28,1]  |
  2303  |                         R = R + 2;  |      2  |  403  |     28  |  5  |  12  |  [29,42,50,42,23,28,1]  |
  2307  |                         j = j + 1;  |         |  403  |     28  |  5  |  13  |  [29,42,50,42,23,28,1]  |
  2308  |              resetPlaceHolder_2();  |         |  403  |     28  |  5  |  13  |  [29,42,50,42,23,28,1]  |
  2314  |                         R = R + 2;  |      2  |  405  |     28  |  5  |  13  |  [29,42,50,42,23,28,1]  |
  2318  |                         j = j + 1;  |         |  405  |     28  |  5  |  14  |  [29,42,50,42,23,28,1]  |
  2319  |              resetPlaceHolder_2();  |         |  405  |     28  |  5  |  14  |  [29,42,50,42,23,28,1]  |
  2325  |                         R = R + 2;  |      2  |  407  |     28  |  5  |  14  |  [29,42,50,42,23,28,1]  |
  2329  |                         j = j + 1;  |         |  407  |     28  |  5  |  15  |  [29,42,50,42,23,28,1]  |
  2330  |              resetPlaceHolder_2();  |         |  407  |     28  |  5  |  15  |  [29,42,50,42,23,28,1]  |
  2336  |                         R = R + 2;  |      2  |  409  |     28  |  5  |  15  |  [29,42,50,42,23,28,1]  |
  2340  |                         j = j + 1;  |         |  409  |     28  |  5  |  16  |  [29,42,50,42,23,28,1]  |
  2341  |              resetPlaceHolder_2();  |         |  409  |     28  |  5  |  16  |  [29,42,50,42,23,28,1]  |
  2347  |                         R = R + 2;  |      2  |  411  |     28  |  5  |  16  |  [29,42,50,42,23,28,1]  |
  2351  |                         j = j + 1;  |         |  411  |     28  |  5  |  17  |  [29,42,50,42,23,28,1]  |
  2352  |              resetPlaceHolder_2();  |         |  411  |     28  |  5  |  17  |  [29,42,50,42,23,28,1]  |
  2358  |                         R = R + 2;  |      2  |  413  |     28  |  5  |  17  |  [29,42,50,42,23,28,1]  |
  2362  |                         j = j + 1;  |         |  413  |     28  |  5  |  18  |  [29,42,50,42,23,28,1]  |
  2363  |              resetPlaceHolder_2();  |         |  413  |     28  |  5  |  18  |  [29,42,50,42,23,28,1]  |
  2369  |                         R = R + 2;  |      2  |  415  |     28  |  5  |  18  |  [29,42,50,42,23,28,1]  |
  2373  |                         j = j + 1;  |         |  415  |     28  |  5  |  19  |  [29,42,50,42,23,28,1]  |
  2374  |              resetPlaceHolder_2();  |         |  415  |     28  |  5  |  19  |  [29,42,50,42,23,28,1]  |
  2380  |                         R = R + 2;  |      2  |  417  |     28  |  5  |  19  |  [29,42,50,42,23,28,1]  |
  2384  |                         j = j + 1;  |         |  417  |     28  |  5  |  20  |  [29,42,50,42,23,28,1]  |
  2385  |              resetPlaceHolder_2();  |         |  417  |     28  |  5  |  20  |  [29,42,50,42,23,28,1]  |
  2391  |                         R = R + 2;  |      2  |  419  |     28  |  5  |  20  |  [29,42,50,42,23,28,1]  |
  2395  |                         j = j + 1;  |         |  419  |     28  |  5  |  21  |  [29,42,50,42,23,28,1]  |
  2396  |              resetPlaceHolder_2();  |         |  419  |     28  |  5  |  21  |  [29,42,50,42,23,28,1]  |
  2402  |                         R = R + 2;  |      2  |  421  |     28  |  5  |  21  |  [29,42,50,42,23,28,1]  |
  2406  |                         j = j + 1;  |         |  421  |     28  |  5  |  22  |  [29,42,50,42,23,28,1]  |
  2407  |              resetPlaceHolder_2();  |         |  421  |     28  |  5  |  22  |  [29,42,50,42,23,28,1]  |
  2413  |                         R = R + 2;  |      2  |  423  |     28  |  5  |  22  |  [29,42,50,42,23,28,1]  |
  2417  |                         j = j + 1;  |         |  423  |     28  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2418  |              resetPlaceHolder_2();  |         |  423  |     28  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2424  |                         R = R + 2;  |      2  |  425  |     28  |  5  |  23  |  [29,42,50,42,23,28,1]  |
  2428  |                         j = j + 1;  |         |  425  |     28  |  5  |  24  |  [29,42,50,42,23,28,1]  |
  2429  |              resetPlaceHolder_2();  |         |  425  |     28  |  5  |  24  |  [29,42,50,42,23,28,1]  |
  2435  |                         R = R + 2;  |      2  |  427  |     28  |  5  |  24  |  [29,42,50,42,23,28,1]  |
  2439  |                         j = j + 1;  |         |  427  |     28  |  5  |  25  |  [29,42,50,42,23,28,1]  |
  2440  |              resetPlaceHolder_2();  |         |  427  |     28  |  5  |  25  |  [29,42,50,42,23,28,1]  |
  2446  |                         R = R + 2;  |      2  |  429  |     28  |  5  |  25  |  [29,42,50,42,23,28,1]  |
  2450  |                         j = j + 1;  |         |  429  |     28  |  5  |  26  |  [29,42,50,42,23,28,1]  |
  2451  |              resetPlaceHolder_2();  |         |  429  |     28  |  5  |  26  |  [29,42,50,42,23,28,1]  |
  2457  |                         R = R + 2;  |      2  |  431  |     28  |  5  |  26  |  [29,42,50,42,23,28,1]  |
  2461  |                         j = j + 1;  |         |  431  |     28  |  5  |  27  |  [29,42,50,42,23,28,1]  |
  2462  |              resetPlaceHolder_2();  |         |  431  |     28  |  5  |  27  |  [29,42,50,42,23,28,1]  |
  2468  |                         R = R + 2;  |      2  |  433  |     28  |  5  |  27  |  [29,42,50,42,23,28,1]  |
  2472  |                         j = j + 1;  |         |  433  |     28  |  5  |  28  |  [29,42,50,42,23,28,1]  |
  2473  |              resetPlaceHolder_2();  |         |  433  |     28  |  5  |  28  |  [29,42,50,42,23,28,1]  |
  2479  |                         R = R + 1;  |      1  |  434  |     28  |  5  |  28  |  [29,42,50,42,23,28,1]  |
  2483  |                         i = i + 1;  |         |  434  |     28  |  6  |  28  |  [29,42,50,42,23,28,1]  |
  2484  |              resetPlaceHolder_1();  |         |  434  |     28  |  6  |  28  |  [29,42,50,42,23,28,1]  |
  2490  |      entry = arrayRead(sorted, i);  |         |  434  |      1  |  6  |  28  |  [29,42,50,42,23,28,1]  |
  2492  |                         int j = 0;  |         |  434  |      1  |  6  |   0  |  [29,42,50,42,23,28,1]  |
  2498  |                         R = R + 2;  |      2  |  436  |      1  |  6  |   0  |  [29,42,50,42,23,28,1]  |
  2502  |                         j = j + 1;  |         |  436  |      1  |  6  |   1  |  [29,42,50,42,23,28,1]  |
  2503  |              resetPlaceHolder_2();  |         |  436  |      1  |  6  |   1  |  [29,42,50,42,23,28,1]  |
  2509  |                         R = R + 1;  |      1  |  437  |      1  |  6  |   1  |  [29,42,50,42,23,28,1]  |
  2513  |                         i = i + 1;  |         |  437  |      1  |  7  |   1  |  [29,42,50,42,23,28,1]  |
  2514  |              resetPlaceHolder_1();  |         |  437  |      1  |  7  |   1  |  [29,42,50,42,23,28,1]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 222 trace node indices: [1322, 1036, 1190, 1168, 2336, 2031, 1899, 893, 1179, 555, 217, 2248, 379, 511, 2380, 1671, 533, 500, 797, 2141, 698, 1954, 2042, 709, 2020, 1921, 1366, 1803, 52, 1792, 184, 1660, 1462, 1704, 1572, 228, 316, 261, 1847, 2237, 2259, 1418, 1682, 1858, 937, 981, 687, 1377, 2281, 2424, 1943, 1201, 849, 74, 206, 2204, 85, 1311, 1047, 1223, 1091, 1355, 349, 467, 566, 665, 522, 830, 1836, 456, 1910, 742, 2498, 1234, 948, 2509, 610, 753, 2053, 489, 2108, 970, 96, 1825, 1451, 1539, 654, 1932, 173, 129, 1429, 1715, 41, 1759, 1627, 1333, 1814, 2402, 1616, 926, 1278, 1135, 412, 2413, 1146, 2292, 2391, 819, 904, 423, 1388, 577, 118, 1965, 1124, 1256, 2193, 445, 1058, 2457, 1638, 2358, 764, 2119, 2097, 434, 599, 2182, 1080, 2314, 140, 2446, 621, 915, 1344, 2075, 1594, 959, 2171, 1245, 1528, 2086, 2064, 2369, 1113, 1726, 2303, 1102, 1583, 162, 1748, 1003, 1770, 63, 1025, 1605, 327, 1267, 1484, 1987, 1300, 1869, 338, 808, 643, 2468, 544, 1506, 2435, 250, 1649, 2479, 1157, 2347, 2215, 1517, 2325, 1781, 1289, 368, 2226, 1998, 588, 390, 632, 401, 2130, 731, 786, 2152, 2009, 1440, 478, 1212, 272, 151, 30, 305, 107, 239, 294, 1495, 195, 1693, 1561, 1473, 720, 283, 860, 1976, 1550, 992, 1880, 871, 1399, 2270, 1737, 775, 676, 1069, 882, 1014]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,368,379,390,401,412,423,434,445,456,467,478,489,500,511,522,533,544,555,566,577,588,599,610,621,632,643,654,665,676,687,698,709,720,731,742,753,764,775,786,797,808,819,830,849,860,871,882,893,904,915,926,937,948,959,970,981,992,1003,1014,1025,1036,1047,1058,1069,1080,1091,1102,1113,1124,1135,1146,1157,1168,1179,1190,1201,1212,1223,1234,1245,1256,1267,1278,1289,1300,1311,1322,1333,1344,1355,1366,1377,1388,1399,1418,1429,1440,1451,1462,1473,1484,1495,1506,1517,1528,1539,1550,1561,1572,1583,1594,1605,1616,1627,1638,1649,1660,1671,1682,1693,1704,1715,1726,1737,1748,1759,1770,1781,1792,1803,1814,1825,1836,1847,1858,1869,1880,1899,1910,1921,1932,1943,1954,1965,1976,1987,1998,2009,2020,2031,2042,2053,2064,2075,2086,2097,2108,2119,2130,2141,2152,2171,2182,2193,2204,2215,2226,2237,2248,2259,2270,2281,2292,2303,2314,2325,2336,2347,2358,2369,2380,2391,2402,2413,2424,2435,2446,2457,2468,2479,2498,2509}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 1;  |      1  |                         0  |
   354  |  resetPlaceHolder_1();  |         |                            |
   368  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_2();  |         |                            |
   379  |             R = R + 2;  |      2  |                         0  |
   384  |  resetPlaceHolder_2();  |         |                            |
   390  |             R = R + 2;  |      2  |                         0  |
   395  |  resetPlaceHolder_2();  |         |                            |
   401  |             R = R + 2;  |      2  |                         0  |
   406  |  resetPlaceHolder_2();  |         |                            |
   412  |             R = R + 2;  |      2  |                         0  |
   417  |  resetPlaceHolder_2();  |         |                            |
   423  |             R = R + 2;  |      2  |                         0  |
   428  |  resetPlaceHolder_2();  |         |                            |
   434  |             R = R + 2;  |      2  |                         0  |
   439  |  resetPlaceHolder_2();  |         |                            |
   445  |             R = R + 2;  |      2  |                         0  |
   450  |  resetPlaceHolder_2();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   461  |  resetPlaceHolder_2();  |         |                            |
   467  |             R = R + 2;  |      2  |                         0  |
   472  |  resetPlaceHolder_2();  |         |                            |
   478  |             R = R + 2;  |      2  |                         0  |
   483  |  resetPlaceHolder_2();  |         |                            |
   489  |             R = R + 2;  |      2  |                         0  |
   494  |  resetPlaceHolder_2();  |         |                            |
   500  |             R = R + 2;  |      2  |                         0  |
   505  |  resetPlaceHolder_2();  |         |                            |
   511  |             R = R + 2;  |      2  |                         0  |
   516  |  resetPlaceHolder_2();  |         |                            |
   522  |             R = R + 2;  |      2  |                         0  |
   527  |  resetPlaceHolder_2();  |         |                            |
   533  |             R = R + 2;  |      2  |                         0  |
   538  |  resetPlaceHolder_2();  |         |                            |
   544  |             R = R + 2;  |      2  |                         0  |
   549  |  resetPlaceHolder_2();  |         |                            |
   555  |             R = R + 2;  |      2  |                         0  |
   560  |  resetPlaceHolder_2();  |         |                            |
   566  |             R = R + 2;  |      2  |                         0  |
   571  |  resetPlaceHolder_2();  |         |                            |
   577  |             R = R + 2;  |      2  |                         0  |
   582  |  resetPlaceHolder_2();  |         |                            |
   588  |             R = R + 2;  |      2  |                         0  |
   593  |  resetPlaceHolder_2();  |         |                            |
   599  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_2();  |         |                            |
   610  |             R = R + 2;  |      2  |                         0  |
   615  |  resetPlaceHolder_2();  |         |                            |
   621  |             R = R + 2;  |      2  |                         0  |
   626  |  resetPlaceHolder_2();  |         |                            |
   632  |             R = R + 2;  |      2  |                         0  |
   637  |  resetPlaceHolder_2();  |         |                            |
   643  |             R = R + 2;  |      2  |                         0  |
   648  |  resetPlaceHolder_2();  |         |                            |
   654  |             R = R + 2;  |      2  |                         0  |
   659  |  resetPlaceHolder_2();  |         |                            |
   665  |             R = R + 2;  |      2  |                         0  |
   670  |  resetPlaceHolder_2();  |         |                            |
   676  |             R = R + 2;  |      2  |                         0  |
   681  |  resetPlaceHolder_2();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   692  |  resetPlaceHolder_2();  |         |                            |
   698  |             R = R + 2;  |      2  |                         0  |
   703  |  resetPlaceHolder_2();  |         |                            |
   709  |             R = R + 2;  |      2  |                         0  |
   714  |  resetPlaceHolder_2();  |         |                            |
   720  |             R = R + 2;  |      2  |                         0  |
   725  |  resetPlaceHolder_2();  |         |                            |
   731  |             R = R + 2;  |      2  |                         0  |
   736  |  resetPlaceHolder_2();  |         |                            |
   742  |             R = R + 2;  |      2  |                         0  |
   747  |  resetPlaceHolder_2();  |         |                            |
   753  |             R = R + 2;  |      2  |                         0  |
   758  |  resetPlaceHolder_2();  |         |                            |
   764  |             R = R + 2;  |      2  |                         0  |
   769  |  resetPlaceHolder_2();  |         |                            |
   775  |             R = R + 2;  |      2  |                         0  |
   780  |  resetPlaceHolder_2();  |         |                            |
   786  |             R = R + 2;  |      2  |                         0  |
   791  |  resetPlaceHolder_2();  |         |                            |
   797  |             R = R + 2;  |      2  |                         0  |
   802  |  resetPlaceHolder_2();  |         |                            |
   808  |             R = R + 2;  |      2  |                         0  |
   813  |  resetPlaceHolder_2();  |         |                            |
   819  |             R = R + 2;  |      2  |                         0  |
   824  |  resetPlaceHolder_2();  |         |                            |
   830  |             R = R + 1;  |      1  |                         0  |
   835  |  resetPlaceHolder_1();  |         |                            |
   849  |             R = R + 2;  |      2  |                         0  |
   854  |  resetPlaceHolder_2();  |         |                            |
   860  |             R = R + 2;  |      2  |                         0  |
   865  |  resetPlaceHolder_2();  |         |                            |
   871  |             R = R + 2;  |      2  |                         0  |
   876  |  resetPlaceHolder_2();  |         |                            |
   882  |             R = R + 2;  |      2  |                         0  |
   887  |  resetPlaceHolder_2();  |         |                            |
   893  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_2();  |         |                            |
   904  |             R = R + 2;  |      2  |                         0  |
   909  |  resetPlaceHolder_2();  |         |                            |
   915  |             R = R + 2;  |      2  |                         0  |
   920  |  resetPlaceHolder_2();  |         |                            |
   926  |             R = R + 2;  |      2  |                         0  |
   931  |  resetPlaceHolder_2();  |         |                            |
   937  |             R = R + 2;  |      2  |                         0  |
   942  |  resetPlaceHolder_2();  |         |                            |
   948  |             R = R + 2;  |      2  |                         0  |
   953  |  resetPlaceHolder_2();  |         |                            |
   959  |             R = R + 2;  |      2  |                         0  |
   964  |  resetPlaceHolder_2();  |         |                            |
   970  |             R = R + 2;  |      2  |                         0  |
   975  |  resetPlaceHolder_2();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   986  |  resetPlaceHolder_2();  |         |                            |
   992  |             R = R + 2;  |      2  |                         0  |
   997  |  resetPlaceHolder_2();  |         |                            |
  1003  |             R = R + 2;  |      2  |                         0  |
  1008  |  resetPlaceHolder_2();  |         |                            |
  1014  |             R = R + 2;  |      2  |                         0  |
  1019  |  resetPlaceHolder_2();  |         |                            |
  1025  |             R = R + 2;  |      2  |                         0  |
  1030  |  resetPlaceHolder_2();  |         |                            |
  1036  |             R = R + 2;  |      2  |                         0  |
  1041  |  resetPlaceHolder_2();  |         |                            |
  1047  |             R = R + 2;  |      2  |                         0  |
  1052  |  resetPlaceHolder_2();  |         |                            |
  1058  |             R = R + 2;  |      2  |                         0  |
  1063  |  resetPlaceHolder_2();  |         |                            |
  1069  |             R = R + 2;  |      2  |                         0  |
  1074  |  resetPlaceHolder_2();  |         |                            |
  1080  |             R = R + 2;  |      2  |                         0  |
  1085  |  resetPlaceHolder_2();  |         |                            |
  1091  |             R = R + 2;  |      2  |                         0  |
  1096  |  resetPlaceHolder_2();  |         |                            |
  1102  |             R = R + 2;  |      2  |                         0  |
  1107  |  resetPlaceHolder_2();  |         |                            |
  1113  |             R = R + 2;  |      2  |                         0  |
  1118  |  resetPlaceHolder_2();  |         |                            |
  1124  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_2();  |         |                            |
  1135  |             R = R + 2;  |      2  |                         0  |
  1140  |  resetPlaceHolder_2();  |         |                            |
  1146  |             R = R + 2;  |      2  |                         0  |
  1151  |  resetPlaceHolder_2();  |         |                            |
  1157  |             R = R + 2;  |      2  |                         0  |
  1162  |  resetPlaceHolder_2();  |         |                            |
  1168  |             R = R + 2;  |      2  |                         0  |
  1173  |  resetPlaceHolder_2();  |         |                            |
  1179  |             R = R + 2;  |      2  |                         0  |
  1184  |  resetPlaceHolder_2();  |         |                            |
  1190  |             R = R + 2;  |      2  |                         0  |
  1195  |  resetPlaceHolder_2();  |         |                            |
  1201  |             R = R + 2;  |      2  |                         0  |
  1206  |  resetPlaceHolder_2();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1217  |  resetPlaceHolder_2();  |         |                            |
  1223  |             R = R + 2;  |      2  |                         0  |
  1228  |  resetPlaceHolder_2();  |         |                            |
  1234  |             R = R + 2;  |      2  |                         0  |
  1239  |  resetPlaceHolder_2();  |         |                            |
  1245  |             R = R + 2;  |      2  |                         0  |
  1250  |  resetPlaceHolder_2();  |         |                            |
  1256  |             R = R + 2;  |      2  |                         0  |
  1261  |  resetPlaceHolder_2();  |         |                            |
  1267  |             R = R + 2;  |      2  |                         0  |
  1272  |  resetPlaceHolder_2();  |         |                            |
  1278  |             R = R + 2;  |      2  |                         0  |
  1283  |  resetPlaceHolder_2();  |         |                            |
  1289  |             R = R + 2;  |      2  |                         0  |
  1294  |  resetPlaceHolder_2();  |         |                            |
  1300  |             R = R + 2;  |      2  |                         0  |
  1305  |  resetPlaceHolder_2();  |         |                            |
  1311  |             R = R + 2;  |      2  |                         0  |
  1316  |  resetPlaceHolder_2();  |         |                            |
  1322  |             R = R + 2;  |      2  |                         0  |
  1327  |  resetPlaceHolder_2();  |         |                            |
  1333  |             R = R + 2;  |      2  |                         0  |
  1338  |  resetPlaceHolder_2();  |         |                            |
  1344  |             R = R + 2;  |      2  |                         0  |
  1349  |  resetPlaceHolder_2();  |         |                            |
  1355  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_2();  |         |                            |
  1366  |             R = R + 2;  |      2  |                         0  |
  1371  |  resetPlaceHolder_2();  |         |                            |
  1377  |             R = R + 2;  |      2  |                         0  |
  1382  |  resetPlaceHolder_2();  |         |                            |
  1388  |             R = R + 2;  |      2  |                         0  |
  1393  |  resetPlaceHolder_2();  |         |                            |
  1399  |             R = R + 1;  |      1  |                         0  |
  1404  |  resetPlaceHolder_1();  |         |                            |
  1418  |             R = R + 2;  |      2  |                         0  |
  1423  |  resetPlaceHolder_2();  |         |                            |
  1429  |             R = R + 2;  |      2  |                         0  |
  1434  |  resetPlaceHolder_2();  |         |                            |
  1440  |             R = R + 2;  |      2  |                         0  |
  1445  |  resetPlaceHolder_2();  |         |                            |
  1451  |             R = R + 2;  |      2  |                         0  |
  1456  |  resetPlaceHolder_2();  |         |                            |
  1462  |             R = R + 2;  |      2  |                         0  |
  1467  |  resetPlaceHolder_2();  |         |                            |
  1473  |             R = R + 2;  |      2  |                         0  |
  1478  |  resetPlaceHolder_2();  |         |                            |
  1484  |             R = R + 2;  |      2  |                         0  |
  1489  |  resetPlaceHolder_2();  |         |                            |
  1495  |             R = R + 2;  |      2  |                         0  |
  1500  |  resetPlaceHolder_2();  |         |                            |
  1506  |             R = R + 2;  |      2  |                         0  |
  1511  |  resetPlaceHolder_2();  |         |                            |
  1517  |             R = R + 2;  |      2  |                         0  |
  1522  |  resetPlaceHolder_2();  |         |                            |
  1528  |             R = R + 2;  |      2  |                         0  |
  1533  |  resetPlaceHolder_2();  |         |                            |
  1539  |             R = R + 2;  |      2  |                         0  |
  1544  |  resetPlaceHolder_2();  |         |                            |
  1550  |             R = R + 2;  |      2  |                         0  |
  1555  |  resetPlaceHolder_2();  |         |                            |
  1561  |             R = R + 2;  |      2  |                         0  |
  1566  |  resetPlaceHolder_2();  |         |                            |
  1572  |             R = R + 2;  |      2  |                         0  |
  1577  |  resetPlaceHolder_2();  |         |                            |
  1583  |             R = R + 2;  |      2  |                         0  |
  1588  |  resetPlaceHolder_2();  |         |                            |
  1594  |             R = R + 2;  |      2  |                         0  |
  1599  |  resetPlaceHolder_2();  |         |                            |
  1605  |             R = R + 2;  |      2  |                         0  |
  1610  |  resetPlaceHolder_2();  |         |                            |
  1616  |             R = R + 2;  |      2  |                         0  |
  1621  |  resetPlaceHolder_2();  |         |                            |
  1627  |             R = R + 2;  |      2  |                         0  |
  1632  |  resetPlaceHolder_2();  |         |                            |
  1638  |             R = R + 2;  |      2  |                         0  |
  1643  |  resetPlaceHolder_2();  |         |                            |
  1649  |             R = R + 2;  |      2  |                         0  |
  1654  |  resetPlaceHolder_2();  |         |                            |
  1660  |             R = R + 2;  |      2  |                         0  |
  1665  |  resetPlaceHolder_2();  |         |                            |
  1671  |             R = R + 2;  |      2  |                         0  |
  1676  |  resetPlaceHolder_2();  |         |                            |
  1682  |             R = R + 2;  |      2  |                         0  |
  1687  |  resetPlaceHolder_2();  |         |                            |
  1693  |             R = R + 2;  |      2  |                         0  |
  1698  |  resetPlaceHolder_2();  |         |                            |
  1704  |             R = R + 2;  |      2  |                         0  |
  1709  |  resetPlaceHolder_2();  |         |                            |
  1715  |             R = R + 2;  |      2  |                         0  |
  1720  |  resetPlaceHolder_2();  |         |                            |
  1726  |             R = R + 2;  |      2  |                         0  |
  1731  |  resetPlaceHolder_2();  |         |                            |
  1737  |             R = R + 2;  |      2  |                         0  |
  1742  |  resetPlaceHolder_2();  |         |                            |
  1748  |             R = R + 2;  |      2  |                         0  |
  1753  |  resetPlaceHolder_2();  |         |                            |
  1759  |             R = R + 2;  |      2  |                         0  |
  1764  |  resetPlaceHolder_2();  |         |                            |
  1770  |             R = R + 2;  |      2  |                         0  |
  1775  |  resetPlaceHolder_2();  |         |                            |
  1781  |             R = R + 2;  |      2  |                         0  |
  1786  |  resetPlaceHolder_2();  |         |                            |
  1792  |             R = R + 2;  |      2  |                         0  |
  1797  |  resetPlaceHolder_2();  |         |                            |
  1803  |             R = R + 2;  |      2  |                         0  |
  1808  |  resetPlaceHolder_2();  |         |                            |
  1814  |             R = R + 2;  |      2  |                         0  |
  1819  |  resetPlaceHolder_2();  |         |                            |
  1825  |             R = R + 2;  |      2  |                         0  |
  1830  |  resetPlaceHolder_2();  |         |                            |
  1836  |             R = R + 2;  |      2  |                         0  |
  1841  |  resetPlaceHolder_2();  |         |                            |
  1847  |             R = R + 2;  |      2  |                         0  |
  1852  |  resetPlaceHolder_2();  |         |                            |
  1858  |             R = R + 2;  |      2  |                         0  |
  1863  |  resetPlaceHolder_2();  |         |                            |
  1869  |             R = R + 2;  |      2  |                         0  |
  1874  |  resetPlaceHolder_2();  |         |                            |
  1880  |             R = R + 1;  |      1  |                         0  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1899  |             R = R + 2;  |      2  |                         0  |
  1904  |  resetPlaceHolder_2();  |         |                            |
  1910  |             R = R + 2;  |      2  |                         0  |
  1915  |  resetPlaceHolder_2();  |         |                            |
  1921  |             R = R + 2;  |      2  |                         0  |
  1926  |  resetPlaceHolder_2();  |         |                            |
  1932  |             R = R + 2;  |      2  |                         0  |
  1937  |  resetPlaceHolder_2();  |         |                            |
  1943  |             R = R + 2;  |      2  |                         0  |
  1948  |  resetPlaceHolder_2();  |         |                            |
  1954  |             R = R + 2;  |      2  |                         0  |
  1959  |  resetPlaceHolder_2();  |         |                            |
  1965  |             R = R + 2;  |      2  |                         0  |
  1970  |  resetPlaceHolder_2();  |         |                            |
  1976  |             R = R + 2;  |      2  |                         0  |
  1981  |  resetPlaceHolder_2();  |         |                            |
  1987  |             R = R + 2;  |      2  |                         0  |
  1992  |  resetPlaceHolder_2();  |         |                            |
  1998  |             R = R + 2;  |      2  |                         0  |
  2003  |  resetPlaceHolder_2();  |         |                            |
  2009  |             R = R + 2;  |      2  |                         0  |
  2014  |  resetPlaceHolder_2();  |         |                            |
  2020  |             R = R + 2;  |      2  |                         0  |
  2025  |  resetPlaceHolder_2();  |         |                            |
  2031  |             R = R + 2;  |      2  |                         0  |
  2036  |  resetPlaceHolder_2();  |         |                            |
  2042  |             R = R + 2;  |      2  |                         0  |
  2047  |  resetPlaceHolder_2();  |         |                            |
  2053  |             R = R + 2;  |      2  |                         0  |
  2058  |  resetPlaceHolder_2();  |         |                            |
  2064  |             R = R + 2;  |      2  |                         0  |
  2069  |  resetPlaceHolder_2();  |         |                            |
  2075  |             R = R + 2;  |      2  |                         0  |
  2080  |  resetPlaceHolder_2();  |         |                            |
  2086  |             R = R + 2;  |      2  |                         0  |
  2091  |  resetPlaceHolder_2();  |         |                            |
  2097  |             R = R + 2;  |      2  |                         0  |
  2102  |  resetPlaceHolder_2();  |         |                            |
  2108  |             R = R + 2;  |      2  |                         0  |
  2113  |  resetPlaceHolder_2();  |         |                            |
  2119  |             R = R + 2;  |      2  |                         0  |
  2124  |  resetPlaceHolder_2();  |         |                            |
  2130  |             R = R + 2;  |      2  |                         0  |
  2135  |  resetPlaceHolder_2();  |         |                            |
  2141  |             R = R + 2;  |      2  |                         0  |
  2146  |  resetPlaceHolder_2();  |         |                            |
  2152  |             R = R + 1;  |      1  |                         0  |
  2157  |  resetPlaceHolder_1();  |         |                            |
  2171  |             R = R + 2;  |      2  |                         0  |
  2176  |  resetPlaceHolder_2();  |         |                            |
  2182  |             R = R + 2;  |      2  |                         0  |
  2187  |  resetPlaceHolder_2();  |         |                            |
  2193  |             R = R + 2;  |      2  |                         0  |
  2198  |  resetPlaceHolder_2();  |         |                            |
  2204  |             R = R + 2;  |      2  |                         0  |
  2209  |  resetPlaceHolder_2();  |         |                            |
  2215  |             R = R + 2;  |      2  |                         0  |
  2220  |  resetPlaceHolder_2();  |         |                            |
  2226  |             R = R + 2;  |      2  |                         0  |
  2231  |  resetPlaceHolder_2();  |         |                            |
  2237  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_2();  |         |                            |
  2248  |             R = R + 2;  |      2  |                         0  |
  2253  |  resetPlaceHolder_2();  |         |                            |
  2259  |             R = R + 2;  |      2  |                         0  |
  2264  |  resetPlaceHolder_2();  |         |                            |
  2270  |             R = R + 2;  |      2  |                         0  |
  2275  |  resetPlaceHolder_2();  |         |                            |
  2281  |             R = R + 2;  |      2  |                         0  |
  2286  |  resetPlaceHolder_2();  |         |                            |
  2292  |             R = R + 2;  |      2  |                         0  |
  2297  |  resetPlaceHolder_2();  |         |                            |
  2303  |             R = R + 2;  |      2  |                         0  |
  2308  |  resetPlaceHolder_2();  |         |                            |
  2314  |             R = R + 2;  |      2  |                         0  |
  2319  |  resetPlaceHolder_2();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2330  |  resetPlaceHolder_2();  |         |                            |
  2336  |             R = R + 2;  |      2  |                         0  |
  2341  |  resetPlaceHolder_2();  |         |                            |
  2347  |             R = R + 2;  |      2  |                         0  |
  2352  |  resetPlaceHolder_2();  |         |                            |
  2358  |             R = R + 2;  |      2  |                         0  |
  2363  |  resetPlaceHolder_2();  |         |                            |
  2369  |             R = R + 2;  |      2  |                         0  |
  2374  |  resetPlaceHolder_2();  |         |                            |
  2380  |             R = R + 2;  |      2  |                         0  |
  2385  |  resetPlaceHolder_2();  |         |                            |
  2391  |             R = R + 2;  |      2  |                         0  |
  2396  |  resetPlaceHolder_2();  |         |                            |
  2402  |             R = R + 2;  |      2  |                         0  |
  2407  |  resetPlaceHolder_2();  |         |                            |
  2413  |             R = R + 2;  |      2  |                         0  |
  2418  |  resetPlaceHolder_2();  |         |                            |
  2424  |             R = R + 2;  |      2  |                         0  |
  2429  |  resetPlaceHolder_2();  |         |                            |
  2435  |             R = R + 2;  |      2  |                         0  |
  2440  |  resetPlaceHolder_2();  |         |                            |
  2446  |             R = R + 2;  |      2  |                         0  |
  2451  |  resetPlaceHolder_2();  |         |                            |
  2457  |             R = R + 2;  |      2  |                         0  |
  2462  |  resetPlaceHolder_2();  |         |                            |
  2468  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_2();  |         |                            |
  2479  |             R = R + 1;  |      1  |                         0  |
  2484  |  resetPlaceHolder_1();  |         |                            |
  2498  |             R = R + 2;  |      2  |                         0  |
  2503  |  resetPlaceHolder_2();  |         |                            |
  2509  |             R = R + 1;  |      1  |                         0  |
  2514  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 12:04:21,166 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:04:31,257 INFO     Done. Execution time: 10.089916706085205 seconds
2023-01-31 12:04:31,257 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1204-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1204-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.083s
user	0m21.417s
sys	0m2.402s

2023-01-31 12:04:31,257 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 12:04:31,257 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:04:33,005 INFO     Done. Execution time: 1.7472901344299316 seconds
2023-01-31 12:04:33,005 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 12:04:33,005 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 12:04:33,005 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 12:04:34,644 INFO     Done. Execution time: 1.6387674808502197 seconds
2023-01-31 12:04:34,644 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 12:04:34,644 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:04:35,612 INFO     Done. Execution time: 0.9678452014923096 seconds
2023-01-31 12:04:35,613 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.961s
user	0m1.607s
sys	0m0.118s

2023-01-31 12:04:35,613 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 12:04:35,613 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:07:41,720 INFO     Done. Execution time: 186.10682129859924 seconds
2023-01-31 12:07:41,720 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz8246347350245265662/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8246347350245265662/bin -o /tmp/qfuzz8246347350245265662/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8246347350245265662/bin
Found file /tmp/qfuzz8246347350245265662/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz8246347350245265662/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8246347350245265662/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8246347350245265662/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8246347350245265662/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8246347350245265662/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 122757 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [53.00]
3; /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 15, 2, 39, 34, 13, 45, 37, 24, 27, 23, 28, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8246347350245265662/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_120741_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,15,2,39,34,13,45]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,50,42,23,28,1,23]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:07:41,720 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-31 12:07:41,721 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 12:07:46,445 INFO     Done. Execution time: 4.723913192749023 seconds
2023-01-31 12:07:46,445 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_120741_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_120741_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,15,2,39,34,13,45])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,50,42,23,28,1,23])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [5,15,2,39,34,13,45]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [5,50,42,23,28,1,23]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex        |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [5,15,2,39,34,13,45]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,15,2,39,34,13,45]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,15,2,39,34,13,45]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,15,2,39,34,13,45]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [5,15,2,39,34,13,45]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [5,15,2,39,34,13,45]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [5,15,2,39,34,13,45]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [5,15,2,39,34,13,45]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [5,15,2,39,34,13,45]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [5,15,2,39,34,13,45]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      15  |  1  |         1  |        2  |    1  |      1  |  [5,15,2,39,34,13,45]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      15  |  1  |         1  |        2  |    2  |      1  |  [5,15,2,39,34,13,45]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      15  |  2  |         1  |        2  |    2  |      1  |  [5,15,2,39,34,13,45]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      15  |  2  |         1  |        2  |    2  |      1  |  [5,15,2,39,34,13,45]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-31 12:07:46,445 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:07:48,633 INFO     Done. Execution time: 2.1878669261932373 seconds
2023-01-31 12:07:48,633 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1207-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1207-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.179s
user	0m3.795s
sys	0m0.279s

2023-01-31 12:07:48,634 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 12:07:48,634 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:10:54,554 INFO     Done. Execution time: 185.92002391815186 seconds
2023-01-31 12:10:54,554 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz6970223382957021095/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6970223382957021095/bin -o /tmp/qfuzz6970223382957021095/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6970223382957021095/bin
Found file /tmp/qfuzz6970223382957021095/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz6970223382957021095/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6970223382957021095/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6970223382957021095/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6970223382957021095/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz6970223382957021095/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 119148 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (14 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (15 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 4; 2.00; [29.00,35.50,38.00,51.50]
6; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 2.00; [29.00,35.50,38.00,51.50]
8; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 4; 2.00; [29.00,35.50,38.00,51.50]
13; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 4; 2.00; [29.00,35.50,38.00,51.50]
17; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
23; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
31; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
44; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
49; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16; 4; 2.00; [29.00,35.50,38.00,51.50]
61; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+cov; 2; 3.00; [35.00,38.00]
83; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 4; 2.00; [29.00,35.50,38.00,51.50]
98; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64; 4; 2.00; [29.00,35.50,38.00,51.50]
127; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000013,src:000000+000002,op:splice,rep:128; 4; 2.00; [29.00,35.50,38.00,51.50]
165; /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000014,src:000001+000008,op:splice,rep:4; 4; 2.00; [29.00,35.50,38.00,51.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000014,src:000001+000008,op:splice,rep:4
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000013,src:000000+000002,op:splice,rep:128
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000014,src:000001+000008,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 35, 1, 1, 1, 1, 1, 31, 43, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000013,src:000000+000002,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 2, 2, 39, 43, 48, 2, 47, 14, 5, 1, 40, 6, 4, 47, 29, 2, 47, 28, 33, 16, 18, 11, 6, 7, 4, 5, 17, 28, 33, 30, 2, 45, 22, 35, 2, 1, 7, 30, 28, 7, 2, 21, 2, 2, 19, 11, 2, 19, 25, 47, 28, 5, 36, 2, 3, 41, 6, 27, 1, 18, 6, 4, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 29, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 28, 2, 2, 30, 1, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 31, 1, 13, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 8, 1, 17, 34, 35, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 19, 1, 1, 1, 1, 1, 31, 1, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 12, 2, 2, 2, 2, 28, 2, 2, 6, 2, 2, 17, 4, 4, 38, 10, 43, 31, 32, 2, 2, 50, 2, 2, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 2, 1, 42, 23, 44, 27, 41, 36, 32, 23, 26, 5, 7, 33, 46, 14, 29, 12, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 7, 1, 25, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 28, 1, 33, 38, 10, 28, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 46, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 3, 42, 23, 28, 1, 23, 20, 13, 11, 29, 1, 1, 27, 41, 36, 20, 38, 7, 34, 13, 28, 37, 24, 30, 4, 3, 1, 13, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 13, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6970223382957021095/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_121054_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 6, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 32, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 10, 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 15, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 41, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 28, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2, 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:10:54,554 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-31 12:10:54,555 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 12:11:04,830 INFO     Done. Execution time: 10.275672912597656 seconds
2023-01-31 12:11:04,831 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_121054_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendrecursivetypes/qfuzz/AppendRecursiveTypes_20230131_121054_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(6, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 15 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(32, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(10, 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(15, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(41, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 15 (53.33%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(28, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2, 50)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 15)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 15 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 4
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 6
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 36
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 32
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 36
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 5
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 10
recursiveTypeIndexes: 2
d: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 15
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 41
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 28
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 29
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 29
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 1
recursiveTypeIndexes: 2
d: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 29
recursiveTypeIndexes: 2
d: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
argumentTypes: 29
recursiveTypeIndexes: 2
d: 50
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 157):
                                                                                                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  argumentTypes  |  argumentsFiltered  |  builder  |  d  |  i  |  j  |  k  |  recursiveTypeIndexes  |  sep  |  sep2  |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              4  |                     |           |  1  |     |     |     |                     2  |       |        |
    33  |                   int builder = 0;  |         |  0  |              4  |                     |        0  |  1  |     |     |     |                     2  |       |        |
    34  |                      // int R = 0;  |         |  0  |              4  |                     |        0  |  1  |     |     |     |                     2  |       |        |
    35  |  // mostPreciseBound(R <= recur...  |         |  0  |              4  |                     |        0  |  1  |     |     |     |                     2  |       |        |
    36  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              4  |                     |        0  |  1  |     |     |     |                     2  |       |        |
    38  |                         int i = 0;  |         |  0  |              4  |                     |        0  |  1  |  0  |     |     |                     2  |       |        |
    43  |                       int sep = 2;  |         |  0  |              4  |                     |        0  |  1  |  0  |     |     |                     2  |    2  |        |
    47  |             builder = builder + 1;  |         |  0  |              4  |                     |        1  |  1  |  0  |     |     |                     2  |    2  |        |
    50  |                         R = R + 1;  |      1  |  1  |              4  |                     |        1  |  1  |  0  |     |     |                     2  |    2  |        |
    52  |                         int j = 1;  |         |  1  |              4  |                     |        1  |  1  |  0  |  1  |     |                     2  |    2  |        |
    59  |                         i = i + 1;  |         |  1  |              4  |                     |        1  |  1  |  1  |  1  |     |                     2  |    2  |        |
    60  |              resetPlaceHolder_1();  |         |  1  |              4  |                     |        1  |  1  |  1  |  1  |     |                     2  |    2  |        |
    65  |                       int sep = 2;  |         |  1  |              4  |                     |        1  |  1  |  1  |  1  |     |                     2  |    2  |        |
    69  |             builder = builder + 1;  |         |  1  |              4  |                     |        2  |  1  |  1  |  1  |     |                     2  |    2  |        |
    72  |                         R = R + 1;  |      1  |  2  |              4  |                     |        2  |  1  |  1  |  1  |     |                     2  |    2  |        |
    74  |                         int j = 1;  |         |  2  |              4  |                     |        2  |  1  |  1  |  1  |     |                     2  |    2  |        |
    81  |                         i = i + 1;  |         |  2  |              4  |                     |        2  |  1  |  2  |  1  |     |                     2  |    2  |        |
    82  |              resetPlaceHolder_1();  |         |  2  |              4  |                     |        2  |  1  |  2  |  1  |     |                     2  |    2  |        |
    89  |  int argumentsFiltered = argume...  |         |  2  |              4  |                  3  |        2  |  1  |  2  |  1  |     |                     2  |    2  |        |
   102  |             builder = builder + 1;  |         |  2  |              4  |                  3  |        3  |  1  |  2  |  1  |     |                     2  |    2  |        |
   105  |                         R = R + 1;  |      1  |  3  |              4  |                  3  |        3  |  1  |  2  |  1  |     |                     2  |    2  |        |
   107  |                      int sep2 = 2;  |         |  3  |              4  |                  3  |        3  |  1  |  2  |  1  |     |                     2  |    2  |     2  |
   109  |                         int k = 1;  |         |  3  |              4  |                  3  |        3  |  1  |  2  |  1  |  1  |                     2  |    2  |     2  |
   116  |          builder = builder + sep2;  |         |  3  |              4  |                  3  |        5  |  1  |  2  |  1  |  1  |                     2  |    2  |     2  |
   119  |                      R = R + sep2;  |      2  |  5  |              4  |                  3  |        5  |  1  |  2  |  1  |  1  |                     2  |    2  |     2  |
   123  |             builder = builder + 1;  |         |  5  |              4  |                  3  |        6  |  1  |  2  |  1  |  1  |                     2  |    2  |     2  |
   126  |                         R = R + 1;  |      1  |  6  |              4  |                  3  |        6  |  1  |  2  |  1  |  1  |                     2  |    2  |     2  |
   130  |                         k = k + 1;  |         |  6  |              4  |                  3  |        6  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   131  |              resetPlaceHolder_3();  |         |  6  |              4  |                  3  |        6  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   138  |          builder = builder + sep2;  |         |  6  |              4  |                  3  |        8  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   141  |                      R = R + sep2;  |      2  |  8  |              4  |                  3  |        8  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   145  |             builder = builder + 1;  |         |  8  |              4  |                  3  |        9  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   148  |                         R = R + 1;  |      1  |  9  |              4  |                  3  |        9  |  1  |  2  |  1  |  2  |                     2  |    2  |     2  |
   152  |                         k = k + 1;  |         |  9  |              4  |                  3  |        9  |  1  |  2  |  1  |  3  |                     2  |    2  |     2  |
   153  |              resetPlaceHolder_3();  |         |  9  |              4  |                  3  |        9  |  1  |  2  |  1  |  3  |                     2  |    2  |     2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [141, 105, 148, 50, 72, 119, 126]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {126}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {148}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {50}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {126}; {148}; {50}; {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {105}; {126}; {148}; {50}; {72} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         1  |
    82  |  resetPlaceHolder_1();  |         |                            |
   105  |             R = R + 1;  |      1  |                         2  |
   119  |          R = R + sep2;  |      2  |                            |
   126  |             R = R + 1;  |      1  |                         3  |
   131  |  resetPlaceHolder_3();  |         |                            |
   141  |          R = R + sep2;  |      2  |                            |
   148  |             R = R + 1;  |      1  |                         4  |
   153  |  resetPlaceHolder_3();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {119}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {119}; {141}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {119}; {141} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |
   105  |             R = R + 1;  |      1  |                            |
   119  |          R = R + sep2;  |      2  |                         0  |
   126  |             R = R + 1;  |      1  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |
   141  |          R = R + sep2;  |      2  |                         1  |
   148  |             R = R + 1;  |      1  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {105}; {126}; {148}; {50}; {72}
GroupID(1): {119}; {141}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_3();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [51, 71])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [73, 104])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [106, 125])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [127, 147])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    72  |             R = R + 1;  |      1  |                         1  |                            |
    82  |  resetPlaceHolder_1();  |         |                            |                            |
   105  |             R = R + 1;  |      1  |                         2  |                            |
   119  |          R = R + sep2;  |      2  |                            |                         0  |
   126  |             R = R + 1;  |      1  |                         3  |                            |
   131  |  resetPlaceHolder_3();  |         |                            |                            |
   141  |          R = R + sep2;  |      2  |                            |                         1  |
   148  |             R = R + 1;  |      1  |                         4  |                            |
   153  |  resetPlaceHolder_3();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(131)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 99):
                                                                                                                                                                      
 Index  |              Commands               |  Costs  |  R  |  argumentTypes  |  argumentsFiltered  |  builder  |  d  |  i  |  j  |  recursiveTypeIndexes  |  sep  |
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              1  |                     |           |  1  |     |     |                     2  |       |
    33  |                   int builder = 0;  |         |  0  |              1  |                     |        0  |  1  |     |     |                     2  |       |
    34  |                      // int R = 0;  |         |  0  |              1  |                     |        0  |  1  |     |     |                     2  |       |
    35  |  // mostPreciseBound(R <= recur...  |         |  0  |              1  |                     |        0  |  1  |     |     |                     2  |       |
    36  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              1  |                     |        0  |  1  |     |     |                     2  |       |
    38  |                         int i = 0;  |         |  0  |              1  |                     |        0  |  1  |  0  |     |                     2  |       |
    43  |                       int sep = 2;  |         |  0  |              1  |                     |        0  |  1  |  0  |     |                     2  |    2  |
    47  |             builder = builder + 1;  |         |  0  |              1  |                     |        1  |  1  |  0  |     |                     2  |    2  |
    50  |                         R = R + 1;  |      1  |  1  |              1  |                     |        1  |  1  |  0  |     |                     2  |    2  |
    52  |                         int j = 1;  |         |  1  |              1  |                     |        1  |  1  |  0  |  1  |                     2  |    2  |
    59  |                         i = i + 1;  |         |  1  |              1  |                     |        1  |  1  |  1  |  1  |                     2  |    2  |
    60  |              resetPlaceHolder_1();  |         |  1  |              1  |                     |        1  |  1  |  1  |  1  |                     2  |    2  |
    65  |                       int sep = 2;  |         |  1  |              1  |                     |        1  |  1  |  1  |  1  |                     2  |    2  |
    69  |             builder = builder + 1;  |         |  1  |              1  |                     |        2  |  1  |  1  |  1  |                     2  |    2  |
    72  |                         R = R + 1;  |      1  |  2  |              1  |                     |        2  |  1  |  1  |  1  |                     2  |    2  |
    74  |                         int j = 1;  |         |  2  |              1  |                     |        2  |  1  |  1  |  1  |                     2  |    2  |
    81  |                         i = i + 1;  |         |  2  |              1  |                     |        2  |  1  |  2  |  1  |                     2  |    2  |
    82  |              resetPlaceHolder_1();  |         |  2  |              1  |                     |        2  |  1  |  2  |  1  |                     2  |    2  |
    89  |  int argumentsFiltered = argume...  |         |  2  |              1  |                  0  |        2  |  1  |  2  |  1  |                     2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [50, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {50}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {50}; {72}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {50}; {72} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         1  |
    82  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {50}; {72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         1  |
    82  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [51, 71])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    50  |             R = R + 1;  |      1  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         1  |
    82  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R sep2 -> R1 = R1 + sep2;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_3(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

2023-01-31 12:11:04,831 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:11:06,599 INFO     Done. Execution time: 1.767423391342163 seconds
2023-01-31 12:11:06,599 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:35: error: cannot find symbol
        R = R + sep;
        ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:35: error: cannot find symbol
        R = R + sep;
            ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:37: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class AppendRecursiveTypes
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java:37: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class AppendRecursiveTypes
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.760s
user	0m3.029s
sys	0m0.205s

2023-01-31 12:11:06,599 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 12:11:06,599 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:14:12,512 INFO     Done. Execution time: 185.91232585906982 seconds
2023-01-31 12:14:12,512 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz2054551811790103709/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2054551811790103709/bin -o /tmp/qfuzz2054551811790103709/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2054551811790103709/bin
Found file /tmp/qfuzz2054551811790103709/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz2054551811790103709/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2054551811790103709/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2054551811790103709/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2054551811790103709/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz2054551811790103709/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 119311 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2054551811790103709/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_121412_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:14:12,512 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-31 12:14:12,512 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-31 12:14:18,740 INFO     Done. Execution time: 6.227898597717285 seconds
2023-01-31 12:14:18,740 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_121412_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/dbgprint/qfuzz/DbgPrint_20230131_121412_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
src: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

2023-01-31 12:14:18,741 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:14:26,528 INFO     Done. Execution time: 7.78780198097229 seconds
2023-01-31 12:14:26,529 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1214-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1214-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.780s
user	0m16.792s
sys	0m2.602s

2023-01-31 12:14:26,529 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 12:14:26,529 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:17:32,404 INFO     Done. Execution time: 185.8752806186676 seconds
2023-01-31 12:17:32,405 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz7719743599889343740/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7719743599889343740/bin -o /tmp/qfuzz7719743599889343740/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7719743599889343740/bin
Found file /tmp/qfuzz7719743599889343740/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz7719743599889343740/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7719743599889343740/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7719743599889343740/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7719743599889343740/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz7719743599889343740/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 128959 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 31.00; [35.00,115.00,475.00,575.00,606.00,855.00,1015.00]
2; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 5; 9.00; [35.00,46.00,55.00,115.00,735.00]
4; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 7; 40.00; [315.00,355.00,595.00,635.00,695.00,926.00,1015.00]
7; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 6; 100.00; [15.00,226.00,455.00,555.00,735.00,835.00]
11; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 7; 60.00; [215.00,515.00,595.00,726.00,795.00,935.00,995.00]
13; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 7; 80.00; [115.00,255.00,335.00,475.00,606.00,855.00,1015.00]
15; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 7; 31.00; [35.00,115.00,475.00,575.00,606.00,775.00,1015.00]
17; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 6; 20.00; [35.00,155.00,575.00,595.00,615.00,686.00]
45; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 7; 100.00; [35.00,135.00,315.00,415.00,606.00,775.00,875.00]
128; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000009,src:000001+000000,op:splice,rep:128; 3; 60.00; [15.00,75.00,326.00]
168; /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000010,src:000002+000004,op:splice,rep:16,+delta; 7; 120.00; [35.00,195.00,335.00,475.00,755.00,875.00,1006.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000010,src:000002+000004,op:splice,rep:16,+delta
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000009,src:000001+000000,op:splice,rep:128
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000010,src:000002+000004,op:splice,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 9, 23, 43, 1, 16, 37, 26, 7, 41, 16, 31, 12, 21, 23, 7, 41, 29, 34, 30, 22, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000009,src:000001+000000,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 43, 1, 38, 20, 15, 6, 17, 36, 42, 43, 23, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 29, 29, 30, 7, 1, 28, 2, 2, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 38, 23, 28, 1, 23, 20, 7, 7, 29, 7, 48, 27, 15, 36, 32, 26, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 12, 16, 16, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 7, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 10, 29, 46, 49, 25, 39, 36, 24, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 27, 19, 41, 22, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 17, 15, 29, 50, 31, 34, 30, 14, 47, 46, 50, 41, 46, 34, 2, 20, 13, 2, 8, 45, 29, 34, 27, 13, 2, 36, 50, 41, 29, 34, 36, 37, 36, 4, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 5, 36, 2, 33, 10, 50, 12, 11, 33, 25, 2, 30, 34, 44, 13, 46, 30, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7719743599889343740/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_121732_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,9,23,43,1,16,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,43,1,38,20,15,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [33,29,29,30,7,1,28]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,38,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,12,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,10,29,46,49,25,39]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,27,19,41,22,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,17,15,29,50,31,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,5,36,2]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:17:32,405 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-31 12:17:32,405 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-31 12:17:41,834 INFO     Done. Execution time: 9.429173946380615 seconds
2023-01-31 12:17:41,835 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_121732_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/diffresulttostring/qfuzz/DiffResultToString_20230131_121732_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,9,23,43,1,16,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,43,1,38,20,15,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([33,29,29,30,7,1,28])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,38,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,12,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,10,29,46,49,25,39])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,27,19,41,22,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,17,15,29,50,31,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,5,36,2])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [15]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [49,9,23,43,1,16,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [29,43,1,38,20,15,6]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [33,29,29,30,7,1,28]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [29,5,50,38,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [29,5,50,42,23,12,16]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [35,10,29,46,49,25,39]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [10,27,19,41,22,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [45,17,15,29,50,31,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [1,1,1,1,5,36,2]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
diff: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                 
 Index  |   Commands   |  Costs  |  R  |  diff  |
-------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [15]  |
    10  |     return;  |         |  0  |  [15]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 122):
                                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |          diff          |  i  |  lhsBuilder  |  rhsBuilder  |
----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [49,9,23,43,1,16,37]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [49,9,23,43,1,16,37]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [49,9,23,43,1,16,37]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     49  |  [49,9,23,43,1,16,37]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     49  |   49  |     49  |  [49,9,23,43,1,16,37]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   49  |     49  |  [49,9,23,43,1,16,37]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   49  |     49  |  [49,9,23,43,1,16,37]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   49  |      9  |  [49,9,23,43,1,16,37]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |      9  |   58  |      9  |  [49,9,23,43,1,16,37]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |   58  |      9  |  [49,9,23,43,1,16,37]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |   58  |      9  |  [49,9,23,43,1,16,37]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |   58  |     23  |  [49,9,23,43,1,16,37]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     23  |   81  |     23  |  [49,9,23,43,1,16,37]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |   81  |     23  |  [49,9,23,43,1,16,37]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |   81  |     23  |  [49,9,23,43,1,16,37]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |   81  |     43  |  [49,9,23,43,1,16,37]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     43  |  124  |     43  |  [49,9,23,43,1,16,37]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  124  |     43  |  [49,9,23,43,1,16,37]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  124  |     43  |  [49,9,23,43,1,16,37]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  124  |      1  |  [49,9,23,43,1,16,37]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |      1  |  125  |      1  |  [49,9,23,43,1,16,37]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  125  |      1  |  [49,9,23,43,1,16,37]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  125  |      1  |  [49,9,23,43,1,16,37]  |  5  |           0  |           0  |
    96  |        chunk = arrayRead(diff, i);  |         |  125  |     16  |  [49,9,23,43,1,16,37]  |  5  |           0  |           0  |
    99  |                     R = R + chunk;  |     16  |  141  |     16  |  [49,9,23,43,1,16,37]  |  5  |           0  |           0  |
   103  |                         i = i + 1;  |         |  141  |     16  |  [49,9,23,43,1,16,37]  |  6  |           0  |           0  |
   104  |              resetPlaceHolder_1();  |         |  141  |     16  |  [49,9,23,43,1,16,37]  |  6  |           0  |           0  |
   110  |        chunk = arrayRead(diff, i);  |         |  141  |     37  |  [49,9,23,43,1,16,37]  |  6  |           0  |           0  |
   113  |                     R = R + chunk;  |     37  |  178  |     37  |  [49,9,23,43,1,16,37]  |  6  |           0  |           0  |
   117  |                         i = i + 1;  |         |  178  |     37  |  [49,9,23,43,1,16,37]  |  7  |           0  |           0  |
   118  |              resetPlaceHolder_1();  |         |  178  |     37  |  [49,9,23,43,1,16,37]  |  7  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 7 trace node indices: [57, 29, 85, 71, 113, 43, 99]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29,43,57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,85,113}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29,43,57}; {71,85,113}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1, 2), Set(3, 4, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29,43,57}; {71,85,113} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     49  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |      9  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     23  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     43  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |      1  |                         1  |
    90  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     16  |                            |
   104  |  resetPlaceHolder_1();  |         |                            |
   113  |         R = R + chunk;  |     37  |                         1  |
   118  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29,43,57}; {71,85,113}
GroupID(1): {99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |         R = R + chunk;  |     49  |                         0  |                            |
    34  |  resetPlaceHolder_1();  |         |                            |                            |
    43  |         R = R + chunk;  |      9  |                         0  |                            |
    48  |  resetPlaceHolder_1();  |         |                            |                            |
    57  |         R = R + chunk;  |     23  |                         0  |                            |
    62  |  resetPlaceHolder_1();  |         |                            |                            |
    71  |         R = R + chunk;  |     43  |                         1  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    85  |         R = R + chunk;  |      1  |                         1  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     16  |                            |                         0  |
   104  |  resetPlaceHolder_1();  |         |                            |                            |
   113  |         R = R + chunk;  |     37  |                         1  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(62)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 4) || (i == 4))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 5) || (i == 5))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R0 = R0 + chunk;
  }
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 3) || (i == 3))
  {
    if ((i < 2) || (i == 2))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
  else
  {
    // reset R0
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

2023-01-31 12:17:41,835 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:19:11,110 INFO     Done. Execution time: 89.27456450462341 seconds
2023-01-31 12:19:11,110 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 4) || (i == 4))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
      else
      {

      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 4) || (i == 4))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D1 = D1 + chunk;
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      i = i + 1;
      if ((i < 3) || (i == 3))
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
      else
      {

      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 diff)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 diff)))` for variable `D0p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun diff () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> diff 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 diff))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       a!3
       (<= D0p (+ 0 (* 1 1 diff)))
       (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 diff))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 diff) (= a!1 diff)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    0)  (define-fun diff () Int    5)  (define-fun D0p () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `87.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1217-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1217-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m29.268s
user	5m7.335s
sys	0m5.770s

2023-01-31 12:19:11,110 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 12:19:11,110 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:22:17,023 INFO     Done. Execution time: 185.91237545013428 seconds
2023-01-31 12:22:17,023 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz6944102749700363134/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6944102749700363134/bin -o /tmp/qfuzz6944102749700363134/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6944102749700363134/bin
Found file /tmp/qfuzz6944102749700363134/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz6944102749700363134/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6944102749700363134/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6944102749700363134/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6944102749700363134/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz6944102749700363134/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 124690 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (8 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (8 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 7.00; [35.00,115.00,408.00,468.00,475.00,575.00,604.00,855.00,1015.00]
2; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 7; 13.00; [35.00,115.00,128.00,164.00,315.00,655.00,868.00]
3; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 9; 49.00; [115.00,408.00,555.00,604.00,655.00,755.00,855.00,928.00,1015.00]
5; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 8; 7.00; [35.00,408.00,468.00,475.00,575.00,604.00,675.00,855.00]
9; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 9; 7.00; [115.00,408.00,468.00,475.00,575.00,604.00,855.00,875.00,1015.00]
11; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 7.00; [124.00,315.00,708.00,715.00]
20; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 9; 7.00; [115.00,155.00,475.00,575.00,604.00,688.00,835.00,848.00,855.00]
27; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 9; 60.00; [35.00,295.00,408.00,468.00,595.00,655.00,735.00,835.00,964.00]
168; /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000008,src:000002+000004,op:splice,rep:4,+delta; 9; 73.00; [44.00,155.00,408.00,555.00,655.00,755.00,855.00,928.00,1015.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000008,src:000002+000004,op:splice,rep:4,+delta
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000008,src:000002+000004,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 7, 50, 42, 27, 32, 37, 46, 20, 6, 31, 1, 38, 18, 3, 17, 48, 27, 41, 36, 36, 28, 14, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(47, 41, 36, 32, 29, 14, 1, 23, 20, 49, 32, 29, 5, 19, 1, 43, 36, 38, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 41, 42, 23, 28, 7, 42, 34, 4, 4, 4, 34, 4, 4, 4, 4, 4, 4, 14, 33, 46, 13, 41, 33, 29, 34, 1, 19, 41, 33, 29, 34, 1, 19, 2, 4, 20, 18, 34, 6, 7, 13, 3, 8, 20, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 15, 35, 35, 35, 35, 35, 35, 35, 19, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 43, 23, 20, 7, 37, 20, 7, 40, 29, 5, 48, 27, 41, 36, 32, 28, 14, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 1, 33, 42, 23, 28, 1, 23, 20, 7, 7, 45, 5, 48, 27, 41, 36, 32, 5, 48, 27, 41, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 27, 32, 37, 46, 20, 6, 31, 1, 38, 28, 37, 24, 45, 19, 47, 20, 50, 36, 19, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 1, 1, 1, 5, 32, 15, 43, 6, 20, 29, 38, 26, 46, 10, 30, 5, 21, 32, 19, 30, 21, 35, 25, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6944102749700363134/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_122216_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,7,50,42,27,32,37], 46, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [47,41,36,32,29,14,1], 23, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,41,42,23,28,7], 42, 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,15,35,35,35,35,35], 35, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,43], 23, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,1,33,42,23,28,1], 23, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,27,32,37], 46, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,1,1,1,5,32,15], 43, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:22:17,023 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-31 12:22:17,024 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-31 12:22:27,744 INFO     Done. Execution time: 10.719746351242065 seconds
2023-01-31 12:22:27,744 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_122216_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/durationformat/qfuzz/DurationFormat_20230131_122216_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,7,50,42,27,32,37], 46, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([47,41,36,32,29,14,1], 23, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,41,42,23,28,7], 42, 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,15,35,35,35,35,35], 35, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,43], 23, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,1,33,42,23,28,1], 23, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,27,32,37], 46, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,1,1,1,5,32,15], 43, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 9 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [1,7,50,42,27,32,37]
years: 46
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [47,41,36,32,29,14,1]
years: 23
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [29,5,41,42,23,28,7]
years: 42
months: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [5,15,35,35,35,35,35]
years: 35
months: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [29,5,50,42,23,28,43]
years: 23
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [29,1,33,42,23,28,1]
years: 23
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [29,5,50,42,27,32,37]
years: 46
months: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [7,1,1,1,5,32,15]
years: 43
months: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
tokens: [29,5,50,42,23,28,1]
years: 23
months: 20
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 176):
                                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |         tokens         |  years  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      20  |  [1,7,50,42,27,32,37]  |     46  |
    26  |                      // int R = 0;  |         |    0  |         |     |      20  |  [1,7,50,42,27,32,37]  |     46  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      20  |  [1,7,50,42,27,32,37]  |     46  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      20  |  [1,7,50,42,27,32,37]  |     46  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      20  |  [1,7,50,42,27,32,37]  |     46  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |      1  |  0  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    41  |                     R = R + chunk;  |      1  |    1  |      1  |  0  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    44  |                     R = R + years;  |     46  |   47  |      1  |  0  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    47  |                    R = R + months;  |     20  |   67  |      1  |  0  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    51  |                         i = i + 1;  |         |   67  |      1  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    52  |              resetPlaceHolder_1();  |         |   67  |      1  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    58  |      chunk = arrayRead(tokens, i);  |         |   67  |      7  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    61  |                     R = R + chunk;  |      7  |   74  |      7  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    64  |                     R = R + years;  |     46  |  120  |      7  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    67  |                    R = R + months;  |     20  |  140  |      7  |  1  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    71  |                         i = i + 1;  |         |  140  |      7  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    72  |              resetPlaceHolder_1();  |         |  140  |      7  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    78  |      chunk = arrayRead(tokens, i);  |         |  140  |     50  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    81  |                     R = R + chunk;  |     50  |  190  |     50  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    84  |                     R = R + years;  |     46  |  236  |     50  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    87  |                    R = R + months;  |     20  |  256  |     50  |  2  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    91  |                         i = i + 1;  |         |  256  |     50  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    92  |              resetPlaceHolder_1();  |         |  256  |     50  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
    98  |      chunk = arrayRead(tokens, i);  |         |  256  |     42  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   101  |                     R = R + chunk;  |     42  |  298  |     42  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   104  |                     R = R + years;  |     46  |  344  |     42  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   107  |                    R = R + months;  |     20  |  364  |     42  |  3  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   111  |                         i = i + 1;  |         |  364  |     42  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   112  |              resetPlaceHolder_1();  |         |  364  |     42  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   118  |      chunk = arrayRead(tokens, i);  |         |  364  |     27  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   121  |                     R = R + chunk;  |     27  |  391  |     27  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   124  |                     R = R + years;  |     46  |  437  |     27  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   127  |                    R = R + months;  |     20  |  457  |     27  |  4  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   131  |                         i = i + 1;  |         |  457  |     27  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   132  |              resetPlaceHolder_1();  |         |  457  |     27  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   138  |      chunk = arrayRead(tokens, i);  |         |  457  |     32  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   141  |                     R = R + chunk;  |     32  |  489  |     32  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   144  |                     R = R + years;  |     46  |  535  |     32  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   147  |                    R = R + months;  |     20  |  555  |     32  |  5  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   151  |                         i = i + 1;  |         |  555  |     32  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   152  |              resetPlaceHolder_1();  |         |  555  |     32  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   158  |      chunk = arrayRead(tokens, i);  |         |  555  |     37  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   161  |                     R = R + chunk;  |     37  |  592  |     37  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   164  |                     R = R + years;  |     46  |  638  |     37  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   167  |                    R = R + months;  |     20  |  658  |     37  |  6  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   171  |                         i = i + 1;  |         |  658  |     37  |  7  |      20  |  [1,7,50,42,27,32,37]  |     46  |
   172  |              resetPlaceHolder_1();  |         |  658  |     37  |  7  |      20  |  [1,7,50,42,27,32,37]  |     46  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 21 trace node indices: [101, 164, 121, 84, 147, 61, 141, 124, 41, 161, 64, 44, 144, 81, 167, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {144}; {164}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {104}; {124}; {144}; {164}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |      1  |                            |
    44  |         R = R + years;  |     46  |                         0  |
    47  |        R = R + months;  |     20  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      7  |                            |
    64  |         R = R + years;  |     46  |                         1  |
    67  |        R = R + months;  |     20  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     50  |                            |
    84  |         R = R + years;  |     46  |                         2  |
    87  |        R = R + months;  |     20  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     42  |                            |
   104  |         R = R + years;  |     46  |                         3  |
   107  |        R = R + months;  |     20  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     27  |                            |
   124  |         R = R + years;  |     46  |                         4  |
   127  |        R = R + months;  |     20  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     32  |                            |
   144  |         R = R + years;  |     46  |                         5  |
   147  |        R = R + months;  |     20  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     37  |                            |
   164  |         R = R + years;  |     46  |                         6  |
   167  |        R = R + months;  |     20  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {147}; {167}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {107}; {127}; {147}; {167}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |      1  |                            |
    44  |         R = R + years;  |     46  |                            |
    47  |        R = R + months;  |     20  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      7  |                            |
    64  |         R = R + years;  |     46  |                            |
    67  |        R = R + months;  |     20  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     50  |                            |
    84  |         R = R + years;  |     46  |                            |
    87  |        R = R + months;  |     20  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     42  |                            |
   104  |         R = R + years;  |     46  |                            |
   107  |        R = R + months;  |     20  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     27  |                            |
   124  |         R = R + years;  |     46  |                            |
   127  |        R = R + months;  |     20  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     32  |                            |
   144  |         R = R + years;  |     46  |                            |
   147  |        R = R + months;  |     20  |                         5  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     37  |                            |
   164  |         R = R + years;  |     46  |                            |
   167  |        R = R + months;  |     20  |                         6  |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 7 trace node indices: [101, 121, 61, 141, 41, 161, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {101,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141,161}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {101,121}; {141,161}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 4), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {101,121}; {141,161} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |      1  |                            |
    44  |         R = R + years;  |     46  |                            |
    47  |        R = R + months;  |     20  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |      7  |                            |
    64  |         R = R + years;  |     46  |                            |
    67  |        R = R + months;  |     20  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     50  |                            |
    84  |         R = R + years;  |     46  |                            |
    87  |        R = R + months;  |     20  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     42  |                         0  |
   104  |         R = R + years;  |     46  |                            |
   107  |        R = R + months;  |     20  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     27  |                         0  |
   124  |         R = R + years;  |     46  |                            |
   127  |        R = R + months;  |     20  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
   141  |         R = R + chunk;  |     32  |                         1  |
   144  |         R = R + years;  |     46  |                            |
   147  |        R = R + months;  |     20  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |         R = R + chunk;  |     37  |                         1  |
   164  |         R = R + years;  |     46  |                            |
   167  |        R = R + months;  |     20  |                            |
   172  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [61, 41, 81]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {104}; {124}; {144}; {164}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {147}; {167}; {47}; {67}; {87}
GroupID(2): {101,121}; {141,161}
GroupID(3): {41,61,81}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |      1  |                            |                            |                            |                         0  |
    44  |         R = R + years;  |     46  |                         0  |                            |                            |                            |
    47  |        R = R + months;  |     20  |                            |                         0  |                            |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    61  |         R = R + chunk;  |      7  |                            |                            |                            |                         0  |
    64  |         R = R + years;  |     46  |                         1  |                            |                            |                            |
    67  |        R = R + months;  |     20  |                            |                         1  |                            |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    81  |         R = R + chunk;  |     50  |                            |                            |                            |                         0  |
    84  |         R = R + years;  |     46  |                         2  |                            |                            |                            |
    87  |        R = R + months;  |     20  |                            |                         2  |                            |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   101  |         R = R + chunk;  |     42  |                            |                            |                         0  |                            |
   104  |         R = R + years;  |     46  |                         3  |                            |                            |                            |
   107  |        R = R + months;  |     20  |                            |                         3  |                            |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   121  |         R = R + chunk;  |     27  |                            |                            |                         0  |                            |
   124  |         R = R + years;  |     46  |                         4  |                            |                            |                            |
   127  |        R = R + months;  |     20  |                            |                         4  |                            |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   141  |         R = R + chunk;  |     32  |                            |                            |                         1  |                            |
   144  |         R = R + years;  |     46  |                         5  |                            |                            |                            |
   147  |        R = R + months;  |     20  |                            |                         5  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   161  |         R = R + chunk;  |     37  |                            |                            |                         1  |                            |
   164  |         R = R + years;  |     46  |                         6  |                            |                            |                            |
   167  |        R = R + months;  |     20  |                            |                         6  |                            |                            |
   172  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 152, 132, 92, 112, 72)
GroupID(1): Set(52, 152, 132, 92, 112, 72)
GroupID(2): Set(132)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R3
  if ((i < 4) || (i == 4))
  {
    // reset R2
  }
  else
  {
    if ((i < 5) || (i == 5))
    {
      if (S2 < R2)
      {
        S2 = R2;
      }
      else
      {
        ;
      }
      R2 = 0;
      C2 = C2 + 1;
    }
    else
    {
      // reset R2
    }
  }
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R months -> R1 = R1 + months;
use R years -> R0 = R0 + years;
use R chunk -> if ((i < 2) || (i == 2))
{
  R3 = R3 + chunk;
}
else
{
  R2 = R2 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

2023-01-31 12:22:27,744 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:23:30,788 INFO     Done. Execution time: 63.04365086555481 seconds
2023-01-31 12:23:30,788 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D3 = D3 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D3 = D3 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      if ((i < 4) || (i == 4))
      {

      }
      else
      {
        if ((i < 5) || (i == 5))
        {
          D2p = D2;
          D2 = 0;
          C2 = C2 + 1;
        }
        else
        {

        }
      }
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-874930692869779043.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2323337965487971176.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8677854807106940893.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6882318051054334340.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7873041930793762937.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4213180930014661526.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3092537519902609893.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3672764864314901408.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3658485286104531239.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8248141148320938705.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8872956746284172939.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-121607185081135691.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (and (<= 0 (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D2p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D3 0))
     (or true (= D0 0))
     (or true (= D2 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D2 () Int    2)  (define-fun D0 () Int    7)  (define-fun D3 () Int    (- 4))  (define-fun D1 () Int    (- 6))  (define-fun C2 () Int    10)  (define-fun C1 () Int    10)  (define-fun C3 () Int    1)  (define-fun months () Int    15)  (define-fun tokens () Int    8)  (define-fun years () Int    4)  (define-fun D2p () Int    14)  (define-fun D0p () Int    9)  (define-fun D3p () Int    7)  (define-fun D1p () Int    4)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `60.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1222-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1222-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.036s
user	4m2.846s
sys	0m2.919s

2023-01-31 12:23:30,788 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 12:23:30,789 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:26:36,994 INFO     Done. Execution time: 186.20494055747986 seconds
2023-01-31 12:26:36,994 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz1913578933508198370/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1913578933508198370/bin -o /tmp/qfuzz1913578933508198370/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1913578933508198370/bin
Found file /tmp/qfuzz1913578933508198370/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz1913578933508198370/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1913578933508198370/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1913578933508198370/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1913578933508198370/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz1913578933508198370/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 130956 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
3; /tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(42, 23, 28, 1, 23, 38, 6, 17, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 1, 46, 6, 6, 20, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1913578933508198370/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_122636_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:26:36,994 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-31 12:26:36,994 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-31 12:26:43,930 INFO     Done. Execution time: 6.935470819473267 seconds
2023-01-31 12:26:43,930 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_122636_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getcanonicalname/qfuzz/GetCanonicalName_20230131_122636_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

2023-01-31 12:26:43,930 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:26:50,963 INFO     Done. Execution time: 7.03281831741333 seconds
2023-01-31 12:26:50,964 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1226-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1226-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.026s
user	0m15.180s
sys	0m2.166s

2023-01-31 12:26:50,964 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:26:50,964 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:29:56,909 INFO     Done. Execution time: 185.94498348236084 seconds
2023-01-31 12:29:56,909 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz4351405361259149836/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4351405361259149836/bin -o /tmp/qfuzz4351405361259149836/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4351405361259149836/bin
Found file /tmp/qfuzz4351405361259149836/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz4351405361259149836/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4351405361259149836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4351405361259149836/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4351405361259149836/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4351405361259149836/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 115171 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 10; 1.00; [28.00,32.00,35.50,37.00,108.00,468.00,568.00,588.00,848.00,1008.00]
2; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 6; 1.00; [28.00,32.00,35.50,37.00,508.00,748.00]
3; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 6; 1.00; [8.00,28.00,32.00,35.50,37.00,508.00]
4; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+partition,+delta; 11; 1.00; [28.00,32.00,35.50,37.00,108.00,128.00,148.00,168.00,448.00,588.00,688.00]
6; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 11; 1.00; [28.00,32.00,35.50,37.00,108.00,148.00,168.00,408.00,468.00,548.00,808.00]
8; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 8; 1.00; [28.00,32.00,35.50,37.00,148.00,308.00,688.00,748.00]
11; /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 10; 1.00; [28.00,32.00,35.50,37.00,108.00,248.00,568.00,588.00,628.00,1008.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 12, 31, 28, 1, 43, 15, 7, 7, 29, 5, 48, 27, 47, 36, 32, 28, 14, 48, 9, 40, 2, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 7, 34, 7, 37, 1, 37, 7, 7, 35, 48, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 5, 27, 8, 20, 40, 7, 42, 18, 16, 16, 16, 16, 16, 16, 42, 15, 41, 7, 45, 35, 28, 11, 33, 7, 36, 43, 19, 17, 21, 41, 35, 8, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 34, 8, 6, 22, 7, 34, 13, 28, 37, 24, 30, 4, 2, 27, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 25, 25, 25, 25, 25, 37, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4351405361259149836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122956_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,12,31,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,7,34,7,37,1,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,5,27,8,20,40,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,34,8,6,22,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,25,25,25,25,25,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:29:56,910 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:29:56,910 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-31 12:30:12,073 INFO     Done. Execution time: 15.16307806968689 seconds
2023-01-31 12:30:12,073 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122956_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getformattedexceptionmessage/qfuzz/GetFormattedExceptionMessage_20230131_122956_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,12,31,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,7,34,7,37,1,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,5,27,8,20,40,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,34,8,6,22,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([25,25,25,25,25,25,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 7 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [29,5,50,12,31,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [15,7,34,7,37,1,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [23,5,27,8,20,40,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [29,5,34,8,6,22,7]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [25,25,25,25,25,25,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: [29,5,50,42,23,28,1]
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
baseMessage: []
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 255):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |      baseMessage       |  buffer  |  chunk  |  i  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [29,5,50,12,31,28,1]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [29,5,50,12,31,28,1]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [29,5,50,12,31,28,1]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [29,5,50,12,31,28,1]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    42  |                     R = R + chunk;  |     29  |   34  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    45  |                         R = R + 1;  |      1  |   35  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    48  |                         R = R + 1;  |      1  |   36  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    51  |                         R = R + 1;  |      1  |   37  |  [29,5,50,12,31,28,1]  |       0  |     29  |  0  |
    55  |                         i = i + 1;  |         |   37  |  [29,5,50,12,31,28,1]  |       0  |     29  |  1  |
    56  |              resetPlaceHolder_1();  |         |   37  |  [29,5,50,12,31,28,1]  |       0  |     29  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   37  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    65  |                         R = R + 1;  |      1  |   38  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    68  |                         R = R + 1;  |      1  |   39  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    71  |                         R = R + 1;  |      1  |   40  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    74  |                     R = R + chunk;  |      5  |   45  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    77  |                         R = R + 1;  |      1  |   46  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    80  |                         R = R + 1;  |      1  |   47  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    83  |                         R = R + 1;  |      1  |   48  |  [29,5,50,12,31,28,1]  |       0  |      5  |  1  |
    87  |                         i = i + 1;  |         |   48  |  [29,5,50,12,31,28,1]  |       0  |      5  |  2  |
    88  |              resetPlaceHolder_1();  |         |   48  |  [29,5,50,12,31,28,1]  |       0  |      5  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |   48  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
    97  |                         R = R + 1;  |      1  |   49  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   100  |                         R = R + 1;  |      1  |   50  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   103  |                         R = R + 1;  |      1  |   51  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   106  |                     R = R + chunk;  |     50  |  101  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   109  |                         R = R + 1;  |      1  |  102  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   112  |                         R = R + 1;  |      1  |  103  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   115  |                         R = R + 1;  |      1  |  104  |  [29,5,50,12,31,28,1]  |       0  |     50  |  2  |
   119  |                         i = i + 1;  |         |  104  |  [29,5,50,12,31,28,1]  |       0  |     50  |  3  |
   120  |              resetPlaceHolder_1();  |         |  104  |  [29,5,50,12,31,28,1]  |       0  |     50  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  104  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   129  |                         R = R + 1;  |      1  |  105  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   132  |                         R = R + 1;  |      1  |  106  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   135  |                         R = R + 1;  |      1  |  107  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   138  |                     R = R + chunk;  |     12  |  119  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   141  |                         R = R + 1;  |      1  |  120  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   144  |                         R = R + 1;  |      1  |  121  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   147  |                         R = R + 1;  |      1  |  122  |  [29,5,50,12,31,28,1]  |       0  |     12  |  3  |
   151  |                         i = i + 1;  |         |  122  |  [29,5,50,12,31,28,1]  |       0  |     12  |  4  |
   152  |              resetPlaceHolder_1();  |         |  122  |  [29,5,50,12,31,28,1]  |       0  |     12  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  122  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   161  |                         R = R + 1;  |      1  |  123  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   164  |                         R = R + 1;  |      1  |  124  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   167  |                         R = R + 1;  |      1  |  125  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   170  |                     R = R + chunk;  |     31  |  156  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   173  |                         R = R + 1;  |      1  |  157  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   176  |                         R = R + 1;  |      1  |  158  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   179  |                         R = R + 1;  |      1  |  159  |  [29,5,50,12,31,28,1]  |       0  |     31  |  4  |
   183  |                         i = i + 1;  |         |  159  |  [29,5,50,12,31,28,1]  |       0  |     31  |  5  |
   184  |              resetPlaceHolder_1();  |         |  159  |  [29,5,50,12,31,28,1]  |       0  |     31  |  5  |
   190  |  chunk = arrayRead(baseMessage,...  |         |  159  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   193  |                         R = R + 1;  |      1  |  160  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   196  |                         R = R + 1;  |      1  |  161  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   199  |                         R = R + 1;  |      1  |  162  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   202  |                     R = R + chunk;  |     28  |  190  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   205  |                         R = R + 1;  |      1  |  191  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   208  |                         R = R + 1;  |      1  |  192  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   211  |                         R = R + 1;  |      1  |  193  |  [29,5,50,12,31,28,1]  |       0  |     28  |  5  |
   215  |                         i = i + 1;  |         |  193  |  [29,5,50,12,31,28,1]  |       0  |     28  |  6  |
   216  |              resetPlaceHolder_1();  |         |  193  |  [29,5,50,12,31,28,1]  |       0  |     28  |  6  |
   222  |  chunk = arrayRead(baseMessage,...  |         |  193  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   225  |                         R = R + 1;  |      1  |  194  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   228  |                         R = R + 1;  |      1  |  195  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   231  |                         R = R + 1;  |      1  |  196  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   234  |                     R = R + chunk;  |      1  |  197  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   237  |                         R = R + 1;  |      1  |  198  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   240  |                         R = R + 1;  |      1  |  199  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   243  |                         R = R + 1;  |      1  |  200  |  [29,5,50,12,31,28,1]  |       0  |      1  |  6  |
   247  |                         i = i + 1;  |         |  200  |  [29,5,50,12,31,28,1]  |       0  |      1  |  7  |
   248  |              resetPlaceHolder_1();  |         |  200  |  [29,5,50,12,31,28,1]  |       0  |      1  |  7  |
   254  |                         R = R + 1;  |      1  |  201  |  [29,5,50,12,31,28,1]  |       0  |      1  |  7  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 52 trace node indices: [138, 234, 170, 115, 202, 42, 196, 20, 228, 164, 179, 211, 106, 147, 132, 243, 74, 33, 65, 97, 141, 109, 225, 77, 193, 173, 129, 237, 205, 45, 161, 17, 176, 71, 144, 39, 208, 103, 240, 135, 80, 167, 112, 48, 199, 231, 36, 51, 68, 254, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {193}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {196}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {199}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {205}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {208}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {211}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {228}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {231}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {234}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {237}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     29  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |      5  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     50  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     12  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     31  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   193  |             R = R + 1;  |      1  |                        32  |
   196  |             R = R + 1;  |      1  |                        33  |
   199  |             R = R + 1;  |      1  |                        34  |
   202  |         R = R + chunk;  |     28  |                            |
   205  |             R = R + 1;  |      1  |                        35  |
   208  |             R = R + 1;  |      1  |                        36  |
   211  |             R = R + 1;  |      1  |                        37  |
   216  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 1;  |      1  |                        38  |
   228  |             R = R + 1;  |      1  |                        39  |
   231  |             R = R + 1;  |      1  |                        40  |
   234  |         R = R + chunk;  |      1  |                        41  |
   237  |             R = R + 1;  |      1  |                        42  |
   240  |             R = R + 1;  |      1  |                        43  |
   243  |             R = R + 1;  |      1  |                        44  |
   248  |  resetPlaceHolder_1();  |         |                            |
   254  |             R = R + 1;  |      1  |                        45  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [138, 170, 202, 42, 106, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {193}; {196}; {199}; {205}; {208}; {20}; {211}; {225}; {228}; {231}; {234}; {237}; {240}; {243}; {254}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170,202}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 192])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 32 and 33 segment (index range: [194, 195])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 33 and 34 segment (index range: [197, 198])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 34 and 35 segment (index range: [200, 204])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 35 and 36 segment (index range: [206, 207])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 36 and 37 segment (index range: [209, 210])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 37 and 38 segment (index range: [212, 224])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 38 and 39 segment (index range: [226, 227])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 39 and 40 segment (index range: [229, 230])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 40 and 41 segment (index range: [232, 233])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 41 and 42 segment (index range: [235, 236])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 42 and 43 segment (index range: [238, 239])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 43 and 44 segment (index range: [241, 242])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 44 and 45 segment (index range: [244, 253])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     29  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     50  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     12  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     31  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   193  |             R = R + 1;  |      1  |                        32  |                            |
   196  |             R = R + 1;  |      1  |                        33  |                            |
   199  |             R = R + 1;  |      1  |                        34  |                            |
   202  |         R = R + chunk;  |     28  |                            |                         0  |
   205  |             R = R + 1;  |      1  |                        35  |                            |
   208  |             R = R + 1;  |      1  |                        36  |                            |
   211  |             R = R + 1;  |      1  |                        37  |                            |
   216  |  resetPlaceHolder_1();  |         |                            |                            |
   225  |             R = R + 1;  |      1  |                        38  |                            |
   228  |             R = R + 1;  |      1  |                        39  |                            |
   231  |             R = R + 1;  |      1  |                        40  |                            |
   234  |         R = R + chunk;  |      1  |                        41  |                            |
   237  |             R = R + 1;  |      1  |                        42  |                            |
   240  |             R = R + 1;  |      1  |                        43  |                            |
   243  |             R = R + 1;  |      1  |                        44  |                            |
   248  |  resetPlaceHolder_1();  |         |                            |                            |
   254  |             R = R + 1;  |      1  |                        45  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                        
 Index  |   Commands   |  Costs  |  R  |  baseMessage  |
--------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           []  |
    10  |     return;  |         |  0  |           []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 5) || (i == 5))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

2023-01-31 12:30:12,074 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:30:27,439 INFO     Done. Execution time: 15.364087581634521 seconds
2023-01-31 12:30:27,439 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 5) || (i == 5))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 5) || (i == 5))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `13.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1230-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1230-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.358s
user	0m45.403s
sys	0m4.294s

2023-01-31 12:30:27,440 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 12:30:27,440 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:33:33,373 INFO     Done. Execution time: 185.9323115348816 seconds
2023-01-31 12:33:33,373 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3879415829604760243/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3879415829604760243/bin -o /tmp/qfuzz3879415829604760243/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3879415829604760243/bin
Found file /tmp/qfuzz3879415829604760243/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3879415829604760243/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3879415829604760243/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3879415829604760243/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3879415829604760243/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3879415829604760243/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 107688 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m107k to 107k us (average: 107k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #5 (17 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (17 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
5; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 1; 0.00; [57.00]
9; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
12; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
15; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
18; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
25; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
27; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
40; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
66; /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 33, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 26, 30, 4, 4, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 15, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 31, 27, 7, 24, 16, 38, 38, 19, 4, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 42, 34, 13, 4, 37, 27, 48, 27, 41, 26, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 7, 1, 47, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 3, 41, 35, 34, 46, 32, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 31, 49, 30, 18, 10, 3, 18, 16, 8, 8, 8, 8, 8, 7, 26, 2, 3, 24, 34, 26, 29, 3, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3879415829604760243/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123333_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 49
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:33:33,373 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-31 12:33:33,373 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-31 12:33:40,057 INFO     Done. Execution time: 6.683788061141968 seconds
2023-01-31 12:33:40,058 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123333_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/getshortclassname/qfuzz/GetShortClassName_20230131_123333_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(36)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(22)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(43)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(3)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(49)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 12 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 22
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 43
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 44
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 49
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
className: 29
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 782):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         36  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         36  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         36  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         36  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         36  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         36  |          36  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         36  |          35  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         36  |          35  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         36  |          35  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         36  |          35  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         36  |          34  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         36  |          34  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         36  |          34  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         36  |          34  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         36  |          33  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         36  |          33  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         36  |          33  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         36  |          33  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         36  |          32  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         36  |          32  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         36  |          32  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         36  |          32  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         36  |          31  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         36  |          31  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         36  |          31  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         36  |          31  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         36  |          30  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         36  |          30  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         36  |          30  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         36  |          30  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         36  |          29  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         36  |          29  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         36  |          29  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         36  |          29  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         36  |          28  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         36  |          28  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         36  |          28  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         36  |          28  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         36  |          27  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         36  |          27  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         36  |          27  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         36  |          27  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         36  |          26  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         36  |          26  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         36  |          26  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         36  |          26  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         36  |          25  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         36  |          25  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         36  |          25  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         36  |          25  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         36  |          24  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         36  |          24  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         36  |          24  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         36  |          24  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         36  |          23  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         36  |          23  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         36  |          23  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         36  |          23  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         36  |          22  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         36  |          22  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         36  |          22  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         36  |          22  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         36  |          21  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         36  |          21  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         36  |          21  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         36  |          21  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         36  |          20  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         36  |          20  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         36  |          20  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         36  |          20  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         36  |          19  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         36  |          19  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         36  |          19  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         36  |          19  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         36  |          18  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         36  |          18  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         36  |          18  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         36  |          18  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         36  |          17  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         36  |          17  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         36  |          17  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         36  |          17  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         36  |          16  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         36  |          16  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         36  |          16  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         36  |          16  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         36  |          15  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         36  |          15  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         36  |          15  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         36  |          15  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         36  |          14  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         36  |          14  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         36  |          14  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         36  |          14  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         36  |          13  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         36  |          13  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         36  |          13  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         36  |          13  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         36  |          12  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         36  |          12  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         36  |          12  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         36  |          12  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         36  |          11  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         36  |          11  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         36  |          11  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         36  |          11  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         36  |          10  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         36  |          10  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         36  |          10  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         36  |          10  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         36  |           9  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         36  |           9  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         36  |           9  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         36  |           9  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         36  |           8  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         36  |           8  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         36  |           8  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         36  |           8  |
   617  |       className_ = className_ - 1;  |         |  56  |           56  |         36  |           7  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |  56  |           58  |         36  |           7  |
   624  |                         R = R + 2;  |      2  |  58  |           58  |         36  |           7  |
   625  |              resetPlaceHolder_1();  |         |  58  |           58  |         36  |           7  |
   638  |       className_ = className_ - 1;  |         |  58  |           58  |         36  |           6  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |  58  |           60  |         36  |           6  |
   645  |                         R = R + 2;  |      2  |  60  |           60  |         36  |           6  |
   646  |              resetPlaceHolder_1();  |         |  60  |           60  |         36  |           6  |
   659  |       className_ = className_ - 1;  |         |  60  |           60  |         36  |           5  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |  60  |           62  |         36  |           5  |
   666  |                         R = R + 2;  |      2  |  62  |           62  |         36  |           5  |
   667  |              resetPlaceHolder_1();  |         |  62  |           62  |         36  |           5  |
   680  |       className_ = className_ - 1;  |         |  62  |           62  |         36  |           4  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |  62  |           64  |         36  |           4  |
   687  |                         R = R + 2;  |      2  |  64  |           64  |         36  |           4  |
   688  |              resetPlaceHolder_1();  |         |  64  |           64  |         36  |           4  |
   701  |       className_ = className_ - 1;  |         |  64  |           64  |         36  |           3  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |  64  |           66  |         36  |           3  |
   708  |                         R = R + 2;  |      2  |  66  |           66  |         36  |           3  |
   709  |              resetPlaceHolder_1();  |         |  66  |           66  |         36  |           3  |
   722  |       className_ = className_ - 1;  |         |  66  |           66  |         36  |           2  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |  66  |           68  |         36  |           2  |
   729  |                         R = R + 2;  |      2  |  68  |           68  |         36  |           2  |
   730  |              resetPlaceHolder_1();  |         |  68  |           68  |         36  |           2  |
   743  |       className_ = className_ - 1;  |         |  68  |           68  |         36  |           1  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |  68  |           70  |         36  |           1  |
   750  |                         R = R + 2;  |      2  |  70  |           70  |         36  |           1  |
   751  |              resetPlaceHolder_1();  |         |  70  |           70  |         36  |           1  |
   764  |       className_ = className_ - 1;  |         |  70  |           70  |         36  |           0  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |  70  |           72  |         36  |           0  |
   771  |                         R = R + 2;  |      2  |  72  |           72  |         36  |           0  |
   772  |              resetPlaceHolder_1();  |         |  72  |           72  |         36  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 36 trace node indices: [645, 666, 582, 120, 288, 372, 57, 78, 687, 561, 729, 435, 456, 519, 141, 225, 393, 750, 204, 498, 540, 477, 330, 267, 162, 414, 99, 771, 351, 246, 36, 183, 603, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 730, 247, 142, 709, 436, 37, 184, 751, 289, 646, 121, 625, 583, 499, 457, 205, 541, 562, 604, 520, 394, 226, 310, 331, 688, 58, 667, 478, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

2023-01-31 12:33:40,058 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:33:47,931 INFO     Done. Execution time: 7.872525691986084 seconds
2023-01-31 12:33:47,931 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1233-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1233-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.865s
user	0m16.791s
sys	0m2.290s

2023-01-31 12:33:47,931 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 12:33:47,932 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:36:53,750 INFO     Done. Execution time: 185.8178961277008 seconds
2023-01-31 12:36:53,750 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz4828623127972437334/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4828623127972437334/bin -o /tmp/qfuzz4828623127972437334/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4828623127972437334/bin
Found file /tmp/qfuzz4828623127972437334/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz4828623127972437334/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4828623127972437334/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4828623127972437334/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4828623127972437334/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4828623127972437334/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 110011 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m110k to 110k us (average: 110k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4828623127972437334/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123653_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:36:53,750 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-31 12:36:53,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-31 12:37:00,249 INFO     Done. Execution time: 6.498275279998779 seconds
2023-01-31 12:37:00,249 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123653_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/lexx/qfuzz/Lexx_20230131_123653_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
format: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 2 trace node indices: [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

2023-01-31 12:37:00,249 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:37:07,375 INFO     Done. Execution time: 7.1254823207855225 seconds
2023-01-31 12:37:07,375 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1237-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1237-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.119s
user	0m15.329s
sys	0m2.151s

2023-01-31 12:37:07,375 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 12:37:07,375 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:40:13,190 INFO     Done. Execution time: 185.81418228149414 seconds
2023-01-31 12:40:13,190 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz8217122171750945880/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8217122171750945880/bin -o /tmp/qfuzz8217122171750945880/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8217122171750945880/bin
Found file /tmp/qfuzz8217122171750945880/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz8217122171750945880/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8217122171750945880/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8217122171750945880/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8217122171750945880/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8217122171750945880/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 122857 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
2; /tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 7, 17, 5, 2, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8217122171750945880/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_124012_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:40:13,190 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-31 12:40:13,190 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-31 12:40:18,174 INFO     Done. Execution time: 4.98327898979187 seconds
2023-01-31 12:40:18,174 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_124012_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/literal/qfuzz/Literal_20230131_124012_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

2023-01-31 12:40:18,174 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:40:24,674 INFO     Done. Execution time: 6.499896049499512 seconds
2023-01-31 12:40:24,674 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1240-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1240-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.493s
user	0m14.470s
sys	0m2.064s

2023-01-31 12:40:24,674 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 12:40:24,674 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:43:30,619 INFO     Done. Execution time: 185.94419050216675 seconds
2023-01-31 12:43:30,619 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz5023343457311334380/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5023343457311334380/bin -o /tmp/qfuzz5023343457311334380/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5023343457311334380/bin
Found file /tmp/qfuzz5023343457311334380/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz5023343457311334380/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5023343457311334380/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5023343457311334380/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5023343457311334380/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz5023343457311334380/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 125687 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 16, 6, 6, 6, 6, 6, 6, 6, 22, 6, 18, 37, 13, 36, 30, 38, 30, 46, 19, 30, 21, 35, 27, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5023343457311334380/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124330_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:43:30,619 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-31 12:43:30,619 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-31 12:43:36,909 INFO     Done. Execution time: 6.2898664474487305 seconds
2023-01-31 12:43:36,910 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124330_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/longtohex/qfuzz/LongToHex_20230131_124330_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
nHexs: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

2023-01-31 12:43:36,910 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:43:44,366 INFO     Done. Execution time: 7.455970287322998 seconds
2023-01-31 12:43:44,366 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1243-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1243-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.448s
user	0m15.418s
sys	0m2.338s

2023-01-31 12:43:44,366 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 12:43:44,367 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:46:50,421 INFO     Done. Execution time: 186.05418372154236 seconds
2023-01-31 12:46:50,421 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz6975719251338196059/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6975719251338196059/bin -o /tmp/qfuzz6975719251338196059/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6975719251338196059/bin
Found file /tmp/qfuzz6975719251338196059/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz6975719251338196059/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6975719251338196059/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6975719251338196059/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6975719251338196059/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz6975719251338196059/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 119362 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6975719251338196059/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124650_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:46:50,421 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-31 12:46:50,422 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-31 12:46:56,927 INFO     Done. Execution time: 6.5052809715271 seconds
2023-01-31 12:46:56,927 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124650_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/modify/qfuzz/Modify_20230131_124650_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

2023-01-31 12:46:56,927 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:47:04,190 INFO     Done. Execution time: 7.262301921844482 seconds
2023-01-31 12:47:04,190 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1246-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1246-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.255s
user	0m15.492s
sys	0m2.426s

2023-01-31 12:47:04,190 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 12:47:04,190 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:50:09,971 INFO     Done. Execution time: 185.78080821037292 seconds
2023-01-31 12:50:09,971 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz837867713485162448/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz837867713485162448/bin -o /tmp/qfuzz837867713485162448/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz837867713485162448/bin
Found file /tmp/qfuzz837867713485162448/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz837867713485162448/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz837867713485162448/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz837867713485162448/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz837867713485162448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz837867713485162448/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz837867713485162448/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz837867713485162448/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 122654 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 2, 49, 19, 12, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz837867713485162448/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125009_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:50:09,972 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-31 12:50:09,972 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-31 12:50:14,058 INFO     Done. Execution time: 4.085937738418579 seconds
2023-01-31 12:50:14,058 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125009_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/parsetoken/qfuzz/ParseToken_20230131_125009_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
i: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

2023-01-31 12:50:14,058 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:50:15,957 INFO     Done. Execution time: 1.8986108303070068 seconds
2023-01-31 12:50:15,957 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1250-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1250-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.892s
user	0m3.309s
sys	0m0.246s

2023-01-31 12:50:15,957 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 12:50:15,958 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:53:21,870 INFO     Done. Execution time: 185.91247940063477 seconds
2023-01-31 12:53:21,870 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz3763022362921274842/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3763022362921274842/bin -o /tmp/qfuzz3763022362921274842/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3763022362921274842/bin
Found file /tmp/qfuzz3763022362921274842/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz3763022362921274842/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3763022362921274842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3763022362921274842/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3763022362921274842/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3763022362921274842/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 115904 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 42, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3763022362921274842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125321_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:53:21,871 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-31 12:53:21,871 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-31 12:53:29,111 INFO     Done. Execution time: 7.239982843399048 seconds
2023-01-31 12:53:29,111 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125321_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/simplequote/qfuzz/SimpleQuote_20230131_125321_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
value: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

2023-01-31 12:53:29,111 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:53:38,749 INFO     Done. Execution time: 9.637693166732788 seconds
2023-01-31 12:53:38,750 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `7.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1253-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1253-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.630s
user	0m25.992s
sys	0m3.758s

2023-01-31 12:53:38,750 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 12:53:38,750 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 12:56:44,574 INFO     Done. Execution time: 185.82427310943604 seconds
2023-01-31 12:56:44,575 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4046991925772879572/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4046991925772879572/bin -o /tmp/qfuzz4046991925772879572/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4046991925772879572/bin
Found file /tmp/qfuzz4046991925772879572/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4046991925772879572/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4046991925772879572/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4046991925772879572/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4046991925772879572/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4046991925772879572/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 120704 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4046991925772879572/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125644_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 12:56:44,575 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-31 12:56:44,575 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-31 12:56:50,824 INFO     Done. Execution time: 6.248800039291382 seconds
2023-01-31 12:56:50,824 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125644_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/spacer/qfuzz/Spacer_20230131_125644_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
spaces: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

2023-01-31 12:56:50,825 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 12:56:58,480 INFO     Done. Execution time: 7.655146837234497 seconds
2023-01-31 12:56:58,480 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1256-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1256-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.647s
user	0m16.297s
sys	0m2.338s

2023-01-31 12:56:58,480 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 12:56:58,480 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:00:04,339 INFO     Done. Execution time: 185.85817623138428 seconds
2023-01-31 13:00:04,339 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz6335328956751466749/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6335328956751466749/bin -o /tmp/qfuzz6335328956751466749/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6335328956751466749/bin
Found file /tmp/qfuzz6335328956751466749/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz6335328956751466749/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6335328956751466749/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6335328956751466749/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6335328956751466749/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz6335328956751466749/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 122000 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 32, 32, 32, 32, 32, 32, 32, 38, 32, 32, 32, 32, 32, 32, 41, 41, 12, 42, 3, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6335328956751466749/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130004_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:00:04,339 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-31 13:00:04,339 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-31 13:00:10,361 INFO     Done. Execution time: 6.021140813827515 seconds
2023-01-31 13:00:10,361 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130004_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/squeeze/qfuzz/Squeeze_20230131_130004_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

2023-01-31 13:00:10,361 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:00:17,526 INFO     Done. Execution time: 7.164549112319946 seconds
2023-01-31 13:00:17,526 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1300-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1300-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.157s
user	0m15.551s
sys	0m2.424s

2023-01-31 13:00:17,526 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 13:00:17,526 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:03:24,107 INFO     Done. Execution time: 186.58014607429504 seconds
2023-01-31 13:03:24,107 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz3037340096536308230/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3037340096536308230/bin -o /tmp/qfuzz3037340096536308230/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3037340096536308230/bin
Found file /tmp/qfuzz3037340096536308230/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz3037340096536308230/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3037340096536308230/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3037340096536308230/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3037340096536308230/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3037340096536308230/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 124674 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 14.00; [35.00,49.00]
2; /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [43.00]
3; /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 14, 37, 21, 37, 37, 37, 37, 7, 1, 42, 40, 18, 33, 36, 14, 42, 10, 26, 46, 29, 7, 43, 26)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 34, 1, 3)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3037340096536308230/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130323_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [14,37,21,37,37,37,37]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [34,1,3]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,50,42,23,28,1,23]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:03:24,107 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-31 13:03:24,107 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-31 13:03:30,297 INFO     Done. Execution time: 6.189651012420654 seconds
2023-01-31 13:03:30,297 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130323_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/getdigits/qfuzz/GetDigits_20230131_130323_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [14,37,21,37,37,37,37])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [34,1,3])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,50,42,23,28,1,23])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [14,37,21,37,37,37,37]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [34,1,3]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
choices: [5,50,42,23,28,1,23]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 80):
                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  choice  |         choices          |  i  |  str  |  strDigits  |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [14,37,21,37,37,37,37]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [14,37,21,37,37,37,37]  |     |    2  |             |
    15  |  // mostPreciseBound(R <= str |...  |         |  0  |          |  [14,37,21,37,37,37,37]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [14,37,21,37,37,37,37]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [14,37,21,37,37,37,37]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [14,37,21,37,37,37,37]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [14,37,21,37,37,37,37]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      14  |  [14,37,21,37,37,37,37]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |      14  |  [14,37,21,37,37,37,37]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |      14  |  [14,37,21,37,37,37,37]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |      14  |  [14,37,21,37,37,37,37]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |      14  |  [14,37,21,37,37,37,37]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |      37  |  [14,37,21,37,37,37,37]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |      37  |  [14,37,21,37,37,37,37]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |      37  |  [14,37,21,37,37,37,37]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |      37  |  [14,37,21,37,37,37,37]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |      37  |  [14,37,21,37,37,37,37]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

2023-01-31 13:03:30,297 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:03:52,433 INFO     Done. Execution time: 22.13532328605652 seconds
2023-01-31 13:03:52,433 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str))) || (((0 + (D0 + (D0p * (C0 - 1)))) < (8 * choices)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * choices))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str)) || (((0 + (D0 + (D0p * (C0 - 1)))) < choices) || ((0 + (D0 + (D0p * (C0 - 1)))) == choices)));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 10)) && !((choice == 10)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str))
      (a!3 (< (+ 0 D0 (* D0p (- C0 1))) choices))
      (a!4 (= (+ 0 D0 (* D0p (- C0 1))) choices)))
  (or a!1 a!2 a!3 a!4))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `20.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1303-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1303-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.129s
user	0m48.629s
sys	0m3.896s

2023-01-31 13:03:52,433 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 13:03:52,433 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:06:58,324 INFO     Done. Execution time: 185.8899688720703 seconds
2023-01-31 13:06:58,324 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz8976860582580177297/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8976860582580177297/bin -o /tmp/qfuzz8976860582580177297/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8976860582580177297/bin
Found file /tmp/qfuzz8976860582580177297/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz8976860582580177297/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8976860582580177297/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8976860582580177297/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8976860582580177297/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8976860582580177297/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 123228 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (7 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (7 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 2; 13.00; [31.50,45.00]
5; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 1; 0.00; [585.00]
8; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 1; 0.00; [1025.00]
10; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta; 3; 93.00; [32.00,125.00,351.00]
16; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 3; 386.00; [32.00,625.00,1011.00]
18; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 13.00; [32.00,45.00,71.00]
171; /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000007,src:000002+000004,op:splice,rep:4,+delta; 3; 434.00; [32.00,571.00,1005.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000007,src:000002+000004,op:splice,rep:4,+delta
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000007,src:000002+000004,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 49, 28, 37, 32, 30, 2, 1, 21, 36, 7, 48, 40, 40, 8, 40, 40, 40, 6, 2, 36, 27, 18, 47, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 1, 3, 37, 24, 25, 43, 1, 9, 3, 17, 34, 14, 41, 3, 19, 13, 3, 36, 21, 3, 5, 23, 30, 10, 29, 12, 21, 1, 19, 44, 41, 20, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 30, 50, 48, 48, 15, 46, 1, 41, 11, 28, 11, 5, 17, 1, 18, 13, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 5, 17, 38, 30, 36, 10, 1, 7, 36, 7, 48, 40, 40, 40, 40, 40, 40, 40, 4, 2, 27, 18, 47, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(37, 5, 50, 17, 44, 40, 2, 2, 47, 37, 25, 30, 29, 23, 27, 43, 2, 17, 12, 22, 1, 38, 2, 3, 36, 7, 13, 23, 14, 32, 13, 44, 3, 42, 18, 23, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 49, 28, 37, 32, 30, 11, 2, 27, 6, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 1, 22, 9, 1, 1, 1, 1, 1, 1, 1, 33, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8976860582580177297/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130658_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,49,28,37,32,30,2], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,1,3,37,24,25,43], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,30,50,48,48,15,46], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,5,17,38,30,36,10], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [37,5,50,17,44,40,2], 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,49,28,37,32,30,11], 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,1,22,9], 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:06:58,324 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-31 13:06:58,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-31 13:07:03,608 INFO     Done. Execution time: 5.284087657928467 seconds
2023-01-31 13:07:03,609 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130658_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join/qfuzz/Join_20230131_130658_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,49,28,37,32,30,2], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,1,3,37,24,25,43], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,30,50,48,48,15,46], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,5,17,38,30,36,10], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([37,5,50,17,44,40,2], 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,49,28,37,32,30,11], 2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,1,22,9], 1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [29,49,28,37,32,30,2]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [39,1,3,37,24,25,43]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [28,30,50,48,48,15,46]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [16,5,17,38,30,36,10]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [1,1,1,1,1,22,9]
startIndex: 1
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [37,5,50,17,44,40,2]
startIndex: 2
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [29,49,28,37,32,30,11]
startIndex: 2
endIndex: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: [29,5,50,42,23,28,1]
startIndex: 23
endIndex: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 72):
                                                                                                                                      
 Index  |              Commands               |  Costs  |  R   |          array          |  chunk  |  endIndex  |  i  |  startIndex  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |  [29,49,28,37,32,30,2]  |         |         2  |     |           1  |
    48  |                      // int R = 0;  |         |   0  |  [29,49,28,37,32,30,2]  |         |         2  |     |           1  |
    49  |  // mostPreciseBound(R <= array...  |         |   0  |  [29,49,28,37,32,30,2]  |         |         2  |     |           1  |
    50  |  // lessPreciseBound(R <= MAX +...  |         |   0  |  [29,49,28,37,32,30,2]  |         |         2  |     |           1  |
    52  |                int i = startIndex;  |         |   0  |  [29,49,28,37,32,30,2]  |         |         2  |  1  |           1  |
    54  |                     int chunk = 0;  |         |   0  |  [29,49,28,37,32,30,2]  |      0  |         2  |  1  |           1  |
    57  |       chunk = arrayRead(array, i);  |         |   0  |  [29,49,28,37,32,30,2]  |     49  |         2  |  1  |           1  |
    60  |                     R = R + chunk;  |     49  |  49  |  [29,49,28,37,32,30,2]  |     49  |         2  |  1  |           1  |
    64  |                         i = i + 1;  |         |  49  |  [29,49,28,37,32,30,2]  |     49  |         2  |  2  |           1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [60]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {60}
                                                                   
 Index  |     Commands     |  Costs  |  SegmentIDs in GroupID(0)  |
-------------------------------------------------------------------
    60  |  R = R + chunk;  |     49  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                             
 Index  |   Commands   |  Costs  |  R  |         array          |  endIndex  |  startIndex  |
---------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [37,5,50,17,44,40,2]  |         2  |           2  |
    48  |     return;  |         |  0  |  [37,5,50,17,44,40,2]  |         2  |           2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

2023-01-31 13:07:03,609 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:07:05,199 INFO     Done. Execution time: 1.5899474620819092 seconds
2023-01-31 13:07:05,199 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:34: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:34: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:40: error: cannot find symbol
      R = R + chunk;
      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:40: error: cannot find symbol
      R = R + chunk;
          ^
  symbol:   variable R
  location: class Join
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.583s
user	0m2.809s
sys	0m0.176s

2023-01-31 13:07:05,199 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 13:07:05,199 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:10:11,106 INFO     Done. Execution time: 185.90679383277893 seconds
2023-01-31 13:10:11,106 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5508602445562516457/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5508602445562516457/bin -o /tmp/qfuzz5508602445562516457/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5508602445562516457/bin
Found file /tmp/qfuzz5508602445562516457/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5508602445562516457/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5508602445562516457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5508602445562516457/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5508602445562516457/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz5508602445562516457/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 120874 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (8 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (8 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (8 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 30.00; [31.50,111.00,471.00,571.00,601.00,851.00,1011.00]
2; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 5; 9.00; [31.50,41.00,111.00,451.00,531.00]
3; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta; 8; 30.00; [32.00,111.00,471.00,571.00,601.00,851.00,971.00,1011.00]
6; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 3; 10.00; [32.00,691.00,701.00]
7; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 8; 60.00; [32.00,111.00,321.00,651.00,731.00,831.00,891.00,971.00]
8; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 7; 21.00; [11.00,32.00,251.00,551.00,731.00,781.00,971.00]
14; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta; 8; 79.00; [32.00,111.00,211.00,371.00,471.00,601.00,851.00,1011.00]
17; /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 7; 19.00; [32.00,51.00,211.00,351.00,491.00,601.00,731.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 17, 24, 2, 24, 36, 10, 36, 14, 38, 10, 45, 13, 12, 20, 35, 30, 27, 10, 8, 42, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 10, 18, 25, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 34, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 48, 12, 27, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 5, 48, 44, 41, 36, 32, 5, 18, 7, 34, 13, 28, 37, 24, 30, 4, 18, 1, 20, 34, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 3, 34, 34, 34, 32, 28, 50, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 48, 23, 47, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 5, 22, 26, 18, 3, 16, 45, 4, 17, 34, 30, 34, 44, 35, 46, 30, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5508602445562516457/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131010_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,17,24,2,24,36,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,10,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,48,12,27,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,5,48,44,41,36,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,34,34,34,34,34,34]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,48]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,1,1,5,22,26]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:10:11,107 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-31 13:10:11,107 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-31 13:10:21,993 INFO     Done. Execution time: 10.88594913482666 seconds
2023-01-31 13:10:21,993 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131010_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/join2/qfuzz/Join2_20230131_131010_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,17,24,2,24,36,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,10,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,48,12,27,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,5,48,44,41,36,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,34,34,34,34,34,34])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,1,1,5,22,26])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,48])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,17,24,2,24,36,10]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,23,10,18]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [38,48,12,27,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [15,5,48,44,41,36,32]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [34,34,34,34,34,34,34]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,23,28,48]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [1,1,1,1,5,22,26]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |         objects         |
-----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [29,17,24,2,24,36,10]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [29,17,24,2,24,36,10]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [29,17,24,2,24,36,10]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [29,17,24,2,24,36,10]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [29,17,24,2,24,36,10]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [29,17,24,2,24,36,10]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     29  |  0  |  [29,17,24,2,24,36,10]  |
    22  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |  [29,17,24,2,24,36,10]  |
    26  |                         i = i + 1;  |         |   29  |     29  |  1  |  [29,17,24,2,24,36,10]  |
    32  |                         R = R + 1;  |      1  |   30  |     29  |  1  |  [29,17,24,2,24,36,10]  |
    35  |     chunk = arrayRead(objects, i);  |         |   30  |     17  |  1  |  [29,17,24,2,24,36,10]  |
    38  |                     R = R + chunk;  |     17  |   47  |     17  |  1  |  [29,17,24,2,24,36,10]  |
    42  |                         i = i + 1;  |         |   47  |     17  |  2  |  [29,17,24,2,24,36,10]  |
    43  |              resetPlaceHolder_1();  |         |   47  |     17  |  2  |  [29,17,24,2,24,36,10]  |
    49  |                         R = R + 1;  |      1  |   48  |     17  |  2  |  [29,17,24,2,24,36,10]  |
    52  |     chunk = arrayRead(objects, i);  |         |   48  |     24  |  2  |  [29,17,24,2,24,36,10]  |
    55  |                     R = R + chunk;  |     24  |   72  |     24  |  2  |  [29,17,24,2,24,36,10]  |
    59  |                         i = i + 1;  |         |   72  |     24  |  3  |  [29,17,24,2,24,36,10]  |
    60  |              resetPlaceHolder_1();  |         |   72  |     24  |  3  |  [29,17,24,2,24,36,10]  |
    66  |                         R = R + 1;  |      1  |   73  |     24  |  3  |  [29,17,24,2,24,36,10]  |
    69  |     chunk = arrayRead(objects, i);  |         |   73  |      2  |  3  |  [29,17,24,2,24,36,10]  |
    72  |                     R = R + chunk;  |      2  |   75  |      2  |  3  |  [29,17,24,2,24,36,10]  |
    76  |                         i = i + 1;  |         |   75  |      2  |  4  |  [29,17,24,2,24,36,10]  |
    77  |              resetPlaceHolder_1();  |         |   75  |      2  |  4  |  [29,17,24,2,24,36,10]  |
    83  |                         R = R + 1;  |      1  |   76  |      2  |  4  |  [29,17,24,2,24,36,10]  |
    86  |     chunk = arrayRead(objects, i);  |         |   76  |     24  |  4  |  [29,17,24,2,24,36,10]  |
    89  |                     R = R + chunk;  |     24  |  100  |     24  |  4  |  [29,17,24,2,24,36,10]  |
    93  |                         i = i + 1;  |         |  100  |     24  |  5  |  [29,17,24,2,24,36,10]  |
    94  |              resetPlaceHolder_1();  |         |  100  |     24  |  5  |  [29,17,24,2,24,36,10]  |
   100  |                         R = R + 1;  |      1  |  101  |     24  |  5  |  [29,17,24,2,24,36,10]  |
   103  |     chunk = arrayRead(objects, i);  |         |  101  |     36  |  5  |  [29,17,24,2,24,36,10]  |
   106  |                     R = R + chunk;  |     36  |  137  |     36  |  5  |  [29,17,24,2,24,36,10]  |
   110  |                         i = i + 1;  |         |  137  |     36  |  6  |  [29,17,24,2,24,36,10]  |
   111  |              resetPlaceHolder_1();  |         |  137  |     36  |  6  |  [29,17,24,2,24,36,10]  |
   117  |                         R = R + 1;  |      1  |  138  |     36  |  6  |  [29,17,24,2,24,36,10]  |
   120  |     chunk = arrayRead(objects, i);  |         |  138  |     10  |  6  |  [29,17,24,2,24,36,10]  |
   123  |                     R = R + chunk;  |     10  |  148  |     10  |  6  |  [29,17,24,2,24,36,10]  |
   127  |                         i = i + 1;  |         |  148  |     10  |  7  |  [29,17,24,2,24,36,10]  |
   128  |              resetPlaceHolder_1();  |         |  148  |     10  |  7  |  [29,17,24,2,24,36,10]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     17  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     24  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |      2  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     24  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                         4  |
   106  |         R = R + chunk;  |     36  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                         5  |
   123  |         R = R + chunk;  |     10  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {55}; {89}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {55}; {89} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                            |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |     17  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |     24  |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |      2  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |     24  |                         1  |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     36  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                            |
   123  |         R = R + chunk;  |     10  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [106, 38, 22, 123, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106,123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {22,38}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106,123}; {22,38}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 1), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {106,123}; {22,38} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |
    32  |             R = R + 1;  |      1  |                            |
    38  |         R = R + chunk;  |     17  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                            |
    55  |         R = R + chunk;  |     24  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                            |
    72  |         R = R + chunk;  |      2  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                            |
    89  |         R = R + chunk;  |     24  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     36  |                         1  |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |             R = R + 1;  |      1  |                            |
   123  |         R = R + chunk;  |     10  |                         1  |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {32}; {49}; {66}; {83}
GroupID(1): {55}; {89}
GroupID(2): {106,123}; {22,38}
GroupID(3): {72}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                            |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |                            |
    38  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |                            |
    55  |         R = R + chunk;  |     24  |                            |                         0  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |                            |
    72  |         R = R + chunk;  |      2  |                            |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |                            |
    89  |         R = R + chunk;  |     24  |                            |                         1  |                            |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |                            |
   106  |         R = R + chunk;  |     36  |                            |                            |                         1  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |                            |
   123  |         R = R + chunk;  |     10  |                            |                            |                         1  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): None
GroupID(3): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(2)'s 0 and 1 segment (index range: [39, 105])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                            |                            |                         0  |                            |
    32  |             R = R + 1;  |      1  |                         0  |                            |                            |                            |
    38  |         R = R + chunk;  |     17  |                            |                            |                         0  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |                            |                            |
    55  |         R = R + chunk;  |     24  |                            |                         0  |                            |                            |
    60  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |                            |                            |
    72  |         R = R + chunk;  |      2  |                            |                            |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |                            |                            |
    89  |         R = R + chunk;  |     24  |                            |                         1  |                            |                            |
    94  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   100  |             R = R + 1;  |      1  |                         4  |                            |                            |                            |
   106  |         R = R + chunk;  |     36  |                            |                            |                         1  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   117  |             R = R + 1;  |      1  |                         5  |                            |                            |                            |
   123  |         R = R + chunk;  |     10  |                            |                            |                         1  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(60, 77, 43, 94, 111)
GroupID(1): Set(60)
GroupID(2): Set()
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
use R chunk -> if ((i < 4) || (i == 4))
{
  if ((i < 1) || (i == 1))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      R1 = R1 + chunk;
    }
    else
    {
      if ((i < 3) || (i == 3))
      {
        R3 = R3 + chunk;
      }
      else
      {
        R1 = R1 + chunk;
      }
    }
  }
}
else
{
  R2 = R2 + chunk;
}
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if ((i < 2) || (i == 2))
  {
    // reset R1
  }
  else
  {
    if ((i < 3) || (i == 3))
    {
      if (S1 < R1)
      {
        S1 = R1;
      }
      else
      {
        ;
      }
      R1 = 0;
      C1 = C1 + 1;
    }
    else
    {
      // reset R1
    }
  }
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

2023-01-31 13:10:21,993 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:16:40,625 INFO     Done. Execution time: 378.6313922405243 seconds
2023-01-31 13:16:40,625 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (objects + objects)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        if ((i < 1) || (i == 1))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D3 = D3 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (objects + objects)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 4) || (i == 4))
      {
        if ((i < 1) || (i == 1))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 2) || (i == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 3) || (i == 3))
            {
              D3 = D3 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1p = D1;
          D1 = 0;
          C1 = C1 + 1;
        }
        else
        {

        }
      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2838838064431159568.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9103084746852241720.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4208485778729104386.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6442232505536682232.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6023509632649654943.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7744900780235548756.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-9221608902171735263.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8618563132396461605.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5897266435414324892.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6918737152361358668.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2197905326027308575.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-92662441368873209.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5846897107394533176.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5647971963333151764.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 (* 1 objects objects)) (* 8 (* 1 objects objects) objects)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D2 a!1 D0 a!2 D3 a!3 D1 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun D3p () Int)
(declare-fun D1p () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (>= D3p 0))
(assert (>= D1p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D2 a!1 D0 a!2 D3 a!3 D1 a!4))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D1p 0)))))
(assert (and (or true (= D2 0))
     (or true (= D0 0))
     (or true (= D3 0))
     (or true (= D1 0))))
(assert (let ((a!1 (<= C1
               (+ 0
                  (* 1 (* 1 objects objects))
                  (* 8 (* 1 objects objects) objects)))))
  (and true
       (<= C0 1)
       (>= C62 0)
       (>= C6 0)
       (>= C35 0)
       (>= C51 0)
       (>= C24 0)
       (>= C13 0)
       (>= C46 0)
       (>= C1 0)
       (>= C57 0)
       (>= C31 0)
       (>= C20 0)
       (>= C40 0)
       (>= C27 0)
       (>= C67 0)
       (>= C52 0)
       (>= C42 0)
       (>= C8 0)
       (>= C17 0)
       (>= C63 0)
       (>= C7 0)
       (>= C12 0)
       (>= C23 0)
       (>= C38 0)
       (>= C28 0)
       (>= C39 0)
       (>= C45 0)
       (>= C16 0)
       (>= C56 0)
       (>= C34 0)
       (>= C30 0)
       (>= C0 0)
       (>= C49 0)
       (>= C41 0)
       (>= C53 0)
       (>= C64 0)
       (>= C18 0)
       (>= C11 0)
       (>= C58 0)
       (>= C9 0)
       (>= C60 0)
       (>= C66 0)
       (>= C55 0)
       (>= C15 0)
       (>= C26 0)
       (>= C44 0)
       (>= C4 0)
       (>= C29 0)
       (>= C37 0)
       (>= C59 0)
       (>= C22 0)
       (>= C19 0)
       (>= C48 0)
       (>= C33 0)
       (>= C3 0)
       (>= C43 0)
       (>= C25 0)
       (>= C36 0)
       (>= C65 0)
       (>= C50 0)
       (>= C14 0)
       (>= C5 0)
       (>= C54 0)
       (>= C61 0)
       (>= C10 0)
       (>= C2 0)
       (>= C47 0)
       (>= C21 0)
       (>= C32 0)
       true
       a!1)))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D3 () Int    (- 7))  (define-fun D0 () Int    (- 1))  (define-fun D2 () Int    (- 4))  (define-fun C2 () Int    4)  (define-fun C1 () Int    3)  (define-fun C3 () Int    5)  (define-fun objects () Int    1)  (define-fun D1p () Int    14)  (define-fun D3p () Int    15)  (define-fun D0p () Int    6)  (define-fun D2p () Int    2)  (define-fun C0 () Int    1)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `376.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1310-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1310-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m18.624s
user	9m18.444s
sys	0m4.950s

2023-01-31 13:16:40,626 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 13:16:40,626 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:19:46,500 INFO     Done. Execution time: 185.87371635437012 seconds
2023-01-31 13:19:46,500 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz3613738123105236646/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3613738123105236646/bin -o /tmp/qfuzz3613738123105236646/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3613738123105236646/bin
Found file /tmp/qfuzz3613738123105236646/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz3613738123105236646/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3613738123105236646/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3613738123105236646/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3613738123105236646/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3613738123105236646/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 126547 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (8 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (8 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (8 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 30.00; [31.00,111.00,471.50,571.00,601.00,851.00,1011.00]
2; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta; 8; 10.00; [31.00,111.00,471.00,571.00,612.00,851.00,1001.00,1011.00]
3; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 8; 19.00; [111.00,431.00,601.00,691.00,711.00,812.00,831.00,931.00]
5; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 8; 20.00; [31.00,111.00,412.00,471.00,491.00,601.00,851.00,1011.00]
6; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 8; 19.00; [111.00,311.00,431.00,601.00,692.00,711.00,831.00,931.00]
7; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 8; 80.00; [31.00,111.00,192.00,321.00,471.00,571.00,851.00,1011.00]
15; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 8; 10.00; [31.00,41.00,111.00,131.00,171.00,432.00,671.00,791.00]
17; /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 8; 9.00; [31.00,71.00,111.00,592.00,601.00,851.00,951.00,1011.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 1, 47, 3, 29, 5, 45, 3, 3, 3, 3, 30, 46, 2, 27, 20, 7, 17, 28, 37, 24, 30, 4, 2, 41, 20, 7, 7, 29, 5, 45, 3, 3, 3, 3, 3, 20, 7, 7, 49, 3, 34, 9, 17, 36, 28, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 6, 33, 5, 1, 39, 8, 21, 21, 35, 21, 20, 20, 20, 20, 39, 43, 13, 9, 19, 1, 6, 29, 25, 47, 33, 9, 19, 6, 7, 15, 2, 15, 46, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 5, 50, 42, 23, 28, 1, 9, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 15, 46, 21, 41, 35, 34, 9, 17, 30, 4, 41, 50, 14, 2, 32, 21, 23, 47, 1, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 24, 1, 23, 20, 7, 7, 29, 5, 48, 48, 27, 27, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 46, 21, 41, 35, 34, 40, 40, 40, 40, 40, 42, 22, 7, 34, 13, 28, 37, 24, 30, 4, 2, 27, 15, 9, 21, 23, 35, 34, 40, 40, 40, 40, 40, 8, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 5, 50, 42, 23, 28, 1, 30, 16, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3613738123105236646/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131946_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,1,47,3], 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,6,33,5,1,39,8], 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,5,50,42,23,28,1], 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,15,46,21,41,35], 34
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,24,1,23], 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,46,21,41,35,34], 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,5,50,42,23,28,1], 30
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:19:46,500 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-31 13:19:46,500 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-31 13:19:58,148 INFO     Done. Execution time: 11.647732019424438 seconds
2023-01-31 13:19:58,149 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131946_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/joinwith/qfuzz/JoinWith_20230131_131946_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,1,47,3], 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,6,33,5,1,39,8], 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,5,50,42,23,28,1], 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,15,46,21,41,35], 34)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,24,1,23], 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,46,21,41,35,34], 40)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,5,50,42,23,28,1], 30)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 8 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,1,47,3]
separator: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [1,6,33,5,1,39,8]
separator: 21
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [15,5,50,42,23,28,1]
separator: 9
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,15,46,21,41,35]
separator: 34
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,24,1,23]
separator: 20
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,46,21,41,35,34]
separator: 40
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [49,5,50,42,23,28,1]
separator: 30
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
objects: [29,5,50,42,23,28,1]
separator: 23
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 132):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [29,5,50,42,1,47,3]  |         29  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [29,5,50,42,1,47,3]  |         29  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [29,5,50,42,1,47,3]  |         29  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [29,5,50,42,1,47,3]  |         29  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [29,5,50,42,1,47,3]  |         29  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [29,5,50,42,1,47,3]  |         29  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     29  |  0  |  [29,5,50,42,1,47,3]  |         29  |
    22  |                     R = R + chunk;  |     29  |   29  |     29  |  0  |  [29,5,50,42,1,47,3]  |         29  |
    26  |                         i = i + 1;  |         |   29  |     29  |  1  |  [29,5,50,42,1,47,3]  |         29  |
    32  |                 R = R + separator;  |     29  |   58  |     29  |  1  |  [29,5,50,42,1,47,3]  |         29  |
    35  |     chunk = arrayRead(objects, i);  |         |   58  |      5  |  1  |  [29,5,50,42,1,47,3]  |         29  |
    38  |                     R = R + chunk;  |      5  |   63  |      5  |  1  |  [29,5,50,42,1,47,3]  |         29  |
    42  |                         i = i + 1;  |         |   63  |      5  |  2  |  [29,5,50,42,1,47,3]  |         29  |
    43  |              resetPlaceHolder_1();  |         |   63  |      5  |  2  |  [29,5,50,42,1,47,3]  |         29  |
    49  |                 R = R + separator;  |     29  |   92  |      5  |  2  |  [29,5,50,42,1,47,3]  |         29  |
    52  |     chunk = arrayRead(objects, i);  |         |   92  |     50  |  2  |  [29,5,50,42,1,47,3]  |         29  |
    55  |                     R = R + chunk;  |     50  |  142  |     50  |  2  |  [29,5,50,42,1,47,3]  |         29  |
    59  |                         i = i + 1;  |         |  142  |     50  |  3  |  [29,5,50,42,1,47,3]  |         29  |
    60  |              resetPlaceHolder_1();  |         |  142  |     50  |  3  |  [29,5,50,42,1,47,3]  |         29  |
    66  |                 R = R + separator;  |     29  |  171  |     50  |  3  |  [29,5,50,42,1,47,3]  |         29  |
    69  |     chunk = arrayRead(objects, i);  |         |  171  |     42  |  3  |  [29,5,50,42,1,47,3]  |         29  |
    72  |                     R = R + chunk;  |     42  |  213  |     42  |  3  |  [29,5,50,42,1,47,3]  |         29  |
    76  |                         i = i + 1;  |         |  213  |     42  |  4  |  [29,5,50,42,1,47,3]  |         29  |
    77  |              resetPlaceHolder_1();  |         |  213  |     42  |  4  |  [29,5,50,42,1,47,3]  |         29  |
    83  |                 R = R + separator;  |     29  |  242  |     42  |  4  |  [29,5,50,42,1,47,3]  |         29  |
    86  |     chunk = arrayRead(objects, i);  |         |  242  |      1  |  4  |  [29,5,50,42,1,47,3]  |         29  |
    89  |                     R = R + chunk;  |      1  |  243  |      1  |  4  |  [29,5,50,42,1,47,3]  |         29  |
    93  |                         i = i + 1;  |         |  243  |      1  |  5  |  [29,5,50,42,1,47,3]  |         29  |
    94  |              resetPlaceHolder_1();  |         |  243  |      1  |  5  |  [29,5,50,42,1,47,3]  |         29  |
   100  |                 R = R + separator;  |     29  |  272  |      1  |  5  |  [29,5,50,42,1,47,3]  |         29  |
   103  |     chunk = arrayRead(objects, i);  |         |  272  |     47  |  5  |  [29,5,50,42,1,47,3]  |         29  |
   106  |                     R = R + chunk;  |     47  |  319  |     47  |  5  |  [29,5,50,42,1,47,3]  |         29  |
   110  |                         i = i + 1;  |         |  319  |     47  |  6  |  [29,5,50,42,1,47,3]  |         29  |
   111  |              resetPlaceHolder_1();  |         |  319  |     47  |  6  |  [29,5,50,42,1,47,3]  |         29  |
   117  |                 R = R + separator;  |     29  |  348  |     47  |  6  |  [29,5,50,42,1,47,3]  |         29  |
   120  |     chunk = arrayRead(objects, i);  |         |  348  |      3  |  6  |  [29,5,50,42,1,47,3]  |         29  |
   123  |                     R = R + chunk;  |      3  |  351  |      3  |  6  |  [29,5,50,42,1,47,3]  |         29  |
   127  |                         i = i + 1;  |         |  351  |      3  |  7  |  [29,5,50,42,1,47,3]  |         29  |
   128  |              resetPlaceHolder_1();  |         |  351  |      3  |  7  |  [29,5,50,42,1,47,3]  |         29  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 13 trace node indices: [106, 89, 117, 38, 32, 22, 49, 66, 123, 72, 55, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {117}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {22}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {117}; {22}; {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {100}; {117}; {22}; {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |
    32  |     R = R + separator;  |     29  |                         1  |
    38  |         R = R + chunk;  |      5  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     29  |                         2  |
    55  |         R = R + chunk;  |     50  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     29  |                         3  |
    72  |         R = R + chunk;  |     42  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     29  |                         4  |
    89  |         R = R + chunk;  |      1  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
   100  |     R = R + separator;  |     29  |                         5  |
   106  |         R = R + chunk;  |     47  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   117  |     R = R + separator;  |     29  |                         6  |
   123  |         R = R + chunk;  |      3  |                            |
   128  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 6 trace node indices: [106, 89, 38, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [106, 89, 38, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [106, 89, 38, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [106, 89, 38, 123, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [106, 89, 38, 123, 72, 55]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {100}; {117}; {22}; {32}; {49}; {66}; {83}
GroupID(1): {38,55,72,89,106,123}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [23, 31])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [33, 48])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [50, 65])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [67, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [84, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [101, 116])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     29  |                         0  |                            |
    32  |     R = R + separator;  |     29  |                         1  |                            |
    38  |         R = R + chunk;  |      5  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     29  |                         2  |                            |
    55  |         R = R + chunk;  |     50  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     29  |                         3  |                            |
    72  |         R = R + chunk;  |     42  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     29  |                         4  |                            |
    89  |         R = R + chunk;  |      1  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |     R = R + separator;  |     29  |                         5  |                            |
   106  |         R = R + chunk;  |     47  |                            |                         0  |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   117  |     R = R + separator;  |     29  |                         6  |                            |
   123  |         R = R + chunk;  |      3  |                            |                         0  |
   128  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

2023-01-31 13:19:58,149 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:20:05,830 INFO     Done. Execution time: 7.681256532669067 seconds
2023-01-31 13:20:05,830 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       (<= D0p 0)
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    6)  (define-fun D0 () Int    5)  (define-fun objects () Int    1)  (define-fun separator () Int    9)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1319-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1319-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.674s
user	0m18.775s
sys	0m2.252s

2023-01-31 13:20:05,831 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 13:20:05,831 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:23:11,702 INFO     Done. Execution time: 185.87102890014648 seconds
2023-01-31 13:23:11,702 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz112023074300183500/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz112023074300183500/bin -o /tmp/qfuzz112023074300183500/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz112023074300183500/bin
Found file /tmp/qfuzz112023074300183500/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz112023074300183500/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz112023074300183500/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz112023074300183500/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz112023074300183500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz112023074300183500/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz112023074300183500/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz112023074300183500/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 126785 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #5 (16 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (16 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 70.00; [408.00,478.00,604.00,1018.00]
2; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 4; 74.00; [44.00,118.00,768.00,958.00]
3; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 4; 110.00; [384.00,578.00,698.00,808.00]
4; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 4; 34.00; [408.00,444.00,478.00,1018.00]
5; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 4; 154.00; [48.00,278.00,604.00,758.00]
6; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 4; 4.00; [578.00,638.00,704.00,708.00]
9; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 4; 26.00; [38.00,148.00,578.00,604.00]
11; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 4; 74.00; [108.00,224.00,298.00,718.00]
13; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta; 4; 160.00; [58.00,218.00,384.00,808.00]
18; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 4; 176.00; [198.00,428.00,604.00,838.00]
19; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta; 4; 196.00; [138.00,408.00,604.00,1018.00]
22; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 4; 50.00; [28.00,78.00,358.00,604.00]
25; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32,+delta; 4; 226.00; [28.00,378.00,658.00,884.00]
30; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32,+delta; 4; 230.00; [38.00,268.00,604.00,898.00]
69; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8,+delta; 4; 260.00; [84.00,408.00,758.00,1018.00]
74; /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8,+delta; 4; 284.00; [38.00,364.00,648.00,978.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 1, 1, 13, 48, 27, 41, 36, 32, 24, 14, 46, 34, 10, 34, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 5, 50, 5, 37, 28, 1, 30, 20, 7, 7, 29, 5, 18, 27, 41, 36, 32, 28, 8, 5, 4, 20, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 48, 44, 19, 11, 1, 13, 23, 37, 13, 29, 28, 28, 2, 22, 16, 22, 22, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 24, 18, 42, 32, 16, 42, 20, 1, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 3, 17, 17, 49, 5, 2, 1, 17, 28, 1, 23, 20, 23, 7, 29, 5, 48, 5, 48, 27, 28, 34, 27, 28, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 6, 28, 1, 23, 20, 21, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 50, 9, 45, 41, 35, 34, 19, 21, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 32, 10, 25, 2, 1, 36, 7, 40, 14, 25, 2, 1, 36, 7, 40, 1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 45, 14, 35, 35, 35, 35, 35, 5, 35, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 1, 22, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 13, 28, 37, 31, 46, 21, 41, 35, 4, 3, 17, 36, 48, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 34, 13, 28, 37, 24, 30, 4, 2, 27, 15, 5, 50, 42, 23, 28, 1, 23, 48, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 5, 50, 42, 23, 49, 2, 1, 20, 41, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 23, 28, 1, 34, 24, 46, 34, 40, 49, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 47, 39, 5, 33, 5, 6, 38, 33, 45, 25, 25, 25, 25, 25, 43, 27, 47, 39, 45, 19, 5, 6, 38, 49, 36, 18, 2, 37, 32, 19, 43, 21, 35, 25, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz112023074300183500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_132311_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,1,1,13,48,27,41], 36, 32, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,5,50,5,37,28,1], 30, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,48,44,19,11,1,13], 23, 37, 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,24,18,42,32,16,42], 20, 1, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,3,17,17,49,5], 2, 1, 17
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,6,28,1], 23, 20, 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,50,9,45,41,35,34], 19, 21, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,32,10,25,2,1,36], 7, 40, 14
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,45,14,35,35,35,35], 35, 5, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,1,22,28,1,23], 20, 7, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,13,28,37,31,46,21], 41, 35, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,34,13,28,37,24,30], 4, 2, 27
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,5,50,42,23,49,2], 1, 20, 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,23,28,1,34,24,46], 34, 40, 49
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,1,47,39,5,33,5], 6, 38, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:23:11,702 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-31 13:23:11,703 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-31 13:23:20,090 INFO     Done. Execution time: 8.387593507766724 seconds
2023-01-31 13:23:20,091 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_132311_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replace/qfuzz/Replace_20230131_132311_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,1,1,13,48,27,41], 36, 32, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 16 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,5,50,5,37,28,1], 30, 20, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,48,44,19,11,1,13], 23, 37, 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,24,18,42,32,16,42], 20, 1, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,3,17,17,49,5], 2, 1, 17)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,6,28,1], 23, 20, 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,50,9,45,41,35,34], 19, 21, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,32,10,25,2,1,36], 7, 40, 14)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,45,14,35,35,35,35], 35, 5, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 16 (50.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,34,13,28,37,24,30], 4, 2, 27)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,13,28,37,31,46,21], 41, 35, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,5,50,42,23,49,2], 1, 20, 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,23,28,1,34,24,46], 34, 40, 49)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,1,22,28,1,23], 20, 7, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23, 20, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,1,47,39,5,33,5], 6, 38, 33)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 16)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 16 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [17,1,1,13,48,27,41]
searchString: 36
replacement: 32
max: 24
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,5,50,5,37,28,1]
searchString: 30
replacement: 20
max: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,48,44,19,11,1,13]
searchString: 23
replacement: 37
max: 13
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [43,24,18,42,32,16,42]
searchString: 20
replacement: 1
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,3,17,17,49,5]
searchString: 2
replacement: 1
max: 17
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,6,28,1]
searchString: 23
replacement: 20
max: 21
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,50,9,45,41,35,34]
searchString: 19
replacement: 21
max: 36
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [18,32,10,25,2,1,36]
searchString: 7
replacement: 40
max: 14
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [10,45,14,35,35,35,35]
searchString: 35
replacement: 5
max: 35
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,1,22,28,1,23]
searchString: 20
replacement: 7
max: 7
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [34,13,28,37,31,46,21]
searchString: 41
replacement: 35
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,34,13,28,37,24,30]
searchString: 4
replacement: 2
max: 27
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [21,5,50,42,23,49,2]
searchString: 1
replacement: 20
max: 41
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [18,23,28,1,34,24,46]
searchString: 34
replacement: 40
max: 49
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,1,47,39,5,33,5]
searchString: 6
replacement: 38
max: 33
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
searchString: 23
replacement: 20
max: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 16 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     17  |  0  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    51  |                     R = R + chunk;  |     17  |   17  |     17  |  0  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    54  |               R = R + replacement;  |     32  |   49  |     17  |  0  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |   49  |      1  |  0  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    63  |                         i = i + 2;  |         |   49  |      1  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    64  |              resetPlaceHolder_1();  |         |   49  |      1  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    72  |        chunk = arrayRead(text, i);  |         |   49  |      1  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    75  |                     R = R + chunk;  |      1  |   50  |      1  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    78  |               R = R + replacement;  |     32  |   82  |      1  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |   82  |     13  |  2  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    87  |                         i = i + 2;  |         |   82  |     13  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    88  |              resetPlaceHolder_1();  |         |   82  |     13  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    96  |        chunk = arrayRead(text, i);  |         |   82  |     48  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
    99  |                     R = R + chunk;  |     48  |  130  |     48  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
   102  |               R = R + replacement;  |     32  |  162  |     48  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
   107  |  chunk = arrayRead(text, (i + 1...  |         |  162  |     27  |  4  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
   111  |                         i = i + 2;  |         |  162  |     27  |  6  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
   112  |              resetPlaceHolder_1();  |         |  162  |     27  |  6  |   24  |           32  |            36  |  [17,1,1,13,48,27,41]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 6 trace node indices: [78, 102, 54, 99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     17  |                            |
    54  |   R = R + replacement;  |     32  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      1  |                            |
    78  |   R = R + replacement;  |     32  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
    99  |         R = R + chunk;  |     48  |                            |
   102  |   R = R + replacement;  |     32  |                         2  |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [99, 75, 51]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [99, 75, 51]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {54}; {78}
GroupID(1): {51,75,99}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     17  |                            |                         0  |
    54  |   R = R + replacement;  |     32  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      1  |                            |                         0  |
    78  |   R = R + replacement;  |     32  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    99  |         R = R + chunk;  |     48  |                            |                         0  |
   102  |   R = R + replacement;  |     32  |                         2  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64, 88)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

2023-01-31 13:23:20,091 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:24:43,937 INFO     Done. Execution time: 83.84616184234619 seconds
2023-01-31 13:24:43,938 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-346252735124956807.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text) (* 1 1 replacement replacement searchString)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `82.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1323-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1323-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m23.840s
user	3m9.114s
sys	0m17.721s

2023-01-31 13:24:43,938 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 13:24:43,938 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:27:49,922 INFO     Done. Execution time: 185.98372769355774 seconds
2023-01-31 13:27:49,922 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz2087975732004480015/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2087975732004480015/bin -o /tmp/qfuzz2087975732004480015/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2087975732004480015/bin
Found file /tmp/qfuzz2087975732004480015/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz2087975732004480015/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2087975732004480015/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2087975732004480015/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2087975732004480015/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz2087975732004480015/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 130964 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [40.00]
3; /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
/tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 32, 41, 35, 34, 9, 37, 49, 4, 41, 28, 28, 18, 20, 25, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 5, 49, 42, 48, 24, 7, 37, 15, 24, 38, 16, 30, 5, 21, 32, 21, 30, 21, 35, 25, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2087975732004480015/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132749_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 5
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:27:49,922 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-31 13:27:49,922 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-31 13:27:56,463 INFO     Done. Execution time: 6.540307521820068 seconds
2023-01-31 13:27:56,463 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132749_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/replacechars/qfuzz/ReplaceChars_20230131_132749_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 32)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 5)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 32
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
replaceChars: 5
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             1  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |             1  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             1  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             1  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |             1  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |             1  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |             1  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |             1  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |             1  |    2  |
    57  |                         i = i + 1;  |         |  1  |       1  |  2  |             1  |    2  |
    58  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |             1  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [38]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    58  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            32  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            32  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            32  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            32  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            32  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            32  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            32  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            32  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            32  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            32  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            32  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            32  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

2023-01-31 13:27:56,463 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:28:16,126 INFO     Done. Execution time: 19.66283106803894 seconds
2023-01-31 13:28:16,127 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `17.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1327-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1327-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.655s
user	0m35.255s
sys	0m3.666s

2023-01-31 13:28:16,127 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:28:16,127 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:31:22,169 INFO     Done. Execution time: 186.04148244857788 seconds
2023-01-31 13:31:22,169 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz48224766801164177/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz48224766801164177/bin -o /tmp/qfuzz48224766801164177/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz48224766801164177/bin
Found file /tmp/qfuzz48224766801164177/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz48224766801164177/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz48224766801164177/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz48224766801164177/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz48224766801164177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz48224766801164177/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz48224766801164177/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz48224766801164177/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 121304 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [470.00]
6; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+partition,+delta; 5; 7.00; [497.00,610.00,617.00,757.00,876.00]
10; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 1; 0.00; [610.00]
17; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta; 6; 47.00; [37.00,406.00,490.00,537.00,877.00,937.00]
29; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 4; 89.00; [277.00,366.00,457.00,610.00]
41; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 2; 36.00; [130.00,166.00]
91; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 47.00; [230.00,277.00,506.00,577.00]
108; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000008,src:000000+000004,op:splice,rep:4,+delta; 6; 100.00; [37.00,330.00,437.00,537.00,706.00,937.00]
112; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000009,src:000000+000004,op:splice,rep:8; 5; 60.00; [330.00,406.00,537.00,597.00,817.00]
117; /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000010,src:000000+000004,op:splice,rep:128; 3; 59.00; [310.00,577.00,636.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000010,src:000000+000004,op:splice,rep:128
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000009,src:000000+000004,op:splice,rep:8
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000008,src:000000+000004,op:splice,rep:4,+delta
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+partition,+delta
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000010,src:000000+000004,op:splice,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 8, 8, 14, 18, 29, 28, 1, 4, 6, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000009,src:000000+000004,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 36, 19, 40, 26, 26, 29, 2, 1, 47, 18, 2, 39, 44, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000008,src:000000+000004,op:splice,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 36, 34, 46, 26, 21, 1, 5, 1, 21, 25, 20, 6, 44, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 5, 50, 42, 23, 28, 13, 3, 3, 47, 33, 11, 3, 37, 49, 1, 37, 3, 3, 3, 33, 16, 49, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 39, 50, 42, 16, 22, 13, 2, 3, 28, 11, 7, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 36, 19, 46, 26, 43, 1, 5, 1, 47, 33, 18, 6, 44, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 2, 4, 13, 2, 2, 2, 2, 29, 2, 2, 48, 4, 42, 42, 42, 5, 20, 4, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 37, 24, 30, 4, 2, 27, 35, 29, 5, 48, 27, 41, 35, 29, 5, 48, 4, 2, 27, 15, 46, 21, 40, 7, 34, 13, 28, 37, 24, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 6, 27, 13, 28, 37, 11, 4, 6, 30, 7, 33, 29, 5, 50, 42, 2, 18, 27, 23, 20, 3, 35, 49, 49, 9, 49, 49, 21, 29, 41, 48, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz48224766801164177/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_133121_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [14,8,8,14,18,29,28], 1, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,36,19,40,26,26,29], 2, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,36,34,46,26,21,1], 5, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,5,50,42,23,28,13], 3, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,5,5,5,5,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,39,50,42,16,22,13], 2, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,36,19,46,26,43,1], 5, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,2,4,13,2,2,2], 2, 29
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,37,24,30], 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,6,27,13,28,37,11], 4, 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:31:22,169 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:31:22,169 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-31 13:31:29,705 INFO     Done. Execution time: 7.535809516906738 seconds
2023-01-31 13:31:29,705 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_133121_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitbywholeseparatorworker/qfuzz/SplitByWholeSeparatorWorker_20230131_133121_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([14,8,8,14,18,29,28], 1, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,36,19,40,26,26,29], 2, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,36,34,46,26,21,1], 5, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,5,50,42,23,28,13], 3, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,5,5,5,5,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,39,50,42,16,22,13], 2, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,36,19,46,26,43,1], 5, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,37,24,30], 4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,2,4,13,2,2,2], 2, 29)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,6,27,13,28,37,11], 4, 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23, 20)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [14,8,8,14,18,29,28]
isSeparator: 1
max: 4
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [15,36,19,40,26,26,29]
isSeparator: 2
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [15,36,34,46,26,21,1]
isSeparator: 5
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [10,5,50,42,23,28,13]
isSeparator: 3
max: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [5,5,5,5,5,5,5]
isSeparator: 5
max: 5
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [29,39,50,42,16,22,13]
isSeparator: 2
max: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [23,36,19,46,26,43,1]
isSeparator: 5
max: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [29,5,50,42,37,24,30]
isSeparator: 4
max: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [29,2,4,13,2,2,2]
isSeparator: 2
max: 29
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [22,6,27,13,28,37,11]
isSeparator: 4
max: 6
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: [29,5,50,42,23,28,1]
isSeparator: 23
max: 20
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 187):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |            1  |                    |    4  |                   |  [14,8,8,14,18,29,28]  |
    28  |                      // int R = 0;  |         |   0  |         |     |            1  |                    |    4  |                   |  [14,8,8,14,18,29,28]  |
    29  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |            1  |                    |    4  |                   |  [14,8,8,14,18,29,28]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |            1  |                    |    4  |                   |  [14,8,8,14,18,29,28]  |
    32  |           int numberOfStrings = 0;  |         |   0  |         |     |            1  |                    |    4  |                0  |  [14,8,8,14,18,29,28]  |
    34  |                     int chunk = 0;  |         |   0  |      0  |     |            1  |                    |    4  |                0  |  [14,8,8,14,18,29,28]  |
    36  |          int isSeparatorChunk = 0;  |         |   0  |      0  |     |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    38  |                         int i = 0;  |         |   0  |      0  |  0  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    44  |         chunk = arrayRead(str, i);  |         |   0  |     14  |  0  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    54  |                     R = R + chunk;  |     14  |  14  |     14  |  0  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    58  |                         i = i + 1;  |         |  14  |     14  |  1  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    59  |              resetPlaceHolder_1();  |         |  14  |     14  |  1  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    65  |         chunk = arrayRead(str, i);  |         |  14  |      8  |  1  |            1  |                 0  |    4  |                0  |  [14,8,8,14,18,29,28]  |
    76  |  numberOfStrings = numberOfStri...  |         |  14  |      8  |  1  |            1  |                 0  |    4  |                1  |  [14,8,8,14,18,29,28]  |
    80  |                         i = i + 1;  |         |  14  |      8  |  2  |            1  |                 0  |    4  |                1  |  [14,8,8,14,18,29,28]  |
    81  |              resetPlaceHolder_1();  |         |  14  |      8  |  2  |            1  |                 0  |    4  |                1  |  [14,8,8,14,18,29,28]  |
    87  |         chunk = arrayRead(str, i);  |         |  14  |      8  |  2  |            1  |                 0  |    4  |                1  |  [14,8,8,14,18,29,28]  |
    98  |  numberOfStrings = numberOfStri...  |         |  14  |      8  |  2  |            1  |                 0  |    4  |                2  |  [14,8,8,14,18,29,28]  |
   102  |                         i = i + 1;  |         |  14  |      8  |  3  |            1  |                 0  |    4  |                2  |  [14,8,8,14,18,29,28]  |
   103  |              resetPlaceHolder_1();  |         |  14  |      8  |  3  |            1  |                 0  |    4  |                2  |  [14,8,8,14,18,29,28]  |
   109  |         chunk = arrayRead(str, i);  |         |  14  |     14  |  3  |            1  |                 0  |    4  |                2  |  [14,8,8,14,18,29,28]  |
   120  |  numberOfStrings = numberOfStri...  |         |  14  |     14  |  3  |            1  |                 0  |    4  |                3  |  [14,8,8,14,18,29,28]  |
   124  |                         i = i + 1;  |         |  14  |     14  |  4  |            1  |                 0  |    4  |                3  |  [14,8,8,14,18,29,28]  |
   125  |              resetPlaceHolder_1();  |         |  14  |     14  |  4  |            1  |                 0  |    4  |                3  |  [14,8,8,14,18,29,28]  |
   131  |         chunk = arrayRead(str, i);  |         |  14  |     18  |  4  |            1  |                 0  |    4  |                3  |  [14,8,8,14,18,29,28]  |
   142  |  numberOfStrings = numberOfStri...  |         |  14  |     18  |  4  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   146  |                         i = i + 1;  |         |  14  |     18  |  5  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   147  |              resetPlaceHolder_1();  |         |  14  |     18  |  5  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   153  |         chunk = arrayRead(str, i);  |         |  14  |     29  |  5  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   160  |                     R = R + chunk;  |     29  |  43  |     29  |  5  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   164  |                         i = i + 1;  |         |  43  |     29  |  6  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   165  |                          continue;  |         |  43  |     29  |  6  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   171  |         chunk = arrayRead(str, i);  |         |  43  |     28  |  6  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   178  |                     R = R + chunk;  |     28  |  71  |     28  |  6  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   182  |                         i = i + 1;  |         |  71  |     28  |  7  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
   183  |                          continue;  |         |  71  |     28  |  7  |            1  |                 0  |    4  |                4  |  [14,8,8,14,18,29,28]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 3 trace node indices: [54, 160, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 3 trace node indices: [54, 160, 178]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54,160,178}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     14  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |     29  |                         0  |
   178  |         R = R + chunk;  |     28  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 195):
                                                                                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |         str         |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |         |     |            2  |                    |   29  |                   |  [29,2,4,13,2,2,2]  |
    28  |                      // int R = 0;  |         |   0  |         |     |            2  |                    |   29  |                   |  [29,2,4,13,2,2,2]  |
    29  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |            2  |                    |   29  |                   |  [29,2,4,13,2,2,2]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |            2  |                    |   29  |                   |  [29,2,4,13,2,2,2]  |
    32  |           int numberOfStrings = 0;  |         |   0  |         |     |            2  |                    |   29  |                0  |  [29,2,4,13,2,2,2]  |
    34  |                     int chunk = 0;  |         |   0  |      0  |     |            2  |                    |   29  |                0  |  [29,2,4,13,2,2,2]  |
    36  |          int isSeparatorChunk = 0;  |         |   0  |      0  |     |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    38  |                         int i = 0;  |         |   0  |      0  |  0  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    44  |         chunk = arrayRead(str, i);  |         |   0  |     29  |  0  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    54  |                     R = R + chunk;  |     29  |  29  |     29  |  0  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    58  |                         i = i + 1;  |         |  29  |     29  |  1  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    59  |              resetPlaceHolder_1();  |         |  29  |     29  |  1  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    65  |         chunk = arrayRead(str, i);  |         |  29  |      2  |  1  |            2  |                 0  |   29  |                0  |  [29,2,4,13,2,2,2]  |
    76  |  numberOfStrings = numberOfStri...  |         |  29  |      2  |  1  |            2  |                 0  |   29  |                1  |  [29,2,4,13,2,2,2]  |
    80  |                         i = i + 1;  |         |  29  |      2  |  2  |            2  |                 0  |   29  |                1  |  [29,2,4,13,2,2,2]  |
    81  |              resetPlaceHolder_1();  |         |  29  |      2  |  2  |            2  |                 0  |   29  |                1  |  [29,2,4,13,2,2,2]  |
    87  |         chunk = arrayRead(str, i);  |         |  29  |      4  |  2  |            2  |                 0  |   29  |                1  |  [29,2,4,13,2,2,2]  |
    98  |  numberOfStrings = numberOfStri...  |         |  29  |      4  |  2  |            2  |                 0  |   29  |                2  |  [29,2,4,13,2,2,2]  |
   102  |                         i = i + 1;  |         |  29  |      4  |  3  |            2  |                 0  |   29  |                2  |  [29,2,4,13,2,2,2]  |
   103  |              resetPlaceHolder_1();  |         |  29  |      4  |  3  |            2  |                 0  |   29  |                2  |  [29,2,4,13,2,2,2]  |
   109  |         chunk = arrayRead(str, i);  |         |  29  |     13  |  3  |            2  |                 0  |   29  |                2  |  [29,2,4,13,2,2,2]  |
   120  |  numberOfStrings = numberOfStri...  |         |  29  |     13  |  3  |            2  |                 0  |   29  |                3  |  [29,2,4,13,2,2,2]  |
   124  |                         i = i + 1;  |         |  29  |     13  |  4  |            2  |                 0  |   29  |                3  |  [29,2,4,13,2,2,2]  |
   125  |              resetPlaceHolder_1();  |         |  29  |     13  |  4  |            2  |                 0  |   29  |                3  |  [29,2,4,13,2,2,2]  |
   131  |         chunk = arrayRead(str, i);  |         |  29  |      2  |  4  |            2  |                 0  |   29  |                3  |  [29,2,4,13,2,2,2]  |
   142  |  numberOfStrings = numberOfStri...  |         |  29  |      2  |  4  |            2  |                 0  |   29  |                4  |  [29,2,4,13,2,2,2]  |
   146  |                         i = i + 1;  |         |  29  |      2  |  5  |            2  |                 0  |   29  |                4  |  [29,2,4,13,2,2,2]  |
   147  |              resetPlaceHolder_1();  |         |  29  |      2  |  5  |            2  |                 0  |   29  |                4  |  [29,2,4,13,2,2,2]  |
   153  |         chunk = arrayRead(str, i);  |         |  29  |      2  |  5  |            2  |                 0  |   29  |                4  |  [29,2,4,13,2,2,2]  |
   164  |  numberOfStrings = numberOfStri...  |         |  29  |      2  |  5  |            2  |                 0  |   29  |                5  |  [29,2,4,13,2,2,2]  |
   168  |                         i = i + 1;  |         |  29  |      2  |  6  |            2  |                 0  |   29  |                5  |  [29,2,4,13,2,2,2]  |
   169  |              resetPlaceHolder_1();  |         |  29  |      2  |  6  |            2  |                 0  |   29  |                5  |  [29,2,4,13,2,2,2]  |
   175  |         chunk = arrayRead(str, i);  |         |  29  |      2  |  6  |            2  |                 0  |   29  |                5  |  [29,2,4,13,2,2,2]  |
   186  |  numberOfStrings = numberOfStri...  |         |  29  |      2  |  6  |            2  |                 0  |   29  |                6  |  [29,2,4,13,2,2,2]  |
   190  |                         i = i + 1;  |         |  29  |      2  |  7  |            2  |                 0  |   29  |                6  |  [29,2,4,13,2,2,2]  |
   191  |              resetPlaceHolder_1();  |         |  29  |      2  |  7  |            2  |                 0  |   29  |                6  |  [29,2,4,13,2,2,2]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     29  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
   169  |  resetPlaceHolder_1();  |         |                            |
   191  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

2023-01-31 13:31:29,706 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:33:01,528 INFO     Done. Execution time: 91.8226809501648 seconds
2023-01-31 13:33:01,529 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        D0 = D0 + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `90.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1331-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1331-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m31.816s
user	2m29.025s
sys	0m6.427s

2023-01-31 13:33:01,529 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 13:33:01,529 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:36:07,309 INFO     Done. Execution time: 185.77963876724243 seconds
2023-01-31 13:36:07,309 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz8365109448011235154/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8365109448011235154/bin -o /tmp/qfuzz8365109448011235154/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8365109448011235154/bin
Found file /tmp/qfuzz8365109448011235154/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz8365109448011235154/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8365109448011235154/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8365109448011235154/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8365109448011235154/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8365109448011235154/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 127526 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 31.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 32.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 33.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 34.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 35.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 36.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 37.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 38.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 39.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 40.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 41.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 42.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 43.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 44.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 45.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 46.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 47.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 48.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 49.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 50.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 51.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 52.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 53.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 54.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 55.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 56.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 57.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 58.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 59.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8365109448011235154/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8365109448011235154/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8365109448011235154/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133607_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:36:07,309 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-31 13:36:07,310 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-31 13:36:10,215 INFO     Done. Execution time: 2.9052934646606445 seconds
2023-01-31 13:36:10,215 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133607_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker/qfuzz/SplitWorker_20230131_133607_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 1 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Put all traces into the same cluster
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

2023-01-31 13:36:10,216 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:36:12,275 INFO     Done. Execution time: 2.059662103652954 seconds
2023-01-31 13:36:12,276 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1336-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1336-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.052s
user	0m3.632s
sys	0m0.206s

2023-01-31 13:36:12,276 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 13:36:12,276 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:39:18,401 INFO     Done. Execution time: 186.12460207939148 seconds
2023-01-31 13:39:18,401 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz6569213954055675317/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6569213954055675317/bin -o /tmp/qfuzz6569213954055675317/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6569213954055675317/bin
Found file /tmp/qfuzz6569213954055675317/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz6569213954055675317/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6569213954055675317/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6569213954055675317/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6569213954055675317/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz6569213954055675317/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 119305 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (6 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
8; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [98.00]
11; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [77.00]
25; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64,+cov; 1; 0.00; [99.00]
66; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:2,+cov; 1; 0.00; [77.00]
68; /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000005,src:000001+000003,op:splice,rep:2,+cov; 1; 0.00; [99.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000005,src:000001+000003,op:splice,rep:2,+cov
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:2,+cov
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64,+cov
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000005,src:000001+000003,op:splice,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 50, 1, 1, 1, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 1, 5, 1, 1, 35, 1, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 1, 1, 1, 2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 24, 24, 50, 1, 47, 33, 26, 17, 19, 15, 17, 39, 17, 17, 17, 39, 17, 17, 17, 17, 17, 17, 17, 17, 17, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 8, 27, 6, 2, 44, 2, 31, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz6569213954055675317/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133918_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 50, 1, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 1, 5, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 1, 1, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 24, 24, false, 1
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 8, 27, false, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 5, 50, false, 23
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:39:18,401 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-31 13:39:18,401 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-31 13:39:23,966 INFO     Done. Execution time: 5.56447696685791 seconds
2023-01-31 13:39:23,966 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133918_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/splitworker2/qfuzz/SplitWorker2_20230131_133918_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 50, 1, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 1, 1, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 1, 5, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 24, 24, false, 1)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 8, 27, false, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 5, 50, false, 23)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 6 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 1
choice: 1
preserveAllTokens: false
separatorChars: 50
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 5
choice: 1
preserveAllTokens: false
separatorChars: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 1
choice: 1
preserveAllTokens: false
separatorChars: 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 24
choice: 1
preserveAllTokens: false
separatorChars: 24
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 27
choice: 2
preserveAllTokens: false
separatorChars: 8
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
max: 50
choice: 23
preserveAllTokens: false
separatorChars: 5
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 102):
                                                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  max  |  preserveAllTokens  |  separatorChars  |  sizePlus1  |  start  |  str  |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |       1  |     |             |        |         |    1  |              false  |              50  |             |         |    2  |
    32  |                      // int R = 0;  |         |  0  |       1  |     |             |        |         |    1  |              false  |              50  |             |         |    2  |
    33  |      // mostPreciseBound(R <= str)  |         |  0  |       1  |     |             |        |         |    1  |              false  |              50  |             |         |    2  |
    34  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       1  |     |             |        |         |    1  |              false  |              50  |             |         |    2  |
    36  |                      int list = 0;  |         |  0  |       1  |     |             |     0  |         |    1  |              false  |              50  |             |         |    2  |
    38  |                 int sizePlus1 = 1;  |         |  0  |       1  |     |             |     0  |         |    1  |              false  |              50  |          1  |         |    2  |
    40  |                         int i = 0;  |         |  0  |       1  |  0  |             |     0  |         |    1  |              false  |              50  |          1  |         |    2  |
    42  |                     int start = 0;  |         |  0  |       1  |  0  |             |     0  |         |    1  |              false  |              50  |          1  |      0  |    2  |
    44  |                 int match = false;  |         |  0  |       1  |  0  |             |     0  |  false  |    1  |              false  |              50  |          1  |      0  |    2  |
    46  |             int lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |    1  |              false  |              50  |          1  |      0  |    2  |
    60  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |    1  |              false  |              50  |          1  |      0  |    2  |
    62  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    66  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    67  |              resetPlaceHolder_3();  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    75  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    77  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    81  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    82  |              resetPlaceHolder_3();  |         |  0  |       1  |  2  |      false  |     0  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
    96  |         list = list + (i - start);  |         |  0  |       1  |  2  |      false  |     2  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
   101  |               R = R + (i - start);  |      2  |  2  |       1  |  2  |      false  |     2  |   true  |    1  |              false  |              50  |          1  |      0  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [101]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {101}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    67  |  resetPlaceHolder_3();  |         |                            |
    82  |  resetPlaceHolder_3();  |         |                            |
   101  |   R = R + (i - start);  |      2  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |       2  |   27  |              false  |               8  |    2  |
    32  |     return;  |         |  0  |       2  |   27  |              false  |               8  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (i - start) -> R0 = R0 + (i - start);
resetPlaceHolder_3(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

2023-01-31 13:39:23,966 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:39:25,485 INFO     Done. Execution time: 1.5182273387908936 seconds
2023-01-31 13:39:25,485 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:47: error: cannot find symbol
            R = R + (i - start);
            ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:47: error: cannot find symbol
            R = R + (i - start);
                ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:90: error: cannot find symbol
              R = R + (i - start);
              ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:90: error: cannot find symbol
              R = R + (i - start);
                  ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:131: error: cannot find symbol
              R = R + (i - start);
              ^
  symbol:   variable R
  location: class SplitWorker2
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java:131: error: cannot find symbol
              R = R + (i - start);
                  ^
  symbol:   variable R
  location: class SplitWorker2
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java; message: Not a primitive type: NONE
6 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.512s
user	0m2.743s
sys	0m0.179s

2023-01-31 13:39:25,485 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 13:39:25,485 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:42:31,270 INFO     Done. Execution time: 185.78451371192932 seconds
2023-01-31 13:42:31,270 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz3662368320576948130/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3662368320576948130/bin -o /tmp/qfuzz3662368320576948130/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3662368320576948130/bin
Found file /tmp/qfuzz3662368320576948130/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz3662368320576948130/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3662368320576948130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3662368320576948130/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3662368320576948130/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3662368320576948130/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 125583 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3662368320576948130/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134231_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:42:31,271 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-31 13:42:31,271 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-31 13:42:34,894 INFO     Done. Execution time: 3.62347412109375 seconds
2023-01-31 13:42:34,895 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134231_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/substringsbetween/qfuzz/SubstringsBetween_20230131_134231_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
str: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

2023-01-31 13:42:34,895 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:42:36,860 INFO     Done. Execution time: 1.9648571014404297 seconds
2023-01-31 13:42:36,860 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1342-transparentAmortize-60s-mostPrecise/stringutils-raw-0131-1342-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.958s
user	0m3.333s
sys	0m0.206s

2023-01-31 13:42:36,860 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 13:42:36,860 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:45:42,746 INFO     Done. Execution time: 185.885577917099 seconds
2023-01-31 13:45:42,746 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz2810875567187674607/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2810875567187674607/bin -o /tmp/qfuzz2810875567187674607/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2810875567187674607/bin
Found file /tmp/qfuzz2810875567187674607/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz2810875567187674607/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2810875567187674607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2810875567187674607/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2810875567187674607/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz2810875567187674607/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 123073 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (11 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (11 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 124.00; [38.00,478.00,602.00,1018.00]
2; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta; 4; 196.00; [38.00,238.00,742.00,938.00]
3; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 216.00; [398.00,702.00,918.00]
6; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 4; 224.00; [98.00,378.00,602.00,838.00]
8; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 4; 44.00; [558.00,602.00,658.00,778.00]
14; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 4.00; [38.00,618.00,622.00,938.00]
66; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 4; 240.00; [38.00,278.00,602.00,1018.00]
69; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 4; 244.00; [38.00,358.00,602.00,1018.00]
90; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 4; 280.00; [38.00,318.00,602.00,1018.00]
99; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 4; 20.00; [42.00,518.00,778.00,798.00]
101; /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 4; 60.00; [38.00,478.00,538.00,602.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 26, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 6, 13, 41, 10, 21, 41, 35, 34, 9, 17, 36, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 25, 39, 38, 38, 45, 25, 8, 22, 40, 22, 22)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 15, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 6, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 21, 1, 50, 17, 1, 16, 9, 20, 3, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 25, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 45, 50, 42, 13, 28, 1, 14, 36, 7, 15, 43, 29, 48, 27, 31, 36, 40, 28, 39, 23, 8, 36, 4, 41, 18, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 30, 30, 39, 1, 5, 46, 1, 19, 40, 29, 32, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 17, 32, 28, 27, 17, 38, 4, 41, 13, 35, 34, 46, 26, 40, 34, 29, 9, 42, 34, 5, 9, 42, 34, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 4, 16, 18, 29, 41, 35, 16, 9, 17, 19, 4, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 35, 19, 45, 45, 12, 45, 45, 47, 1, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(36, 45, 11, 18, 1, 1, 46, 40, 40, 39, 37, 33, 33, 33, 33, 33, 47, 33, 33, 33, 33, 33, 33, 39, 26, 40, 40, 16, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz2810875567187674607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134542_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,26,42,23,28,1], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,25,39,38,38,45,25], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,15,28,1], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,21,1,50,17], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,45,50,42,13,28,1], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,30,30,39,1,5,46], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,17,32,28,27,17,38], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,4,16,18,29,41], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,35,19,45,45,12,45], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [36,45,11,18,1,1,46], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:45:42,746 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-31 13:45:42,747 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-31 13:45:51,360 INFO     Done. Execution time: 8.612886905670166 seconds
2023-01-31 13:45:51,360 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134542_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/lenientformat/qfuzz/LenientFormat_20230131_134542_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,26,42,23,28,1], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,25,39,38,38,45,25], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,15,28,1], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,21,1,50,17], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,45,50,42,13,28,1], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([30,30,30,39,1,5,46], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,4,16,18,29,41], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,35,19,45,45,12,45], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,17,32,28,27,17,38], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([36,45,11,18,1,1,46], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 11 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,5,26,42,23,28,1]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [1,25,39,38,38,45,25]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,5,50,42,15,28,1]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,5,50,21,1,50,17]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,45,50,42,13,28,1]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [30,30,30,39,1,5,46]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,17,32,28,27,17,38]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,5,4,16,18,29,41]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [34,35,19,45,45,12,45]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [36,45,11,18,1,1,46]
args: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
template: [29,5,50,42,23,28,1]
args: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 108):
                                                                                                                                
 Index  |              Commands               |  Costs  |  R   |  args  |  chunk  |  i  |  separator  |        template        |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |     2  |         |     |             |  [29,5,26,42,23,28,1]  |
    18  |                      // int R = 0;  |         |   0  |     2  |         |     |             |  [29,5,26,42,23,28,1]  |
    19  |  // mostPreciseBound(R <= array...  |         |   0  |     2  |         |     |             |  [29,5,26,42,23,28,1]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |   0  |     2  |         |     |             |  [29,5,26,42,23,28,1]  |
    22  |                     int chunk = 0;  |         |   0  |     2  |      0  |     |             |  [29,5,26,42,23,28,1]  |
    24  |                 int separator = 0;  |         |   0  |     2  |      0  |     |          0  |  [29,5,26,42,23,28,1]  |
    26  |                         int i = 0;  |         |   0  |     2  |      0  |  0  |          0  |  [29,5,26,42,23,28,1]  |
    29  |  chunk = arrayRead(template, i)...  |         |   0  |     2  |     29  |  0  |          0  |  [29,5,26,42,23,28,1]  |
    32  |                     R = R + chunk;  |     29  |  29  |     2  |     29  |  0  |          0  |  [29,5,26,42,23,28,1]  |
    36  |                         i = i + 1;  |         |  29  |     2  |     29  |  1  |          0  |  [29,5,26,42,23,28,1]  |
    44  |  separator = arrayRead(template...  |         |  29  |     2  |     29  |  1  |          5  |  [29,5,26,42,23,28,1]  |
    49  |  chunk = arrayRead(template, (i...  |         |  29  |     2  |     26  |  1  |          5  |  [29,5,26,42,23,28,1]  |
    52  |                     R = R + chunk;  |     26  |  55  |     2  |     26  |  1  |          5  |  [29,5,26,42,23,28,1]  |
    56  |                         i = i + 2;  |         |  55  |     2  |     26  |  3  |          5  |  [29,5,26,42,23,28,1]  |
    57  |              resetPlaceHolder_1();  |         |  55  |     2  |     26  |  3  |          5  |  [29,5,26,42,23,28,1]  |
    65  |  separator = arrayRead(template...  |         |  55  |     2  |     26  |  3  |         42  |  [29,5,26,42,23,28,1]  |
    70  |  chunk = arrayRead(template, (i...  |         |  55  |     2  |     23  |  3  |         42  |  [29,5,26,42,23,28,1]  |
    73  |                     R = R + chunk;  |     23  |  78  |     2  |     23  |  3  |         42  |  [29,5,26,42,23,28,1]  |
    77  |                         i = i + 2;  |         |  78  |     2  |     23  |  5  |         42  |  [29,5,26,42,23,28,1]  |
    78  |              resetPlaceHolder_1();  |         |  78  |     2  |     23  |  5  |         42  |  [29,5,26,42,23,28,1]  |
    86  |  separator = arrayRead(template...  |         |  78  |     2  |     23  |  5  |         28  |  [29,5,26,42,23,28,1]  |
    91  |  chunk = arrayRead(template, (i...  |         |  78  |     2  |      1  |  5  |         28  |  [29,5,26,42,23,28,1]  |
    94  |                     R = R + chunk;  |      1  |  79  |     2  |      1  |  5  |         28  |  [29,5,26,42,23,28,1]  |
    98  |                         i = i + 2;  |         |  79  |     2  |      1  |  7  |         28  |  [29,5,26,42,23,28,1]  |
    99  |              resetPlaceHolder_1();  |         |  79  |     2  |      1  |  7  |         28  |  [29,5,26,42,23,28,1]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 4 trace node indices: [32, 52, 73, 94]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 4 trace node indices: [32, 52, 73, 94]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {32,52,73,94}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     29  |                         0  |
    52  |         R = R + chunk;  |     26  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     23  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
    94  |         R = R + chunk;  |      1  |                         0  |
    99  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

2023-01-31 13:45:51,360 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:45:53,075 INFO     Done. Execution time: 1.7149646282196045 seconds
2023-01-31 13:45:53,075 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.706s
user	0m3.084s
sys	0m0.183s

2023-01-31 13:45:53,076 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 13:45:53,076 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:48:58,944 INFO     Done. Execution time: 185.86836552619934 seconds
2023-01-31 13:48:58,944 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz966096578425637538/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz966096578425637538/bin -o /tmp/qfuzz966096578425637538/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz966096578425637538/bin
Found file /tmp/qfuzz966096578425637538/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz966096578425637538/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz966096578425637538/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz966096578425637538/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz966096578425637538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz966096578425637538/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz966096578425637538/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz966096578425637538/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 125730 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [594.00]
2; /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [394.00]
8; /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 2; 23.00; [31.00,54.00]
9; /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 1; 0.00; [674.00]
22; /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 2; 3.00; [31.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 9, 41, 36, 2, 46, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 39, 16, 5, 44, 46, 4, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 11, 37, 13, 27, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz966096578425637538/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134858_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 33, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:48:58,945 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-31 13:48:58,945 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-31 13:49:04,250 INFO     Done. Execution time: 5.305044651031494 seconds
2023-01-31 13:49:04,250 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134858_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padend/qfuzz/PadEnd_20230131_134858_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(33, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 33
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 2
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 19
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 29
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      33  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      33  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      33  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      33  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      33  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  33  |      33  |
    29  |                    R = R + string;  |     33  |  33  |      |          2  |  33  |      33  |
    31  |                    int i = string;  |         |  33  |  33  |          2  |  33  |      33  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 1 trace node indices: [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     33  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

2023-01-31 13:49:04,250 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:49:05,865 INFO     Done. Execution time: 1.6142380237579346 seconds
2023-01-31 13:49:05,865 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.607s
user	0m2.761s
sys	0m0.190s

2023-01-31 13:49:05,865 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 13:49:05,865 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:52:11,628 INFO     Done. Execution time: 185.76224160194397 seconds
2023-01-31 13:52:11,628 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz7837507665181244206/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7837507665181244206/bin -o /tmp/qfuzz7837507665181244206/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7837507665181244206/bin
Found file /tmp/qfuzz7837507665181244206/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz7837507665181244206/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7837507665181244206/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7837507665181244206/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7837507665181244206/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz7837507665181244206/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 120149 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta; 2; 6.00; [31.00,37.00]
39; /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000002,src:000001,op:havoc,rep:32; 2; 6.00; [31.00,37.00]
59; /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000003,src:000001+000002,op:splice,rep:64,+delta; 2; 14.00; [37.00,51.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000003,src:000001+000002,op:splice,rep:64,+delta
/tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000002,src:000001,op:havoc,rep:32
/tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
/tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000003,src:000001+000002,op:splice,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(2, 23, 25, 25, 13, 10, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000002,src:000001,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 2, 2, 5, 11, 43, 1, 33, 35, 19, 1, 12, 34, 23, 1, 1, 40, 30, 5, 11, 43, 1, 1, 1, 47, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 1, 1, 1, 5, 37, 12, 17, 35, 28, 1, 23, 3, 49, 22, 30, 5, 21, 32, 19, 30, 21, 35, 25, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz7837507665181244206/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135211_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 1, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:52:11,628 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-31 13:52:11,629 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-31 13:52:17,567 INFO     Done. Execution time: 5.937639951705933 seconds
2023-01-31 13:52:17,567 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135211_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/padstart/qfuzz/PadStart_20230131_135211_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(1, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 4 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 1
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 1
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 2
minLength: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
string: 29
minLength: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 54):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       1  |
    23  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       1  |
    24  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       1  |
    25  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       1  |
    26  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       1  |
    28  |                    int i = string;  |         |  0  |  1  |          2  |   0  |       1  |
    35  |                       sb = sb + 1;  |         |  0  |  1  |          2  |   1  |       1  |
    38  |                         R = R + 1;  |      1  |  1  |  1  |          2  |   1  |       1  |
    42  |                         i = i + 1;  |         |  1  |  2  |          2  |   1  |       1  |
    43  |              resetPlaceHolder_1();  |         |  1  |  2  |          2  |   1  |       1  |
    50  |                  sb = sb + string;  |         |  1  |  2  |          2  |   2  |       1  |
    53  |                    R = R + string;  |      1  |  2  |  2  |          2  |   2  |       1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 2 trace node indices: [38, 53]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {53}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {38}; {53} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {38}; {53}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [39, 52])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    53  |        R = R + string;  |      1  |                         1  |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |       2  |
    22  |     return;  |         |  0  |          2  |       2  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

2023-01-31 13:52:17,567 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:52:28,536 INFO     Done. Execution time: 10.968652248382568 seconds
2023-01-31 13:52:28,536 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    sb = sb + string;
    D0 = D0 + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    sb = sb + string;
    D0 = D0 + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 minLength)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `9.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1352-transparentAmortize-60s-mostPrecise/guava-raw-0131-1352-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.962s
user	0m20.492s
sys	0m3.152s

2023-01-31 13:52:28,537 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    186.09190773963928,
    11.160414218902588,
    8.164510488510132
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    186.2786557674408,
    15.18215036392212,
    62.42883634567261
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    186.09865188598633,
    13.672568082809448,
    62.98366451263428
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": [
    186.0457625389099,
    15.036548852920532,
    118.0249605178833
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    186.05522060394287,
    11.756820440292358,
    7.477851152420044
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": [
    185.97302103042603,
    12.275388956069946,
    12.612167835235596
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": [
    186.00919818878174,
    11.841211080551147,
    7.547623872756958
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    186.01476526260376,
    6.67234468460083,
    14.601040124893188
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    186.3289511203766,
    6.47786808013916,
    7.558599948883057
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    186.40435314178467,
    13.497124195098877,
    10.089916706085205
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.7472901344299316,
    1.6387674808502197,
    0.9678452014923096
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    186.10682129859924,
    4.723913192749023,
    2.1878669261932373
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    185.92002391815186,
    10.275672912597656,
    1.767423391342163
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    185.91232585906982,
    6.227898597717285,
    7.78780198097229
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    185.8752806186676,
    9.429173946380615,
    89.27456450462341
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    185.91237545013428,
    10.719746351242065,
    63.04365086555481
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    186.20494055747986,
    6.935470819473267,
    7.03281831741333
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    185.94498348236084,
    15.16307806968689,
    15.364087581634521
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    185.9323115348816,
    6.683788061141968,
    7.872525691986084
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    185.8178961277008,
    6.498275279998779,
    7.1254823207855225
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    185.81418228149414,
    4.98327898979187,
    6.499896049499512
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    185.94419050216675,
    6.2898664474487305,
    7.455970287322998
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    186.05418372154236,
    6.5052809715271,
    7.262301921844482
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    185.78080821037292,
    4.085937738418579,
    1.8986108303070068
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    185.91247940063477,
    7.239982843399048,
    9.637693166732788
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    185.82427310943604,
    6.248800039291382,
    7.655146837234497
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    185.85817623138428,
    6.021140813827515,
    7.164549112319946
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    186.58014607429504,
    6.189651012420654,
    22.13532328605652
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    185.8899688720703,
    5.284087657928467,
    1.5899474620819092
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    185.90679383277893,
    10.88594913482666,
    378.6313922405243
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    185.87371635437012,
    11.647732019424438,
    7.681256532669067
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    185.87102890014648,
    8.387593507766724,
    83.84616184234619
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    185.98372769355774,
    6.540307521820068,
    19.66283106803894
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    186.04148244857788,
    7.535809516906738,
    91.8226809501648
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    185.77963876724243,
    2.9052934646606445,
    2.059662103652954
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    186.12460207939148,
    5.56447696685791,
    1.5182273387908936
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    185.78451371192932,
    3.62347412109375,
    1.9648571014404297
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    185.885577917099,
    8.612886905670166,
    1.7149646282196045
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    185.86836552619934,
    5.305044651031494,
    1.6142380237579346
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    185.76224160194397,
    5.937639951705933,
    10.968652248382568
  ]
}
2023-01-31 13:52:28,537 INFO     Total time elapsed: 8767.574892759323 seconds
2023-01-31 13:52:28,537 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-31 13:52:28,537 INFO     Number of verified programs: {
  "stac": 4,
  "lang3": 13,
  "stringutils": 6,
  "guava": 1
}
2023-01-31 13:52:28,537 INFO     Number of not verified programs: {
  "stac": 3,
  "lang3": 5,
  "stringutils": 2
}
2023-01-31 13:52:28,537 INFO     Number of unknown programs: {
  "lang3": 2,
  "stringutils": 2,
  "guava": 2
}
2023-01-31 13:52:28,537 INFO     Number of trace clusters: {
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": null,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": 2,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": 1,
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": 2
}
2023-01-31 13:52:28,537 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/qfuzz_00.json

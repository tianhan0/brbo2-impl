2023-01-31 13:52:28,613 INFO     Arguments:
2023-01-31 13:52:28,613 INFO     timeout	180
2023-01-31 13:52:28,613 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-31 13:52:28,613 INFO     samples	0
2023-01-31 13:52:28,613 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-31 13:52:28,613 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-31 13:52:28,613 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-31 13:52:28,613 INFO     dry	False
2023-01-31 13:52:28,613 INFO     log	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/naive_01.txt
2023-01-31 13:52:28,614 INFO     mode	naive
2023-01-31 13:52:28,614 INFO     version	master
2023-01-31 13:52:28,614 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
2023-01-31 13:52:28,614 INFO     min_int	1
2023-01-31 13:52:28,614 INFO     max_int	50
2023-01-31 13:52:28,614 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-31 13:52:28,618 INFO     Done. Execution time: 0.003897428512573242 seconds
2023-01-31 13:52:28,618 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "a46acaaae36a654d9e52218d239766824b4c902a"`
2023-01-31 13:52:28,623 INFO     Done. Execution time: 0.004556417465209961 seconds
2023-01-31 13:52:28,623 INFO     Build a new version: "a46acaaae36a654d9e52218d239766824b4c902a"
2023-01-31 13:52:28,623 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-31 13:52:39,625 INFO     Done. Execution time: 11.001455068588257 seconds
2023-01-31 13:52:39,625 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[info] compiling 39 Java sources to /root/Documents/workspace/brbo2-impl/target/scala-2.12/classes ...
[info] done compiling
[success] Total time: 5 s, completed Jan 31, 2023 1:52:39 PM

2023-01-31 13:52:39,630 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 13:52:39,630 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 13:55:45,415 INFO     Done. Execution time: 185.7846338748932 seconds
2023-01-31 13:55:45,415 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz8733003166325559587/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8733003166325559587/bin -o /tmp/qfuzz8733003166325559587/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8733003166325559587/bin
Found file /tmp/qfuzz8733003166325559587/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz8733003166325559587/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8733003166325559587/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8733003166325559587/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8733003166325559587/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8733003166325559587/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 125197 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 121049 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m121k to 125k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8733003166325559587/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135545_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 13:55:45,415 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-31 13:55:45,416 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-31 13:55:55,343 INFO     Done. Execution time: 9.927398681640625 seconds
2023-01-31 13:55:55,343 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135545_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine/qfuzz/TemplateEngine_20230131_135545_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [3,24,15,37,3,18,46]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [3,24,15,37,3,18,46]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    25  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    29  |                         i = i + 1;  |         |    3  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    30  |              resetPlaceHolder_1();  |         |    3  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    36  |        chunk = arrayRead(text, i);  |         |    3  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    39  |                     R = R + chunk;  |     24  |   27  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    43  |                         i = i + 1;  |         |   27  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    44  |              resetPlaceHolder_1();  |         |   27  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    50  |        chunk = arrayRead(text, i);  |         |   27  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    53  |                     R = R + chunk;  |     15  |   42  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    57  |                         i = i + 1;  |         |   42  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    58  |              resetPlaceHolder_1();  |         |   42  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    64  |        chunk = arrayRead(text, i);  |         |   42  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    67  |                     R = R + chunk;  |     37  |   79  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    71  |                         i = i + 1;  |         |   79  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    72  |              resetPlaceHolder_1();  |         |   79  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    78  |        chunk = arrayRead(text, i);  |         |   79  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    81  |                     R = R + chunk;  |      3  |   82  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    85  |                         i = i + 1;  |         |   82  |      3  |  5  |  [3,24,15,37,3,18,46]  |
    86  |              resetPlaceHolder_1();  |         |   82  |      3  |  5  |  [3,24,15,37,3,18,46]  |
    92  |        chunk = arrayRead(text, i);  |         |   82  |     18  |  5  |  [3,24,15,37,3,18,46]  |
    95  |                     R = R + chunk;  |     18  |  100  |     18  |  5  |  [3,24,15,37,3,18,46]  |
    99  |                         i = i + 1;  |         |  100  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   100  |              resetPlaceHolder_1();  |         |  100  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   106  |        chunk = arrayRead(text, i);  |         |  100  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   109  |                     R = R + chunk;  |     46  |  146  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   113  |                         i = i + 1;  |         |  146  |     46  |  7  |  [3,24,15,37,3,18,46]  |
   114  |              resetPlaceHolder_1();  |         |  146  |     46  |  7  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25}; {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25}; {81} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     24  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     15  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     37  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      3  |                         1  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     18  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     46  |                            |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [53, 109, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25}; {81}
GroupID(1): {39,53,67,95,109}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    39  |         R = R + chunk;  |     24  |                            |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |                            |
    53  |         R = R + chunk;  |     15  |                            |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |         R = R + chunk;  |     37  |                            |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |      3  |                         1  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |                            |
    95  |         R = R + chunk;  |     18  |                            |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |                            |
   109  |         R = R + chunk;  |     46  |                            |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R0 = R0 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

2023-01-31 13:55:55,344 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 13:56:56,453 INFO     Done. Execution time: 61.10883688926697 seconds
2023-01-31 13:56:56,453 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!4 (or (<= D0p (+ 0 (* 1 1 text))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 (<= D0p (+ 0 (* 1 1 text))) a!4)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 text))) (= D0 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    7)  (define-fun text () Int    11)  (define-fun D0p () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `59.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1355-transparentAmortize-60s-mostPrecise/stac-raw-0131-1355-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m1.102s
user	3m10.815s
sys	0m5.145s

2023-01-31 13:56:56,453 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 13:56:56,453 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:00:02,366 INFO     Done. Execution time: 185.91259384155273 seconds
2023-01-31 14:00:02,366 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz437219031602487727/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz437219031602487727/bin -o /tmp/qfuzz437219031602487727/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz437219031602487727/bin
Found file /tmp/qfuzz437219031602487727/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz437219031602487727/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz437219031602487727/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz437219031602487727/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz437219031602487727/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz437219031602487727/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz437219031602487727/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz437219031602487727/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 122739 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 120608 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m120k to 122k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz437219031602487727/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_140002_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46], 2, 3
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:00:02,367 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-31 14:00:02,367 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-31 14:00:19,157 INFO     Done. Execution time: 16.79002857208252 seconds
2023-01-31 14:00:19,157 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_140002_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine2/qfuzz/TemplateEngine2_20230131_140002_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46], 2, 3)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2, 20)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
templateds: 2
separator: 3
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
templateds: 2
separator: 20
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 264):
                                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  templateds  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |     |          3  |           2  |  [3,24,15,37,3,18,46]  |
    37  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |      3  |  0  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    46  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    50  |                         j = j + 1;  |         |    3  |      3  |  0  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    51  |              resetPlaceHolder_2();  |         |    3  |      3  |  0  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    57  |        chunk = arrayRead(text, j);  |         |    3  |     24  |  0  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    60  |                     R = R + chunk;  |     24  |   27  |     24  |  0  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    64  |                         j = j + 1;  |         |   27  |     24  |  0  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    65  |              resetPlaceHolder_2();  |         |   27  |     24  |  0  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    71  |        chunk = arrayRead(text, j);  |         |   27  |     15  |  0  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    74  |                     R = R + chunk;  |     15  |   42  |     15  |  0  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    78  |                         j = j + 1;  |         |   42  |     15  |  0  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    79  |              resetPlaceHolder_2();  |         |   42  |     15  |  0  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    85  |        chunk = arrayRead(text, j);  |         |   42  |     37  |  0  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    88  |                     R = R + chunk;  |     37  |   79  |     37  |  0  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    92  |                         j = j + 1;  |         |   79  |     37  |  0  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    93  |              resetPlaceHolder_2();  |         |   79  |     37  |  0  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
    99  |        chunk = arrayRead(text, j);  |         |   79  |      3  |  0  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   102  |                     R = R + chunk;  |      3  |   82  |      3  |  0  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   106  |                         j = j + 1;  |         |   82  |      3  |  0  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   107  |              resetPlaceHolder_2();  |         |   82  |      3  |  0  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   113  |        chunk = arrayRead(text, j);  |         |   82  |     18  |  0  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   116  |                     R = R + chunk;  |     18  |  100  |     18  |  0  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   120  |                         j = j + 1;  |         |  100  |     18  |  0  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   121  |              resetPlaceHolder_2();  |         |  100  |     18  |  0  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   127  |        chunk = arrayRead(text, j);  |         |  100  |     46  |  0  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   130  |                     R = R + chunk;  |     46  |  146  |     46  |  0  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   134  |                         j = j + 1;  |         |  146  |     46  |  0  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   135  |              resetPlaceHolder_2();  |         |  146  |     46  |  0  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   141  |                 R = R + separator;  |      3  |  149  |     46  |  0  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   145  |                         i = i + 1;  |         |  149  |     46  |  1  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   146  |              resetPlaceHolder_1();  |         |  149  |     46  |  1  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   151  |                         int j = 0;  |         |  149  |     46  |  1  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   157  |        chunk = arrayRead(text, j);  |         |  149  |      3  |  1  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   160  |                     R = R + chunk;  |      3  |  152  |      3  |  1  |  0  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   164  |                         j = j + 1;  |         |  152  |      3  |  1  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   165  |              resetPlaceHolder_2();  |         |  152  |      3  |  1  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   171  |        chunk = arrayRead(text, j);  |         |  152  |     24  |  1  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   174  |                     R = R + chunk;  |     24  |  176  |     24  |  1  |  1  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   178  |                         j = j + 1;  |         |  176  |     24  |  1  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   179  |              resetPlaceHolder_2();  |         |  176  |     24  |  1  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   185  |        chunk = arrayRead(text, j);  |         |  176  |     15  |  1  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   188  |                     R = R + chunk;  |     15  |  191  |     15  |  1  |  2  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   192  |                         j = j + 1;  |         |  191  |     15  |  1  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   193  |              resetPlaceHolder_2();  |         |  191  |     15  |  1  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   199  |        chunk = arrayRead(text, j);  |         |  191  |     37  |  1  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   202  |                     R = R + chunk;  |     37  |  228  |     37  |  1  |  3  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   206  |                         j = j + 1;  |         |  228  |     37  |  1  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   207  |              resetPlaceHolder_2();  |         |  228  |     37  |  1  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   213  |        chunk = arrayRead(text, j);  |         |  228  |      3  |  1  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   216  |                     R = R + chunk;  |      3  |  231  |      3  |  1  |  4  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   220  |                         j = j + 1;  |         |  231  |      3  |  1  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   221  |              resetPlaceHolder_2();  |         |  231  |      3  |  1  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   227  |        chunk = arrayRead(text, j);  |         |  231  |     18  |  1  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   230  |                     R = R + chunk;  |     18  |  249  |     18  |  1  |  5  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   234  |                         j = j + 1;  |         |  249  |     18  |  1  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   235  |              resetPlaceHolder_2();  |         |  249  |     18  |  1  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   241  |        chunk = arrayRead(text, j);  |         |  249  |     46  |  1  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   244  |                     R = R + chunk;  |     46  |  295  |     46  |  1  |  6  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   248  |                         j = j + 1;  |         |  295  |     46  |  1  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   249  |              resetPlaceHolder_2();  |         |  295  |     46  |  1  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   255  |                 R = R + separator;  |      3  |  298  |     46  |  1  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   259  |                         i = i + 1;  |         |  298  |     46  |  2  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
   260  |              resetPlaceHolder_1();  |         |  298  |     46  |  2  |  7  |          3  |           2  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 16 trace node indices: [88, 202, 174, 46, 216, 116, 74, 60, 102, 160, 188, 141, 244, 230, 130, 255]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 6 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {102}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {216}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {255}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {102}; {141}; {160}; {216}; {255}; {46}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {102}; {141}; {160}; {216}; {255}; {46} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     24  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     15  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     37  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      3  |                         1  |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     18  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     46  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |      3  |                         2  |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |      3  |                         3  |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     24  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     15  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     37  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |      3  |                         4  |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     18  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     46  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |      3  |                         5  |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116}; {230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {130}; {244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174}; {60}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 10 trace node indices: [88, 202, 174, 116, 74, 60, 188, 244, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {116,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {130,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5, 6), Set(5, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {116,130}; {230,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 5), Set(1, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,230}; {60,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {188,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 5), Set(2, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {188,230}; {74,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {202,230}; {88,116}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,174}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,244}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 6), Set(1, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {174,244}; {60,130}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,188}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {174,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {188,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {60,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {74,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {74,244}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {188,244}; {88,174}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {174,202}; {74,130}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {130,188}; {60,88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 1), Set(2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 6), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(6, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {188,244}; {88,174} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                            |
    51  |  resetPlaceHolder_2();  |         |                            |
    60  |         R = R + chunk;  |     24  |                            |
    65  |  resetPlaceHolder_2();  |         |                            |
    74  |         R = R + chunk;  |     15  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     37  |                         0  |
    93  |  resetPlaceHolder_2();  |         |                            |
   102  |         R = R + chunk;  |      3  |                            |
   107  |  resetPlaceHolder_2();  |         |                            |
   116  |         R = R + chunk;  |     18  |                            |
   121  |  resetPlaceHolder_2();  |         |                            |
   130  |         R = R + chunk;  |     46  |                            |
   135  |  resetPlaceHolder_2();  |         |                            |
   141  |     R = R + separator;  |      3  |                            |
   146  |  resetPlaceHolder_1();  |         |                            |
   160  |         R = R + chunk;  |      3  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     24  |                         0  |
   179  |  resetPlaceHolder_2();  |         |                            |
   188  |         R = R + chunk;  |     15  |                         1  |
   193  |  resetPlaceHolder_2();  |         |                            |
   202  |         R = R + chunk;  |     37  |                            |
   207  |  resetPlaceHolder_2();  |         |                            |
   216  |         R = R + chunk;  |      3  |                            |
   221  |  resetPlaceHolder_2();  |         |                            |
   230  |         R = R + chunk;  |     18  |                            |
   235  |  resetPlaceHolder_2();  |         |                            |
   244  |         R = R + chunk;  |     46  |                         1  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |     R = R + separator;  |      3  |                            |
   260  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {130,202}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,202}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [202, 116, 74, 60, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {74,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [202, 116, 74, 60, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,116,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,116,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {74,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [202, 116, 74, 60, 230, 130]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {60,74,116,130,202}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {60,74,130,202,230}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [202, 116, 74, 60, 230, 130]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {102}; {141}; {160}; {216}; {255}; {46}
GroupID(1): {188,244}; {88,174}
GroupID(2): {60,74,116,130,202,230}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     37  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      3  |                         1  |                            |                            |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |      3  |                         2  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      3  |                         3  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     15  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     37  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      3  |                         4  |                            |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     46  |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |      3  |                         5  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [47, 101])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     37  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      3  |                         1  |                            |                            |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |      3  |                         2  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      3  |                         3  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     15  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     37  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      3  |                         4  |                            |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     46  |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |      3  |                         5  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [103, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     37  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      3  |                         1  |                            |                            |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |      3  |                         2  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      3  |                         3  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     15  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     37  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      3  |                         4  |                            |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     46  |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |      3  |                         5  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [161, 215])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     37  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      3  |                         1  |                            |                            |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |      3  |                         2  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      3  |                         3  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     15  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     37  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      3  |                         4  |                            |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     46  |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |      3  |                         5  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [217, 254])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      3  |                         0  |                            |                            |
    51  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    60  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    65  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    74  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    88  |         R = R + chunk;  |     37  |                            |                         0  |                            |
    93  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   102  |         R = R + chunk;  |      3  |                         1  |                            |                            |
   107  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   121  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   135  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   141  |     R = R + separator;  |      3  |                         2  |                            |                            |
   146  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   160  |         R = R + chunk;  |      3  |                         3  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     24  |                            |                         0  |                            |
   179  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   188  |         R = R + chunk;  |     15  |                            |                         1  |                            |
   193  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   202  |         R = R + chunk;  |     37  |                            |                            |                         0  |
   207  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   216  |         R = R + chunk;  |      3  |                         4  |                            |                            |
   221  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   230  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   235  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   244  |         R = R + chunk;  |     46  |                            |                         1  |                            |
   249  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   255  |     R = R + separator;  |      3  |                         5  |                            |                            |
   260  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(146)
GroupID(1): Set(179)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 0) || (j == 0))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 0) || (i == 0))
  {
    if ((j < 2) || (j == 2))
    {
      R2 = R2 + chunk;
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        if ((j < 3) || (j == 3))
        {
          R1 = R1 + chunk;
        }
        else
        {
          R0 = R0 + chunk;
        }
      }
      else
      {
        R2 = R2 + chunk;
      }
    }
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      R1 = R1 + chunk;
    }
    else
    {
      if ((j < 5) || (j == 5))
      {
        if ((j < 3) || (j == 3))
        {
          R2 = R2 + chunk;
        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            R0 = R0 + chunk;
          }
          else
          {
            R2 = R2 + chunk;
          }
        }
      }
      else
      {
        R1 = R1 + chunk;
      }
    }
  }
}
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R2
  if ((j < 2) || (j == 2))
  {
    if ((i < 0) || (i == 0))
    {
      // reset R1
    }
    else
    {
      if ((j < 1) || (j == 1))
      {
        // reset R1
      }
      else
      {
        if (S1 < R1)
        {
          S1 = R1;
        }
        else
        {
          ;
        }
        R1 = 0;
        C1 = C1 + 1;
      }
    }
  }
  else
  {
    // reset R1
  }
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

2023-01-31 14:00:19,158 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:01:22,211 INFO     Done. Execution time: 63.05328989028931 seconds
2023-01-31 14:01:22,211 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 2) || (j == 2))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                if ((j < 3) || (j == 3))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  D0 = D0 + chunk;
                }
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D1 = D1 + chunk;
            }
            else
            {
              if ((j < 5) || (j == 5))
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  if ((j < 4) || (j == 4))
                  {
                    D0 = D0 + chunk;
                  }
                  else
                  {
                    D2 = D2 + chunk;
                  }
                }
              }
              else
              {
                D1 = D1 + chunk;
              }
            }
          }
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            if ((j < 1) || (j == 1))
            {

            }
            else
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < templateds)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 2) || (j == 2))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                if ((j < 3) || (j == 3))
                {
                  D1 = D1 + chunk;
                }
                else
                {
                  D0 = D0 + chunk;
                }
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D1 = D1 + chunk;
            }
            else
            {
              if ((j < 5) || (j == 5))
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  if ((j < 4) || (j == 4))
                  {
                    D0 = D0 + chunk;
                  }
                  else
                  {
                    D2 = D2 + chunk;
                  }
                }
              }
              else
              {
                D1 = D1 + chunk;
              }
            }
          }
        }
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((i < 0) || (i == 0))
          {

          }
          else
          {
            if ((j < 1) || (j == 1))
            {

            }
            else
            {
              D1p = D1;
              D1 = 0;
              C1 = C1 + 1;
            }
          }
        }
        else
        {

        }
      }
      D0 = D0 + separator;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `139`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7459348505197439569.c`
ERROR brbo.common.icra.Icra - stderr:
timeout: the monitored command dumped core
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4838208829201512551.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3529167738391903078.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6323555978418542088.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2481324228134273507.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6562797248721831362.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7327913903189050847.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1696144055566323734.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3184958278625738524.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C85 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C84 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C84 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C85 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 4))  (define-fun D2 () Int    7)  (define-fun D1 () Int    7)  (define-fun C2 () Int    11)  (define-fun C1 () Int    15)  (define-fun templateds () Int    14)  (define-fun text () Int    1)  (define-fun separator () Int    5)  (define-fun D0p () Int    8)  (define-fun D2p () Int    4)  (define-fun D1p () Int    15)  (define-fun C0 () Int    1)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C85 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C84 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1400-transparentAmortize-60s-mostPrecise/stac-raw-0131-1400-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.045s
user	4m2.237s
sys	0m3.359s

2023-01-31 14:01:22,212 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 14:01:22,212 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:04:28,473 INFO     Done. Execution time: 186.2604866027832 seconds
2023-01-31 14:04:28,473 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz5724642980160214686/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5724642980160214686/bin -o /tmp/qfuzz5724642980160214686/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5724642980160214686/bin
Found file /tmp/qfuzz5724642980160214686/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz5724642980160214686/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5724642980160214686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5724642980160214686/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5724642980160214686/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz5724642980160214686/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 125210 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 124583 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m124k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5724642980160214686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140428_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46], 2, 3, 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 2, 20, 7
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:04:28,473 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-31 14:04:28,473 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-31 14:04:42,496 INFO     Done. Execution time: 14.022686958312988 seconds
2023-01-31 14:04:42,496 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140428_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateengine3/qfuzz/TemplateEngine3_20230131_140428_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46], 2, 3, 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 2, 20, 7)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
ts: 2
sep: 3
rep: 19
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
ts: 2
sep: 20
rep: 7
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 314):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |          text          |  ts  |
---------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    34  |                      // int R = 0;  |         |    0  |         |     |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |     |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    45  |                         int j = 0;  |         |    0  |      0  |  0  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |      3  |  0  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    54  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    57  |                       R = R + rep;  |     19  |   22  |      3  |  0  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    61  |                         j = j + 1;  |         |   22  |      3  |  0  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    62  |              resetPlaceHolder_2();  |         |   22  |      3  |  0  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    68  |        chunk = arrayRead(text, j);  |         |   22  |     24  |  0  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    71  |                     R = R + chunk;  |     24  |   46  |     24  |  0  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    74  |                       R = R + rep;  |     19  |   65  |     24  |  0  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    78  |                         j = j + 1;  |         |   65  |     24  |  0  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    79  |              resetPlaceHolder_2();  |         |   65  |     24  |  0  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    85  |        chunk = arrayRead(text, j);  |         |   65  |     15  |  0  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    88  |                     R = R + chunk;  |     15  |   80  |     15  |  0  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    91  |                       R = R + rep;  |     19  |   99  |     15  |  0  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    95  |                         j = j + 1;  |         |   99  |     15  |  0  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
    96  |              resetPlaceHolder_2();  |         |   99  |     15  |  0  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   102  |        chunk = arrayRead(text, j);  |         |   99  |     37  |  0  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   105  |                     R = R + chunk;  |     37  |  136  |     37  |  0  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   108  |                       R = R + rep;  |     19  |  155  |     37  |  0  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   112  |                         j = j + 1;  |         |  155  |     37  |  0  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   113  |              resetPlaceHolder_2();  |         |  155  |     37  |  0  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   119  |        chunk = arrayRead(text, j);  |         |  155  |      3  |  0  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   122  |                     R = R + chunk;  |      3  |  158  |      3  |  0  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   125  |                       R = R + rep;  |     19  |  177  |      3  |  0  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   129  |                         j = j + 1;  |         |  177  |      3  |  0  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   130  |              resetPlaceHolder_2();  |         |  177  |      3  |  0  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   136  |        chunk = arrayRead(text, j);  |         |  177  |     18  |  0  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   139  |                     R = R + chunk;  |     18  |  195  |     18  |  0  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   142  |                       R = R + rep;  |     19  |  214  |     18  |  0  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   146  |                         j = j + 1;  |         |  214  |     18  |  0  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   147  |              resetPlaceHolder_2();  |         |  214  |     18  |  0  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   153  |        chunk = arrayRead(text, j);  |         |  214  |     46  |  0  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   156  |                     R = R + chunk;  |     46  |  260  |     46  |  0  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   159  |                       R = R + rep;  |     19  |  279  |     46  |  0  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   163  |                         j = j + 1;  |         |  279  |     46  |  0  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   164  |              resetPlaceHolder_2();  |         |  279  |     46  |  0  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   170  |                       R = R + sep;  |      3  |  282  |     46  |  0  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   174  |                         i = i + 1;  |         |  282  |     46  |  1  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   175  |              resetPlaceHolder_1();  |         |  282  |     46  |  1  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   180  |                         int j = 0;  |         |  282  |     46  |  1  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   186  |        chunk = arrayRead(text, j);  |         |  282  |      3  |  1  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   189  |                     R = R + chunk;  |      3  |  285  |      3  |  1  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   192  |                       R = R + rep;  |     19  |  304  |      3  |  1  |  0  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   196  |                         j = j + 1;  |         |  304  |      3  |  1  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   197  |              resetPlaceHolder_2();  |         |  304  |      3  |  1  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   203  |        chunk = arrayRead(text, j);  |         |  304  |     24  |  1  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   206  |                     R = R + chunk;  |     24  |  328  |     24  |  1  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   209  |                       R = R + rep;  |     19  |  347  |     24  |  1  |  1  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   213  |                         j = j + 1;  |         |  347  |     24  |  1  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   214  |              resetPlaceHolder_2();  |         |  347  |     24  |  1  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   220  |        chunk = arrayRead(text, j);  |         |  347  |     15  |  1  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   223  |                     R = R + chunk;  |     15  |  362  |     15  |  1  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   226  |                       R = R + rep;  |     19  |  381  |     15  |  1  |  2  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   230  |                         j = j + 1;  |         |  381  |     15  |  1  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   231  |              resetPlaceHolder_2();  |         |  381  |     15  |  1  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   237  |        chunk = arrayRead(text, j);  |         |  381  |     37  |  1  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   240  |                     R = R + chunk;  |     37  |  418  |     37  |  1  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   243  |                       R = R + rep;  |     19  |  437  |     37  |  1  |  3  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   247  |                         j = j + 1;  |         |  437  |     37  |  1  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   248  |              resetPlaceHolder_2();  |         |  437  |     37  |  1  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   254  |        chunk = arrayRead(text, j);  |         |  437  |      3  |  1  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   257  |                     R = R + chunk;  |      3  |  440  |      3  |  1  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   260  |                       R = R + rep;  |     19  |  459  |      3  |  1  |  4  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   264  |                         j = j + 1;  |         |  459  |      3  |  1  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   265  |              resetPlaceHolder_2();  |         |  459  |      3  |  1  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   271  |        chunk = arrayRead(text, j);  |         |  459  |     18  |  1  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   274  |                     R = R + chunk;  |     18  |  477  |     18  |  1  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   277  |                       R = R + rep;  |     19  |  496  |     18  |  1  |  5  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   281  |                         j = j + 1;  |         |  496  |     18  |  1  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   282  |              resetPlaceHolder_2();  |         |  496  |     18  |  1  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   288  |        chunk = arrayRead(text, j);  |         |  496  |     46  |  1  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   291  |                     R = R + chunk;  |     46  |  542  |     46  |  1  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   294  |                       R = R + rep;  |     19  |  561  |     46  |  1  |  6  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   298  |                         j = j + 1;  |         |  561  |     46  |  1  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   299  |              resetPlaceHolder_2();  |         |  561  |     46  |  1  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   305  |                       R = R + sep;  |      3  |  564  |     46  |  1  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   309  |                         i = i + 1;  |         |  564  |     46  |  2  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
   310  |              resetPlaceHolder_1();  |         |  564  |     46  |  2  |  7  |   19  |    3  |  [3,24,15,37,3,18,46]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 30 trace node indices: [88, 170, 142, 257, 125, 189, 57, 243, 74, 206, 260, 192, 156, 105, 291, 71, 54, 159, 274, 91, 240, 108, 223, 226, 209, 139, 305, 294, 277, 122]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105}; {240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {108}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {125}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {142}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {159}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {192}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {209}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {226}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {243}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {260}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {277}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {294}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {74}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |
    57  |           R = R + rep;  |     19  |                         0  |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     24  |                            |
    74  |           R = R + rep;  |     19  |                         1  |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     15  |                            |
    91  |           R = R + rep;  |     19  |                         2  |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     37  |                            |
   108  |           R = R + rep;  |     19  |                         3  |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      3  |                            |
   125  |           R = R + rep;  |     19  |                         4  |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     18  |                            |
   142  |           R = R + rep;  |     19  |                         5  |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     46  |                            |
   159  |           R = R + rep;  |     19  |                         6  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      3  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      3  |                            |
   192  |           R = R + rep;  |     19  |                         7  |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     24  |                            |
   209  |           R = R + rep;  |     19  |                         8  |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     15  |                            |
   226  |           R = R + rep;  |     19  |                         9  |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     37  |                            |
   243  |           R = R + rep;  |     19  |                        10  |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      3  |                            |
   260  |           R = R + rep;  |     19  |                        11  |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     18  |                            |
   277  |           R = R + rep;  |     19  |                        12  |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     46  |                            |
   294  |           R = R + rep;  |     19  |                        13  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      3  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {122}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {189}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {257}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {305}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {122}; {170}; {189}; {257}; {305}; {54}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {122}; {170}; {189}; {257}; {305}; {54} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                         0  |
    57  |           R = R + rep;  |     19  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     24  |                            |
    74  |           R = R + rep;  |     19  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     15  |                            |
    91  |           R = R + rep;  |     19  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     37  |                            |
   108  |           R = R + rep;  |     19  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      3  |                         1  |
   125  |           R = R + rep;  |     19  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     18  |                            |
   142  |           R = R + rep;  |     19  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     46  |                            |
   159  |           R = R + rep;  |     19  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      3  |                         2  |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      3  |                         3  |
   192  |           R = R + rep;  |     19  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     24  |                            |
   209  |           R = R + rep;  |     19  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     15  |                            |
   226  |           R = R + rep;  |     19  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     37  |                            |
   243  |           R = R + rep;  |     19  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      3  |                         4  |
   260  |           R = R + rep;  |     19  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     18  |                            |
   277  |           R = R + rep;  |     19  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     46  |                            |
   294  |           R = R + rep;  |     19  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      3  |                         5  |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(5), Set(5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {139}; {274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(6), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {156}; {291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1), Set(1)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {206}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {223}; {88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 10 trace node indices: [88, 206, 156, 105, 291, 71, 274, 240, 223, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 9 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 5), Set(3, 5)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,139}; {240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {105,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 6), Set(3, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {105,156}; {240,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {105,206}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,223}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {206,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {223,291}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {71,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {88,291}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {105,206}; {223,291}
INFO  brbo.backend2.learning.SegmentClustering - Group 1: {206,240}; {88,156}
INFO  brbo.backend2.learning.SegmentClustering - Group 2: {156,223}; {71,105}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(3, 1), Set(2, 6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 6), Set(1, 3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(1, 3), Set(6, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {105,206}; {223,291} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |
    57  |           R = R + rep;  |     19  |                            |
    62  |  resetPlaceHolder_2();  |         |                            |
    71  |         R = R + chunk;  |     24  |                            |
    74  |           R = R + rep;  |     19  |                            |
    79  |  resetPlaceHolder_2();  |         |                            |
    88  |         R = R + chunk;  |     15  |                            |
    91  |           R = R + rep;  |     19  |                            |
    96  |  resetPlaceHolder_2();  |         |                            |
   105  |         R = R + chunk;  |     37  |                         0  |
   108  |           R = R + rep;  |     19  |                            |
   113  |  resetPlaceHolder_2();  |         |                            |
   122  |         R = R + chunk;  |      3  |                            |
   125  |           R = R + rep;  |     19  |                            |
   130  |  resetPlaceHolder_2();  |         |                            |
   139  |         R = R + chunk;  |     18  |                            |
   142  |           R = R + rep;  |     19  |                            |
   147  |  resetPlaceHolder_2();  |         |                            |
   156  |         R = R + chunk;  |     46  |                            |
   159  |           R = R + rep;  |     19  |                            |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |           R = R + sep;  |      3  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
   189  |         R = R + chunk;  |      3  |                            |
   192  |           R = R + rep;  |     19  |                            |
   197  |  resetPlaceHolder_2();  |         |                            |
   206  |         R = R + chunk;  |     24  |                         0  |
   209  |           R = R + rep;  |     19  |                            |
   214  |  resetPlaceHolder_2();  |         |                            |
   223  |         R = R + chunk;  |     15  |                         1  |
   226  |           R = R + rep;  |     19  |                            |
   231  |  resetPlaceHolder_2();  |         |                            |
   240  |         R = R + chunk;  |     37  |                            |
   243  |           R = R + rep;  |     19  |                            |
   248  |  resetPlaceHolder_2();  |         |                            |
   257  |         R = R + chunk;  |      3  |                            |
   260  |           R = R + rep;  |     19  |                            |
   265  |  resetPlaceHolder_2();  |         |                            |
   274  |         R = R + chunk;  |     18  |                            |
   277  |           R = R + rep;  |     19  |                            |
   282  |  resetPlaceHolder_2();  |         |                            |
   291  |         R = R + chunk;  |     46  |                         1  |
   294  |           R = R + rep;  |     19  |                            |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |           R = R + sep;  |      3  |                            |
   310  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,240}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 5-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 5-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 6-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 6-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 7-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,156}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 8-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 6 trace node indices: [88, 156, 71, 274, 240, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {88,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {88,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 4 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,139}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 6 trace node indices: [88, 156, 71, 274, 240, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,139,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,139,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 2-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,139,156}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,156,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 3-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,139,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 4-th cluster (segment length: 4)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {88,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {88,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 6 trace node indices: [88, 156, 71, 274, 240, 139]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 5)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {71,88,139,156,240}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71,88,156,240,274}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 6 trace node indices: [88, 156, 71, 274, 240, 139]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {108}; {125}; {142}; {159}; {192}; {209}; {226}; {243}; {260}; {277}; {294}; {57}; {74}; {91}
GroupID(1): {122}; {170}; {189}; {257}; {305}; {54}
GroupID(2): {105,206}; {223,291}
GroupID(3): {71,88,139,156,240,274}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |                         0  |                            |                            |
    57  |           R = R + rep;  |     19  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     19  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     15  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     19  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     37  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     19  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      3  |                            |                         1  |                            |                            |
   125  |           R = R + rep;  |     19  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     19  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     46  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     19  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      3  |                            |                         2  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      3  |                            |                         3  |                            |                            |
   192  |           R = R + rep;  |     19  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     19  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     15  |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     19  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     19  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      3  |                            |                         4  |                            |                            |
   260  |           R = R + rep;  |     19  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     19  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     46  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     19  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      3  |                            |                         5  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_2();
GroupID(3): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 0 and 1 segment (index range: [55, 121])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |                         0  |                            |                            |
    57  |           R = R + rep;  |     19  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     19  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     15  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     19  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     37  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     19  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      3  |                            |                         1  |                            |                            |
   125  |           R = R + rep;  |     19  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     19  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     46  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     19  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      3  |                            |                         2  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      3  |                            |                         3  |                            |                            |
   192  |           R = R + rep;  |     19  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     19  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     15  |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     19  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     19  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      3  |                            |                         4  |                            |                            |
   260  |           R = R + rep;  |     19  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     19  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     46  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     19  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      3  |                            |                         5  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 1 and 2 segment (index range: [123, 169])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |                         0  |                            |                            |
    57  |           R = R + rep;  |     19  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     19  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     15  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     19  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     37  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     19  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      3  |                            |                         1  |                            |                            |
   125  |           R = R + rep;  |     19  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     19  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     46  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     19  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      3  |                            |                         2  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      3  |                            |                         3  |                            |                            |
   192  |           R = R + rep;  |     19  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     19  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     15  |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     19  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     19  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      3  |                            |                         4  |                            |                            |
   260  |           R = R + rep;  |     19  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     19  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     46  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     19  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      3  |                            |                         5  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 3 and 4 segment (index range: [190, 256])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |                         0  |                            |                            |
    57  |           R = R + rep;  |     19  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     19  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     15  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     19  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     37  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     19  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      3  |                            |                         1  |                            |                            |
   125  |           R = R + rep;  |     19  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     19  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     46  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     19  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      3  |                            |                         2  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      3  |                            |                         3  |                            |                            |
   192  |           R = R + rep;  |     19  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     19  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     15  |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     19  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     19  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      3  |                            |                         4  |                            |                            |
   260  |           R = R + rep;  |     19  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     19  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     46  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     19  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      3  |                            |                         5  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(1)'s 4 and 5 segment (index range: [258, 304])
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |      3  |                            |                         0  |                            |                            |
    57  |           R = R + rep;  |     19  |                         0  |                            |                            |                            |
    62  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    71  |         R = R + chunk;  |     24  |                            |                            |                            |                         0  |
    74  |           R = R + rep;  |     19  |                         1  |                            |                            |                            |
    79  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
    88  |         R = R + chunk;  |     15  |                            |                            |                            |                         0  |
    91  |           R = R + rep;  |     19  |                         2  |                            |                            |                            |
    96  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   105  |         R = R + chunk;  |     37  |                            |                            |                         0  |                            |
   108  |           R = R + rep;  |     19  |                         3  |                            |                            |                            |
   113  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   122  |         R = R + chunk;  |      3  |                            |                         1  |                            |                            |
   125  |           R = R + rep;  |     19  |                         4  |                            |                            |                            |
   130  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   139  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   142  |           R = R + rep;  |     19  |                         5  |                            |                            |                            |
   147  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   156  |         R = R + chunk;  |     46  |                            |                            |                            |                         0  |
   159  |           R = R + rep;  |     19  |                         6  |                            |                            |                            |
   164  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   170  |           R = R + sep;  |      3  |                            |                         2  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   189  |         R = R + chunk;  |      3  |                            |                         3  |                            |                            |
   192  |           R = R + rep;  |     19  |                         7  |                            |                            |                            |
   197  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   206  |         R = R + chunk;  |     24  |                            |                            |                         0  |                            |
   209  |           R = R + rep;  |     19  |                         8  |                            |                            |                            |
   214  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   223  |         R = R + chunk;  |     15  |                            |                            |                         1  |                            |
   226  |           R = R + rep;  |     19  |                         9  |                            |                            |                            |
   231  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   240  |         R = R + chunk;  |     37  |                            |                            |                            |                         0  |
   243  |           R = R + rep;  |     19  |                        10  |                            |                            |                            |
   248  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   257  |         R = R + chunk;  |      3  |                            |                         4  |                            |                            |
   260  |           R = R + rep;  |     19  |                        11  |                            |                            |                            |
   265  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   274  |         R = R + chunk;  |     18  |                            |                            |                            |                         0  |
   277  |           R = R + rep;  |     19  |                        12  |                            |                            |                            |
   282  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   291  |         R = R + chunk;  |     46  |                            |                            |                         1  |                            |
   294  |           R = R + rep;  |     19  |                        13  |                            |                            |                            |
   299  |  resetPlaceHolder_2();  |         |                            |                            |                            |                            |
   305  |           R = R + sep;  |      3  |                            |                         5  |                            |                            |
   310  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(164, 147, 265, 248, 197, 96, 113, 130, 282, 231, 214, 79, 62)
GroupID(1): Set(175)
GroupID(2): Set(214)
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((j < 0) || (j == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 0) || (i == 0))
  {
    if ((j < 2) || (j == 2))
    {
      R3 = R3 + chunk;
    }
    else
    {
      if ((j < 4) || (j == 4))
      {
        if ((j < 3) || (j == 3))
        {
          R2 = R2 + chunk;
        }
        else
        {
          R1 = R1 + chunk;
        }
      }
      else
      {
        R3 = R3 + chunk;
      }
    }
  }
  else
  {
    if ((j < 2) || (j == 2))
    {
      R2 = R2 + chunk;
    }
    else
    {
      if ((j < 5) || (j == 5))
      {
        if ((j < 3) || (j == 3))
        {
          R3 = R3 + chunk;
        }
        else
        {
          if ((j < 4) || (j == 4))
          {
            R1 = R1 + chunk;
          }
          else
          {
            R3 = R3 + chunk;
          }
        }
      }
      else
      {
        R2 = R2 + chunk;
      }
    }
  }
}
resetPlaceHolder_2(); -> {
  // reset R3
  if ((j < 2) || (j == 2))
  {
    if ((j < 1) || (j == 1))
    {
      // reset R2
    }
    else
    {
      if ((i < 0) || (i == 0))
      {
        // reset R2
      }
      else
      {
        if (S2 < R2)
        {
          S2 = R2;
        }
        else
        {
          ;
        }
        R2 = 0;
        C2 = C2 + 1;
      }
    }
  }
  else
  {
    // reset R2
  }
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R rep -> R0 = R0 + rep;
use R sep -> R1 = R1 + sep;
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

2023-01-31 14:04:42,497 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:05:45,199 INFO     Done. Execution time: 62.70223355293274 seconds
2023-01-31 14:05:45,200 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
              else
              {
                D3 = D3 + chunk;
              }
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((j < 5) || (j == 5))
              {
                if ((j < 3) || (j == 3))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 4) || (j == 4))
                  {
                    D1 = D1 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < ts)
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 0) || (j == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 0) || (i == 0))
          {
            if ((j < 2) || (j == 2))
            {
              D3 = D3 + chunk;
            }
            else
            {
              if ((j < 4) || (j == 4))
              {
                if ((j < 3) || (j == 3))
                {
                  D2 = D2 + chunk;
                }
                else
                {
                  D1 = D1 + chunk;
                }
              }
              else
              {
                D3 = D3 + chunk;
              }
            }
          }
          else
          {
            if ((j < 2) || (j == 2))
            {
              D2 = D2 + chunk;
            }
            else
            {
              if ((j < 5) || (j == 5))
              {
                if ((j < 3) || (j == 3))
                {
                  D3 = D3 + chunk;
                }
                else
                {
                  if ((j < 4) || (j == 4))
                  {
                    D1 = D1 + chunk;
                  }
                  else
                  {
                    D3 = D3 + chunk;
                  }
                }
              }
              else
              {
                D2 = D2 + chunk;
              }
            }
          }
        }
        D0 = D0 + rep;
        j = j + 1;
        if ((j < 2) || (j == 2))
        {
          if ((j < 1) || (j == 1))
          {

          }
          else
          {
            if ((i < 0) || (i == 0))
            {

            }
            else
            {
              D2p = D2;
              D2 = 0;
              C2 = C2 + 1;
            }
          }
        }
        else
        {

        }
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      D1 = D1 + sep;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7356428199125878057.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4545947298815546723.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1321613175914553379.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1707304832904852355.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5924826860386123705.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-383959748179998999.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-827245031464479070.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7010682895192036551.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5765618203839438177.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8364267018508409912.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2775462143139227511.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4005936192670482348.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C83 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C91 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C89 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C82 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C92 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C81 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C88 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C85 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C86 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C78 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C80 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C79 () Int)
(declare-fun C31 () Int)
(declare-fun C87 () Int)
(declare-fun C84 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C90 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!4 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= 0 (+ D1 a!1 D2 a!2 D3 a!3 D0 a!4))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D3p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0))
     (or true (= D2 0))
     (or true (= D3 0))
     (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C90 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C84 0)
     (>= C87 0)
     (>= C31 0)
     (>= C79 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C80 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C78 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C86 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C85 0)
     (>= C30 0)
     (>= C70 0)
     (>= C88 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C81 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C92 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C82 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C89 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C91 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C83 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D3 () Int    7)  (define-fun D2 () Int    1)  (define-fun D1 () Int    7)  (define-fun C2 () Int    15)  (define-fun C1 () Int    14)  (define-fun C3 () Int    8)  (define-fun rep () Int    2)  (define-fun sep () Int    1)  (define-fun text () Int    8)  (define-fun ts () Int    16)  (define-fun D0p () Int    12)  (define-fun D3p () Int    14)  (define-fun D2p () Int    8)  (define-fun D1p () Int    15)  (define-fun C0 () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C83 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C91 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C89 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C82 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C92 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C81 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C88 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C85 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C86 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C78 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C80 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C79 () Int    0)  (define-fun C31 () Int    0)  (define-fun C87 () Int    0)  (define-fun C84 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C90 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `60.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1404-transparentAmortize-60s-mostPrecise/stac-raw-0131-1404-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.695s
user	4m1.668s
sys	0m3.564s

2023-01-31 14:05:45,200 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:05:45,200 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:08:51,434 INFO     Done. Execution time: 186.23344039916992 seconds
2023-01-31 14:08:51,434 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.java -d /tmp/qfuzz4086030785493365783/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4086030785493365783/bin -o /tmp/qfuzz4086030785493365783/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4086030785493365783/bin
Found file /tmp/qfuzz4086030785493365783/bin/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Found file /tmp/qfuzz4086030785493365783/bin/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTraceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/brbo/fuzz/drivers/TemplateEngineMultiTrace.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4086030785493365783/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4086030785493365783/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineMultiTraceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4086030785493365783/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4086030785493365783/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 20, exec speed = 121041 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 20, exec speed = 124642 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m121k to 124k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(1, 3, 36, 48, 2, 27, 36, 6, 1, 23, 20, 50, 13, 17, 5, 20, 27, 1, 36, 49, 33, 25, 23, 20, 50, 13, 29, 11, 20, 27, 14, 25, 25, 25, 8, 28, 14, 30, 34, 40, 8, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4086030785493365783/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140851_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [1,3,36,48,2,27,36], 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46], 38
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1], 23
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:08:51,434 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:08:51,434 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
2023-01-31 14:09:06,266 INFO     Done. Execution time: 14.831287622451782 seconds
2023-01-31 14:09:06,266 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140851_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineMultiTrace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginemultitrace/qfuzz/TemplateEngineMultiTrace_20230131_140851_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([1,3,36,48,2,27,36], 6)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46], 38)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1], 23)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 3 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
choice: 38
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
choice: 23
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [1,3,36,48,2,27,36]
choice: 6
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  i  |          text          |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |      38  |         |     |  [3,24,15,37,3,18,46]  |
    10  |                      // int R = 0;  |         |    0  |      38  |         |     |  [3,24,15,37,3,18,46]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |      38  |         |     |  [3,24,15,37,3,18,46]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |      38  |         |     |  [3,24,15,37,3,18,46]  |
    14  |                     int chunk = 0;  |         |    0  |      38  |      0  |     |  [3,24,15,37,3,18,46]  |
    25  |                         int i = 0;  |         |    0  |      38  |      0  |  0  |  [3,24,15,37,3,18,46]  |
    31  |        chunk = arrayRead(text, i);  |         |    0  |      38  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    34  |                     R = R + chunk;  |      3  |    3  |      38  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    38  |                         i = i + 1;  |         |    3  |      38  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    39  |              resetPlaceHolder_1();  |         |    3  |      38  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    45  |        chunk = arrayRead(text, i);  |         |    3  |      38  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    48  |                     R = R + chunk;  |     24  |   27  |      38  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    52  |                         i = i + 1;  |         |   27  |      38  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    53  |              resetPlaceHolder_1();  |         |   27  |      38  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    59  |        chunk = arrayRead(text, i);  |         |   27  |      38  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    62  |                     R = R + chunk;  |     15  |   42  |      38  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    66  |                         i = i + 1;  |         |   42  |      38  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    67  |              resetPlaceHolder_1();  |         |   42  |      38  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    73  |        chunk = arrayRead(text, i);  |         |   42  |      38  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    76  |                     R = R + chunk;  |     37  |   79  |      38  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    80  |                         i = i + 1;  |         |   79  |      38  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    81  |              resetPlaceHolder_1();  |         |   79  |      38  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    87  |        chunk = arrayRead(text, i);  |         |   79  |      38  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    90  |                     R = R + chunk;  |      3  |   82  |      38  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    94  |                         i = i + 1;  |         |   82  |      38  |      3  |  5  |  [3,24,15,37,3,18,46]  |
    95  |              resetPlaceHolder_1();  |         |   82  |      38  |      3  |  5  |  [3,24,15,37,3,18,46]  |
   101  |        chunk = arrayRead(text, i);  |         |   82  |      38  |     18  |  5  |  [3,24,15,37,3,18,46]  |
   104  |                     R = R + chunk;  |     18  |  100  |      38  |     18  |  5  |  [3,24,15,37,3,18,46]  |
   108  |                         i = i + 1;  |         |  100  |      38  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   109  |              resetPlaceHolder_1();  |         |  100  |      38  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   115  |        chunk = arrayRead(text, i);  |         |  100  |      38  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   118  |                     R = R + chunk;  |     46  |  146  |      38  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   122  |                         i = i + 1;  |         |  146  |      38  |     46  |  7  |  [3,24,15,37,3,18,46]  |
   123  |              resetPlaceHolder_1();  |         |  146  |      38  |     46  |  7  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {34}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {34}; {90}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {34}; {90} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |      3  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    48  |         R = R + chunk;  |     24  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |
    62  |         R = R + chunk;  |     15  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     37  |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
    90  |         R = R + chunk;  |      3  |                         1  |
    95  |  resetPlaceHolder_1();  |         |                            |
   104  |         R = R + chunk;  |     18  |                            |
   109  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |     46  |                            |
   123  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [118, 76, 48, 104, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {48,76}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [118, 76, 48, 104, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {48,76,104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62,104,118}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [118, 76, 48, 104, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [118, 76, 48, 104, 62]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {34}; {90}
GroupID(1): {48,62,76,104,118}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |      3  |                         0  |                            |
    39  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |         R = R + chunk;  |     24  |                            |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |         R = R + chunk;  |     15  |                            |                         0  |
    67  |  resetPlaceHolder_1();  |         |                            |                            |
    76  |         R = R + chunk;  |     37  |                            |                         0  |
    81  |  resetPlaceHolder_1();  |         |                            |                            |
    90  |         R = R + chunk;  |      3  |                         1  |                            |
    95  |  resetPlaceHolder_1();  |         |                            |                            |
   104  |         R = R + chunk;  |     18  |                            |                         0  |
   109  |  resetPlaceHolder_1();  |         |                            |                            |
   118  |         R = R + chunk;  |     46  |                            |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 127):
                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  choice  |  chunk  |  j  |         text          |
--------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       6  |         |     |  [1,3,36,48,2,27,36]  |
    10  |                      // int R = 0;  |         |    0  |       6  |         |     |  [1,3,36,48,2,27,36]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |       6  |         |     |  [1,3,36,48,2,27,36]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       6  |         |     |  [1,3,36,48,2,27,36]  |
    14  |                     int chunk = 0;  |         |    0  |       6  |      0  |     |  [1,3,36,48,2,27,36]  |
    25  |                         int j = 0;  |         |    0  |       6  |      0  |  0  |  [1,3,36,48,2,27,36]  |
    31  |        chunk = arrayRead(text, j);  |         |    0  |       6  |      1  |  0  |  [1,3,36,48,2,27,36]  |
    34  |                     R = R + chunk;  |      1  |    1  |       6  |      1  |  0  |  [1,3,36,48,2,27,36]  |
    38  |                         j = j + 1;  |         |    1  |       6  |      1  |  1  |  [1,3,36,48,2,27,36]  |
    39  |              resetPlaceHolder_2();  |         |    1  |       6  |      1  |  1  |  [1,3,36,48,2,27,36]  |
    45  |        chunk = arrayRead(text, j);  |         |    1  |       6  |      3  |  1  |  [1,3,36,48,2,27,36]  |
    48  |                     R = R + chunk;  |      3  |    4  |       6  |      3  |  1  |  [1,3,36,48,2,27,36]  |
    52  |                         j = j + 1;  |         |    4  |       6  |      3  |  2  |  [1,3,36,48,2,27,36]  |
    53  |              resetPlaceHolder_2();  |         |    4  |       6  |      3  |  2  |  [1,3,36,48,2,27,36]  |
    59  |        chunk = arrayRead(text, j);  |         |    4  |       6  |     36  |  2  |  [1,3,36,48,2,27,36]  |
    62  |                     R = R + chunk;  |     36  |   40  |       6  |     36  |  2  |  [1,3,36,48,2,27,36]  |
    66  |                         j = j + 1;  |         |   40  |       6  |     36  |  3  |  [1,3,36,48,2,27,36]  |
    67  |              resetPlaceHolder_2();  |         |   40  |       6  |     36  |  3  |  [1,3,36,48,2,27,36]  |
    73  |        chunk = arrayRead(text, j);  |         |   40  |       6  |     48  |  3  |  [1,3,36,48,2,27,36]  |
    76  |                     R = R + chunk;  |     48  |   88  |       6  |     48  |  3  |  [1,3,36,48,2,27,36]  |
    80  |                         j = j + 1;  |         |   88  |       6  |     48  |  4  |  [1,3,36,48,2,27,36]  |
    81  |              resetPlaceHolder_2();  |         |   88  |       6  |     48  |  4  |  [1,3,36,48,2,27,36]  |
    87  |        chunk = arrayRead(text, j);  |         |   88  |       6  |      2  |  4  |  [1,3,36,48,2,27,36]  |
    90  |                     R = R + chunk;  |      2  |   90  |       6  |      2  |  4  |  [1,3,36,48,2,27,36]  |
    94  |                         j = j + 1;  |         |   90  |       6  |      2  |  5  |  [1,3,36,48,2,27,36]  |
    95  |              resetPlaceHolder_2();  |         |   90  |       6  |      2  |  5  |  [1,3,36,48,2,27,36]  |
   101  |        chunk = arrayRead(text, j);  |         |   90  |       6  |     27  |  5  |  [1,3,36,48,2,27,36]  |
   104  |                     R = R + chunk;  |     27  |  117  |       6  |     27  |  5  |  [1,3,36,48,2,27,36]  |
   108  |                         j = j + 1;  |         |  117  |       6  |     27  |  6  |  [1,3,36,48,2,27,36]  |
   109  |              resetPlaceHolder_2();  |         |  117  |       6  |     27  |  6  |  [1,3,36,48,2,27,36]  |
   115  |        chunk = arrayRead(text, j);  |         |  117  |       6  |     36  |  6  |  [1,3,36,48,2,27,36]  |
   118  |                     R = R + chunk;  |     36  |  153  |       6  |     36  |  6  |  [1,3,36,48,2,27,36]  |
   122  |                         j = j + 1;  |         |  153  |       6  |     36  |  7  |  [1,3,36,48,2,27,36]  |
   123  |              resetPlaceHolder_2();  |         |  153  |       6  |     36  |  7  |  [1,3,36,48,2,27,36]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [34, 118, 76, 48, 104, 62, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {118}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {62}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {118}; {62}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(6)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {118}; {62} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |         R = R + chunk;  |      1  |                            |
    39  |  resetPlaceHolder_2();  |         |                            |
    48  |         R = R + chunk;  |      3  |                            |
    53  |  resetPlaceHolder_2();  |         |                            |
    62  |         R = R + chunk;  |     36  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    76  |         R = R + chunk;  |     48  |                            |
    81  |  resetPlaceHolder_2();  |         |                            |
    90  |         R = R + chunk;  |      2  |                            |
    95  |  resetPlaceHolder_2();  |         |                            |
   104  |         R = R + chunk;  |     27  |                            |
   109  |  resetPlaceHolder_2();  |         |                            |
   118  |         R = R + chunk;  |     36  |                         1  |
   123  |  resetPlaceHolder_2();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [34, 76, 48, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [34, 76, 48, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [34, 76, 48, 104, 90]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [34, 76, 48, 104, 90]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {118}; {62}
GroupID(1): {34,48,76,90,104}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    34  |         R = R + chunk;  |      1  |                            |                         0  |
    39  |  resetPlaceHolder_2();  |         |                            |                            |
    48  |         R = R + chunk;  |      3  |                            |                         0  |
    53  |  resetPlaceHolder_2();  |         |                            |                            |
    62  |         R = R + chunk;  |     36  |                         0  |                            |
    67  |  resetPlaceHolder_2();  |         |                            |                            |
    76  |         R = R + chunk;  |     48  |                            |                         0  |
    81  |  resetPlaceHolder_2();  |         |                            |                            |
    90  |         R = R + chunk;  |      2  |                            |                         0  |
    95  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |         R = R + chunk;  |     27  |                            |                         0  |
   109  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |         R = R + chunk;  |     36  |                         1  |                            |
   123  |  resetPlaceHolder_2();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_2();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(67)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R1
  if ((j < 3) || (j == 3))
  {
    if ((j < 2) || (j == 2))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
  else
  {
    // reset R0
  }
}
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((j < 5) || (j == 5))
{
  if ((j < 2) || (j == 2))
  {
    if ((j < 1) || (j == 1))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R0 = R0 + chunk;
    }
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  R0 = R0 + chunk;
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R0 = R0 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineMultiTrace.java

2023-01-31 14:09:06,266 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:10:21,361 INFO     Done. Execution time: 75.0952000617981 seconds
2023-01-31 14:10:21,362 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineMultiTrace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 4) || (i == 4))
            {
              D0 = D0 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 1) || (i == 1))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((j < 2) || (j == 2))
          {
            if ((j < 1) || (j == 1))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((j < 3) || (j == 3))
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
        else
        {

        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineMultiTrace  {
  void execute(int text, int choice)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    if (!((choice < 8)) && !((choice == 8)))
    {
      int i = 0;
      while (i < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          if ((i < 3) || (i == 3))
          {
            D1 = D1 + chunk;
          }
          else
          {
            if ((i < 4) || (i == 4))
            {
              D0 = D0 + chunk;
            }
            else
            {
              D1 = D1 + chunk;
            }
          }
        }
        i = i + 1;
        if ((i < 1) || (i == 1))
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
        else
        {

        }
      }
    }
    else
    {
      int j = 0;
      while (j < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 5) || (j == 5))
        {
          if ((j < 2) || (j == 2))
          {
            if ((j < 1) || (j == 1))
            {
              D1 = D1 + chunk;
            }
            else
            {
              D0 = D0 + chunk;
            }
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
        j = j + 1;
        if ((j < 3) || (j == 3))
        {
          if ((j < 2) || (j == 2))
          {

          }
          else
          {
            D0p = D0;
            D0 = 0;
            C0 = C0 + 1;
          }
        }
        else
        {

        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun text () Int)
(declare-fun choice () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C72 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C76 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C77 () Int)
(declare-fun C4 () Int)
(declare-fun C69 () Int)
(declare-fun C44 () Int)
(declare-fun C71 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C66 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C75 () Int)
(declare-fun C70 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C74 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C67 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C68 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C73 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> text 0))
(assert (> choice 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C73 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C68 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C67 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C74 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C70 0)
     (>= C0 0)
     (>= C75 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C66 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C71 0)
     (>= C44 0)
     (>= C69 0)
     (>= C4 0)
     (>= C77 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C76 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (>= C72 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    7)  (define-fun D0 () Int    (- 5))  (define-fun text () Int    1)  (define-fun D0p () Int    1)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C72 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C76 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C77 () Int    0)  (define-fun C4 () Int    0)  (define-fun C69 () Int    0)  (define-fun C44 () Int    0)  (define-fun C71 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C66 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C75 () Int    0)  (define-fun C70 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C74 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C67 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C68 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C73 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0)  (define-fun choice () Int    1))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineMultiTrace`)
INFO  brbo.BrboMain - Time consumption: `73.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1409-transparentAmortize-60s-mostPrecise/stac-raw-0131-1409-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m15.088s
user	4m4.746s
sys	0m3.147s

2023-01-31 14:10:21,362 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 14:10:21,362 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:13:27,213 INFO     Done. Execution time: 185.85078692436218 seconds
2023-01-31 14:13:27,213 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz5781988609994558418/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5781988609994558418/bin -o /tmp/qfuzz5781988609994558418/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5781988609994558418/bin
Found file /tmp/qfuzz5781988609994558418/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz5781988609994558418/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5781988609994558418/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5781988609994558418/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5781988609994558418/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz5781988609994558418/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 125507 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 121224 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m121k to 125k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz5781988609994558418/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141326_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:13:27,214 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-31 14:13:27,214 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-31 14:13:39,217 INFO     Done. Execution time: 12.002781867980957 seconds
2023-01-31 14:13:39,217 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141326_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplified/qfuzz/TemplateEngineSimplified_20230131_141326_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 116):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [3,24,15,37,3,18,46]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [3,24,15,37,3,18,46]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [3,24,15,37,3,18,46]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [3,24,15,37,3,18,46]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [3,24,15,37,3,18,46]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [3,24,15,37,3,18,46]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [3,24,15,37,3,18,46]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |      3  |  0  |    0  |  [3,24,15,37,3,18,46]  |
    24  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |    0  |  [3,24,15,37,3,18,46]  |
    28  |                         i = i + 1;  |         |    3  |      3  |  1  |    0  |  [3,24,15,37,3,18,46]  |
    34  |        chunk = arrayRead(text, i);  |         |    3  |     24  |  1  |    0  |  [3,24,15,37,3,18,46]  |
    37  |                     R = R + chunk;  |     24  |   27  |     24  |  1  |    0  |  [3,24,15,37,3,18,46]  |
    41  |                         i = i + 1;  |         |   27  |     24  |  2  |    0  |  [3,24,15,37,3,18,46]  |
    42  |              resetPlaceHolder_1();  |         |   27  |     24  |  2  |    0  |  [3,24,15,37,3,18,46]  |
    48  |        chunk = arrayRead(text, i);  |         |   27  |     15  |  2  |    0  |  [3,24,15,37,3,18,46]  |
    51  |                     R = R + chunk;  |     15  |   42  |     15  |  2  |    0  |  [3,24,15,37,3,18,46]  |
    55  |                         i = i + 1;  |         |   42  |     15  |  3  |    0  |  [3,24,15,37,3,18,46]  |
    56  |              resetPlaceHolder_1();  |         |   42  |     15  |  3  |    0  |  [3,24,15,37,3,18,46]  |
    62  |        chunk = arrayRead(text, i);  |         |   42  |     37  |  3  |    0  |  [3,24,15,37,3,18,46]  |
    65  |                     R = R + chunk;  |     37  |   79  |     37  |  3  |    0  |  [3,24,15,37,3,18,46]  |
    69  |                         i = i + 1;  |         |   79  |     37  |  4  |    0  |  [3,24,15,37,3,18,46]  |
    70  |              resetPlaceHolder_1();  |         |   79  |     37  |  4  |    0  |  [3,24,15,37,3,18,46]  |
    76  |        chunk = arrayRead(text, i);  |         |   79  |      3  |  4  |    0  |  [3,24,15,37,3,18,46]  |
    79  |                     R = R + chunk;  |      3  |   82  |      3  |  4  |    0  |  [3,24,15,37,3,18,46]  |
    83  |                         i = i + 1;  |         |   82  |      3  |  5  |    0  |  [3,24,15,37,3,18,46]  |
    84  |              resetPlaceHolder_1();  |         |   82  |      3  |  5  |    0  |  [3,24,15,37,3,18,46]  |
    90  |        chunk = arrayRead(text, i);  |         |   82  |     18  |  5  |    0  |  [3,24,15,37,3,18,46]  |
    93  |                     R = R + chunk;  |     18  |  100  |     18  |  5  |    0  |  [3,24,15,37,3,18,46]  |
    97  |                         i = i + 1;  |         |  100  |     18  |  6  |    0  |  [3,24,15,37,3,18,46]  |
    98  |              resetPlaceHolder_1();  |         |  100  |     18  |  6  |    0  |  [3,24,15,37,3,18,46]  |
   104  |        chunk = arrayRead(text, i);  |         |  100  |     46  |  6  |    0  |  [3,24,15,37,3,18,46]  |
   107  |                     R = R + chunk;  |     46  |  146  |     46  |  6  |    0  |  [3,24,15,37,3,18,46]  |
   111  |                         i = i + 1;  |         |  146  |     46  |  7  |    0  |  [3,24,15,37,3,18,46]  |
   112  |              resetPlaceHolder_1();  |         |  146  |     46  |  7  |    0  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [24, 37, 93, 65, 51, 107, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {24}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {79}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {24}; {79}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {24}; {79} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |      3  |                         0  |
    37  |         R = R + chunk;  |     24  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     15  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     37  |                            |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |      3  |                         1  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |     18  |                            |
    98  |  resetPlaceHolder_1();  |         |                            |
   107  |         R = R + chunk;  |     46  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [37, 93, 65, 51, 107]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [37, 93, 65, 51, 107]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {37,65,93}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {51,93,107}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [37, 93, 65, 51, 107]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [37, 93, 65, 51, 107]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {24}; {79}
GroupID(1): {37,51,65,93,107}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    24  |         R = R + chunk;  |      3  |                         0  |                            |
    37  |         R = R + chunk;  |     24  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    51  |         R = R + chunk;  |     15  |                            |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |         R = R + chunk;  |     37  |                            |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |                            |
    79  |         R = R + chunk;  |      3  |                         1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     18  |                            |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |                            |
   107  |         R = R + chunk;  |     46  |                            |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [25, 78])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    24  |         R = R + chunk;  |      3  |                         0  |                            |
    37  |         R = R + chunk;  |     24  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    51  |         R = R + chunk;  |     15  |                            |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |         R = R + chunk;  |     37  |                            |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |                            |
    79  |         R = R + chunk;  |      3  |                         1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |         R = R + chunk;  |     18  |                            |                         0  |
    98  |  resetPlaceHolder_1();  |         |                            |                            |
   107  |         R = R + chunk;  |     46  |                            |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R chunk -> R0 = R0 + chunk;
use R chunk -> if ((i < 3) || (i == 3))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 4) || (i == 4))
  {
    R0 = R0 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

2023-01-31 14:13:39,217 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:14:13,146 INFO     Done. Execution time: 33.92881417274475 seconds
2023-01-31 14:14:13,146 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 4) || (i == 4))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!4 (or (<= D0p (+ 0 (* 1 1 text))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 (<= D0p 0) a!4)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 text))) (= D0 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    5)  (define-fun text () Int    10)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `31.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1413-transparentAmortize-60s-mostPrecise/stac-raw-0131-1413-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m33.921s
user	1m46.000s
sys	0m5.825s

2023-01-31 14:14:13,147 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:14:13,147 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:17:19,321 INFO     Done. Execution time: 186.17389726638794 seconds
2023-01-31 14:17:19,321 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.java -d /tmp/qfuzz3171011702956874864/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3171011702956874864/bin -o /tmp/qfuzz3171011702956874864/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3171011702956874864/bin
Found file /tmp/qfuzz3171011702956874864/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Found file /tmp/qfuzz3171011702956874864/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariantQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3171011702956874864/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3171011702956874864/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariantQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3171011702956874864/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz3171011702956874864/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 123333 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 124007 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m123k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz3171011702956874864/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141719_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:17:19,321 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:17:19,321 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
2023-01-31 14:17:30,468 INFO     Done. Execution time: 11.146216869354248 seconds
2023-01-31 14:17:30,468 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141719_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant/qfuzz/TemplateEngineSimplifiedVariant_20230131_141719_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 139):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [3,24,15,37,3,18,46]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [3,24,15,37,3,18,46]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    25  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    28  |                         R = R + 1;  |      1  |    4  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    32  |                         i = i + 1;  |         |    4  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    33  |              resetPlaceHolder_1();  |         |    4  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    39  |        chunk = arrayRead(text, i);  |         |    4  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    42  |                     R = R + chunk;  |     24  |   28  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    45  |                         R = R + 1;  |      1  |   29  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    49  |                         i = i + 1;  |         |   29  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    50  |              resetPlaceHolder_1();  |         |   29  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    56  |        chunk = arrayRead(text, i);  |         |   29  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    59  |                     R = R + chunk;  |     15  |   44  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    62  |                         R = R + 1;  |      1  |   45  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    66  |                         i = i + 1;  |         |   45  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    67  |              resetPlaceHolder_1();  |         |   45  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    73  |        chunk = arrayRead(text, i);  |         |   45  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    76  |                     R = R + chunk;  |     37  |   82  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    79  |                         R = R + 1;  |      1  |   83  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    83  |                         i = i + 1;  |         |   83  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    84  |              resetPlaceHolder_1();  |         |   83  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    90  |        chunk = arrayRead(text, i);  |         |   83  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    93  |                     R = R + chunk;  |      3  |   86  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    96  |                         R = R + 1;  |      1  |   87  |      3  |  4  |  [3,24,15,37,3,18,46]  |
   100  |                         i = i + 1;  |         |   87  |      3  |  5  |  [3,24,15,37,3,18,46]  |
   101  |              resetPlaceHolder_1();  |         |   87  |      3  |  5  |  [3,24,15,37,3,18,46]  |
   107  |        chunk = arrayRead(text, i);  |         |   87  |     18  |  5  |  [3,24,15,37,3,18,46]  |
   110  |                     R = R + chunk;  |     18  |  105  |     18  |  5  |  [3,24,15,37,3,18,46]  |
   113  |                         R = R + 1;  |      1  |  106  |     18  |  5  |  [3,24,15,37,3,18,46]  |
   117  |                         i = i + 1;  |         |  106  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   118  |              resetPlaceHolder_1();  |         |  106  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   124  |        chunk = arrayRead(text, i);  |         |  106  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   127  |                     R = R + chunk;  |     46  |  152  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   130  |                         R = R + 1;  |      1  |  153  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   134  |                         i = i + 1;  |         |  153  |     46  |  7  |  [3,24,15,37,3,18,46]  |
   135  |              resetPlaceHolder_1();  |         |  153  |     46  |  7  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 14 trace node indices: [42, 25, 110, 93, 28, 96, 45, 59, 113, 76, 130, 127, 79, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {113}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {130}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {28}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {62}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {79}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {113}; {130}; {28}; {45}; {62}; {79}; {96}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {113}; {130}; {28}; {45}; {62}; {79}; {96} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                            |
    28  |             R = R + 1;  |      1  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     24  |                            |
    45  |             R = R + 1;  |      1  |                         1  |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     15  |                            |
    62  |             R = R + 1;  |      1  |                         2  |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     37  |                            |
    79  |             R = R + 1;  |      1  |                         3  |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |      3  |                            |
    96  |             R = R + 1;  |      1  |                         4  |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     18  |                            |
   113  |             R = R + 1;  |      1  |                         5  |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     46  |                            |
   130  |             R = R + 1;  |      1  |                         6  |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25}; {93}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25}; {93} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                         0  |
    28  |             R = R + 1;  |      1  |                            |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |     24  |                            |
    45  |             R = R + 1;  |      1  |                            |
    50  |  resetPlaceHolder_1();  |         |                            |
    59  |         R = R + chunk;  |     15  |                            |
    62  |             R = R + 1;  |      1  |                            |
    67  |  resetPlaceHolder_1();  |         |                            |
    76  |         R = R + chunk;  |     37  |                            |
    79  |             R = R + 1;  |      1  |                            |
    84  |  resetPlaceHolder_1();  |         |                            |
    93  |         R = R + chunk;  |      3  |                         1  |
    96  |             R = R + 1;  |      1  |                            |
   101  |  resetPlaceHolder_1();  |         |                            |
   110  |         R = R + chunk;  |     18  |                            |
   113  |             R = R + 1;  |      1  |                            |
   118  |  resetPlaceHolder_1();  |         |                            |
   127  |         R = R + chunk;  |     46  |                            |
   130  |             R = R + 1;  |      1  |                            |
   135  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [42, 110, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,76}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [42, 110, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,76,110}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59,110,127}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [42, 110, 59, 76, 127]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [42, 110, 59, 76, 127]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {113}; {130}; {28}; {45}; {62}; {79}; {96}
GroupID(1): {25}; {93}
GroupID(2): {42,59,76,110,127}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                            |                         0  |                            |
    28  |             R = R + 1;  |      1  |                         0  |                            |                            |
    33  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    42  |         R = R + chunk;  |     24  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         1  |                            |                            |
    50  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    59  |         R = R + chunk;  |     15  |                            |                            |                         0  |
    62  |             R = R + 1;  |      1  |                         2  |                            |                            |
    67  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    76  |         R = R + chunk;  |     37  |                            |                            |                         0  |
    79  |             R = R + 1;  |      1  |                         3  |                            |                            |
    84  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    93  |         R = R + chunk;  |      3  |                            |                         1  |                            |
    96  |             R = R + 1;  |      1  |                         4  |                            |                            |
   101  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   110  |         R = R + chunk;  |     18  |                            |                            |                         0  |
   113  |             R = R + 1;  |      1  |                         5  |                            |                            |
   118  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   127  |         R = R + chunk;  |     46  |                            |                            |                         0  |
   130  |             R = R + 1;  |      1  |                         6  |                            |                            |
   135  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(101, 84, 33, 118, 50, 67)
GroupID(1): Set(33)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 0) || (i == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R2 = R2 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R1 = R1 + chunk;
    }
    else
    {
      R2 = R2 + chunk;
    }
  }
}
resetPlaceHolder_1(); -> {
  // reset R2
  if ((i < 1) || (i == 1))
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  else
  {
    // reset R1
  }
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant.java

2023-01-31 14:17:30,468 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:19:12,557 INFO     Done. Execution time: 102.08871603012085 seconds
2023-01-31 14:19:12,557 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 * text) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (text + text)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (text + text)));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D2 = D2 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
      }
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      else
      {

      }
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5304065127105793485.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2462860343432948500.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-912696890237294400.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1745105192561684258.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5450278259026033977.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5187927404227871755.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or true (= D2p 0))
       true
       (or true (= D1p 0))
       true
       a!4)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and (or true (= D2 0)) (or true (= D1 0)) a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true
     (<= C0 (+ 0 (* 1 1)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ text text)) (= a!1 (+ text text))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C2 () Int    0)  (define-fun D0 () Int    (- 6))  (define-fun D1 () Int    (- 6))  (define-fun D2 () Int    (- 8))  (define-fun C1 () Int    12)  (define-fun text () Int    16)  (define-fun D0p () Int    1)  (define-fun D1p () Int    12)  (define-fun C0 () Int    1)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ text text)) (= a!1 (+ text text))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant`)
INFO  brbo.BrboMain - Time consumption: `100.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1417-transparentAmortize-60s-mostPrecise/stac-raw-0131-1417-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m42.081s
user	5m1.889s
sys	0m4.082s

2023-01-31 14:19:12,557 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:19:12,558 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:22:18,429 INFO     Done. Execution time: 185.87125062942505 seconds
2023-01-31 14:22:18,429 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.java -d /tmp/qfuzz4246438906557802912/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4246438906557802912/bin -o /tmp/qfuzz4246438906557802912/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4246438906557802912/bin
Found file /tmp/qfuzz4246438906557802912/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
Found file /tmp/qfuzz4246438906557802912/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedVariant2QFuzzDriver.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4246438906557802912/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4246438906557802912/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedVariant2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4246438906557802912/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4246438906557802912/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 18, exec speed = 112673 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 18, exec speed = 119463 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m112k to 119k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4246438906557802912/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_142218_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:22:18,429 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:22:18,429 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
2023-01-31 14:22:28,303 INFO     Done. Execution time: 9.873774290084839 seconds
2023-01-31 14:22:28,304 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_142218_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplifiedVariant2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/templateenginesimplifiedvariant2/qfuzz/TemplateEngineSimplifiedVariant2_20230131_142218_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [3,24,15,37,3,18,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
text: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 118):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |          text          |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [3,24,15,37,3,18,46]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |  [3,24,15,37,3,18,46]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |  [3,24,15,37,3,18,46]  |
    22  |        chunk = arrayRead(text, i);  |         |    0  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    25  |                     R = R + chunk;  |      3  |    3  |      3  |  0  |  [3,24,15,37,3,18,46]  |
    29  |                         i = i + 1;  |         |    3  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    30  |              resetPlaceHolder_1();  |         |    3  |      3  |  1  |  [3,24,15,37,3,18,46]  |
    36  |        chunk = arrayRead(text, i);  |         |    3  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    39  |                     R = R + chunk;  |     24  |   27  |     24  |  1  |  [3,24,15,37,3,18,46]  |
    43  |                         i = i + 1;  |         |   27  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    44  |              resetPlaceHolder_1();  |         |   27  |     24  |  2  |  [3,24,15,37,3,18,46]  |
    50  |        chunk = arrayRead(text, i);  |         |   27  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    53  |                     R = R + chunk;  |     15  |   42  |     15  |  2  |  [3,24,15,37,3,18,46]  |
    57  |                         i = i + 1;  |         |   42  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    58  |              resetPlaceHolder_1();  |         |   42  |     15  |  3  |  [3,24,15,37,3,18,46]  |
    64  |        chunk = arrayRead(text, i);  |         |   42  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    67  |                     R = R + chunk;  |     37  |   79  |     37  |  3  |  [3,24,15,37,3,18,46]  |
    71  |                         i = i + 1;  |         |   79  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    72  |              resetPlaceHolder_1();  |         |   79  |     37  |  4  |  [3,24,15,37,3,18,46]  |
    78  |        chunk = arrayRead(text, i);  |         |   79  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    81  |                     R = R + chunk;  |      3  |   82  |      3  |  4  |  [3,24,15,37,3,18,46]  |
    85  |                         i = i + 1;  |         |   82  |      3  |  5  |  [3,24,15,37,3,18,46]  |
    86  |              resetPlaceHolder_1();  |         |   82  |      3  |  5  |  [3,24,15,37,3,18,46]  |
    92  |        chunk = arrayRead(text, i);  |         |   82  |     18  |  5  |  [3,24,15,37,3,18,46]  |
    95  |                     R = R + chunk;  |     18  |  100  |     18  |  5  |  [3,24,15,37,3,18,46]  |
    99  |                         i = i + 1;  |         |  100  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   100  |              resetPlaceHolder_1();  |         |  100  |     18  |  6  |  [3,24,15,37,3,18,46]  |
   106  |        chunk = arrayRead(text, i);  |         |  100  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   109  |                     R = R + chunk;  |     46  |  146  |     46  |  6  |  [3,24,15,37,3,18,46]  |
   113  |                         i = i + 1;  |         |  146  |     46  |  7  |  [3,24,15,37,3,18,46]  |
   114  |              resetPlaceHolder_1();  |         |  146  |     46  |  7  |  [3,24,15,37,3,18,46]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 7 trace node indices: [25, 53, 109, 81, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {25}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {25}; {81}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {25}; {81} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    39  |         R = R + chunk;  |     24  |                            |
    44  |  resetPlaceHolder_1();  |         |                            |
    53  |         R = R + chunk;  |     15  |                            |
    58  |  resetPlaceHolder_1();  |         |                            |
    67  |         R = R + chunk;  |     37  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |      3  |                         1  |
    86  |  resetPlaceHolder_1();  |         |                            |
    95  |         R = R + chunk;  |     18  |                            |
   100  |  resetPlaceHolder_1();  |         |                            |
   109  |         R = R + chunk;  |     46  |                            |
   114  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {39,67,95}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {53,95,109}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 5 trace node indices: [53, 109, 39, 95, 67]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 5 trace node indices: [53, 109, 39, 95, 67]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {25}; {81}
GroupID(1): {39,53,67,95,109}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |         R = R + chunk;  |      3  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    39  |         R = R + chunk;  |     24  |                            |                         0  |
    44  |  resetPlaceHolder_1();  |         |                            |                            |
    53  |         R = R + chunk;  |     15  |                            |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |         R = R + chunk;  |     37  |                            |                         0  |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |      3  |                         1  |                            |
    86  |  resetPlaceHolder_1();  |         |                            |                            |
    95  |         R = R + chunk;  |     18  |                            |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |                            |
   109  |         R = R + chunk;  |     46  |                            |                         0  |
   114  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    // reset R0
  }
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R0 = R0 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R1 = R1 + chunk;
  }
  else
  {
    if ((i < 4) || (i == 4))
    {
      R0 = R0 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplifiedVariant2.java

2023-01-31 14:22:28,304 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:23:29,308 INFO     Done. Execution time: 61.00372004508972 seconds
2023-01-31 14:23:29,308 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplifiedVariant2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplifiedVariant2  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * text) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < text) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D0 = D0 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((i < 4) || (i == 4))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {

      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun text () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> text 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!4 (or (<= D0p (+ 0 (* 1 1 text))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 (<= D0p (+ 0 (* 1 1 text))) a!4)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1 text))) (= D0 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 text) (= a!1 text)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    7)  (define-fun text () Int    11)  (define-fun D0p () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 text) (= a!1 text)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplifiedVariant2`)
INFO  brbo.BrboMain - Time consumption: `59.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1422-transparentAmortize-60s-mostPrecise/stac-raw-0131-1422-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m0.997s
user	3m12.978s
sys	0m5.258s

2023-01-31 14:23:29,308 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 14:23:29,308 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:26:35,179 INFO     Done. Execution time: 185.87062573432922 seconds
2023-01-31 14:26:35,179 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz4146461026622493460/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4146461026622493460/bin -o /tmp/qfuzz4146461026622493460/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4146461026622493460/bin
Found file /tmp/qfuzz4146461026622493460/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz4146461026622493460/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4146461026622493460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4146461026622493460/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4146461026622493460/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz4146461026622493460/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 14, exec speed = 108184 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 14, exec speed = 123191 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m14 to 14 bits (average: 14.00 bits)
[1;90m        Exec timing : [0m108k to 123k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz4146461026622493460/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142634_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 3, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 29, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:26:35,180 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-31 14:26:35,180 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-31 14:26:42,031 INFO     Done. Execution time: 6.851439476013184 seconds
2023-01-31 14:26:42,032 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142634_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendallto/qfuzz/AppendAllTo_20230131_142634_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(3, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(29, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 3
types: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sep: 29
types: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 57):
                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  builder  |  i  |  sep  |  types  |
---------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |           |     |    3  |      2  |
    19  |                   int builder = 0;  |         |  0  |        0  |     |    3  |      2  |
    20  |                      // int R = 0;  |         |  0  |        0  |     |    3  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |  0  |        0  |     |    3  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |        0  |     |    3  |      2  |
    26  |             builder = builder + 1;  |         |  0  |        1  |     |    3  |      2  |
    29  |                         R = R + 1;  |      1  |  1  |        1  |     |    3  |      2  |
    31  |                         int i = 1;  |         |  1  |        1  |  1  |    3  |      2  |
    38  |           builder = builder + sep;  |         |  1  |        4  |  1  |    3  |      2  |
    41  |                       R = R + sep;  |      3  |  4  |        4  |  1  |    3  |      2  |
    45  |             builder = builder + 1;  |         |  4  |        5  |  1  |    3  |      2  |
    48  |                         R = R + 1;  |      1  |  5  |        5  |  1  |    3  |      2  |
    52  |                         i = i + 1;  |         |  5  |        5  |  2  |    3  |      2  |
    53  |              resetPlaceHolder_1();  |         |  5  |        5  |  2  |    3  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |      3  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |      3  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |      3  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

2023-01-31 14:26:42,032 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:26:57,739 INFO     Done. Execution time: 15.707103967666626 seconds
2023-01-31 14:26:57,739 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `13.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1426-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1426-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.700s
user	0m40.353s
sys	0m6.362s

2023-01-31 14:26:57,740 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 14:26:57,740 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:30:03,981 INFO     Done. Execution time: 186.24108242988586 seconds
2023-01-31 14:30:03,981 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz8130697157331656716/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8130697157331656716/bin -o /tmp/qfuzz8130697157331656716/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8130697157331656716/bin
Found file /tmp/qfuzz8130697157331656716/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz8130697157331656716/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8130697157331656716/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8130697157331656716/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8130697157331656716/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz8130697157331656716/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 15, exec speed = 119319 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 15, exec speed = 124589 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m15 to 15 bits (average: 15.00 bits)
[1;90m        Exec timing : [0m119k to 124k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz8130697157331656716/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_143003_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:30:03,981 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-31 14:30:03,981 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-31 14:30:11,265 INFO     Done. Execution time: 7.283422231674194 seconds
2023-01-31 14:30:11,265 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_143003_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddetail/qfuzz/AppendDetail_20230131_143003_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
array: 2
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 3 trace node indices: [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

2023-01-31 14:30:11,265 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:30:18,956 INFO     Done. Execution time: 7.690953016281128 seconds
2023-01-31 14:30:18,957 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1430-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1430-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.683s
user	0m16.477s
sys	0m2.201s

2023-01-31 14:30:18,957 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 14:30:18,957 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:33:25,166 INFO     Done. Execution time: 186.20859336853027 seconds
2023-01-31 14:33:25,166 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz1363499859297024600/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1363499859297024600/bin -o /tmp/qfuzz1363499859297024600/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1363499859297024600/bin
Found file /tmp/qfuzz1363499859297024600/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz1363499859297024600/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1363499859297024600/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1363499859297024600/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1363499859297024600/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz1363499859297024600/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 85962 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 124441 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m86.0k to 124k us (average: 105k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #3 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #4 (5 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (5 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]
4; /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 1; 0.00; [0.00]
7; /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 5, 28, 29, 27, 17, 36, 36, 21, 50, 8, 17, 41, 8, 25, 1, 17, 15, 15, 15, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 19, 5, 33, 45, 13, 47, 1, 8, 33, 23, 5, 6, 30, 36, 29, 34, 7, 21, 47, 6, 43, 36, 29, 9, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz1363499859297024600/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143324_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,5,28,29,27,17,36]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,19,5,33,45,13,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [3,24,15,37,3,18,46]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,5,50,42,23,28,1]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:33:25,166 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-31 14:33:25,166 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-31 14:33:33,719 INFO     Done. Execution time: 8.552565336227417 seconds
2023-01-31 14:33:33,720 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143324_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appenddisplaynames/qfuzz/AppendDisplayNames_20230131_143324_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,5,28,29,27,17,36])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,19,5,33,45,13,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([3,24,15,37,3,18,46])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,5,50,42,23,28,1])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 5 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 2 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: []
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 1
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [7,5,28,29,27,17,36]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,19,5,33,45,13,47]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [3,24,15,37,3,18,46]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
sorted: [29,5,50,42,23,28,1]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 11):
                                                   
 Index  |   Commands   |  Costs  |  R  |  sorted  |
---------------------------------------------------
     2  |  int R = 0;  |         |  0  |      []  |
    10  |     return;  |         |  0  |      []  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 1
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 1792):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |  j   |         sorted         |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      |  [7,5,28,29,27,17,36]  |
    10  |                      // int R = 0;  |         |    0  |         |     |      |  [7,5,28,29,27,17,36]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      |  [7,5,28,29,27,17,36]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      |  [7,5,28,29,27,17,36]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |      |  [7,5,28,29,27,17,36]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |      |  [7,5,28,29,27,17,36]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |      7  |  0  |      |  [7,5,28,29,27,17,36]  |
    24  |                         int j = 0;  |         |    0  |      7  |  0  |   0  |  [7,5,28,29,27,17,36]  |
    30  |                         R = R + 2;  |      2  |    2  |      7  |  0  |   0  |  [7,5,28,29,27,17,36]  |
    34  |                         j = j + 1;  |         |    2  |      7  |  0  |   1  |  [7,5,28,29,27,17,36]  |
    35  |              resetPlaceHolder_2();  |         |    2  |      7  |  0  |   1  |  [7,5,28,29,27,17,36]  |
    41  |                         R = R + 2;  |      2  |    4  |      7  |  0  |   1  |  [7,5,28,29,27,17,36]  |
    45  |                         j = j + 1;  |         |    4  |      7  |  0  |   2  |  [7,5,28,29,27,17,36]  |
    46  |              resetPlaceHolder_2();  |         |    4  |      7  |  0  |   2  |  [7,5,28,29,27,17,36]  |
    52  |                         R = R + 2;  |      2  |    6  |      7  |  0  |   2  |  [7,5,28,29,27,17,36]  |
    56  |                         j = j + 1;  |         |    6  |      7  |  0  |   3  |  [7,5,28,29,27,17,36]  |
    57  |              resetPlaceHolder_2();  |         |    6  |      7  |  0  |   3  |  [7,5,28,29,27,17,36]  |
    63  |                         R = R + 2;  |      2  |    8  |      7  |  0  |   3  |  [7,5,28,29,27,17,36]  |
    67  |                         j = j + 1;  |         |    8  |      7  |  0  |   4  |  [7,5,28,29,27,17,36]  |
    68  |              resetPlaceHolder_2();  |         |    8  |      7  |  0  |   4  |  [7,5,28,29,27,17,36]  |
    74  |                         R = R + 2;  |      2  |   10  |      7  |  0  |   4  |  [7,5,28,29,27,17,36]  |
    78  |                         j = j + 1;  |         |   10  |      7  |  0  |   5  |  [7,5,28,29,27,17,36]  |
    79  |              resetPlaceHolder_2();  |         |   10  |      7  |  0  |   5  |  [7,5,28,29,27,17,36]  |
    85  |                         R = R + 2;  |      2  |   12  |      7  |  0  |   5  |  [7,5,28,29,27,17,36]  |
    89  |                         j = j + 1;  |         |   12  |      7  |  0  |   6  |  [7,5,28,29,27,17,36]  |
    90  |              resetPlaceHolder_2();  |         |   12  |      7  |  0  |   6  |  [7,5,28,29,27,17,36]  |
    96  |                         R = R + 2;  |      2  |   14  |      7  |  0  |   6  |  [7,5,28,29,27,17,36]  |
   100  |                         j = j + 1;  |         |   14  |      7  |  0  |   7  |  [7,5,28,29,27,17,36]  |
   101  |              resetPlaceHolder_2();  |         |   14  |      7  |  0  |   7  |  [7,5,28,29,27,17,36]  |
   107  |                         R = R + 1;  |      1  |   15  |      7  |  0  |   7  |  [7,5,28,29,27,17,36]  |
   111  |                         i = i + 1;  |         |   15  |      7  |  1  |   7  |  [7,5,28,29,27,17,36]  |
   112  |              resetPlaceHolder_1();  |         |   15  |      7  |  1  |   7  |  [7,5,28,29,27,17,36]  |
   118  |      entry = arrayRead(sorted, i);  |         |   15  |      5  |  1  |   7  |  [7,5,28,29,27,17,36]  |
   120  |                         int j = 0;  |         |   15  |      5  |  1  |   0  |  [7,5,28,29,27,17,36]  |
   126  |                         R = R + 2;  |      2  |   17  |      5  |  1  |   0  |  [7,5,28,29,27,17,36]  |
   130  |                         j = j + 1;  |         |   17  |      5  |  1  |   1  |  [7,5,28,29,27,17,36]  |
   131  |              resetPlaceHolder_2();  |         |   17  |      5  |  1  |   1  |  [7,5,28,29,27,17,36]  |
   137  |                         R = R + 2;  |      2  |   19  |      5  |  1  |   1  |  [7,5,28,29,27,17,36]  |
   141  |                         j = j + 1;  |         |   19  |      5  |  1  |   2  |  [7,5,28,29,27,17,36]  |
   142  |              resetPlaceHolder_2();  |         |   19  |      5  |  1  |   2  |  [7,5,28,29,27,17,36]  |
   148  |                         R = R + 2;  |      2  |   21  |      5  |  1  |   2  |  [7,5,28,29,27,17,36]  |
   152  |                         j = j + 1;  |         |   21  |      5  |  1  |   3  |  [7,5,28,29,27,17,36]  |
   153  |              resetPlaceHolder_2();  |         |   21  |      5  |  1  |   3  |  [7,5,28,29,27,17,36]  |
   159  |                         R = R + 2;  |      2  |   23  |      5  |  1  |   3  |  [7,5,28,29,27,17,36]  |
   163  |                         j = j + 1;  |         |   23  |      5  |  1  |   4  |  [7,5,28,29,27,17,36]  |
   164  |              resetPlaceHolder_2();  |         |   23  |      5  |  1  |   4  |  [7,5,28,29,27,17,36]  |
   170  |                         R = R + 2;  |      2  |   25  |      5  |  1  |   4  |  [7,5,28,29,27,17,36]  |
   174  |                         j = j + 1;  |         |   25  |      5  |  1  |   5  |  [7,5,28,29,27,17,36]  |
   175  |              resetPlaceHolder_2();  |         |   25  |      5  |  1  |   5  |  [7,5,28,29,27,17,36]  |
   181  |                         R = R + 1;  |      1  |   26  |      5  |  1  |   5  |  [7,5,28,29,27,17,36]  |
   185  |                         i = i + 1;  |         |   26  |      5  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   186  |              resetPlaceHolder_1();  |         |   26  |      5  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   192  |      entry = arrayRead(sorted, i);  |         |   26  |     28  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   194  |                         int j = 0;  |         |   26  |     28  |  2  |   0  |  [7,5,28,29,27,17,36]  |
   200  |                         R = R + 2;  |      2  |   28  |     28  |  2  |   0  |  [7,5,28,29,27,17,36]  |
   204  |                         j = j + 1;  |         |   28  |     28  |  2  |   1  |  [7,5,28,29,27,17,36]  |
   205  |              resetPlaceHolder_2();  |         |   28  |     28  |  2  |   1  |  [7,5,28,29,27,17,36]  |
   211  |                         R = R + 2;  |      2  |   30  |     28  |  2  |   1  |  [7,5,28,29,27,17,36]  |
   215  |                         j = j + 1;  |         |   30  |     28  |  2  |   2  |  [7,5,28,29,27,17,36]  |
   216  |              resetPlaceHolder_2();  |         |   30  |     28  |  2  |   2  |  [7,5,28,29,27,17,36]  |
   222  |                         R = R + 2;  |      2  |   32  |     28  |  2  |   2  |  [7,5,28,29,27,17,36]  |
   226  |                         j = j + 1;  |         |   32  |     28  |  2  |   3  |  [7,5,28,29,27,17,36]  |
   227  |              resetPlaceHolder_2();  |         |   32  |     28  |  2  |   3  |  [7,5,28,29,27,17,36]  |
   233  |                         R = R + 2;  |      2  |   34  |     28  |  2  |   3  |  [7,5,28,29,27,17,36]  |
   237  |                         j = j + 1;  |         |   34  |     28  |  2  |   4  |  [7,5,28,29,27,17,36]  |
   238  |              resetPlaceHolder_2();  |         |   34  |     28  |  2  |   4  |  [7,5,28,29,27,17,36]  |
   244  |                         R = R + 2;  |      2  |   36  |     28  |  2  |   4  |  [7,5,28,29,27,17,36]  |
   248  |                         j = j + 1;  |         |   36  |     28  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   249  |              resetPlaceHolder_2();  |         |   36  |     28  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   255  |                         R = R + 2;  |      2  |   38  |     28  |  2  |   5  |  [7,5,28,29,27,17,36]  |
   259  |                         j = j + 1;  |         |   38  |     28  |  2  |   6  |  [7,5,28,29,27,17,36]  |
   260  |              resetPlaceHolder_2();  |         |   38  |     28  |  2  |   6  |  [7,5,28,29,27,17,36]  |
   266  |                         R = R + 2;  |      2  |   40  |     28  |  2  |   6  |  [7,5,28,29,27,17,36]  |
   270  |                         j = j + 1;  |         |   40  |     28  |  2  |   7  |  [7,5,28,29,27,17,36]  |
   271  |              resetPlaceHolder_2();  |         |   40  |     28  |  2  |   7  |  [7,5,28,29,27,17,36]  |
   277  |                         R = R + 2;  |      2  |   42  |     28  |  2  |   7  |  [7,5,28,29,27,17,36]  |
   281  |                         j = j + 1;  |         |   42  |     28  |  2  |   8  |  [7,5,28,29,27,17,36]  |
   282  |              resetPlaceHolder_2();  |         |   42  |     28  |  2  |   8  |  [7,5,28,29,27,17,36]  |
   288  |                         R = R + 2;  |      2  |   44  |     28  |  2  |   8  |  [7,5,28,29,27,17,36]  |
   292  |                         j = j + 1;  |         |   44  |     28  |  2  |   9  |  [7,5,28,29,27,17,36]  |
   293  |              resetPlaceHolder_2();  |         |   44  |     28  |  2  |   9  |  [7,5,28,29,27,17,36]  |
   299  |                         R = R + 2;  |      2  |   46  |     28  |  2  |   9  |  [7,5,28,29,27,17,36]  |
   303  |                         j = j + 1;  |         |   46  |     28  |  2  |  10  |  [7,5,28,29,27,17,36]  |
   304  |              resetPlaceHolder_2();  |         |   46  |     28  |  2  |  10  |  [7,5,28,29,27,17,36]  |
   310  |                         R = R + 2;  |      2  |   48  |     28  |  2  |  10  |  [7,5,28,29,27,17,36]  |
   314  |                         j = j + 1;  |         |   48  |     28  |  2  |  11  |  [7,5,28,29,27,17,36]  |
   315  |              resetPlaceHolder_2();  |         |   48  |     28  |  2  |  11  |  [7,5,28,29,27,17,36]  |
   321  |                         R = R + 2;  |      2  |   50  |     28  |  2  |  11  |  [7,5,28,29,27,17,36]  |
   325  |                         j = j + 1;  |         |   50  |     28  |  2  |  12  |  [7,5,28,29,27,17,36]  |
   326  |              resetPlaceHolder_2();  |         |   50  |     28  |  2  |  12  |  [7,5,28,29,27,17,36]  |
   332  |                         R = R + 2;  |      2  |   52  |     28  |  2  |  12  |  [7,5,28,29,27,17,36]  |
   336  |                         j = j + 1;  |         |   52  |     28  |  2  |  13  |  [7,5,28,29,27,17,36]  |
   337  |              resetPlaceHolder_2();  |         |   52  |     28  |  2  |  13  |  [7,5,28,29,27,17,36]  |
   343  |                         R = R + 2;  |      2  |   54  |     28  |  2  |  13  |  [7,5,28,29,27,17,36]  |
   347  |                         j = j + 1;  |         |   54  |     28  |  2  |  14  |  [7,5,28,29,27,17,36]  |
   348  |              resetPlaceHolder_2();  |         |   54  |     28  |  2  |  14  |  [7,5,28,29,27,17,36]  |
   354  |                         R = R + 2;  |      2  |   56  |     28  |  2  |  14  |  [7,5,28,29,27,17,36]  |
   358  |                         j = j + 1;  |         |   56  |     28  |  2  |  15  |  [7,5,28,29,27,17,36]  |
   359  |              resetPlaceHolder_2();  |         |   56  |     28  |  2  |  15  |  [7,5,28,29,27,17,36]  |
   365  |                         R = R + 2;  |      2  |   58  |     28  |  2  |  15  |  [7,5,28,29,27,17,36]  |
   369  |                         j = j + 1;  |         |   58  |     28  |  2  |  16  |  [7,5,28,29,27,17,36]  |
   370  |              resetPlaceHolder_2();  |         |   58  |     28  |  2  |  16  |  [7,5,28,29,27,17,36]  |
   376  |                         R = R + 2;  |      2  |   60  |     28  |  2  |  16  |  [7,5,28,29,27,17,36]  |
   380  |                         j = j + 1;  |         |   60  |     28  |  2  |  17  |  [7,5,28,29,27,17,36]  |
   381  |              resetPlaceHolder_2();  |         |   60  |     28  |  2  |  17  |  [7,5,28,29,27,17,36]  |
   387  |                         R = R + 2;  |      2  |   62  |     28  |  2  |  17  |  [7,5,28,29,27,17,36]  |
   391  |                         j = j + 1;  |         |   62  |     28  |  2  |  18  |  [7,5,28,29,27,17,36]  |
   392  |              resetPlaceHolder_2();  |         |   62  |     28  |  2  |  18  |  [7,5,28,29,27,17,36]  |
   398  |                         R = R + 2;  |      2  |   64  |     28  |  2  |  18  |  [7,5,28,29,27,17,36]  |
   402  |                         j = j + 1;  |         |   64  |     28  |  2  |  19  |  [7,5,28,29,27,17,36]  |
   403  |              resetPlaceHolder_2();  |         |   64  |     28  |  2  |  19  |  [7,5,28,29,27,17,36]  |
   409  |                         R = R + 2;  |      2  |   66  |     28  |  2  |  19  |  [7,5,28,29,27,17,36]  |
   413  |                         j = j + 1;  |         |   66  |     28  |  2  |  20  |  [7,5,28,29,27,17,36]  |
   414  |              resetPlaceHolder_2();  |         |   66  |     28  |  2  |  20  |  [7,5,28,29,27,17,36]  |
   420  |                         R = R + 2;  |      2  |   68  |     28  |  2  |  20  |  [7,5,28,29,27,17,36]  |
   424  |                         j = j + 1;  |         |   68  |     28  |  2  |  21  |  [7,5,28,29,27,17,36]  |
   425  |              resetPlaceHolder_2();  |         |   68  |     28  |  2  |  21  |  [7,5,28,29,27,17,36]  |
   431  |                         R = R + 2;  |      2  |   70  |     28  |  2  |  21  |  [7,5,28,29,27,17,36]  |
   435  |                         j = j + 1;  |         |   70  |     28  |  2  |  22  |  [7,5,28,29,27,17,36]  |
   436  |              resetPlaceHolder_2();  |         |   70  |     28  |  2  |  22  |  [7,5,28,29,27,17,36]  |
   442  |                         R = R + 2;  |      2  |   72  |     28  |  2  |  22  |  [7,5,28,29,27,17,36]  |
   446  |                         j = j + 1;  |         |   72  |     28  |  2  |  23  |  [7,5,28,29,27,17,36]  |
   447  |              resetPlaceHolder_2();  |         |   72  |     28  |  2  |  23  |  [7,5,28,29,27,17,36]  |
   453  |                         R = R + 2;  |      2  |   74  |     28  |  2  |  23  |  [7,5,28,29,27,17,36]  |
   457  |                         j = j + 1;  |         |   74  |     28  |  2  |  24  |  [7,5,28,29,27,17,36]  |
   458  |              resetPlaceHolder_2();  |         |   74  |     28  |  2  |  24  |  [7,5,28,29,27,17,36]  |
   464  |                         R = R + 2;  |      2  |   76  |     28  |  2  |  24  |  [7,5,28,29,27,17,36]  |
   468  |                         j = j + 1;  |         |   76  |     28  |  2  |  25  |  [7,5,28,29,27,17,36]  |
   469  |              resetPlaceHolder_2();  |         |   76  |     28  |  2  |  25  |  [7,5,28,29,27,17,36]  |
   475  |                         R = R + 2;  |      2  |   78  |     28  |  2  |  25  |  [7,5,28,29,27,17,36]  |
   479  |                         j = j + 1;  |         |   78  |     28  |  2  |  26  |  [7,5,28,29,27,17,36]  |
   480  |              resetPlaceHolder_2();  |         |   78  |     28  |  2  |  26  |  [7,5,28,29,27,17,36]  |
   486  |                         R = R + 2;  |      2  |   80  |     28  |  2  |  26  |  [7,5,28,29,27,17,36]  |
   490  |                         j = j + 1;  |         |   80  |     28  |  2  |  27  |  [7,5,28,29,27,17,36]  |
   491  |              resetPlaceHolder_2();  |         |   80  |     28  |  2  |  27  |  [7,5,28,29,27,17,36]  |
   497  |                         R = R + 2;  |      2  |   82  |     28  |  2  |  27  |  [7,5,28,29,27,17,36]  |
   501  |                         j = j + 1;  |         |   82  |     28  |  2  |  28  |  [7,5,28,29,27,17,36]  |
   502  |              resetPlaceHolder_2();  |         |   82  |     28  |  2  |  28  |  [7,5,28,29,27,17,36]  |
   508  |                         R = R + 1;  |      1  |   83  |     28  |  2  |  28  |  [7,5,28,29,27,17,36]  |
   512  |                         i = i + 1;  |         |   83  |     28  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   513  |              resetPlaceHolder_1();  |         |   83  |     28  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   519  |      entry = arrayRead(sorted, i);  |         |   83  |     29  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   521  |                         int j = 0;  |         |   83  |     29  |  3  |   0  |  [7,5,28,29,27,17,36]  |
   527  |                         R = R + 2;  |      2  |   85  |     29  |  3  |   0  |  [7,5,28,29,27,17,36]  |
   531  |                         j = j + 1;  |         |   85  |     29  |  3  |   1  |  [7,5,28,29,27,17,36]  |
   532  |              resetPlaceHolder_2();  |         |   85  |     29  |  3  |   1  |  [7,5,28,29,27,17,36]  |
   538  |                         R = R + 2;  |      2  |   87  |     29  |  3  |   1  |  [7,5,28,29,27,17,36]  |
   542  |                         j = j + 1;  |         |   87  |     29  |  3  |   2  |  [7,5,28,29,27,17,36]  |
   543  |              resetPlaceHolder_2();  |         |   87  |     29  |  3  |   2  |  [7,5,28,29,27,17,36]  |
   549  |                         R = R + 2;  |      2  |   89  |     29  |  3  |   2  |  [7,5,28,29,27,17,36]  |
   553  |                         j = j + 1;  |         |   89  |     29  |  3  |   3  |  [7,5,28,29,27,17,36]  |
   554  |              resetPlaceHolder_2();  |         |   89  |     29  |  3  |   3  |  [7,5,28,29,27,17,36]  |
   560  |                         R = R + 2;  |      2  |   91  |     29  |  3  |   3  |  [7,5,28,29,27,17,36]  |
   564  |                         j = j + 1;  |         |   91  |     29  |  3  |   4  |  [7,5,28,29,27,17,36]  |
   565  |              resetPlaceHolder_2();  |         |   91  |     29  |  3  |   4  |  [7,5,28,29,27,17,36]  |
   571  |                         R = R + 2;  |      2  |   93  |     29  |  3  |   4  |  [7,5,28,29,27,17,36]  |
   575  |                         j = j + 1;  |         |   93  |     29  |  3  |   5  |  [7,5,28,29,27,17,36]  |
   576  |              resetPlaceHolder_2();  |         |   93  |     29  |  3  |   5  |  [7,5,28,29,27,17,36]  |
   582  |                         R = R + 2;  |      2  |   95  |     29  |  3  |   5  |  [7,5,28,29,27,17,36]  |
   586  |                         j = j + 1;  |         |   95  |     29  |  3  |   6  |  [7,5,28,29,27,17,36]  |
   587  |              resetPlaceHolder_2();  |         |   95  |     29  |  3  |   6  |  [7,5,28,29,27,17,36]  |
   593  |                         R = R + 2;  |      2  |   97  |     29  |  3  |   6  |  [7,5,28,29,27,17,36]  |
   597  |                         j = j + 1;  |         |   97  |     29  |  3  |   7  |  [7,5,28,29,27,17,36]  |
   598  |              resetPlaceHolder_2();  |         |   97  |     29  |  3  |   7  |  [7,5,28,29,27,17,36]  |
   604  |                         R = R + 2;  |      2  |   99  |     29  |  3  |   7  |  [7,5,28,29,27,17,36]  |
   608  |                         j = j + 1;  |         |   99  |     29  |  3  |   8  |  [7,5,28,29,27,17,36]  |
   609  |              resetPlaceHolder_2();  |         |   99  |     29  |  3  |   8  |  [7,5,28,29,27,17,36]  |
   615  |                         R = R + 2;  |      2  |  101  |     29  |  3  |   8  |  [7,5,28,29,27,17,36]  |
   619  |                         j = j + 1;  |         |  101  |     29  |  3  |   9  |  [7,5,28,29,27,17,36]  |
   620  |              resetPlaceHolder_2();  |         |  101  |     29  |  3  |   9  |  [7,5,28,29,27,17,36]  |
   626  |                         R = R + 2;  |      2  |  103  |     29  |  3  |   9  |  [7,5,28,29,27,17,36]  |
   630  |                         j = j + 1;  |         |  103  |     29  |  3  |  10  |  [7,5,28,29,27,17,36]  |
   631  |              resetPlaceHolder_2();  |         |  103  |     29  |  3  |  10  |  [7,5,28,29,27,17,36]  |
   637  |                         R = R + 2;  |      2  |  105  |     29  |  3  |  10  |  [7,5,28,29,27,17,36]  |
   641  |                         j = j + 1;  |         |  105  |     29  |  3  |  11  |  [7,5,28,29,27,17,36]  |
   642  |              resetPlaceHolder_2();  |         |  105  |     29  |  3  |  11  |  [7,5,28,29,27,17,36]  |
   648  |                         R = R + 2;  |      2  |  107  |     29  |  3  |  11  |  [7,5,28,29,27,17,36]  |
   652  |                         j = j + 1;  |         |  107  |     29  |  3  |  12  |  [7,5,28,29,27,17,36]  |
   653  |              resetPlaceHolder_2();  |         |  107  |     29  |  3  |  12  |  [7,5,28,29,27,17,36]  |
   659  |                         R = R + 2;  |      2  |  109  |     29  |  3  |  12  |  [7,5,28,29,27,17,36]  |
   663  |                         j = j + 1;  |         |  109  |     29  |  3  |  13  |  [7,5,28,29,27,17,36]  |
   664  |              resetPlaceHolder_2();  |         |  109  |     29  |  3  |  13  |  [7,5,28,29,27,17,36]  |
   670  |                         R = R + 2;  |      2  |  111  |     29  |  3  |  13  |  [7,5,28,29,27,17,36]  |
   674  |                         j = j + 1;  |         |  111  |     29  |  3  |  14  |  [7,5,28,29,27,17,36]  |
   675  |              resetPlaceHolder_2();  |         |  111  |     29  |  3  |  14  |  [7,5,28,29,27,17,36]  |
   681  |                         R = R + 2;  |      2  |  113  |     29  |  3  |  14  |  [7,5,28,29,27,17,36]  |
   685  |                         j = j + 1;  |         |  113  |     29  |  3  |  15  |  [7,5,28,29,27,17,36]  |
   686  |              resetPlaceHolder_2();  |         |  113  |     29  |  3  |  15  |  [7,5,28,29,27,17,36]  |
   692  |                         R = R + 2;  |      2  |  115  |     29  |  3  |  15  |  [7,5,28,29,27,17,36]  |
   696  |                         j = j + 1;  |         |  115  |     29  |  3  |  16  |  [7,5,28,29,27,17,36]  |
   697  |              resetPlaceHolder_2();  |         |  115  |     29  |  3  |  16  |  [7,5,28,29,27,17,36]  |
   703  |                         R = R + 2;  |      2  |  117  |     29  |  3  |  16  |  [7,5,28,29,27,17,36]  |
   707  |                         j = j + 1;  |         |  117  |     29  |  3  |  17  |  [7,5,28,29,27,17,36]  |
   708  |              resetPlaceHolder_2();  |         |  117  |     29  |  3  |  17  |  [7,5,28,29,27,17,36]  |
   714  |                         R = R + 2;  |      2  |  119  |     29  |  3  |  17  |  [7,5,28,29,27,17,36]  |
   718  |                         j = j + 1;  |         |  119  |     29  |  3  |  18  |  [7,5,28,29,27,17,36]  |
   719  |              resetPlaceHolder_2();  |         |  119  |     29  |  3  |  18  |  [7,5,28,29,27,17,36]  |
   725  |                         R = R + 2;  |      2  |  121  |     29  |  3  |  18  |  [7,5,28,29,27,17,36]  |
   729  |                         j = j + 1;  |         |  121  |     29  |  3  |  19  |  [7,5,28,29,27,17,36]  |
   730  |              resetPlaceHolder_2();  |         |  121  |     29  |  3  |  19  |  [7,5,28,29,27,17,36]  |
   736  |                         R = R + 2;  |      2  |  123  |     29  |  3  |  19  |  [7,5,28,29,27,17,36]  |
   740  |                         j = j + 1;  |         |  123  |     29  |  3  |  20  |  [7,5,28,29,27,17,36]  |
   741  |              resetPlaceHolder_2();  |         |  123  |     29  |  3  |  20  |  [7,5,28,29,27,17,36]  |
   747  |                         R = R + 2;  |      2  |  125  |     29  |  3  |  20  |  [7,5,28,29,27,17,36]  |
   751  |                         j = j + 1;  |         |  125  |     29  |  3  |  21  |  [7,5,28,29,27,17,36]  |
   752  |              resetPlaceHolder_2();  |         |  125  |     29  |  3  |  21  |  [7,5,28,29,27,17,36]  |
   758  |                         R = R + 2;  |      2  |  127  |     29  |  3  |  21  |  [7,5,28,29,27,17,36]  |
   762  |                         j = j + 1;  |         |  127  |     29  |  3  |  22  |  [7,5,28,29,27,17,36]  |
   763  |              resetPlaceHolder_2();  |         |  127  |     29  |  3  |  22  |  [7,5,28,29,27,17,36]  |
   769  |                         R = R + 2;  |      2  |  129  |     29  |  3  |  22  |  [7,5,28,29,27,17,36]  |
   773  |                         j = j + 1;  |         |  129  |     29  |  3  |  23  |  [7,5,28,29,27,17,36]  |
   774  |              resetPlaceHolder_2();  |         |  129  |     29  |  3  |  23  |  [7,5,28,29,27,17,36]  |
   780  |                         R = R + 2;  |      2  |  131  |     29  |  3  |  23  |  [7,5,28,29,27,17,36]  |
   784  |                         j = j + 1;  |         |  131  |     29  |  3  |  24  |  [7,5,28,29,27,17,36]  |
   785  |              resetPlaceHolder_2();  |         |  131  |     29  |  3  |  24  |  [7,5,28,29,27,17,36]  |
   791  |                         R = R + 2;  |      2  |  133  |     29  |  3  |  24  |  [7,5,28,29,27,17,36]  |
   795  |                         j = j + 1;  |         |  133  |     29  |  3  |  25  |  [7,5,28,29,27,17,36]  |
   796  |              resetPlaceHolder_2();  |         |  133  |     29  |  3  |  25  |  [7,5,28,29,27,17,36]  |
   802  |                         R = R + 2;  |      2  |  135  |     29  |  3  |  25  |  [7,5,28,29,27,17,36]  |
   806  |                         j = j + 1;  |         |  135  |     29  |  3  |  26  |  [7,5,28,29,27,17,36]  |
   807  |              resetPlaceHolder_2();  |         |  135  |     29  |  3  |  26  |  [7,5,28,29,27,17,36]  |
   813  |                         R = R + 2;  |      2  |  137  |     29  |  3  |  26  |  [7,5,28,29,27,17,36]  |
   817  |                         j = j + 1;  |         |  137  |     29  |  3  |  27  |  [7,5,28,29,27,17,36]  |
   818  |              resetPlaceHolder_2();  |         |  137  |     29  |  3  |  27  |  [7,5,28,29,27,17,36]  |
   824  |                         R = R + 2;  |      2  |  139  |     29  |  3  |  27  |  [7,5,28,29,27,17,36]  |
   828  |                         j = j + 1;  |         |  139  |     29  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   829  |              resetPlaceHolder_2();  |         |  139  |     29  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   835  |                         R = R + 2;  |      2  |  141  |     29  |  3  |  28  |  [7,5,28,29,27,17,36]  |
   839  |                         j = j + 1;  |         |  141  |     29  |  3  |  29  |  [7,5,28,29,27,17,36]  |
   840  |              resetPlaceHolder_2();  |         |  141  |     29  |  3  |  29  |  [7,5,28,29,27,17,36]  |
   846  |                         R = R + 1;  |      1  |  142  |     29  |  3  |  29  |  [7,5,28,29,27,17,36]  |
   850  |                         i = i + 1;  |         |  142  |     29  |  4  |  29  |  [7,5,28,29,27,17,36]  |
   851  |              resetPlaceHolder_1();  |         |  142  |     29  |  4  |  29  |  [7,5,28,29,27,17,36]  |
   857  |      entry = arrayRead(sorted, i);  |         |  142  |     27  |  4  |  29  |  [7,5,28,29,27,17,36]  |
   859  |                         int j = 0;  |         |  142  |     27  |  4  |   0  |  [7,5,28,29,27,17,36]  |
   865  |                         R = R + 2;  |      2  |  144  |     27  |  4  |   0  |  [7,5,28,29,27,17,36]  |
   869  |                         j = j + 1;  |         |  144  |     27  |  4  |   1  |  [7,5,28,29,27,17,36]  |
   870  |              resetPlaceHolder_2();  |         |  144  |     27  |  4  |   1  |  [7,5,28,29,27,17,36]  |
   876  |                         R = R + 2;  |      2  |  146  |     27  |  4  |   1  |  [7,5,28,29,27,17,36]  |
   880  |                         j = j + 1;  |         |  146  |     27  |  4  |   2  |  [7,5,28,29,27,17,36]  |
   881  |              resetPlaceHolder_2();  |         |  146  |     27  |  4  |   2  |  [7,5,28,29,27,17,36]  |
   887  |                         R = R + 2;  |      2  |  148  |     27  |  4  |   2  |  [7,5,28,29,27,17,36]  |
   891  |                         j = j + 1;  |         |  148  |     27  |  4  |   3  |  [7,5,28,29,27,17,36]  |
   892  |              resetPlaceHolder_2();  |         |  148  |     27  |  4  |   3  |  [7,5,28,29,27,17,36]  |
   898  |                         R = R + 2;  |      2  |  150  |     27  |  4  |   3  |  [7,5,28,29,27,17,36]  |
   902  |                         j = j + 1;  |         |  150  |     27  |  4  |   4  |  [7,5,28,29,27,17,36]  |
   903  |              resetPlaceHolder_2();  |         |  150  |     27  |  4  |   4  |  [7,5,28,29,27,17,36]  |
   909  |                         R = R + 2;  |      2  |  152  |     27  |  4  |   4  |  [7,5,28,29,27,17,36]  |
   913  |                         j = j + 1;  |         |  152  |     27  |  4  |   5  |  [7,5,28,29,27,17,36]  |
   914  |              resetPlaceHolder_2();  |         |  152  |     27  |  4  |   5  |  [7,5,28,29,27,17,36]  |
   920  |                         R = R + 2;  |      2  |  154  |     27  |  4  |   5  |  [7,5,28,29,27,17,36]  |
   924  |                         j = j + 1;  |         |  154  |     27  |  4  |   6  |  [7,5,28,29,27,17,36]  |
   925  |              resetPlaceHolder_2();  |         |  154  |     27  |  4  |   6  |  [7,5,28,29,27,17,36]  |
   931  |                         R = R + 2;  |      2  |  156  |     27  |  4  |   6  |  [7,5,28,29,27,17,36]  |
   935  |                         j = j + 1;  |         |  156  |     27  |  4  |   7  |  [7,5,28,29,27,17,36]  |
   936  |              resetPlaceHolder_2();  |         |  156  |     27  |  4  |   7  |  [7,5,28,29,27,17,36]  |
   942  |                         R = R + 2;  |      2  |  158  |     27  |  4  |   7  |  [7,5,28,29,27,17,36]  |
   946  |                         j = j + 1;  |         |  158  |     27  |  4  |   8  |  [7,5,28,29,27,17,36]  |
   947  |              resetPlaceHolder_2();  |         |  158  |     27  |  4  |   8  |  [7,5,28,29,27,17,36]  |
   953  |                         R = R + 2;  |      2  |  160  |     27  |  4  |   8  |  [7,5,28,29,27,17,36]  |
   957  |                         j = j + 1;  |         |  160  |     27  |  4  |   9  |  [7,5,28,29,27,17,36]  |
   958  |              resetPlaceHolder_2();  |         |  160  |     27  |  4  |   9  |  [7,5,28,29,27,17,36]  |
   964  |                         R = R + 2;  |      2  |  162  |     27  |  4  |   9  |  [7,5,28,29,27,17,36]  |
   968  |                         j = j + 1;  |         |  162  |     27  |  4  |  10  |  [7,5,28,29,27,17,36]  |
   969  |              resetPlaceHolder_2();  |         |  162  |     27  |  4  |  10  |  [7,5,28,29,27,17,36]  |
   975  |                         R = R + 2;  |      2  |  164  |     27  |  4  |  10  |  [7,5,28,29,27,17,36]  |
   979  |                         j = j + 1;  |         |  164  |     27  |  4  |  11  |  [7,5,28,29,27,17,36]  |
   980  |              resetPlaceHolder_2();  |         |  164  |     27  |  4  |  11  |  [7,5,28,29,27,17,36]  |
   986  |                         R = R + 2;  |      2  |  166  |     27  |  4  |  11  |  [7,5,28,29,27,17,36]  |
   990  |                         j = j + 1;  |         |  166  |     27  |  4  |  12  |  [7,5,28,29,27,17,36]  |
   991  |              resetPlaceHolder_2();  |         |  166  |     27  |  4  |  12  |  [7,5,28,29,27,17,36]  |
   997  |                         R = R + 2;  |      2  |  168  |     27  |  4  |  12  |  [7,5,28,29,27,17,36]  |
  1001  |                         j = j + 1;  |         |  168  |     27  |  4  |  13  |  [7,5,28,29,27,17,36]  |
  1002  |              resetPlaceHolder_2();  |         |  168  |     27  |  4  |  13  |  [7,5,28,29,27,17,36]  |
  1008  |                         R = R + 2;  |      2  |  170  |     27  |  4  |  13  |  [7,5,28,29,27,17,36]  |
  1012  |                         j = j + 1;  |         |  170  |     27  |  4  |  14  |  [7,5,28,29,27,17,36]  |
  1013  |              resetPlaceHolder_2();  |         |  170  |     27  |  4  |  14  |  [7,5,28,29,27,17,36]  |
  1019  |                         R = R + 2;  |      2  |  172  |     27  |  4  |  14  |  [7,5,28,29,27,17,36]  |
  1023  |                         j = j + 1;  |         |  172  |     27  |  4  |  15  |  [7,5,28,29,27,17,36]  |
  1024  |              resetPlaceHolder_2();  |         |  172  |     27  |  4  |  15  |  [7,5,28,29,27,17,36]  |
  1030  |                         R = R + 2;  |      2  |  174  |     27  |  4  |  15  |  [7,5,28,29,27,17,36]  |
  1034  |                         j = j + 1;  |         |  174  |     27  |  4  |  16  |  [7,5,28,29,27,17,36]  |
  1035  |              resetPlaceHolder_2();  |         |  174  |     27  |  4  |  16  |  [7,5,28,29,27,17,36]  |
  1041  |                         R = R + 2;  |      2  |  176  |     27  |  4  |  16  |  [7,5,28,29,27,17,36]  |
  1045  |                         j = j + 1;  |         |  176  |     27  |  4  |  17  |  [7,5,28,29,27,17,36]  |
  1046  |              resetPlaceHolder_2();  |         |  176  |     27  |  4  |  17  |  [7,5,28,29,27,17,36]  |
  1052  |                         R = R + 2;  |      2  |  178  |     27  |  4  |  17  |  [7,5,28,29,27,17,36]  |
  1056  |                         j = j + 1;  |         |  178  |     27  |  4  |  18  |  [7,5,28,29,27,17,36]  |
  1057  |              resetPlaceHolder_2();  |         |  178  |     27  |  4  |  18  |  [7,5,28,29,27,17,36]  |
  1063  |                         R = R + 2;  |      2  |  180  |     27  |  4  |  18  |  [7,5,28,29,27,17,36]  |
  1067  |                         j = j + 1;  |         |  180  |     27  |  4  |  19  |  [7,5,28,29,27,17,36]  |
  1068  |              resetPlaceHolder_2();  |         |  180  |     27  |  4  |  19  |  [7,5,28,29,27,17,36]  |
  1074  |                         R = R + 2;  |      2  |  182  |     27  |  4  |  19  |  [7,5,28,29,27,17,36]  |
  1078  |                         j = j + 1;  |         |  182  |     27  |  4  |  20  |  [7,5,28,29,27,17,36]  |
  1079  |              resetPlaceHolder_2();  |         |  182  |     27  |  4  |  20  |  [7,5,28,29,27,17,36]  |
  1085  |                         R = R + 2;  |      2  |  184  |     27  |  4  |  20  |  [7,5,28,29,27,17,36]  |
  1089  |                         j = j + 1;  |         |  184  |     27  |  4  |  21  |  [7,5,28,29,27,17,36]  |
  1090  |              resetPlaceHolder_2();  |         |  184  |     27  |  4  |  21  |  [7,5,28,29,27,17,36]  |
  1096  |                         R = R + 2;  |      2  |  186  |     27  |  4  |  21  |  [7,5,28,29,27,17,36]  |
  1100  |                         j = j + 1;  |         |  186  |     27  |  4  |  22  |  [7,5,28,29,27,17,36]  |
  1101  |              resetPlaceHolder_2();  |         |  186  |     27  |  4  |  22  |  [7,5,28,29,27,17,36]  |
  1107  |                         R = R + 2;  |      2  |  188  |     27  |  4  |  22  |  [7,5,28,29,27,17,36]  |
  1111  |                         j = j + 1;  |         |  188  |     27  |  4  |  23  |  [7,5,28,29,27,17,36]  |
  1112  |              resetPlaceHolder_2();  |         |  188  |     27  |  4  |  23  |  [7,5,28,29,27,17,36]  |
  1118  |                         R = R + 2;  |      2  |  190  |     27  |  4  |  23  |  [7,5,28,29,27,17,36]  |
  1122  |                         j = j + 1;  |         |  190  |     27  |  4  |  24  |  [7,5,28,29,27,17,36]  |
  1123  |              resetPlaceHolder_2();  |         |  190  |     27  |  4  |  24  |  [7,5,28,29,27,17,36]  |
  1129  |                         R = R + 2;  |      2  |  192  |     27  |  4  |  24  |  [7,5,28,29,27,17,36]  |
  1133  |                         j = j + 1;  |         |  192  |     27  |  4  |  25  |  [7,5,28,29,27,17,36]  |
  1134  |              resetPlaceHolder_2();  |         |  192  |     27  |  4  |  25  |  [7,5,28,29,27,17,36]  |
  1140  |                         R = R + 2;  |      2  |  194  |     27  |  4  |  25  |  [7,5,28,29,27,17,36]  |
  1144  |                         j = j + 1;  |         |  194  |     27  |  4  |  26  |  [7,5,28,29,27,17,36]  |
  1145  |              resetPlaceHolder_2();  |         |  194  |     27  |  4  |  26  |  [7,5,28,29,27,17,36]  |
  1151  |                         R = R + 2;  |      2  |  196  |     27  |  4  |  26  |  [7,5,28,29,27,17,36]  |
  1155  |                         j = j + 1;  |         |  196  |     27  |  4  |  27  |  [7,5,28,29,27,17,36]  |
  1156  |              resetPlaceHolder_2();  |         |  196  |     27  |  4  |  27  |  [7,5,28,29,27,17,36]  |
  1162  |                         R = R + 1;  |      1  |  197  |     27  |  4  |  27  |  [7,5,28,29,27,17,36]  |
  1166  |                         i = i + 1;  |         |  197  |     27  |  5  |  27  |  [7,5,28,29,27,17,36]  |
  1167  |              resetPlaceHolder_1();  |         |  197  |     27  |  5  |  27  |  [7,5,28,29,27,17,36]  |
  1173  |      entry = arrayRead(sorted, i);  |         |  197  |     17  |  5  |  27  |  [7,5,28,29,27,17,36]  |
  1175  |                         int j = 0;  |         |  197  |     17  |  5  |   0  |  [7,5,28,29,27,17,36]  |
  1181  |                         R = R + 2;  |      2  |  199  |     17  |  5  |   0  |  [7,5,28,29,27,17,36]  |
  1185  |                         j = j + 1;  |         |  199  |     17  |  5  |   1  |  [7,5,28,29,27,17,36]  |
  1186  |              resetPlaceHolder_2();  |         |  199  |     17  |  5  |   1  |  [7,5,28,29,27,17,36]  |
  1192  |                         R = R + 2;  |      2  |  201  |     17  |  5  |   1  |  [7,5,28,29,27,17,36]  |
  1196  |                         j = j + 1;  |         |  201  |     17  |  5  |   2  |  [7,5,28,29,27,17,36]  |
  1197  |              resetPlaceHolder_2();  |         |  201  |     17  |  5  |   2  |  [7,5,28,29,27,17,36]  |
  1203  |                         R = R + 2;  |      2  |  203  |     17  |  5  |   2  |  [7,5,28,29,27,17,36]  |
  1207  |                         j = j + 1;  |         |  203  |     17  |  5  |   3  |  [7,5,28,29,27,17,36]  |
  1208  |              resetPlaceHolder_2();  |         |  203  |     17  |  5  |   3  |  [7,5,28,29,27,17,36]  |
  1214  |                         R = R + 2;  |      2  |  205  |     17  |  5  |   3  |  [7,5,28,29,27,17,36]  |
  1218  |                         j = j + 1;  |         |  205  |     17  |  5  |   4  |  [7,5,28,29,27,17,36]  |
  1219  |              resetPlaceHolder_2();  |         |  205  |     17  |  5  |   4  |  [7,5,28,29,27,17,36]  |
  1225  |                         R = R + 2;  |      2  |  207  |     17  |  5  |   4  |  [7,5,28,29,27,17,36]  |
  1229  |                         j = j + 1;  |         |  207  |     17  |  5  |   5  |  [7,5,28,29,27,17,36]  |
  1230  |              resetPlaceHolder_2();  |         |  207  |     17  |  5  |   5  |  [7,5,28,29,27,17,36]  |
  1236  |                         R = R + 2;  |      2  |  209  |     17  |  5  |   5  |  [7,5,28,29,27,17,36]  |
  1240  |                         j = j + 1;  |         |  209  |     17  |  5  |   6  |  [7,5,28,29,27,17,36]  |
  1241  |              resetPlaceHolder_2();  |         |  209  |     17  |  5  |   6  |  [7,5,28,29,27,17,36]  |
  1247  |                         R = R + 2;  |      2  |  211  |     17  |  5  |   6  |  [7,5,28,29,27,17,36]  |
  1251  |                         j = j + 1;  |         |  211  |     17  |  5  |   7  |  [7,5,28,29,27,17,36]  |
  1252  |              resetPlaceHolder_2();  |         |  211  |     17  |  5  |   7  |  [7,5,28,29,27,17,36]  |
  1258  |                         R = R + 2;  |      2  |  213  |     17  |  5  |   7  |  [7,5,28,29,27,17,36]  |
  1262  |                         j = j + 1;  |         |  213  |     17  |  5  |   8  |  [7,5,28,29,27,17,36]  |
  1263  |              resetPlaceHolder_2();  |         |  213  |     17  |  5  |   8  |  [7,5,28,29,27,17,36]  |
  1269  |                         R = R + 2;  |      2  |  215  |     17  |  5  |   8  |  [7,5,28,29,27,17,36]  |
  1273  |                         j = j + 1;  |         |  215  |     17  |  5  |   9  |  [7,5,28,29,27,17,36]  |
  1274  |              resetPlaceHolder_2();  |         |  215  |     17  |  5  |   9  |  [7,5,28,29,27,17,36]  |
  1280  |                         R = R + 2;  |      2  |  217  |     17  |  5  |   9  |  [7,5,28,29,27,17,36]  |
  1284  |                         j = j + 1;  |         |  217  |     17  |  5  |  10  |  [7,5,28,29,27,17,36]  |
  1285  |              resetPlaceHolder_2();  |         |  217  |     17  |  5  |  10  |  [7,5,28,29,27,17,36]  |
  1291  |                         R = R + 2;  |      2  |  219  |     17  |  5  |  10  |  [7,5,28,29,27,17,36]  |
  1295  |                         j = j + 1;  |         |  219  |     17  |  5  |  11  |  [7,5,28,29,27,17,36]  |
  1296  |              resetPlaceHolder_2();  |         |  219  |     17  |  5  |  11  |  [7,5,28,29,27,17,36]  |
  1302  |                         R = R + 2;  |      2  |  221  |     17  |  5  |  11  |  [7,5,28,29,27,17,36]  |
  1306  |                         j = j + 1;  |         |  221  |     17  |  5  |  12  |  [7,5,28,29,27,17,36]  |
  1307  |              resetPlaceHolder_2();  |         |  221  |     17  |  5  |  12  |  [7,5,28,29,27,17,36]  |
  1313  |                         R = R + 2;  |      2  |  223  |     17  |  5  |  12  |  [7,5,28,29,27,17,36]  |
  1317  |                         j = j + 1;  |         |  223  |     17  |  5  |  13  |  [7,5,28,29,27,17,36]  |
  1318  |              resetPlaceHolder_2();  |         |  223  |     17  |  5  |  13  |  [7,5,28,29,27,17,36]  |
  1324  |                         R = R + 2;  |      2  |  225  |     17  |  5  |  13  |  [7,5,28,29,27,17,36]  |
  1328  |                         j = j + 1;  |         |  225  |     17  |  5  |  14  |  [7,5,28,29,27,17,36]  |
  1329  |              resetPlaceHolder_2();  |         |  225  |     17  |  5  |  14  |  [7,5,28,29,27,17,36]  |
  1335  |                         R = R + 2;  |      2  |  227  |     17  |  5  |  14  |  [7,5,28,29,27,17,36]  |
  1339  |                         j = j + 1;  |         |  227  |     17  |  5  |  15  |  [7,5,28,29,27,17,36]  |
  1340  |              resetPlaceHolder_2();  |         |  227  |     17  |  5  |  15  |  [7,5,28,29,27,17,36]  |
  1346  |                         R = R + 2;  |      2  |  229  |     17  |  5  |  15  |  [7,5,28,29,27,17,36]  |
  1350  |                         j = j + 1;  |         |  229  |     17  |  5  |  16  |  [7,5,28,29,27,17,36]  |
  1351  |              resetPlaceHolder_2();  |         |  229  |     17  |  5  |  16  |  [7,5,28,29,27,17,36]  |
  1357  |                         R = R + 2;  |      2  |  231  |     17  |  5  |  16  |  [7,5,28,29,27,17,36]  |
  1361  |                         j = j + 1;  |         |  231  |     17  |  5  |  17  |  [7,5,28,29,27,17,36]  |
  1362  |              resetPlaceHolder_2();  |         |  231  |     17  |  5  |  17  |  [7,5,28,29,27,17,36]  |
  1368  |                         R = R + 1;  |      1  |  232  |     17  |  5  |  17  |  [7,5,28,29,27,17,36]  |
  1372  |                         i = i + 1;  |         |  232  |     17  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1373  |              resetPlaceHolder_1();  |         |  232  |     17  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1379  |      entry = arrayRead(sorted, i);  |         |  232  |     36  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1381  |                         int j = 0;  |         |  232  |     36  |  6  |   0  |  [7,5,28,29,27,17,36]  |
  1387  |                         R = R + 2;  |      2  |  234  |     36  |  6  |   0  |  [7,5,28,29,27,17,36]  |
  1391  |                         j = j + 1;  |         |  234  |     36  |  6  |   1  |  [7,5,28,29,27,17,36]  |
  1392  |              resetPlaceHolder_2();  |         |  234  |     36  |  6  |   1  |  [7,5,28,29,27,17,36]  |
  1398  |                         R = R + 2;  |      2  |  236  |     36  |  6  |   1  |  [7,5,28,29,27,17,36]  |
  1402  |                         j = j + 1;  |         |  236  |     36  |  6  |   2  |  [7,5,28,29,27,17,36]  |
  1403  |              resetPlaceHolder_2();  |         |  236  |     36  |  6  |   2  |  [7,5,28,29,27,17,36]  |
  1409  |                         R = R + 2;  |      2  |  238  |     36  |  6  |   2  |  [7,5,28,29,27,17,36]  |
  1413  |                         j = j + 1;  |         |  238  |     36  |  6  |   3  |  [7,5,28,29,27,17,36]  |
  1414  |              resetPlaceHolder_2();  |         |  238  |     36  |  6  |   3  |  [7,5,28,29,27,17,36]  |
  1420  |                         R = R + 2;  |      2  |  240  |     36  |  6  |   3  |  [7,5,28,29,27,17,36]  |
  1424  |                         j = j + 1;  |         |  240  |     36  |  6  |   4  |  [7,5,28,29,27,17,36]  |
  1425  |              resetPlaceHolder_2();  |         |  240  |     36  |  6  |   4  |  [7,5,28,29,27,17,36]  |
  1431  |                         R = R + 2;  |      2  |  242  |     36  |  6  |   4  |  [7,5,28,29,27,17,36]  |
  1435  |                         j = j + 1;  |         |  242  |     36  |  6  |   5  |  [7,5,28,29,27,17,36]  |
  1436  |              resetPlaceHolder_2();  |         |  242  |     36  |  6  |   5  |  [7,5,28,29,27,17,36]  |
  1442  |                         R = R + 2;  |      2  |  244  |     36  |  6  |   5  |  [7,5,28,29,27,17,36]  |
  1446  |                         j = j + 1;  |         |  244  |     36  |  6  |   6  |  [7,5,28,29,27,17,36]  |
  1447  |              resetPlaceHolder_2();  |         |  244  |     36  |  6  |   6  |  [7,5,28,29,27,17,36]  |
  1453  |                         R = R + 2;  |      2  |  246  |     36  |  6  |   6  |  [7,5,28,29,27,17,36]  |
  1457  |                         j = j + 1;  |         |  246  |     36  |  6  |   7  |  [7,5,28,29,27,17,36]  |
  1458  |              resetPlaceHolder_2();  |         |  246  |     36  |  6  |   7  |  [7,5,28,29,27,17,36]  |
  1464  |                         R = R + 2;  |      2  |  248  |     36  |  6  |   7  |  [7,5,28,29,27,17,36]  |
  1468  |                         j = j + 1;  |         |  248  |     36  |  6  |   8  |  [7,5,28,29,27,17,36]  |
  1469  |              resetPlaceHolder_2();  |         |  248  |     36  |  6  |   8  |  [7,5,28,29,27,17,36]  |
  1475  |                         R = R + 2;  |      2  |  250  |     36  |  6  |   8  |  [7,5,28,29,27,17,36]  |
  1479  |                         j = j + 1;  |         |  250  |     36  |  6  |   9  |  [7,5,28,29,27,17,36]  |
  1480  |              resetPlaceHolder_2();  |         |  250  |     36  |  6  |   9  |  [7,5,28,29,27,17,36]  |
  1486  |                         R = R + 2;  |      2  |  252  |     36  |  6  |   9  |  [7,5,28,29,27,17,36]  |
  1490  |                         j = j + 1;  |         |  252  |     36  |  6  |  10  |  [7,5,28,29,27,17,36]  |
  1491  |              resetPlaceHolder_2();  |         |  252  |     36  |  6  |  10  |  [7,5,28,29,27,17,36]  |
  1497  |                         R = R + 2;  |      2  |  254  |     36  |  6  |  10  |  [7,5,28,29,27,17,36]  |
  1501  |                         j = j + 1;  |         |  254  |     36  |  6  |  11  |  [7,5,28,29,27,17,36]  |
  1502  |              resetPlaceHolder_2();  |         |  254  |     36  |  6  |  11  |  [7,5,28,29,27,17,36]  |
  1508  |                         R = R + 2;  |      2  |  256  |     36  |  6  |  11  |  [7,5,28,29,27,17,36]  |
  1512  |                         j = j + 1;  |         |  256  |     36  |  6  |  12  |  [7,5,28,29,27,17,36]  |
  1513  |              resetPlaceHolder_2();  |         |  256  |     36  |  6  |  12  |  [7,5,28,29,27,17,36]  |
  1519  |                         R = R + 2;  |      2  |  258  |     36  |  6  |  12  |  [7,5,28,29,27,17,36]  |
  1523  |                         j = j + 1;  |         |  258  |     36  |  6  |  13  |  [7,5,28,29,27,17,36]  |
  1524  |              resetPlaceHolder_2();  |         |  258  |     36  |  6  |  13  |  [7,5,28,29,27,17,36]  |
  1530  |                         R = R + 2;  |      2  |  260  |     36  |  6  |  13  |  [7,5,28,29,27,17,36]  |
  1534  |                         j = j + 1;  |         |  260  |     36  |  6  |  14  |  [7,5,28,29,27,17,36]  |
  1535  |              resetPlaceHolder_2();  |         |  260  |     36  |  6  |  14  |  [7,5,28,29,27,17,36]  |
  1541  |                         R = R + 2;  |      2  |  262  |     36  |  6  |  14  |  [7,5,28,29,27,17,36]  |
  1545  |                         j = j + 1;  |         |  262  |     36  |  6  |  15  |  [7,5,28,29,27,17,36]  |
  1546  |              resetPlaceHolder_2();  |         |  262  |     36  |  6  |  15  |  [7,5,28,29,27,17,36]  |
  1552  |                         R = R + 2;  |      2  |  264  |     36  |  6  |  15  |  [7,5,28,29,27,17,36]  |
  1556  |                         j = j + 1;  |         |  264  |     36  |  6  |  16  |  [7,5,28,29,27,17,36]  |
  1557  |              resetPlaceHolder_2();  |         |  264  |     36  |  6  |  16  |  [7,5,28,29,27,17,36]  |
  1563  |                         R = R + 2;  |      2  |  266  |     36  |  6  |  16  |  [7,5,28,29,27,17,36]  |
  1567  |                         j = j + 1;  |         |  266  |     36  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1568  |              resetPlaceHolder_2();  |         |  266  |     36  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1574  |                         R = R + 2;  |      2  |  268  |     36  |  6  |  17  |  [7,5,28,29,27,17,36]  |
  1578  |                         j = j + 1;  |         |  268  |     36  |  6  |  18  |  [7,5,28,29,27,17,36]  |
  1579  |              resetPlaceHolder_2();  |         |  268  |     36  |  6  |  18  |  [7,5,28,29,27,17,36]  |
  1585  |                         R = R + 2;  |      2  |  270  |     36  |  6  |  18  |  [7,5,28,29,27,17,36]  |
  1589  |                         j = j + 1;  |         |  270  |     36  |  6  |  19  |  [7,5,28,29,27,17,36]  |
  1590  |              resetPlaceHolder_2();  |         |  270  |     36  |  6  |  19  |  [7,5,28,29,27,17,36]  |
  1596  |                         R = R + 2;  |      2  |  272  |     36  |  6  |  19  |  [7,5,28,29,27,17,36]  |
  1600  |                         j = j + 1;  |         |  272  |     36  |  6  |  20  |  [7,5,28,29,27,17,36]  |
  1601  |              resetPlaceHolder_2();  |         |  272  |     36  |  6  |  20  |  [7,5,28,29,27,17,36]  |
  1607  |                         R = R + 2;  |      2  |  274  |     36  |  6  |  20  |  [7,5,28,29,27,17,36]  |
  1611  |                         j = j + 1;  |         |  274  |     36  |  6  |  21  |  [7,5,28,29,27,17,36]  |
  1612  |              resetPlaceHolder_2();  |         |  274  |     36  |  6  |  21  |  [7,5,28,29,27,17,36]  |
  1618  |                         R = R + 2;  |      2  |  276  |     36  |  6  |  21  |  [7,5,28,29,27,17,36]  |
  1622  |                         j = j + 1;  |         |  276  |     36  |  6  |  22  |  [7,5,28,29,27,17,36]  |
  1623  |              resetPlaceHolder_2();  |         |  276  |     36  |  6  |  22  |  [7,5,28,29,27,17,36]  |
  1629  |                         R = R + 2;  |      2  |  278  |     36  |  6  |  22  |  [7,5,28,29,27,17,36]  |
  1633  |                         j = j + 1;  |         |  278  |     36  |  6  |  23  |  [7,5,28,29,27,17,36]  |
  1634  |              resetPlaceHolder_2();  |         |  278  |     36  |  6  |  23  |  [7,5,28,29,27,17,36]  |
  1640  |                         R = R + 2;  |      2  |  280  |     36  |  6  |  23  |  [7,5,28,29,27,17,36]  |
  1644  |                         j = j + 1;  |         |  280  |     36  |  6  |  24  |  [7,5,28,29,27,17,36]  |
  1645  |              resetPlaceHolder_2();  |         |  280  |     36  |  6  |  24  |  [7,5,28,29,27,17,36]  |
  1651  |                         R = R + 2;  |      2  |  282  |     36  |  6  |  24  |  [7,5,28,29,27,17,36]  |
  1655  |                         j = j + 1;  |         |  282  |     36  |  6  |  25  |  [7,5,28,29,27,17,36]  |
  1656  |              resetPlaceHolder_2();  |         |  282  |     36  |  6  |  25  |  [7,5,28,29,27,17,36]  |
  1662  |                         R = R + 2;  |      2  |  284  |     36  |  6  |  25  |  [7,5,28,29,27,17,36]  |
  1666  |                         j = j + 1;  |         |  284  |     36  |  6  |  26  |  [7,5,28,29,27,17,36]  |
  1667  |              resetPlaceHolder_2();  |         |  284  |     36  |  6  |  26  |  [7,5,28,29,27,17,36]  |
  1673  |                         R = R + 2;  |      2  |  286  |     36  |  6  |  26  |  [7,5,28,29,27,17,36]  |
  1677  |                         j = j + 1;  |         |  286  |     36  |  6  |  27  |  [7,5,28,29,27,17,36]  |
  1678  |              resetPlaceHolder_2();  |         |  286  |     36  |  6  |  27  |  [7,5,28,29,27,17,36]  |
  1684  |                         R = R + 2;  |      2  |  288  |     36  |  6  |  27  |  [7,5,28,29,27,17,36]  |
  1688  |                         j = j + 1;  |         |  288  |     36  |  6  |  28  |  [7,5,28,29,27,17,36]  |
  1689  |              resetPlaceHolder_2();  |         |  288  |     36  |  6  |  28  |  [7,5,28,29,27,17,36]  |
  1695  |                         R = R + 2;  |      2  |  290  |     36  |  6  |  28  |  [7,5,28,29,27,17,36]  |
  1699  |                         j = j + 1;  |         |  290  |     36  |  6  |  29  |  [7,5,28,29,27,17,36]  |
  1700  |              resetPlaceHolder_2();  |         |  290  |     36  |  6  |  29  |  [7,5,28,29,27,17,36]  |
  1706  |                         R = R + 2;  |      2  |  292  |     36  |  6  |  29  |  [7,5,28,29,27,17,36]  |
  1710  |                         j = j + 1;  |         |  292  |     36  |  6  |  30  |  [7,5,28,29,27,17,36]  |
  1711  |              resetPlaceHolder_2();  |         |  292  |     36  |  6  |  30  |  [7,5,28,29,27,17,36]  |
  1717  |                         R = R + 2;  |      2  |  294  |     36  |  6  |  30  |  [7,5,28,29,27,17,36]  |
  1721  |                         j = j + 1;  |         |  294  |     36  |  6  |  31  |  [7,5,28,29,27,17,36]  |
  1722  |              resetPlaceHolder_2();  |         |  294  |     36  |  6  |  31  |  [7,5,28,29,27,17,36]  |
  1728  |                         R = R + 2;  |      2  |  296  |     36  |  6  |  31  |  [7,5,28,29,27,17,36]  |
  1732  |                         j = j + 1;  |         |  296  |     36  |  6  |  32  |  [7,5,28,29,27,17,36]  |
  1733  |              resetPlaceHolder_2();  |         |  296  |     36  |  6  |  32  |  [7,5,28,29,27,17,36]  |
  1739  |                         R = R + 2;  |      2  |  298  |     36  |  6  |  32  |  [7,5,28,29,27,17,36]  |
  1743  |                         j = j + 1;  |         |  298  |     36  |  6  |  33  |  [7,5,28,29,27,17,36]  |
  1744  |              resetPlaceHolder_2();  |         |  298  |     36  |  6  |  33  |  [7,5,28,29,27,17,36]  |
  1750  |                         R = R + 2;  |      2  |  300  |     36  |  6  |  33  |  [7,5,28,29,27,17,36]  |
  1754  |                         j = j + 1;  |         |  300  |     36  |  6  |  34  |  [7,5,28,29,27,17,36]  |
  1755  |              resetPlaceHolder_2();  |         |  300  |     36  |  6  |  34  |  [7,5,28,29,27,17,36]  |
  1761  |                         R = R + 2;  |      2  |  302  |     36  |  6  |  34  |  [7,5,28,29,27,17,36]  |
  1765  |                         j = j + 1;  |         |  302  |     36  |  6  |  35  |  [7,5,28,29,27,17,36]  |
  1766  |              resetPlaceHolder_2();  |         |  302  |     36  |  6  |  35  |  [7,5,28,29,27,17,36]  |
  1772  |                         R = R + 2;  |      2  |  304  |     36  |  6  |  35  |  [7,5,28,29,27,17,36]  |
  1776  |                         j = j + 1;  |         |  304  |     36  |  6  |  36  |  [7,5,28,29,27,17,36]  |
  1777  |              resetPlaceHolder_2();  |         |  304  |     36  |  6  |  36  |  [7,5,28,29,27,17,36]  |
  1783  |                         R = R + 1;  |      1  |  305  |     36  |  6  |  36  |  [7,5,28,29,27,17,36]  |
  1787  |                         i = i + 1;  |         |  305  |     36  |  7  |  36  |  [7,5,28,29,27,17,36]  |
  1788  |              resetPlaceHolder_1();  |         |  305  |     36  |  7  |  36  |  [7,5,28,29,27,17,36]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 4
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 4 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 5
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 5 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 6
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 6 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 4.1.1: Cluster segments with length 7
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 7 among 156 trace node indices: [365, 846, 909, 1750, 170, 582, 1596, 1618, 1728, 1269, 1041, 1486, 1497, 1761, 747, 1640, 1063, 538, 670, 898, 288, 1475, 52, 1409, 802, 1313, 1247, 1398, 475, 1302, 321, 376, 211, 1151, 692, 453, 527, 74, 1651, 1074, 233, 920, 942, 85, 1783, 714, 1387, 1519, 137, 1291, 1541, 1772, 615, 725, 1096, 593, 420, 1118, 1739, 637, 1214, 96, 1324, 997, 1530, 1552, 1192, 41, 343, 244, 266, 508, 1695, 1563, 398, 953, 824, 148, 975, 1107, 181, 1258, 1464, 159, 604, 681, 1574, 736, 387, 758, 1162, 964, 626, 769, 780, 986, 299, 431, 1662, 1203, 1420, 255, 1684, 648, 1181, 63, 1225, 887, 1368, 409, 310, 791, 1085, 703, 1052, 1585, 1140, 1008, 1717, 571, 497, 876, 931, 1453, 813, 1508, 1629, 1030, 1706, 1607, 549, 1442, 1280, 835, 30, 1673, 865, 107, 126, 1335, 1346, 1236, 464, 332, 1129, 1019, 1357, 200, 1431, 277, 442, 486, 354, 659, 560, 222]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,126,137,148,159,170,181,200,211,222,233,244,255,266,277,288,299,310,321,332,343,354,365,376,387,398,409,420,431,442,453,464,475,486,497,508,527,538,549,560,571,582,593,604,615,626,637,648,659,670,681,692,703,714,725,736,747,758,769,780,791,802,813,824,835,846,865,876,887,898,909,920,931,942,953,964,975,986,997,1008,1019,1030,1041,1052,1063,1074,1085,1096,1107,1118,1129,1140,1151,1162,1181,1192,1203,1214,1225,1236,1247,1258,1269,1280,1291,1302,1313,1324,1335,1346,1357,1368,1387,1398,1409,1420,1431,1442,1453,1464,1475,1486,1497,1508,1519,1530,1541,1552,1563,1574,1585,1596,1607,1618,1629,1640,1651,1662,1673,1684,1695,1706,1717,1728,1739,1750,1761,1772,1783}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 1;  |      1  |                         0  |
   112  |  resetPlaceHolder_1();  |         |                            |
   126  |             R = R + 2;  |      2  |                         0  |
   131  |  resetPlaceHolder_2();  |         |                            |
   137  |             R = R + 2;  |      2  |                         0  |
   142  |  resetPlaceHolder_2();  |         |                            |
   148  |             R = R + 2;  |      2  |                         0  |
   153  |  resetPlaceHolder_2();  |         |                            |
   159  |             R = R + 2;  |      2  |                         0  |
   164  |  resetPlaceHolder_2();  |         |                            |
   170  |             R = R + 2;  |      2  |                         0  |
   175  |  resetPlaceHolder_2();  |         |                            |
   181  |             R = R + 1;  |      1  |                         0  |
   186  |  resetPlaceHolder_1();  |         |                            |
   200  |             R = R + 2;  |      2  |                         0  |
   205  |  resetPlaceHolder_2();  |         |                            |
   211  |             R = R + 2;  |      2  |                         0  |
   216  |  resetPlaceHolder_2();  |         |                            |
   222  |             R = R + 2;  |      2  |                         0  |
   227  |  resetPlaceHolder_2();  |         |                            |
   233  |             R = R + 2;  |      2  |                         0  |
   238  |  resetPlaceHolder_2();  |         |                            |
   244  |             R = R + 2;  |      2  |                         0  |
   249  |  resetPlaceHolder_2();  |         |                            |
   255  |             R = R + 2;  |      2  |                         0  |
   260  |  resetPlaceHolder_2();  |         |                            |
   266  |             R = R + 2;  |      2  |                         0  |
   271  |  resetPlaceHolder_2();  |         |                            |
   277  |             R = R + 2;  |      2  |                         0  |
   282  |  resetPlaceHolder_2();  |         |                            |
   288  |             R = R + 2;  |      2  |                         0  |
   293  |  resetPlaceHolder_2();  |         |                            |
   299  |             R = R + 2;  |      2  |                         0  |
   304  |  resetPlaceHolder_2();  |         |                            |
   310  |             R = R + 2;  |      2  |                         0  |
   315  |  resetPlaceHolder_2();  |         |                            |
   321  |             R = R + 2;  |      2  |                         0  |
   326  |  resetPlaceHolder_2();  |         |                            |
   332  |             R = R + 2;  |      2  |                         0  |
   337  |  resetPlaceHolder_2();  |         |                            |
   343  |             R = R + 2;  |      2  |                         0  |
   348  |  resetPlaceHolder_2();  |         |                            |
   354  |             R = R + 2;  |      2  |                         0  |
   359  |  resetPlaceHolder_2();  |         |                            |
   365  |             R = R + 2;  |      2  |                         0  |
   370  |  resetPlaceHolder_2();  |         |                            |
   376  |             R = R + 2;  |      2  |                         0  |
   381  |  resetPlaceHolder_2();  |         |                            |
   387  |             R = R + 2;  |      2  |                         0  |
   392  |  resetPlaceHolder_2();  |         |                            |
   398  |             R = R + 2;  |      2  |                         0  |
   403  |  resetPlaceHolder_2();  |         |                            |
   409  |             R = R + 2;  |      2  |                         0  |
   414  |  resetPlaceHolder_2();  |         |                            |
   420  |             R = R + 2;  |      2  |                         0  |
   425  |  resetPlaceHolder_2();  |         |                            |
   431  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_2();  |         |                            |
   442  |             R = R + 2;  |      2  |                         0  |
   447  |  resetPlaceHolder_2();  |         |                            |
   453  |             R = R + 2;  |      2  |                         0  |
   458  |  resetPlaceHolder_2();  |         |                            |
   464  |             R = R + 2;  |      2  |                         0  |
   469  |  resetPlaceHolder_2();  |         |                            |
   475  |             R = R + 2;  |      2  |                         0  |
   480  |  resetPlaceHolder_2();  |         |                            |
   486  |             R = R + 2;  |      2  |                         0  |
   491  |  resetPlaceHolder_2();  |         |                            |
   497  |             R = R + 2;  |      2  |                         0  |
   502  |  resetPlaceHolder_2();  |         |                            |
   508  |             R = R + 1;  |      1  |                         0  |
   513  |  resetPlaceHolder_1();  |         |                            |
   527  |             R = R + 2;  |      2  |                         0  |
   532  |  resetPlaceHolder_2();  |         |                            |
   538  |             R = R + 2;  |      2  |                         0  |
   543  |  resetPlaceHolder_2();  |         |                            |
   549  |             R = R + 2;  |      2  |                         0  |
   554  |  resetPlaceHolder_2();  |         |                            |
   560  |             R = R + 2;  |      2  |                         0  |
   565  |  resetPlaceHolder_2();  |         |                            |
   571  |             R = R + 2;  |      2  |                         0  |
   576  |  resetPlaceHolder_2();  |         |                            |
   582  |             R = R + 2;  |      2  |                         0  |
   587  |  resetPlaceHolder_2();  |         |                            |
   593  |             R = R + 2;  |      2  |                         0  |
   598  |  resetPlaceHolder_2();  |         |                            |
   604  |             R = R + 2;  |      2  |                         0  |
   609  |  resetPlaceHolder_2();  |         |                            |
   615  |             R = R + 2;  |      2  |                         0  |
   620  |  resetPlaceHolder_2();  |         |                            |
   626  |             R = R + 2;  |      2  |                         0  |
   631  |  resetPlaceHolder_2();  |         |                            |
   637  |             R = R + 2;  |      2  |                         0  |
   642  |  resetPlaceHolder_2();  |         |                            |
   648  |             R = R + 2;  |      2  |                         0  |
   653  |  resetPlaceHolder_2();  |         |                            |
   659  |             R = R + 2;  |      2  |                         0  |
   664  |  resetPlaceHolder_2();  |         |                            |
   670  |             R = R + 2;  |      2  |                         0  |
   675  |  resetPlaceHolder_2();  |         |                            |
   681  |             R = R + 2;  |      2  |                         0  |
   686  |  resetPlaceHolder_2();  |         |                            |
   692  |             R = R + 2;  |      2  |                         0  |
   697  |  resetPlaceHolder_2();  |         |                            |
   703  |             R = R + 2;  |      2  |                         0  |
   708  |  resetPlaceHolder_2();  |         |                            |
   714  |             R = R + 2;  |      2  |                         0  |
   719  |  resetPlaceHolder_2();  |         |                            |
   725  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_2();  |         |                            |
   736  |             R = R + 2;  |      2  |                         0  |
   741  |  resetPlaceHolder_2();  |         |                            |
   747  |             R = R + 2;  |      2  |                         0  |
   752  |  resetPlaceHolder_2();  |         |                            |
   758  |             R = R + 2;  |      2  |                         0  |
   763  |  resetPlaceHolder_2();  |         |                            |
   769  |             R = R + 2;  |      2  |                         0  |
   774  |  resetPlaceHolder_2();  |         |                            |
   780  |             R = R + 2;  |      2  |                         0  |
   785  |  resetPlaceHolder_2();  |         |                            |
   791  |             R = R + 2;  |      2  |                         0  |
   796  |  resetPlaceHolder_2();  |         |                            |
   802  |             R = R + 2;  |      2  |                         0  |
   807  |  resetPlaceHolder_2();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   818  |  resetPlaceHolder_2();  |         |                            |
   824  |             R = R + 2;  |      2  |                         0  |
   829  |  resetPlaceHolder_2();  |         |                            |
   835  |             R = R + 2;  |      2  |                         0  |
   840  |  resetPlaceHolder_2();  |         |                            |
   846  |             R = R + 1;  |      1  |                         0  |
   851  |  resetPlaceHolder_1();  |         |                            |
   865  |             R = R + 2;  |      2  |                         0  |
   870  |  resetPlaceHolder_2();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   881  |  resetPlaceHolder_2();  |         |                            |
   887  |             R = R + 2;  |      2  |                         0  |
   892  |  resetPlaceHolder_2();  |         |                            |
   898  |             R = R + 2;  |      2  |                         0  |
   903  |  resetPlaceHolder_2();  |         |                            |
   909  |             R = R + 2;  |      2  |                         0  |
   914  |  resetPlaceHolder_2();  |         |                            |
   920  |             R = R + 2;  |      2  |                         0  |
   925  |  resetPlaceHolder_2();  |         |                            |
   931  |             R = R + 2;  |      2  |                         0  |
   936  |  resetPlaceHolder_2();  |         |                            |
   942  |             R = R + 2;  |      2  |                         0  |
   947  |  resetPlaceHolder_2();  |         |                            |
   953  |             R = R + 2;  |      2  |                         0  |
   958  |  resetPlaceHolder_2();  |         |                            |
   964  |             R = R + 2;  |      2  |                         0  |
   969  |  resetPlaceHolder_2();  |         |                            |
   975  |             R = R + 2;  |      2  |                         0  |
   980  |  resetPlaceHolder_2();  |         |                            |
   986  |             R = R + 2;  |      2  |                         0  |
   991  |  resetPlaceHolder_2();  |         |                            |
   997  |             R = R + 2;  |      2  |                         0  |
  1002  |  resetPlaceHolder_2();  |         |                            |
  1008  |             R = R + 2;  |      2  |                         0  |
  1013  |  resetPlaceHolder_2();  |         |                            |
  1019  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_2();  |         |                            |
  1030  |             R = R + 2;  |      2  |                         0  |
  1035  |  resetPlaceHolder_2();  |         |                            |
  1041  |             R = R + 2;  |      2  |                         0  |
  1046  |  resetPlaceHolder_2();  |         |                            |
  1052  |             R = R + 2;  |      2  |                         0  |
  1057  |  resetPlaceHolder_2();  |         |                            |
  1063  |             R = R + 2;  |      2  |                         0  |
  1068  |  resetPlaceHolder_2();  |         |                            |
  1074  |             R = R + 2;  |      2  |                         0  |
  1079  |  resetPlaceHolder_2();  |         |                            |
  1085  |             R = R + 2;  |      2  |                         0  |
  1090  |  resetPlaceHolder_2();  |         |                            |
  1096  |             R = R + 2;  |      2  |                         0  |
  1101  |  resetPlaceHolder_2();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1112  |  resetPlaceHolder_2();  |         |                            |
  1118  |             R = R + 2;  |      2  |                         0  |
  1123  |  resetPlaceHolder_2();  |         |                            |
  1129  |             R = R + 2;  |      2  |                         0  |
  1134  |  resetPlaceHolder_2();  |         |                            |
  1140  |             R = R + 2;  |      2  |                         0  |
  1145  |  resetPlaceHolder_2();  |         |                            |
  1151  |             R = R + 2;  |      2  |                         0  |
  1156  |  resetPlaceHolder_2();  |         |                            |
  1162  |             R = R + 1;  |      1  |                         0  |
  1167  |  resetPlaceHolder_1();  |         |                            |
  1181  |             R = R + 2;  |      2  |                         0  |
  1186  |  resetPlaceHolder_2();  |         |                            |
  1192  |             R = R + 2;  |      2  |                         0  |
  1197  |  resetPlaceHolder_2();  |         |                            |
  1203  |             R = R + 2;  |      2  |                         0  |
  1208  |  resetPlaceHolder_2();  |         |                            |
  1214  |             R = R + 2;  |      2  |                         0  |
  1219  |  resetPlaceHolder_2();  |         |                            |
  1225  |             R = R + 2;  |      2  |                         0  |
  1230  |  resetPlaceHolder_2();  |         |                            |
  1236  |             R = R + 2;  |      2  |                         0  |
  1241  |  resetPlaceHolder_2();  |         |                            |
  1247  |             R = R + 2;  |      2  |                         0  |
  1252  |  resetPlaceHolder_2();  |         |                            |
  1258  |             R = R + 2;  |      2  |                         0  |
  1263  |  resetPlaceHolder_2();  |         |                            |
  1269  |             R = R + 2;  |      2  |                         0  |
  1274  |  resetPlaceHolder_2();  |         |                            |
  1280  |             R = R + 2;  |      2  |                         0  |
  1285  |  resetPlaceHolder_2();  |         |                            |
  1291  |             R = R + 2;  |      2  |                         0  |
  1296  |  resetPlaceHolder_2();  |         |                            |
  1302  |             R = R + 2;  |      2  |                         0  |
  1307  |  resetPlaceHolder_2();  |         |                            |
  1313  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_2();  |         |                            |
  1324  |             R = R + 2;  |      2  |                         0  |
  1329  |  resetPlaceHolder_2();  |         |                            |
  1335  |             R = R + 2;  |      2  |                         0  |
  1340  |  resetPlaceHolder_2();  |         |                            |
  1346  |             R = R + 2;  |      2  |                         0  |
  1351  |  resetPlaceHolder_2();  |         |                            |
  1357  |             R = R + 2;  |      2  |                         0  |
  1362  |  resetPlaceHolder_2();  |         |                            |
  1368  |             R = R + 1;  |      1  |                         0  |
  1373  |  resetPlaceHolder_1();  |         |                            |
  1387  |             R = R + 2;  |      2  |                         0  |
  1392  |  resetPlaceHolder_2();  |         |                            |
  1398  |             R = R + 2;  |      2  |                         0  |
  1403  |  resetPlaceHolder_2();  |         |                            |
  1409  |             R = R + 2;  |      2  |                         0  |
  1414  |  resetPlaceHolder_2();  |         |                            |
  1420  |             R = R + 2;  |      2  |                         0  |
  1425  |  resetPlaceHolder_2();  |         |                            |
  1431  |             R = R + 2;  |      2  |                         0  |
  1436  |  resetPlaceHolder_2();  |         |                            |
  1442  |             R = R + 2;  |      2  |                         0  |
  1447  |  resetPlaceHolder_2();  |         |                            |
  1453  |             R = R + 2;  |      2  |                         0  |
  1458  |  resetPlaceHolder_2();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1469  |  resetPlaceHolder_2();  |         |                            |
  1475  |             R = R + 2;  |      2  |                         0  |
  1480  |  resetPlaceHolder_2();  |         |                            |
  1486  |             R = R + 2;  |      2  |                         0  |
  1491  |  resetPlaceHolder_2();  |         |                            |
  1497  |             R = R + 2;  |      2  |                         0  |
  1502  |  resetPlaceHolder_2();  |         |                            |
  1508  |             R = R + 2;  |      2  |                         0  |
  1513  |  resetPlaceHolder_2();  |         |                            |
  1519  |             R = R + 2;  |      2  |                         0  |
  1524  |  resetPlaceHolder_2();  |         |                            |
  1530  |             R = R + 2;  |      2  |                         0  |
  1535  |  resetPlaceHolder_2();  |         |                            |
  1541  |             R = R + 2;  |      2  |                         0  |
  1546  |  resetPlaceHolder_2();  |         |                            |
  1552  |             R = R + 2;  |      2  |                         0  |
  1557  |  resetPlaceHolder_2();  |         |                            |
  1563  |             R = R + 2;  |      2  |                         0  |
  1568  |  resetPlaceHolder_2();  |         |                            |
  1574  |             R = R + 2;  |      2  |                         0  |
  1579  |  resetPlaceHolder_2();  |         |                            |
  1585  |             R = R + 2;  |      2  |                         0  |
  1590  |  resetPlaceHolder_2();  |         |                            |
  1596  |             R = R + 2;  |      2  |                         0  |
  1601  |  resetPlaceHolder_2();  |         |                            |
  1607  |             R = R + 2;  |      2  |                         0  |
  1612  |  resetPlaceHolder_2();  |         |                            |
  1618  |             R = R + 2;  |      2  |                         0  |
  1623  |  resetPlaceHolder_2();  |         |                            |
  1629  |             R = R + 2;  |      2  |                         0  |
  1634  |  resetPlaceHolder_2();  |         |                            |
  1640  |             R = R + 2;  |      2  |                         0  |
  1645  |  resetPlaceHolder_2();  |         |                            |
  1651  |             R = R + 2;  |      2  |                         0  |
  1656  |  resetPlaceHolder_2();  |         |                            |
  1662  |             R = R + 2;  |      2  |                         0  |
  1667  |  resetPlaceHolder_2();  |         |                            |
  1673  |             R = R + 2;  |      2  |                         0  |
  1678  |  resetPlaceHolder_2();  |         |                            |
  1684  |             R = R + 2;  |      2  |                         0  |
  1689  |  resetPlaceHolder_2();  |         |                            |
  1695  |             R = R + 2;  |      2  |                         0  |
  1700  |  resetPlaceHolder_2();  |         |                            |
  1706  |             R = R + 2;  |      2  |                         0  |
  1711  |  resetPlaceHolder_2();  |         |                            |
  1717  |             R = R + 2;  |      2  |                         0  |
  1722  |  resetPlaceHolder_2();  |         |                            |
  1728  |             R = R + 2;  |      2  |                         0  |
  1733  |  resetPlaceHolder_2();  |         |                            |
  1739  |             R = R + 2;  |      2  |                         0  |
  1744  |  resetPlaceHolder_2();  |         |                            |
  1750  |             R = R + 2;  |      2  |                         0  |
  1755  |  resetPlaceHolder_2();  |         |                            |
  1761  |             R = R + 2;  |      2  |                         0  |
  1766  |  resetPlaceHolder_2();  |         |                            |
  1772  |             R = R + 2;  |      2  |                         0  |
  1777  |  resetPlaceHolder_2();  |         |                            |
  1783  |             R = R + 1;  |      1  |                         0  |
  1788  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_2(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

2023-01-31 14:33:33,720 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:33:43,615 INFO     Done. Execution time: 9.894311666488647 seconds
2023-01-31 14:33:43,615 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 10;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1433-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1433-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.887s
user	0m21.365s
sys	0m2.340s

2023-01-31 14:33:43,615 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 14:33:43,616 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:33:45,436 INFO     Done. Execution time: 1.8204398155212402 seconds
2023-01-31 14:33:45,436 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 14:33:45,437 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-31 14:33:45,437 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-31 14:33:47,271 INFO     Done. Execution time: 1.8339509963989258 seconds
2023-01-31 14:33:47,271 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

2023-01-31 14:33:47,271 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:33:48,261 INFO     Done. Execution time: 0.9894347190856934 seconds
2023-01-31 14:33:48,261 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.983s
user	0m1.661s
sys	0m0.101s

2023-01-31 14:33:48,261 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 14:33:48,261 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
2023-01-31 14:36:54,121 INFO     Done. Execution time: 185.85953426361084 seconds
2023-01-31 14:36:54,121 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 0: Remove existing Json files
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? true
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz746226071275319292/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz746226071275319292/bin -o /tmp/qfuzz746226071275319292/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz746226071275319292/bin
Found file /tmp/qfuzz746226071275319292/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz746226071275319292/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz746226071275319292/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz746226071275319292/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz746226071275319292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 183 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz746226071275319292/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz746226071275319292/fuzzer-out. Timeout: 180 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds -o /tmp/qfuzz746226071275319292/fuzzer-out -c quantify -K 100 -S afl -t 180000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 27, exec speed = 118752 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 27, exec speed = 119546 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m118k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(3, 24, 15, 37, 3, 18, 46, 38, 3, 19, 2, 25, 43, 12, 27, 39, 19, 2, 35, 24, 18, 33, 3, 27, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [1, 50] from /tmp/qfuzz746226071275319292/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 5, 50, 42, 23, 28, 1, 23, 20, 7, 7, 29, 5, 48, 27, 41, 36, 32, 28, 14, 46, 34, 40, 34, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_143653_qfuzz.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [24,15,37,3,18,46,38]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [5,50,42,23,28,1,23]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

2023-01-31 14:36:54,122 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-31 14:36:54,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-31 14:36:57,889 INFO     Done. Execution time: 3.7674505710601807 seconds
2023-01-31 14:36:57,890 INFO     Output: + duration=8m
+ echo 'Timeout after 8m'
Timeout after 8m
+ timeout --preserve-status --kill-after 3s 8m java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
Input file: /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_143653_qfuzz.json
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Attempt to read from /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/appendquotedstring/qfuzz/AppendQuotedString_20230131_143653_qfuzz.json
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [24,15,37,3,18,46,38])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [5,50,42,23,28,1,23])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Cluster traces
INFO  brbo.backend2.DecompositionDriver - Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3: Cluster similar traces: 2 traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.1: Compute a distance matrix
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.2: Cluster traces
INFO  brbo.backend2.learning.TraceClustering$ - Step 3.4: Found 1 trace clusters
INFO  brbo.backend2.learning.TraceClustering$ - Trace cluster 0
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [24,15,37,3,18,46,38]
INFO  brbo.backend2.learning.TraceClustering$ - Trace inputs:
Trace inputs:
pattern: 2
stopIndex: [5,50,42,23,28,1,23]
INFO  brbo.backend2.DecompositionDriver - Step 3: Select representative traces for cluster 0
INFO  brbo.backend2.learning.TraceSelection$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Trace (length 62):
                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |        stopIndex        |
------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [24,15,37,3,18,46,38]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [24,15,37,3,18,46,38]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [24,15,37,3,18,46,38]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [24,15,37,3,18,46,38]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [24,15,37,3,18,46,38]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [24,15,37,3,18,46,38]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [24,15,37,3,18,46,38]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [24,15,37,3,18,46,38]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [24,15,37,3,18,46,38]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [24,15,37,3,18,46,38]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |      15  |  1  |         1  |        2  |    1  |      1  |  [24,15,37,3,18,46,38]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |      15  |  1  |         1  |        2  |    2  |      1  |  [24,15,37,3,18,46,38]  |
    57  |                         i = i + 1;  |         |  0  |         0  |      15  |  2  |         1  |        2  |    2  |      1  |  [24,15,37,3,18,46,38]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |      15  |  2  |         1  |        2  |    2  |      1  |  [24,15,37,3,18,46,38]  |
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 4.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 4.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 4.1: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 4.2: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

2023-01-31 14:36:57,890 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-31 14:36:59,852 INFO     Done. Execution time: 1.9620702266693115 seconds
2023-01-31 14:36:59,852 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 10;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 10) || (choice == 10))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0131-1436-transparentAmortize-60s-mostPrecise/lang3-raw-0131-1436-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.954s
user	0m3.333s
sys	0m0.241s

2023-01-31 14:36:59,852 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-31 14:36:59,852 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 180 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --max-int 50 --min-int 1 --naive --input /root/Documents/workspace/brbo2-impl/logs/qfuzz/20230131_08-39-31/seeds`
